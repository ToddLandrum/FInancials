*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="sfcommon.vcx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS sfcalendar AS sfmodaldialognotitle OF "controls.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="oleCalendar" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdHelp" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: savedate
		*p: ocontrol
		*p: value		&& Specifies the current state of a control.
	*</DefinedPropArrayMethod>

	Closable = .T.
	DoCreate = .T.
	Height = 226
	lautocenter = .F.
	Left = 0
	Name = "sfcalendar"
	ocontrol = .NULL.
	Top = 0
	value = 		&& Specifies the current state of a control.
	Width = 254

	ADD OBJECT 'cmdCancel' AS sfpicturebutton WITH ;
		Left = 111, ;
		Name = "cmdCancel", ;
		Picture = wzundo.bmp, ;
		TabIndex = 2, ;
		Top = 185
		*< END OBJECT: ClassLib="controls.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdHelp' AS sfhelpbutton WITH ;
		Left = 151, ;
		Name = "cmdHelp", ;
		Picture = help.bmp, ;
		TabIndex = 4, ;
		Top = 185
		*< END OBJECT: ClassLib="controls.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOK' AS sfpicturebutton WITH ;
		Left = 73, ;
		Name = "cmdOK", ;
		Picture = wzsave.bmp, ;
		TabIndex = 2, ;
		Top = 185
		*< END OBJECT: ClassLib="controls.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'oleCalendar' AS olecontrol WITH ;
		Height = 175, ;
		Left = 0, ;
		Name = "oleCalendar", ;
		TabIndex = 1, ;
		Top = 0, ;
		Width = 260
		*< END OBJECT: BaseClass="olecontrol" OLEObject="c:\windows\system\mscal.ocx" Value="0M8R4KGxGuEAAAAAAAAAAAAAAAAAAAAAPgADAP7/CQAGAAAAAAAAAAAAAAABAAAAAQAAAAAAAAAAEAAAAgv////7///8EAAAA/vbwBvAHQAIABFAG4AdAByAHkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAAUA//////////8BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAs43Z47b0BAwAAAEACAAAAAAAAAwBPAGwAZQBPAGIAagBlAGMAdABEAGEAdABhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4AAgEDAAAAAgAAAP////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAogEAAAAAAAADAEEAYwBjAGUAcwBzAE8AYgBqAFMAaQB0AGUARABhAHQAYQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJgACAP///////////////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAA4AAAAAAAAAAMAQwBoAGEAbgBnAGUAZABQAHIAbwBwAHMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAIA////////////////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAQAAAAAAAAAAwAAAP7////+////BAAAAAUAAAAGAAAABwAAAAgrySeOZBIcEIovBAIkAJwCAAAIAH8VAAB4DgAAzAcKAAUAwMDAAAAAAAAAAKAAgICAAAAAokAGwMAEADU1TIFNhbnMgU2VyaWYBAAAAkAGwMAEADU1TIFNhbnMgU2VyaWYBAAAAkAGwMAEADU1TIFNhbnMgU2VyaWYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" />
	
	PROCEDURE Init
		lparameters toControl
		This.oControl = toControl
		dodefault()
		
	ENDPROC

	PROCEDURE savedate
		with This
			.Value = .oleCalendar.Object.Value
			do case
				case type('.oControl') <> 'O' or isnull(.oControl) or ;
					not type('.oControl.Value') $ 'DT'
				case type('.oControl.Value') = 'D'
					.oControl.Value = ttod(This.Value)
				otherwise
					.oControl.Value = This.Value
			endcase
			.Hide()
		endwith
		
	ENDPROC

	PROCEDURE Show
		LPARAMETERS nStyle
		* Set the value of the calendar to the value of the container.
		
		This.oleCalendar.Object.Value = This.Value
		
	ENDPROC

	PROCEDURE cmdCancel.Click
		This.Parent.Hide()
		
	ENDPROC

	PROCEDURE cmdOK.Click
		This.Parent.SaveDate()
		
	ENDPROC

	PROCEDURE oleCalendar.DblClick
		*** OLE Control Event ***
		This.Parent.SaveDate()
		
	ENDPROC

ENDDEFINE

DEFINE CLASS sfcommondialog AS olecontrol 
 	*< CLASSDATA: Baseclass="olecontrol" Timestamp="" Scale="Pixels" Uniqueid="" Nombre="sfcommondialog" Parent="" ObjName="sfcommondialog" OLEObject="C:\Windows\SysWow64\comdlg32.ocx" Value="0M8R4KGxGuEAAAAAAAAAAAAAAAAAAAAAPgADAP7/CQAGAAAAAAAAAAAAAAABAAAAAQAAAAAAAAAAEAAAAgvbwBvAHQAIABFAG4AdAByAHkAAAD//////////////////////////////////7kKAKDQMJCCoAiQgjj3j4IWAAUA//////////8BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABuAHQAcgB5ABABth/lm80BAwAAAEABAAAAAAAAAwBPAGwAZQBPAGIAagBlAGMAdABEAGEAdABhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4AAgEDAAAAAgAAAP////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXAAAAAAAAAADAEEAYwBjAGUAcwBzAE8AYgBqAFMAaQB0AGUARABhAHQAYQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJgACAP///////////////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAABcAAAAAAAAAAMAQwBoAGEAbgBnAGUAZABQAHIAbwBwAHMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAIA////////////////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAIAAAD+/////vvYaEKPJCAArL0n7IUM0EggAAABPAwAATwMAAIY8BPkAAAYAAAAAACAAAAAAAAAAAAAAAAAAAAAEAQAAXAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAACQAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyOEM0QzgyMC00MDFBLTEwMUItQTNDOS0wODAwMkIyRjQ5RkLQzxHgobEa4QAAAAAAAAAAAAAAAAAAAAA+AAMA/v8JAAYAAAABAACA0M8R4KGxGuEAAAAAAAAAAAAAAAAAAAAAPgADAP7/CQAGAAAAAAAAAAAAAAABAAAAAQAAAAAAAAAAEAAAAQAAAAAAAAAAAAAAAAAAAAAAAEEAAAAAAAAAAAAAAAAAAAAAAAA+AAMA/v8JAAYAAAAAAAAAAAAAAAEAAAABAP///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////w==" />

	#INCLUDE "commdlg.h"
	*<DefinedPropArrayMethod>
		*m: setflags		&& Sets the CommonDialog control's Flags property based on properties of this object,
		*p: lcancelled		&& .T. if the user cancelled the dialog.
		*p: lshowhelpbutton		&& .T. to display the Help button.
	*</DefinedPropArrayMethod>

	Height = 32
	lcancelled = .F.		&& .T. if the user cancelled the dialog.
	lshowhelpbutton = .F.		&& .T. to display the Help button.
	Name = "sfcommondialog"
	Width = 32
	
	PROCEDURE Error
		LPARAMETERS nError, cMethod, nLine
		local laError[1]
		aerror(laError)
		
		* The user chose cancel.
		
		if nError = cnVFP_ERR_OLE_ERROR and LOWER(laError[3]) = 'cancel was selected.'
			This.lCancelled = .T.
		
		* Display a generic error message.
		
		else
			messagebox('Error #' + ltrim(str(nError)) + ' occurred in line ' + ;
				ltrim(str(nLine)) + ' of ' + cMethod, 0, _VFP.Caption)
		endif nError = cnVFP_ERR_OLE_ERROR ...
		
	ENDPROC

	PROTECTED PROCEDURE setflags		&& Sets the CommonDialog control's Flags property based on properties of this object,
		with This
			.CancelError = .T.
			.lCancelled  = .F.
		endwith
		
	ENDPROC

ENDDEFINE

DEFINE CLASS sffiledialog AS sfcommondialog OF "sfcommon.vcx" 
 	*< CLASSDATA: Baseclass="olecontrol" Timestamp="" Scale="Pixels" Uniqueid="" Nombre="sffiledialog" Parent="" ObjName="sffiledialog" OLEObject="C:\WINDOWS\SysWow64\comdlg32.ocx" Value="0M8R4KGxGuEAAAAAAAAAAAAAAAAAAAAAPgADAP7/CQAGAAAAAAAAAAAAAAABAAAAAQAAAAAAAAAAEAAAAgvbwBvAHQAIABFAG4AdAByAHkAAAD//////////////////////////////////7kKAKDQMJCCoAiQgjj3j4IWAAUA//////////8BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABuAHQAcgB5AMCXg5zHpM4BAwAAAEABAAAAAAAAAwBPAGwAZQBPAGIAagBlAGMAdABEAGEAdABhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4AAgEDAAAAAgAAAP////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXAAAAAAAAAADAEEAYwBjAGUAcwBzAE8AYgBqAFMAaQB0AGUARABhAHQAYQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJgACAP///////////////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAABcAAAAAAAAAAMAQwBoAGEAbgBnAGUAZABQAHIAbwBwAHMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAIA////////////////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAIAAAD+/////vvYaEKPJCAArL0n7IUM0EggAAABPAwAATwMAAIY8BPkAAAYAAAAAACAAAAAAAAAAAAAAAAAAAAAEAQAAXAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAACQAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyOEM0QzgyMC00MDFBLTEwMUItQTNDOS0wODAwMkIyRjQ5RkLQzxHgobEa4QAAAAAAAAAAAAAAAAAAAAA+AAMA/v8JAAYAAAABAACA0M8R4KGxGuEAAAAAAAAAAAAAAAAAAAAAPgADAP7/CQAGAAAAAAAAAAAAAAABAAAAAQAAAAAAAAAAEAAAAQAAAAAAAAAAAAAAAAAAAAAAAEEAAAAAAAAAAAAAAAAAAAAAAAA+AAMA/v8JAAYAAAAAAAAAAAAAAAEAAAABAP///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////w==" />

	#INCLUDE "commdlg.h"
	*<DefinedPropArrayMethod>
		*m: openfile		&& Displays an Open File dialog.
		*m: restoredirectory		&& Sets the current directory to the one in cOldCurrDir.
		*m: savedirectory		&& Saves the current directory to cOldCurrDir.
		*m: savefile		&& Displays a Save File dialog.
		*m: setproperties		&& Sets various properties after return from the dialog.
		*p: coldcurrdir		&& The current directory prior to invoking the File dialog.
		*p: cpath		&& The path of the selected file.
		*p: lallowmultiple		&& .T. to allow multiple filenames to be selected.
		*p: lfilemustexist		&& .T. if an error should be displayed if the specified file doesn't exist.
		*p: loverwriteprompt		&& .T. to display a prompt if the specified file exists,
		*p: lpathmustexist		&& .T. to display an error if the specified path doesn't exist.
		*p: lpromptnew		&& .T. to display a prompt if the specified file doesn't exist.
		*p: lshareaware		&& .T. to allow a file to be selected even if it's open in another application.
		*p: lshowreadonly		&& .T. to display the Read Only button in the dialog.
		*p: nfiles
		*a: afiles[1,0]		&& An array of filenames (without a path) selected by the user.
	*</DefinedPropArrayMethod>

	PROTECTED coldcurrdir
	coldcurrdir = 		&& The current directory prior to invoking the File dialog.
	cpath = 		&& The path of the selected file.
	Height = 32
	lallowmultiple = .F.		&& .T. to allow multiple filenames to be selected.
	lfilemustexist = .F.		&& .T. if an error should be displayed if the specified file doesn't exist.
	loverwriteprompt = .F.		&& .T. to display a prompt if the specified file exists,
	lpathmustexist = .F.		&& .T. to display an error if the specified path doesn't exist.
	lpromptnew = .F.		&& .T. to display a prompt if the specified file doesn't exist.
	lshareaware = .F.		&& .T. to allow a file to be selected even if it's open in another application.
	lshowreadonly = .F.		&& .T. to display the Read Only button in the dialog.
	Name = "sffiledialog"
	nfiles = 0
	Width = 32
	
	PROCEDURE Init
		This.aFiles = ''
		dodefault()
		
	ENDPROC

	PROCEDURE openfile		&& Displays an Open File dialog.
		with This
			.SaveDirectory()
			.SetFlags()
			.ShowOpen()
			.SetProperties()
			.RestoreDirectory()
		endwith
		
	ENDPROC

	PROTECTED PROCEDURE restoredirectory		&& Sets the current directory to the one in cOldCurrDir.
		* Restore the current directory.
		
		local lcOldCurrDir
		lcOldCurrDir = This.cOldCurrDir
		set default to (lcOldCurrDir)
		
	ENDPROC

	PROTECTED PROCEDURE savedirectory		&& Saves the current directory to cOldCurrDir.
		* Save the current directory.
		
		This.cOldCurrDir = sys(5) + curdir()
		
	ENDPROC

	PROCEDURE savefile		&& Displays a Save File dialog.
		with This
			.SaveDirectory()
			.SetFlags()
			.ShowSave()
			.SetProperties()
			.RestoreDirectory()
		endwith
		
	ENDPROC

	PROCEDURE setflags
		local lnFlags
		lnFlags = 0
		
		* Set the flags based on the settings of our properties.
		
		with This
			if .lAllowMultiple
				lnFlags = lnFlags + cnFILEDLG_MULTIPLE + cnFILEDLG_EXPLORER
			endif .lAllowMultiple
			if .lPromptNew
				lnFlags = lnFlags + cnFILEDLG_PROMPTNEW
			endif .lPromptNew
			if .lShowHelpButton
				lnFlags = lnFlags + cnFILEDLG_SHOWHELP
			endif .lShowHelpButton
			if .lFileMustExist
				lnFlags = lnFlags + cnFILEDLG_FILEEXIST
			endif .lFileMustExist
			if .lOverwritePrompt
				lnFlags = lnFlags + cnFILEDLG_OVERWRITE
			endif .lOverwritePrompt
			if .lPathMustExist
				lnFlags = lnFlags + cnFILEDLG_PATHEXIST
			endif .lPathMustExist
			if not .lShowReadOnly
				lnFlags = lnFlags + cnFILEDLG_HIDERO
			endif not .lShowReadOnly
			.Flags       = lnFlags
			.DialogTitle = alltrim(.DialogTitle)
			.DefaultExt  = alltrim(.DefaultExt)
			.FileName    = alltrim(.FileName)
			.InitDir     = alltrim(.InitDir)
			.Filter      = alltrim(.Filter)
			dodefault()
		endwith
		
	ENDPROC

	PROTECTED PROCEDURE setproperties		&& Sets various properties after return from the dialog.
		* Populate This.aFiles with the files selected by the user (there may be
		* multiple files) and set This.cPath to the directory for the file(s). Thanks
		* to Ted Roche for figuring out the multi-file parsing stuff.
		
		LOCAL lcSeparator, ;
		   lcNewDir, ;
		   lcFileName, ;
		   lnFiles, ;
		   lnStart, ;
		   lnI, ;
		   lnPos
		
		* Set This.cPath to the current directory (which is set to the directory
		* selected by the user).
		
		WITH THIS
		   .cPath = SYS(5) + CURDIR()
		   DO CASE
		
		         * If the user cancelled the dialog, clear the aFiles array.
		
		      CASE .lCancelled
		         DIMENSION .aFiles[1]
		         .aFiles[1] = ''
		         .nfiles    = 0
		
		         * If multiple files were selected, .FileName consists of the path followed by a
		         * separator followed by the list of files selected separated by separators. If
		         * only one file was selected, .FileName is the complete path to the file. To
		         * parse everything out, start by determining if filenames are separated by
		         * nulls (Windows 95 and NT 4) or spaces (NT 3.51). Strip the directory off
		         * .FileName and remove any leading backslash or separator.
		
		      CASE .lAllowMultiple
		
		         jcFirst = SUBSTR(.filename, 1, AT('.', .filename) + 4)
		         jcpath  = JUSTPATH(jcFirst)
		         jnFiles = OCCURS('.', .filename)
		         DIMENSION .aFiles[jnFiles]
		         .nFiles = jnFiles
		         lnPos   = 1
		         lnlen   = 1
		         jcFile  = .filename
		
		         * Parse filenames from the filename string.
		         IF jnFiles > 1
		            FOR lnx = 1 TO jnFiles
		               lnlen     = AT('.', jcFile) + 5
		               jcNewFile = ALLTRIM(SUBSTR(jcFile, lnPos, lnlen))
		               IF lnx > 1
		                  jcNewFile = ADDBS(jcpath) + jcNewFile
		               ENDIF
		               .aFiles[lnx] = jcNewFile
		               jcFile       = SUBSTR(jcFile, lnlen + 1)
		            NEXT lnx
		         ELSE 
		            .aFiles[1] = jcFirst
		         ENDIF
		
		
		
		
		
		         *!*				lcSeparator = iif(ccNULL $ This.FileName, ccNULL, ccSPACE)
		         *!*				lcNewDir    = left(.cPath, len(.cPath) - 1)
		         *!*				lcFileName  = substr(strtran(upper(.FileName), lcNewDir), 2)
		
		         *!*	* Parse filenames from the filename string.
		
		         *!*				lnFiles = occurs(lcSeparator, lcFileName) + 1
		         *!*				lnStart = 1
		         *!*				for lnI = 1 to lnFiles
		         *!*					lnPos = iif(lnI = lnFiles, len(lcFileName) + 1, ;
		         *!*						at(lcSeparator, lcFileName, lnI))
		         *!*					dimension .aFiles[lnI]
		         *!*					.aFiles[lnI] = substr(lcFileName, lnStart, lnPos - lnStart)
		         *!*					lnStart = lnPos + 1
		         *!*				next lnI
		
		         * If we didn't allow multiple filenames to be selected, save the filename
		         * (with the path) in the aFiles array.
		
		      OTHERWISE
		         .aFiles[1] = .filename
		   ENDCASE
		ENDWITH
		
		
	ENDPROC

	PROCEDURE ShowOpen
		*** ActiveX Control Method ***
		
	ENDPROC

ENDDEFINE

DEFINE CLASS sfthermometer AS sfcontainer OF "controls.vcx" 		&& Displays a thermometer
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="oProgress" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblPercent" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblTitle" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblTask" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: cancelprocess		&& Cancels the process by setting the property or variable specified in cCancelProperty to .T.
		*m: checkcancel		&& Checks to see if the Cancel button has been pressed.
		*m: ismouseovercancel		&& Returns .T. if the mouse is over the Cancel button.
		*m: setmaximum		&& Sets the maximum value for the Progress Bar control.
		*m: settitle		&& Sets the caption for the title label.
		*m: show		&& Displays the progress meter.
		*m: update		&& Updates the progress meter.
		*p: ccancelproperty		&& The name of the property (including the complete reference to the object) or variable to set to .T. when the Cancel button is clicked.
		*p: lpasspercent		&& .T. if the value passed to the Update method is in percent or .F. if it's an absolute value.
		*p: npercent		&& The current percentage displayed.
	*</DefinedPropArrayMethod>

	PROTECTED npercent
	ccancelproperty = 		&& The name of the property (including the complete reference to the object) or variable to set to .T. when the Cancel button is clicked.
	Height = 76
	lpasspercent = .F.		&& .T. if the value passed to the Update method is in percent or .F. if it's an absolute value.
	Name = "sfthermometer"
	npercent = 0		&& The current percentage displayed.
	Width = 440

	ADD OBJECT 'cmdCancel' AS sfcommandbutton WITH ;
		Caption = "Cancel", ;
		Height = 27, ;
		Left = 370, ;
		Name = "cmdCancel", ;
		Top = 40, ;
		Width = 64
		*< END OBJECT: ClassLib="controls.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'lblPercent' AS sflabel WITH ;
		Alignment = 1, ;
		Caption = "0%", ;
		Left = 414, ;
		Name = "lblPercent", ;
		Top = 5, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="controls.vcx" BaseClass="label" />

	ADD OBJECT 'lblTask' AS sflabel WITH ;
		Caption = "", ;
		Left = 5, ;
		Name = "lblTask", ;
		Top = 25
		*< END OBJECT: ClassLib="controls.vcx" BaseClass="label" />

	ADD OBJECT 'lblTitle' AS sflabel WITH ;
		Caption = "Current Progress...", ;
		Height = 17, ;
		Left = 5, ;
		Name = "lblTitle", ;
		Top = 5, ;
		Width = 106, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="controls.vcx" BaseClass="label" />

	ADD OBJECT 'oProgress' AS olecontrol WITH ;
		Height = 20, ;
		Left = 5, ;
		Name = "oProgress", ;
		Top = 45, ;
		Width = 351, ;
		ZOrderSet = 0
		*< END OBJECT: BaseClass="olecontrol" OLEObject="c:\windows\system\comctl32.ocx" Value="0M8R4KGxGuEAAAAAAAAAAAAAAAAAAAAAPgADAP7/CQAGAAAAAAAAAAAAAAABAAAAAQAAAAAAAAAAEAAAAgAAAAEAAAD+////AAAAAAAAAAD////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////9/////vbwBvAHQAIABFAG4AdAByAHkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAAUA//////////8BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGCdr1Q3/7sBAwAAAEABAAAAAAAAAwBPAGwAZQBPAGIAagBlAGMAdABEAGEAdABhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4AAgEDAAAAAgAAAP////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAADAEEAYwBjAGUAcwBzAE8AYgBqAFMAaQB0AGUARABhAHQAYQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJgACAP///////////////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAABPAAAAAAAAAAMAQwBoAGEAbgBnAGUAZABQAHIAbwBwAHMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAIA////////////////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAFsAAAAAAAAA/v///woUbEK/AQhAQKo2nAAABAAYdAACnAQAAwAAAAAEAAAAAAADIQgAAAAD/AAAGAAAAAAAAAAAAAAABAAAATwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAABcAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgcWhqIFp0dVFoYTtqZGZuW2lhZXRyINDPEeChsRrhAAAAAAAAAAAAAAAAAAAAAD4AAwD+/wkABgAAAAAAAAAAAAAAAQAAAAEBAACADQAAAE1vdXNlUG9pbnRlcgAJAAAASQoAAAAAAAAACwAAAEFwcGVhcmFuY2UACQAAAEkKAAAAAAAAAAwAAABCb3JkZXJTdHlsZQAJAAAASQoAAAAAAAAA0M8R4KGxGuEAAAAAAAAAAAAAAAAAAAAAPgADAP7/CQAGAAAAAP///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////w==" />
	
	PROCEDURE about
		*==============================================================================
		* Class:				SFThermometer
		* Based On:				SFContainer
		* Purpose:				Displays a thermometer
		* Author:				Doug Hennig
		* Copyright:			(c) 1996 Stonefield Systems Group Inc.
		* Last revision:		01/08/97
		* Include file:			none
		* Contains:				oProgress (ProgressBar ActiveX control)
		*						lblPercent (SFLabel)
		*						lblTitle (SFLabel)
		*						lblTask (SFLabel)
		*						cmdCancel (SFCommandButton)
		*
		* Changes in "Based On" class properties:
		*	SFThermometer:
		*		None
		*	oProgress:
		*		.Appearance:	0-Flat
		*		.BorderStyle:	0-None
		*	lblPercent:
		*		.Caption:		0%
		*	lblTitle:
		*		.Caption		Current Progress...
		*	lblTask:
		*		.Caption:		none
		*	cmdCancel:
		*		.Caption:		Cancel
		*
		* Changes in "Based On" class methods:
		*	Refresh:			call Show()
		*
		* Custom public properties added:
		*	cCancelProperty:	the name of the property (including the complete
		*						reference to the object) or variable to set to .T.
		*						when the Cancel button is clicked. If this property
		*						isn't filled in, the Cancel button is hidden
		*	lPassPercent:		.T. if the value passed to the Update method is in
		*						percent or .F. if it's an absolute value
		*
		* Custom protected properties added:
		*	nPercent:			the last percentage of the progress meter
		*
		* Custom public methods added:
		*	CheckCancel:		checks to see if the Cancel button has been pressed
		*	SetMaximum:			sets the maximum value for the Progress Bar control
		*	SetTitle:			sets the caption for the title label
		*	Show:				hide the Cancel button if necessary
		*	Update:				update the progress meter to a new value
		*
		* Custom protected methods added:
		*	CancelProcess:		cancels the process by setting the property or
		*						variable specified in cCancelProperty to .T.
		*	IsMouseOverCancel:	returns .T. if the mouse is over the Cancel button
		*==============================================================================
		
	ENDPROC

	PROTECTED PROCEDURE cancelprocess		&& Cancels the process by setting the property or variable specified in cCancelProperty to .T.
		* Cancel the process by setting the property or variable specified in
		* cCancelProperty to .T.
		
		with This
			if not empty(.cCancelProperty) and type(.cCancelProperty) = 'L'
				store .T. to (.cCancelProperty)
			endif not empty(.cCancelProperty) ...
		endwith
		
	ENDPROC

	PROCEDURE checkcancel		&& Checks to see if the Cancel button has been pressed.
		* If the Cancel button is visible and the mouse is pressed, see if the user is
		* clicking on the Cancel button. If so, use DOEVENTS to allow the Cancel button
		* to appear to depress, then check to see if the user let up the mouse button
		* while still over the Cancel button. If so, call the CancelProcess method to
		* cancel the process. This is a roundabout way of doing it but is *much* faster
		* than using DOEVENTS and having code in the Click method of the button call
		* the CancelProcess method, because DOEVENTS really slows down processing.
		
		local llReturn
		llReturn = .F.
		with This
			if .cmdCancel.Visible and mdown() and .IsMouseOverCancel()
				doevents
				if not mdown() and .IsMouseOverCancel()
					llReturn = .T.
					.CancelProcess()
				endif not mdown() ...
			endif .cmdCancel.Visible ...
		endwith
		return llReturn
		
	ENDPROC

	PROTECTED PROCEDURE ismouseovercancel		&& Returns .T. if the mouse is over the Cancel button.
		* Returns .T. if the mouse is over the Cancel button.
		
		local oControl
		oControl = sys(1270)
		return type('oControl') = 'O' and not isnull(oControl) and ;
			oControl.Name = 'cmdCancel' and oControl.Parent.Name = This.Name
		
	ENDPROC

	PROCEDURE Refresh
		This.Show()
		
	ENDPROC

	PROCEDURE setmaximum		&& Sets the maximum value for the Progress Bar control.
		* If the maximum value was passed, save it.
		
		lparameters tnMaximum
		if type('tnMaximum') $ 'NIFYB' and tnMaximum > This.oProgress.Min
			This.oProgress.Max = int(tnMaximum)
		endif type('tnMaximum') $ 'NIFYB' ...
		
	ENDPROC

	PROCEDURE settitle		&& Sets the caption for the title label.
		* Set the title for title label.
		
		lparameters tcTitle
		if type('tcTitle') = 'C' and not empty(tcTitle)
			This.lblTitle.Caption = tcTitle
		endif type('tcTitle') = 'C' ...
		
	ENDPROC

	PROCEDURE show		&& Displays the progress meter.
		* Display the progress meter: if cCancelProperty isn't filled in, hide the
		* Cancel button and size the progress meter width according to the width of
		* this object.
		
		LPARAMETERS nStyle
		with This
			if empty(.cCancelProperty)
				.cmdCancel.Visible = .F.
				.oProgress.Width   = .Width - 2 * .oProgress.Left
			endif empty(.cCancelProperty)
			.Visible = .T.
		endwith
		
	ENDPROC

	PROCEDURE update		&& Updates the progress meter.
		* Update the progress meter with a new value.
		
		lparameters tnCurrent, ;
			tcTask
		local lnPercent
		
		* Don't let the percentage go over the maximum or under the minimum.
		
		with This
			if .lPassPercent
				lnPercent = max(min(tnCurrent, .oProgress.Max), .oProgress.Min)
			else
				lnPercent = max(min(int(tnCurrent/.oProgress.Max * 100), 100), 0)
			endif .lPassPercent
		
		* If the task to display was passed, display it.
		
			if not empty(tcTask)
				.lblTask.Caption = tcTask
			endif not empty(tcTask)
		
		* If the percentage has changed, store the calculated percentage.
		
			if lnPercent <> .nPercent
				.nPercent           = lnPercent
				.lblPercent.Caption = ltrim(str(lnPercent)) + '%'
				.oProgress.Value    = tnCurrent
			endif lnPercent = .nPercent
		
		* Let's ensure we're visible.
		
			if not .Visible
				.Show()
			endif not .Visible
		
		* See if the Cancel button has been pressed.
		
			.CheckCancel()
		endwith
		
	ENDPROC

ENDDEFINE
