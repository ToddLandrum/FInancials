*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="basectrl.vcx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS cbobase AS combobox 
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	BackColor = 255,255,255
	Height = 24
	ItemBackColor = 255,255,255
	Name = "cbobase"
	SelectedBackColor = 255,255,0
	SelectedForeColor = 255,0,0
	SelectedItemBackColor = 255,255,0
	SelectedItemForeColor = 0,0,0
	Width = 125

ENDDEFINE

DEFINE CLASS cbocurtype AS cbobase OF "basectrl.vcx" 		&& Combo Box for Currency Types
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	Alignment = 0
	BoundColumn = 2
	ColumnCount = 1
	ControlSource = "principl.cidcurt"
	Height = 24
	Left = 154
	Name = "Cboccurtype"
	RowSource = "SELECT cdesc, cidcurt FROM curtype INTO CURSOR tempcurt ORDER BY cdesc"
	RowSourceType = 3
	Sorted = .F.
	Style = 2
	TabIndex = 14
	Top = 233
	Value = 
	Width = 183

ENDDEFINE

DEFINE CLASS chkbase AS checkbox 
 	*< CLASSDATA: Baseclass="checkbox" Timestamp="" Scale="Pixels" Uniqueid="" />

	BackColor = 212,208,200
	BackStyle = 0
	Caption = "cap"
	DisabledBackColor = 192,192,192
	Height = 18
	Name = "chkbase"
	Width = 72

ENDDEFINE

DEFINE CLASS cmdbase AS commandbutton 
 	*< CLASSDATA: Baseclass="commandbutton" Timestamp="" Scale="Pixels" Uniqueid="" />

	Caption = "cap"
	Height = 23
	Name = "cmdbase"
	Width = 72

ENDDEFINE

DEFINE CLASS edtbase AS editbox 
 	*< CLASSDATA: Baseclass="editbox" Timestamp="" Scale="Pixels" Uniqueid="" />

	Height = 56
	Name = "edtbase"
	Width = 101

ENDDEFINE

DEFINE CLASS grdbase AS grid 
 	*< CLASSDATA: Baseclass="grid" Timestamp="" Scale="Pixels" Uniqueid="" />

	Height = 200
	Name = "grdbase"
	Width = 320

ENDDEFINE

DEFINE CLASS lblbase AS label 
 	*< CLASSDATA: Baseclass="label" Timestamp="" Scale="Pixels" Uniqueid="" />

	BackColor = 192,192,192
	BackStyle = 0
	Caption = "cap"
	FontSize = 10
	Height = 20
	Name = "lblbase"
	Width = 97

ENDDEFINE

DEFINE CLASS lstbase AS listbox 
 	*< CLASSDATA: Baseclass="listbox" Timestamp="" Scale="Pixels" Uniqueid="" />

	Height = 68
	Name = "lstbase"
	Width = 68

ENDDEFINE

DEFINE CLASS obgbase AS optiongroup 
 	*< CLASSDATA: Baseclass="optiongroup" Timestamp="" Scale="Pixels" Uniqueid="" />

	BackColor = 192,192,192
	BackStyle = 0
	ButtonCount = 2
	Height = 47
	Name = "obgbase"
	Value = 1
	Width = 109
	Option1.BackColor = 192,192,192
	Option1.BackStyle = 0
	Option1.Caption = "cap"
	Option1.Height = 18
	Option1.Left = 5
	Option1.Name = "Option1"
	Option1.Top = 5
	Option1.Value = 1
	Option1.Width = 75
	Option2.BackColor = 192,192,192
	Option2.BackStyle = 0
	Option2.Caption = "cap"
	Option2.Height = 18
	Option2.Left = 5
	Option2.Name = "Option2"
	Option2.Top = 25
	Option2.Value = 0
	Option2.Width = 75

ENDDEFINE

DEFINE CLASS pgfbase AS pageframe 
 	*< CLASSDATA: Baseclass="pageframe" Timestamp="" Scale="Pixels" Uniqueid="" />

	ErasePage = .T.
	Height = 226
	Name = "pgfbase"
	PageCount = 3
	Width = 465
	Page1.Caption = "Page1"
	Page1.Name = "Page1"
	Page2.Caption = "Page2"
	Page2.Name = "Page2"
	Page3.Caption = "Page3"
	Page3.Name = "Page3"

ENDDEFINE

DEFINE CLASS spnbase AS spinner 
 	*< CLASSDATA: Baseclass="spinner" Timestamp="" Scale="Pixels" Uniqueid="" />

	Height = 24
	Name = "spnbase"
	Width = 125

ENDDEFINE

DEFINE CLASS tbrbase AS toolbar 
 	*< CLASSDATA: Baseclass="toolbar" Timestamp="" Scale="Pixels" Uniqueid="" />

	Caption = "cap"
	DataSession = 1
	Height = 19
	Left = 0
	Name = "tbrbase"
	Top = 0
	Width = 34

ENDDEFINE

DEFINE CLASS tbrbtnbase AS commandbutton 
 	*< CLASSDATA: Baseclass="commandbutton" Timestamp="" Scale="Pixels" Uniqueid="" />

	Caption = "X"
	FontSize = 8
	Height = 23
	Name = "tbrbtnbase"
	Width = 23

ENDDEFINE

DEFINE CLASS tmrbase AS timer 
 	*< CLASSDATA: Baseclass="timer" Timestamp="" Scale="Pixels" Uniqueid="" />

	Height = 23
	Name = "tmrbase"
	Width = 23

ENDDEFINE

DEFINE CLASS txtbase AS textbox 
 	*< CLASSDATA: Baseclass="textbox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*p: calias
		*p: cfield
		*p: ctag
	*</DefinedPropArrayMethod>

	BackColor = 255,255,255
	FontSize = 10
	Format = "K"
	Height = 24
	Name = "txtbase"
	SelectedBackColor = 255,255,0
	SelectedForeColor = 255,0,0
	Width = 113
	
	PROCEDURE InteractiveChange
		* REPLACE (this.controlsource) WITH (this.value)
	ENDPROC

	PROCEDURE Valid
		ON KEY LABEL F1
	ENDPROC

	PROCEDURE When
		ON KEY LABEL F1 _screen.activeform.helpcontext()
	ENDPROC

ENDDEFINE

DEFINE CLASS txtgridbase AS textbox 
 	*< CLASSDATA: Baseclass="textbox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*p: ccursor
		*p: cdatasource
		*p: cstuffinkbbuffer		&& The stuff that the user has typed
		*p: ncurrecnum		&& The number of the record that the user was on when they started the search
		*p: ntimeelapsed		&& The amount of time elapsed since the user started typing and the last keypress, as long as it's less than dblclick
		*p: ntimestart		&& SECO() when the user started typing
	*</DefinedPropArrayMethod>

	PROTECTED cstuffinkbbuffer,ncurrecnum,ntimeelapsed,ntimestart
	cdatasource = ""
	cstuffinkbbuffer = ""		&& The stuff that the user has typed
	Height = 24
	Name = "txtgridbase"
	ncurrecnum = 0		&& The number of the record that the user was on when they started the search
	ntimeelapsed = 0		&& The amount of time elapsed since the user started typing and the last keypress, as long as it's less than dblclick
	ntimestart = 0		&& SECO() when the user started typing
	ReadOnly = .T.
	Width = 113
	
	PROCEDURE DblClick
		thisform.release()
	ENDPROC

	PROCEDURE GotFocus
		LOCAL cOrder
		
		m.cOrder = SUBSTR(this.cDataSource,AT('.',this.cDataSource)+1)
		
		IF thisform.cOrder <> m.cOrder
		   thisform.cOrder = m.cOrder
		   SET ORDER TO &cOrder
		   this.parent.parent.recordsource = this.parent.parent.recordsource
		   this.parent.parent.refresh()
		ENDIF
		
		DODEFAULT()
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		LOCAL lcData
		
		do case
		   case nKeyCode = 13  && enter
		      this.dblclick()
		   case nKeyCode = 24  && cursor down
		   case nKeyCode = 5   && cursor up
		   case nKeyCode = 4   && cursor right
		   case nKeyCode = 19  && cursor left
		   case nKeyCode = 18  && pageup
		   case nKeyCode = 3   && pagedown
		   case nKeyCode = 9   && tab
		   case nKeyCode = 27  && escape
		      thisform.release()
		   otherwise
		      nodefault
		      * thanks to Meng of MSFT for the tip for the KB Buffer algorithm
		      this.nTimeElapsed = seconds() - this.nTimeStart
		      this.nCurRecNum = recno()
		      this.cStuffInKBBuffer = iif( this.nTimeElapsed > _dblclick, ;
		                                   chr(nKeyCode), ;
		                                   this.cStuffInKBBuffer + chr(nKeyCode))
		      lcData = this.cDataSource                             
		      SET NEAR ON  
		      LOCATE FOR (upper(this.cStuffInKBBuffer)) $ ;
		                  UPPER(SUBSTR(&lcData,1,LEN(this.cStuffInKBBuffer)))
		      this.nTimeStart = seconds()
		      SET NEAR OFF
		endcase
		
		
	ENDPROC

ENDDEFINE

DEFINE CLASS txtquickfill AS textbox 
 	*< CLASSDATA: Baseclass="textbox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*p: calias
		*p: cfield
		*p: ctag
	*</DefinedPropArrayMethod>

	Format = "K"
	Height = 24
	Name = "txtquickfill"
	SelectedBackColor = 255,255,0
	SelectedForeColor = 255,0,0
	Width = 113
	
	PROCEDURE InteractiveChange
		IF this.cTag = '**'
		   *
		   *  Not a quickfill field
		   *
		   RETURN
		ENDIF   
		IF thisform.uistatus = 'ADD'
		   RETURN
		ENDIF   
		   
		IF EMPTY(this.cField) ;
		   OR EMPTY(this.cTag) ;
		   OR EMPTY(this.cAlias)
		   RETURN
		ENDIF
		LOCAL lnLastKey, ;
		      lcSetNear, ;
		      lcNewValue, ;
		      lcOldAlias, ;
		      lnCurLength, ;
		      lnCurRecord
		      
		lnLastKey = LASTKEY()
		
		IF lnLastKey = 127 && Backspace
		   this.value = ALLTRIM(LEFT(this.value,this.selstart))
		   this.selstart = LEN(ALLTRIM(this.value))
		ENDIF
		
		*
		*  Search for the text in the textbox
		*
		IF !EMPTY(this.value)
		   lcOldAlias = ALIAS()
		   lnCurRecord = RECNO()
		   lcSetNear = SET('NEAR')
		   SET NEAR ON
		   lcNewValue = (this.cField)
		   SELECT (this.cAlias)
		   SET ORDER TO TAG(this.cTag)
		   lnCurLength = this.selstart
		   SEEK ALLTRIM(LEFT(UPPER(this.value),this.selstart))
		   *
		   * Update this.value
		   *
		   IF FOUND()
		      this.value = &lcNewValue
		   ELSE
		      this.value = ALLTRIM(LEFT(this.value,this.selstart))
		      GOTO lnCurRecord
		   ENDIF
		   *
		   *  Grids demand special treatment
		   *
		   IF UPPER(this.parent.baseclass) = 'Column'
		      REPLACE (this.controlsource) WITH this.value IN (this.parent.parent.recordsource)
		   ENDIF
		   *
		   * Position the cursor
		   *
		   this.selstart = lncurlength
		   SET NEAR &lcSetNear
		   IF !EMPTY(lcOldAlias)
		      SELECT(lcOldAlias)
		   ENDIF
		ENDIF               
		
	ENDPROC

	PROCEDURE Valid
		ON KEY LABEL F2
		IF thisform.uistatus = 'ADD'
		   RETURN
		ENDIF
		
		thisform.refresh()
	ENDPROC

ENDDEFINE
