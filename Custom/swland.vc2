*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="swland.vcx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS land AS custom 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: buildpmts		&& Builds a cursor of payments due.
	*</DefinedPropArrayMethod>

	Height = 33
	Name = "land"
	Width = 100
	
	PROCEDURE buildpmts		&& Builds a cursor of payments due.
		LPARA tnselect, tddate1, tddate2, tclease1, tclease2, tlorderbydate
		LOCAL lddate1, lddate2, lnleadtime, ldchkdate, lclease1, lclease2
		LOCAL lluseinv, lluseopt, lluseland, lluseown
		LOCAL llReturn, loError
		*:Global cTitle1, caddr1, caddr2, caddr3, cami, ccounty, cdeptno, cfreq, cidlease, cidowner
		*:Global cleasename, cownname, cprospect, crptgroup, ctownship, cunique, dpmtdate, iamipk, mcomments
		*:Global mlegaldesc, npayment, npmtacre, npmtamount
		
		llReturn = .T.
		
		TRY
		
		   STORE .F. TO lluseinv, lluseopt, lluseland, lluseown
		
		   SET DELETED ON
		
		   swselect('landowner')
		
		   CREATE CURSOR landpmts ;
		      (crptgroup c(1), ;
		        cownerid   c(10), ;
		        cownname   c(40), ;
		        cidlando   c(8),  ;
		        caddr1     c(40), ;
		        caddr2     c(40), ;
		        caddr3     c(40), ;
		        cidowner   i, ;
		        cidlease   i, ;
		        cleaseid   c(10), ;
		        cdeptno    c(8), ;
		        cleasename c(40), ;
		        ccounty    c(25), ;
		        ctownship  c(25), ;
		        cprospect  c(25), ;
		        cAMI       m, ;
		        cunique    c(10), ;
		        mcomments  m, ;
		        dpmtdate   d, ;
		        mlegaldesc m,  ;
		        npmtamount N(12, 2), ;
		        nacres     N(6, 4), ;
		        npmtacre   N(9, 2), ;
		        nyearpmt   N(12, 2), ;
		        cfreq      c(15), ;
		        lselected  l, ;
		        npayment   i, ;
		        ctitle1    c(40), ;
		        cpagebreak c(10))
		   INDEX ON cpagebreak + crptgroup + cleaseid + cownerid TAG leaseown
		   INDEX ON cpagebreak + crptgroup + DTOS(dpmtdate) + cleaseid + cownerid TAG dpmtdate
		
		*  Get the number of days we're supposed to check ahead
		   swselect('landopt')
		   lnleadtime  = nleaddays
		
		   swselect('investor')
		   SET ORDER TO cownerid
		
		   swselect('land')
		   SET ORDER TO cleaseid
		
		   IF TYPE('tcLease1') <> 'C'
		      lddate1 = tddate1
		      lddate2 = lddate1
		      SELECT land
		      GO TOP
		      lclease1 = cleaseid
		      GO BOTT
		      lclease2 = cleaseid
		   ELSE
		      lddate1  = tddate1
		      lddate2  = tddate2
		      lclease1 = tclease1
		      lclease2 = tclease2
		   ENDIF
		
		   IF NOT USED('landowner')
		      USE landowner IN 0
		   ENDIF
		
		   IF tnselect = 1
		* Scan for payments that are due before the given date
		      SELECT landowner
		      SCAN FOR BETWEEN(cleaseid, lclease1, lclease2) AND dnextpmt <= lddate1
		         SCATTER MEMVAR
		
		         SELECT investor
		         SET ORDER TO cownerid
		         IF SEEK(m.cownerid)
		            m.cownname = investor.cownname
		            m.caddr1   = investor.caddress1a
		            IF TYPE('cidowner') = 'C'
		               m.cidowner = cidowner
		            ELSE
		               m.cidowner = 0
		            ENDIF
		
		            IF EMPTY(investor.caddress1b)
		               m.caddr2 = ALLTRIM(investor.ccity1) + ' ' + investor.cstate1 + ' ' + investor.czip1
		               m.caddr3 = ''
		            ELSE
		               m.caddr2 = investor.caddress1b
		               m.caddr3 = ALLTRIM(investor.ccity1) + ' ' + investor.cstate1 + ' ' + investor.czip1
		            ENDIF
		
		         ELSE
		            m.cownname = 'Unknown Owner'
		            STORE '' TO m.caddr1, m.caddr2, m.caddr3
		         ENDIF
		
		         SELECT land
		         SET ORDER TO cleaseid
		         IF SEEK(m.cleaseid)
		            m.dexpires = dexpires
		            IF INLIST(ALLTRIM(cleasestatus), 'IN', 'Sold', 'Expired', 'HBP', 'PL', 'Paid-Up')
		               LOOP
		            ENDIF
		            IF NOT FILE('datafiles\nwlist.txt')
		               IF (m.dexpires <= lddate1 AND landowner.dnextpmt >= m.dexpires) OR landowner.dnextpmt > m.dexpires
		                  LOOP
		               ENDIF
		            ENDIF
		            m.cleasename = land.cleasename
		            m.mlegaldesc = mlegaldesc
		            m.ccounty    = ccounty
		            m.ctownship  = ctownship
		            m.cprospect  = cprospect
		            m.cunique    = cunique
		            m.mcomments  = mcomments
		            m.cdeptno    = cdeptno
		            m.cAMI       = ' '
		            m.ctitle1    = 'Upcoming Delay Rental Payments'
		            swselect('landami')
		            SCAN FOR cleaseid == m.cleaseid
		               m.iamipk = iamipk
		               swselect('ami')
		               LOCATE FOR iamipk = m.iamipk
		               IF FOUND()
		                  IF EMPTY(m.cAMI)
		                     m.cAMI = cname
		                  ELSE
		                     m.cAMI = m.cAMI + CHR(10) + cname
		                  ENDIF
		               ENDIF
		            ENDSCAN
		            IF TYPE('cidlease') = 'C'
		               m.cidlease   = cidlease
		            ELSE
		               m.cidlease   = 0
		            ENDIF
		         ELSE
		            m.cleasename = 'Unknown Lease'
		            m.cidlease   = 0
		            m.mlegaldesc = ''
		         ENDIF
		
		         m.dpmtdate   = m.dnextpmt
		         m.npmtamount = m.ntotalpmt
		         m.npmtacre   = m.nrental
		
		         IF m.npmtamount = 0
		            LOOP
		         ENDIF
		
		         m.cfreq     = 'Every ' + TRANSFORM(m.nPmtFreq) + ' Months'
		         m.crptgroup = 'A'
		         INSERT INTO landpmts FROM MEMVAR
		         
		         * Build more payments if needed
		         lnPmts = (ldDate1 - m.dNextPmt)/30
		         lnPmts = lnPmts/m.nPmtFreq
		         
		         FOR lnx = 1 TO lnPmts
		            m.dpmtdate = GOMONTH(m.dpmtdate,m.nPmtFreq)
		            m.dnextpmt = m.dpmtdate
		            INSERT INTO landpmts FROM memvar
		         ENDFOR 
		         
		      ENDSCAN
		
		      IF landopt.lexpirereport
				 SELECT  cleaseid, cleasename, ccounty, ctownship, cunique, cprospect, dexpires ;
					 FROM land ;
					 WHERE cLeaseStatus # 'I' ;
						 AND BETWEEN(dexpires, DATE(), tddate1) ;
					 INTO CURSOR tempexpire ;
					 ORDER BY cleaseid
		         SCAN
		            STORE '' TO m.cownerid, m.cownname
		            m.crptgroup = 'B'
		            m.dpmtdate  = dexpires
		            m.npayment  = lnleadtime
		            m.ctitle1   = 'Leases Expiring before or on: ' + DTOC(tdDate1)
		            INSERT INTO landpmts FROM MEMVAR
		         ENDSCAN
		      ENDIF
		   ELSE
		* Scan for payments that are due between the given dates
		      SELECT landowner
		      SCAN FOR BETWEEN(cleaseid, lclease1, lclease2) AND BETWEEN(dnextpmt, lddate1, lddate2)
		         SCATTER MEMVAR
		
		         SELECT investor
		         SET ORDER TO cownerid
		         IF SEEK(m.cownerid)
		            m.cownname = investor.cownname
		            m.caddr1   = investor.caddress1a
		            IF TYPE('cidowner') = 'C'
		               m.cidowner = cidowner
		            ELSE
		               m.cidowner = 0
		            ENDIF
		
		            IF EMPTY(investor.caddress1b)
		               m.caddr2 = ALLTRIM(investor.ccity1) + ' ' + investor.cstate1 + ' ' + investor.czip1
		               m.caddr3 = ''
		            ELSE
		               m.caddr2 = investor.caddress1b
		               m.caddr3 = ALLTRIM(investor.ccity1) + ' ' + investor.cstate1 + ' ' + investor.czip1
		            ENDIF
		
		         ELSE
		            m.cownname = 'Unknown Owner'
		            STORE '' TO m.caddr1, m.caddr2, m.caddr3
		         ENDIF
		
		         SELECT land
		         SET ORDER TO cleaseid
		         IF SEEK(m.cleaseid)
		            IF INLIST(ALLTRIM(cleasestatus), 'IN', 'Sold', 'Expired', 'HBP', 'PL', 'Paid-Up')
		               LOOP
		            ENDIF
		            
		            IF NOT FILE('datafiles\nwlist.txt')
		               IF land.dexpires <= m.dnextpmt
		                  LOOP
		               ENDIF 
		            ENDIF    
		            
		            m.cleasename = land.cleasename
		            m.mlegaldesc = mlegaldesc
		            m.ccounty    = ccounty
		            m.ctownship  = ctownship
		            m.cprospect  = cprospect
		            m.cunique    = cunique
		            m.mcomments  = mcomments
		            m.cdeptno    = cdeptno
		
		            m.cAMI      = ''
		            swselect('landami')
		            SCAN FOR cleaseid == m.cleaseid
		               m.iamipk = iamipk
		               swselect('ami')
		               LOCATE FOR iamipk = m.iamipk
		               IF FOUND()
		                  IF EMPTY(m.cAMI)
		                     m.cAMI = cname
		                  ELSE
		                     m.cAMI = m.cAMI + CHR(10) + cname
		                  ENDIF
		               ENDIF
		            ENDSCAN
		
		            IF TYPE('cidlease') = 'C'
		               m.cidlease   = cidlease
		            ELSE
		               m.cidlease   = 0
		            ENDIF
		         ELSE
		            m.cleasename = 'Unknown Lease'
		            m.cidlease   = 0
		            m.mlegaldesc = ''
		         ENDIF
		
		         m.dpmtdate   = m.dnextpmt
		         m.npmtamount = m.ntotalpmt
		         m.npmtacre   = m.nrental
		
		         IF m.npmtamount = 0
		            LOOP
		         ENDIF
		
		         m.cfreq = 'Every ' + TRANSFORM(m.nPmtFreq) + ' Months'
		
		         INSERT INTO landpmts FROM MEMVAR
		      ENDSCAN
		
		   ENDIF
		   IF lluseinv
		      USE IN investor
		   ENDIF
		   IF lluseopt
		      USE IN landopt
		   ENDIF
		   IF lluseland
		      USE IN land
		   ENDIF
		   IF lluseown
		      USE IN landowner
		   ENDIF
		
		   SELECT landpmts
		   IF tlorderbydate
		      SET ORDER TO dpmtdate
		   ELSE
		      SET ORDER TO leaseown
		   ENDIF
		
		   IF RECC('landpmts') > 0
		      llReturn = .T.
		   ELSE
		      llReturn = .F.
		   ENDIF
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'BuildPmts', loError.LINENO, 'SWLand', loError.ERRORNO, loError.MESSAGE, '', loError
		   MESSAGEBOX('Unable to process the report at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
		
		
		
		
	ENDPROC

	PROCEDURE Init
		IF TYPE('m.goApp') <> 'O'
		   IF NOT USED('land') 
		      USE land IN 0
		   ENDIF
		   IF NOT USED('landowner')
		      USE landowner IN 0
		   ENDIF
		   IF NOT USED('landopt')
		      USE landopt IN 0
		   ENDIF
		   IF NOT USED('investor')
		      USE investor IN 0
		   ENDIF   
		ENDIF
		
	ENDPROC

ENDDEFINE
