*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="swforms.vcx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dmstmtnote1 AS dmstmtnotes OF "swforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*p: cwellid
		*p: cyear
		*p: lnewnote
		*p: nrunno
	*</DefinedPropArrayMethod>

	Caption = "Owner Distribution Statement Notes"
	DoCreate = .T.
	HelpContextID = 441
	Name = "dmstmtnote1"
	Cntokcancelcustom1.cmdcancel.Name = "cmdcancel"
	Cntokcancelcustom1.cmdok.Name = "cmdok"
	Cntokcancelcustom1.Name = "Cntokcancelcustom1"
	edit1.ControlSource = "stmtnote.mnotes"
	edit1.Name = "edit1"
	Lbllabelcustom1.Name = "Lbllabelcustom1"
	Opgoptiongroupcustom1.ControlSource = "stmtnote.nnotetype"
	Opgoptiongroupcustom1.Name = "Opgoptiongroupcustom1"
	Opgoptiongroupcustom1.Option1.Caption = "Royalty Owners"
	Opgoptiongroupcustom1.Option1.Left = 5
	Opgoptiongroupcustom1.Option1.Name = "Option1"
	Opgoptiongroupcustom1.Option1.Top = 5
	Opgoptiongroupcustom1.Option1.Value = 1
	Opgoptiongroupcustom1.Option2.Left = 5
	Opgoptiongroupcustom1.Option2.Name = "Option2"
	Opgoptiongroupcustom1.Option2.Top = 24
	Opgoptiongroupcustom1.Option3.Left = 5
	Opgoptiongroupcustom1.Option3.Name = "Option3"
	Opgoptiongroupcustom1.Option3.Top = 43
	Opgoptiongroupcustom1.Option4.Left = 5
	Opgoptiongroupcustom1.Option4.Name = "Option4"
	Opgoptiongroupcustom1.Option4.Top = 61
	Opgoptiongroupcustom1.Option5.Left = 5
	Opgoptiongroupcustom1.Option5.Name = "Option5"
	Opgoptiongroupcustom1.Option5.Top = 80
	
	PROCEDURE delete
		LPARAMETERS cWorkarea
		* Don't do anything
	ENDPROC

	PROCEDURE Init
		LPARAMETERS ocaller, tcWellID, tcYear, tnRunNo
		
		IF DODEFAULT(ocaller)
		   if type('tnrunno') <> 'N'
		      tnrunno = val(tnrunno)
		   endif   
		   this.cwellid = tcwellid
		   this.cyear   = tcyear
		   this.nrunno  = tnRunNo
		   
		   sele wells
		   locate for cwellid == tcwellid
		   if found()
		      thisform.caption = 'Owner Distribution Statement Notes for Well: ' + trim(wells.cwellname)
		   else
		      thisform.caption = 'Owner Distribution Statement Notes for Well: ' + trim(tcwellid)
		   endif   
		   SELE stmtnote
		   if tnrunno = 0
		      locate for cwellid = tcwellid and nrunno=0
		   else
		      locate for cwellid = tcwellid and nrunno = tnrunno and crunyear=tcyear
		   endif      
		   if found()
		      this.lnewnote = .f.
		   ELSE
		      this.lnewnote = .t.
		      sele stmtnote
		      append blank
		      repl nnotetype with 1
		   endif      
		   thisform.Refresh() 
		ENDIF   
		   
	ENDPROC

	PROCEDURE Cntokcancelcustom1.cmdok.Click
		
		m.cwellid = thisform.cwellid
		m.cyear   = thisform.cyear
		m.crunyear = m.cyear
		m.nrunno  = thisform.nrunno
		m.mnotes  = thisform.edit1.value
		m.nnotetype = thisform.opgoptiongroupcustom1.value
		
		sele stmtnote
		repl mnotes with m.mnotes, ;
		     nnotetype with m.nnotetype, ;
		     cwellid   with m.cwellid, ;
		     cyear     with m.cyear, ;
		     crunyear  with m.cyear, ;
		     nrunno    with 0
		
		dodefault()
		
		
	ENDPROC

ENDDEFINE

DEFINE CLASS dmstmtnotes AS frmmodaldatachildcustom OF "cforms.vcx" 		&& Owner Statement notes form
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="edit1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Opgoptiongroupcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cntokcancelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: ccaption
		*p: cdatasource
		*p: cnote
	*</DefinedPropArrayMethod>

	Caption = "Owner Statement Notes"
	DoCreate = .T.
	Height = 355
	HelpContextID = 441
	Name = "dmstmtnotes"
	Width = 393

	ADD OBJECT 'Cntokcancelcustom1' AS cntokcancelcustom WITH ;
		Height = 36, ;
		Left = 226, ;
		Name = "Cntokcancelcustom1", ;
		Top = 285, ;
		Width = 163, ;
		cmdcancel.Height = 34, ;
		cmdcancel.Left = 87, ;
		cmdcancel.Name = "cmdcancel", ;
		cmdcancel.Top = 2, ;
		cmdcancel.Width = 75, ;
		cmdok.Height = 34, ;
		cmdok.Left = 1, ;
		cmdok.Name = "cmdok", ;
		cmdok.Top = 2, ;
		cmdok.Width = 75
		*< END OBJECT: ClassLib="cbutton.vcx" BaseClass="container" />

	ADD OBJECT 'edit1' AS edteditboxcustom WITH ;
		ControlSource = "inchdr.mincnote", ;
		Height = 246, ;
		Left = 0, ;
		Name = "edit1", ;
		Top = 0, ;
		Width = 384
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="editbox" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		AutoSize = .F., ;
		Caption = "Show these notes on the following owner's statement:", ;
		Height = 72, ;
		Left = 7, ;
		Name = "Lbllabelcustom1", ;
		Top = 258, ;
		Width = 62, ;
		WordWrap = .T.
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Opgoptiongroupcustom1' AS opgoptiongroupcustom WITH ;
		BorderStyle = 0, ;
		ButtonCount = 5, ;
		ControlSource = "inchdr.nnotetype", ;
		Height = 96, ;
		Left = 77, ;
		Name = "Opgoptiongroupcustom1", ;
		Top = 252, ;
		Width = 129, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = " Landowners", ;
		Option1.FontSize = 8, ;
		Option1.Height = 16, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Top = 5, ;
		Option1.Width = 83, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "Overriding Royalty", ;
		Option2.FontSize = 8, ;
		Option2.Height = 16, ;
		Option2.Left = 5, ;
		Option2.Name = "Option2", ;
		Option2.Top = 24, ;
		Option2.Width = 107, ;
		Option3.AutoSize = .T., ;
		Option3.Caption = "All Royalty Owners", ;
		Option3.FontSize = 8, ;
		Option3.Height = 16, ;
		Option3.Left = 5, ;
		Option3.Name = "Option3", ;
		Option3.Top = 43, ;
		Option3.Width = 112, ;
		Option4.AutoSize = .T., ;
		Option4.Caption = " Working Interests", ;
		Option4.FontSize = 8, ;
		Option4.Height = 16, ;
		Option4.Left = 5, ;
		Option4.Name = "Option4", ;
		Option4.Top = 61, ;
		Option4.Width = 105, ;
		Option5.AutoSize = .T., ;
		Option5.Caption = " All Owners", ;
		Option5.FontSize = 8, ;
		Option5.Height = 16, ;
		Option5.Left = 5, ;
		Option5.Name = "Option5", ;
		Option5.Top = 80, ;
		Option5.Width = 76
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="optiongroup" />
	
	PROCEDURE Activate
		DODEFAULT()
		ON KEY LABEL F1 _screen.ActiveForm.callhelp(_screen.ActiveForm.name)
	ENDPROC

	PROCEDURE Unload
		RETURN this.cNote
	ENDPROC

ENDDEFINE

DEFINE CLASS frmlogon AS frmmodaldialogcustom OF "cforms.vcx" 		&& Application logon dialog box
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="IMGIMAGECUSTOM1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabel1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblPassword" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtUsername" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtPassword" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cntOkCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblUsername" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboCompany" UniqueID="" Timestamp="" />

	#INCLUDE "..\common\codemine.h"
	*<DefinedPropArrayMethod>
		*m: loguser
		*p: ccompanyname
		*p: lsetup
		*p: nfailcount		&& Number of chances user has to enter correct password.
		*p: oparams		&& Modal dialog parameters object.
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	BackColor = 255,255,255
	BorderStyle = 2
	Caption = "Logon"
	ccompanyname = 
	cversion = 2.0.0
	Desktop = .T.
	DoCreate = .T.
	Height = 300
	lreleaseonclose = .F.
	lrememberposition = .F.
	lsetup = .F.
	Name = "frmlogon"
	nfailcount = 5		&& Number of chances user has to enter correct password.
	osecurity = .NULL.
	ShowTips = .T.
	ShowWindow = 1
	TitleBar = 1
	Width = 825
	_memberdata = <VFPData>
		<memberdata name="ccompanyname" display="cCompanyName"/>
		<memberdata name="lsetup" display="lSetup"/>
		<memberdata name="loguser" display="LogUser"/>
		</VFPData>		&& XML Metadata for customizable properties
	Mwresize1.lblHighLight.Name = "lblHighLight"
	Mwresize1.lblShading.Name = "lblShading"
	Mwresize1.Left = 480
	Mwresize1.Name = "Mwresize1"
	Mwresize1.TabIndex = 1
	Mwresize1.Top = 276
	Mwresize1.ZOrderSet = 1

	ADD OBJECT 'cboCompany' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		DisplayCount = 10, ;
		FontSize = 12, ;
		Height = 26, ;
		Left = 377, ;
		Name = "cboCompany", ;
		TabIndex = 2, ;
		Top = 53, ;
		Width = 413, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'cntOkCancel' AS cntokcancelcustom WITH ;
		BackStyle = 0, ;
		Height = 60, ;
		Left = 405, ;
		Name = "cntOkCancel", ;
		TabIndex = 7, ;
		Top = 221, ;
		Width = 240, ;
		ZOrderSet = 6, ;
		cmdcancel.Caption = "\<Exit", ;
		cmdcancel.FontName = "Segoe UI", ;
		cmdcancel.FontSize = 12, ;
		cmdcancel.Height = 48, ;
		cmdcancel.Left = 132, ;
		cmdcancel.Name = "cmdcancel", ;
		cmdcancel.Top = 0, ;
		cmdcancel.Width = 107, ;
		cmdok.Caption = "\<Logon", ;
		cmdok.FontName = "Segoe UI", ;
		cmdok.FontSize = 12, ;
		cmdok.Height = 48, ;
		cmdok.Left = 1, ;
		cmdok.llocalizecaption = .T., ;
		cmdok.Name = "cmdok", ;
		cmdok.Top = 2, ;
		cmdok.Width = 107
		*< END OBJECT: ClassLib="cbutton.vcx" BaseClass="container" />

	ADD OBJECT 'IMGIMAGECUSTOM1' AS imgimagecustom WITH ;
		Height = 218, ;
		Left = 48, ;
		Name = "IMGIMAGECUSTOM1", ;
		Picture = ..\graphics\pivoten-logon.png, ;
		Stretch = 2, ;
		Top = 36, ;
		Width = 180, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="image" />

	ADD OBJECT 'Lbllabel1' AS lblfieldlabelcustom WITH ;
		Caption = "Company", ;
		FontBold = .F., ;
		FontName = "Segoe UI", ;
		FontSize = 12, ;
		Height = 23, ;
		Left = 284, ;
		Name = "Lbllabel1", ;
		TabIndex = 3, ;
		Top = 52, ;
		Width = 69, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblPassword' AS lblfieldlabelcustom WITH ;
		Caption = "Password", ;
		FontBold = .F., ;
		FontName = "Segoe UI", ;
		FontSize = 12, ;
		Height = 23, ;
		Left = 284, ;
		Name = "lblPassword", ;
		TabIndex = 4, ;
		Top = 162, ;
		Width = 69, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblUsername' AS lblfieldlabelcustom WITH ;
		Caption = "Username", ;
		FontBold = .F., ;
		FontName = "Segoe UI", ;
		FontSize = 12, ;
		Height = 23, ;
		Left = 280, ;
		Name = "lblUsername", ;
		TabIndex = 8, ;
		Top = 121, ;
		Width = 73, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'txtPassword' AS txttextboxcustom WITH ;
		FontName = "Segoe UI", ;
		FontSize = 12, ;
		Format = "K", ;
		Height = 26, ;
		Left = 377, ;
		Name = "txtPassword", ;
		PasswordChar = "*", ;
		TabIndex = 6, ;
		Top = 159, ;
		Width = 413, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtUsername' AS txttextboxcustom WITH ;
		FontName = "Segoe UI", ;
		FontSize = 12, ;
		Format = "K", ;
		Height = 26, ;
		Left = 377, ;
		Name = "txtUsername", ;
		TabIndex = 5, ;
		Top = 120, ;
		Width = 413, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE beforeclose
		LPARAMETERS nCloseReason
		*++
		*>>Save or discard any changes, and return .T. if the form can be closed.
		* Provides default behavior. Individual forms may subclass this method as appropriate.
		*--
		  IF m.nCloseReason = CLOSE_BY_OK
		    RETURN THIS.Save()    && Only perform login on OK button.
		  ENDIF
		
		  thisform.uvalue = .T.
		  m.goapp.lAdmin = .t.
		  RETURN .t.
		
	ENDPROC

	PROCEDURE Init
		LPARAMETER cDefault, cCompany
		*++
		* Application logon dialog. Takes 1 parameter, the default username.
		*--
		* This never executes, but will cause the project manager to pull in
		* cmSecMan.vcx the first time a 6.1 or 7.0 project is rebuilt.
		IF .F.
		   SET CLASSLIB TO cmSecMan.vcx ADDITIVE
		ENDIF
		
		IF NOT EMPTY(m.cDefault)
		   THIS.txtUsername.VALUE = PROPER(TRIM(m.cDefault))
		   THIS.SetNextControl(THIS.txtPassword)
		ENDIF
		
		* Change caption to company logging in to.
		IF NOT EMPTY(m.cCompany)
		   THIS.cCompanyName = m.cCompany
		   THIS.CAPTION      = 'Logon to ' + ALLTRIM(m.cCompany)
		ELSE
		   THIS.cCompanyName = ''
		ENDIF
		
		IF m.goapp.lNoSecurity
		   THISFORM.lblusername.VISIBLE = .F.
		   THISFORM.lblpASSWORD.VISIBLE = .F.
		   THISFORM.txtPassword.VISIBLE = .F.
		   THISFORM.txtUsername.VISIBLE = .F.
		   THISFORM.cntOKcancel.REFRESH()
		ENDIF
		
		THISFORM.txtUsername.SETFOCUS()
		
		* Create a username properties value object for the form.
		THIS.ADDOBJECT('oUser', 'cmUsernameValue')
		THISFORM.CAPTION = 'Logon to ' + PROPER(ALLTRIM(THISFORM.cboCompany.DISPLAYVALUE))
		IF m.goApp.lCloudServer
		   _VFP.STATUSBAR = 'Company Open: ' +  PROPER(ALLTRIM(THISFORM.cboCompany.DISPLAYVALUE))
		ELSE
		   _VFP.STATUSBAR = 'Data Path: ' +  LOWER(THISFORM.cboCompany.LISTITEM[thisform.cboCompany.listitemid,3])
		ENDIF
		
		DODEFAULT()
		ON KEY LABEL CTRL+P
		
		
		
	ENDPROC

	PROCEDURE loguser
		LPARAMETERS tcUser
		
		CreateLoginsTable()
		LogOutUser()
		
		m.cuser = tcUser
		m.Logged_In = DATETIME()
		m.company   = m.goapp.cCompanyName
		m.forced_out = .f.
		m.Logged_out = {}
		m.device     = SYS(0)
		INSERT INTO logins FROM MEMVAR 
	ENDPROC

	PROCEDURE saveallchanges
		m.goapp.cidcomp = THISFORM.cboCompany.VALUE
		
		IF m.goapp.lOpenCompany
		    DO closecomp
		ENDIF
		
		IF NOT THISFORM.lSetup
		    IF NOT file(m.goapp.cDataFilePath+'appreg01.dbf')
		       MESSAGEBOX('This company cannot be opened. There are problems with the data in its folder. ' + ;
		                'There was no company data in this folder:' + CHR(10) + ;
		                ALLTRIM(UPPER(m.goapp.cDataFilePath)),16,'Login Problem')
		       RETURN   .f.         
		    ENDIF    
		    THIS.oSecurity.oRegistry.cDBCPath = m.goapp.cDataFilePath + 'appdata'
		    THIS.oSecurity.oRegistry.cDBCName = 'appdata'
		
		    IF NOT m.goapp.lNoSecurity AND NOT THIS.oSecurity.Logon(TRIM(THIS.txtUsername.VALUE), TRIM(THIS.txtPassword.VALUE))
		        THIS.oMessage.DisplayLastMessage()   && Security manager set the reason for failure.
		        THIS.txtPassword.SETFOCUS()
		        THIS.nFailCount = THIS.nFailCount - 1
		        IF THIS.nFailCount <= 0
		            THIS.oSecurity.RecordEvent(EVENT_SEC_LOGONFAIL, EVENT_TYPE_SECURITY, THIS.txtUsername.VALUE)
		            RETURN .T.
		        ENDIF
		        RETURN .F.
		    ENDIF
		    
		    m.goapp.cuser = ALLTRIM(this.txtUsername.Value)
		    this.LogUser(m.goapp.cUser)
		
		    thisform.top = -1000
		    m.goapp.OpenCompany1(.F.)
		    m.goapp.SetSearchPath()
		    m.goapp.Set_Reg_Keys()
		    m.goapp.OpenCompany2()
		    * Succeful logon, return success.
		    THIS.uValue = .T.
		    m.goapp.showmenu()
		ELSE
		    m.goapp.oStateManager.OpenForm('compnew.scx')
		ENDIF
		RETURN .T.
		
		
	ENDPROC

	PROCEDURE Unload
		
		llValue = this.uvalue
		DODEFAULT()
		RETURN llValue
	ENDPROC

	PROCEDURE cboCompany.Init
		IF DODEFAULT()
		   lnx = 1
		   IF NOT USED('compmast')
		      USE (m.goapp.cCommonFolder + 'compmast') IN 0
		   ENDIF
		   lnFile   = ADIR(laFiles, m.goapp.cCommonDocuments + '*.loc')
		   llCodes  = FILE(m.goapp.cCommonFolder+'codes.txt')
		   IF lnFile > 0
		      lcidcomp        = JUSTSTEM(laFiles[1, 1])
		      lcidcomp        = SUBSTR(lcidcomp, ATC('_', lcidcomp) + 1)
		      m.goapp.cidComp = lcidcomp
		   ENDIF
		   lnSave = 1
		   SELECT compmast
		   IF llCodes
		      SET ORDER to cidcomp
		   ELSE 
		      SET ORDER TO cproducer
		   ENDIF    
		   SCAN
		      IF m.goapp.lDemo
		         IF NOT 'sample' $ LOWER(cproducer)
		            LOOP
		         ENDIF
		      ENDIF
		      m.cCompany = ALLTRIM(cproducer)
		      m.cidComp  = cidComp
		      m.cdatapath = ALLTRIM(LOWER(cdatapath))
		
		      IF NOT EMPTY(m.goapp.cidComp)
		         IF compmast.cidComp = m.goapp.cidComp
		            lcDataPath = cdatapath
		            lnSave = lnx
		         ENDIF
		      ENDIF
		      m.cidComp   = cidComp
		      m.cdatapath = STRTRAN(cdatapath,'\\\','\\')
		      m.cdatapath = FULLPATH(m.cdatapath)
		      
		      IF llCodes
		         THIS.ADDLISTITEM(ALLTRIM(m.cidcomp)+'-'+ALLTRIM(m.cCompany), lnx, 1)
		      ELSE
		         THIS.ADDLISTITEM(ALLTRIM(m.cCompany), lnx, 1)         
		      ENDIF    
		      THIS.ADDLISTITEM(m.cidComp, lnx, 2)
		      THIS.ADDLISTITEM(m.cdatapath, lnx, 3)
		      lnx = lnx + 1
		   ENDSCAN
		   THIS.LISTITEMID = lnSave
		   SELECT compmast
		   LOCATE FOR cidComp = ALLTRIM(THIS.LISTITEM(THIS.LISTITEMID,2))
		   IF FOUND()
		      m.goapp.cDataFilePath = ALLTRIM(STRTRAN(cdatapath,'\\\','\\'))
		      m.goApp.cCompanyName  = cproducer
		   ELSE
		      m.goapp.cDataFilePath = "datafiles\data"
		      m.goapp.cCompanyName = 'Sample Company'
		   ENDIF
		   
		   THIS.TOOLTIPTEXT = ALLTRIM(THIS.DISPLAYVALUE) + '-' + LOWER(m.goapp.cDataFilePath)
		   
		   IF m.goApp.lCloudServer
		      _VFP.STATUSBAR = 'Company Open: ' +  PROPER(m.goApp.ccompanyname)
		   ELSE
		      _VFP.STATUSBAR = 'Data Path: ' +  LOWER(m.goApp.cDataFilePath)
		   ENDIF
		   
		   m.goapp.Set_Reg_Keys()
		ENDIF
		
	ENDPROC

	PROCEDURE cboCompany.InteractiveChange
		IF DODEFAULT()
		   thisform.Caption = 'Logon to ' + ALLTRIM(this.DisplayValue)
		   IF NOT USED('compmast')
		      USE (m.goapp.cCommonFolder + 'compmast') IN 0
		   ENDIF
		   SELECT compmast
		   LOCATE FOR cidcomp = ALLTRIM(this.ListItem(this.ListItemId,2))
		   IF FOUND()
		      m.goapp.cDataFilePath = ALLTRIM(LOWER(STRTRAN(cdatapath,'\\\','\\')))
		      m.goapp.cCompanyName  = cproducer
		   ELSE
		      m.goApp.cDataFilePath = "datafiles\data"   
		      m.goapp.cCompanyName  = "Sample Company"
		   ENDIF 
		  IF m.goApp.lCloudServer
		      _VFP.STATUSBAR = 'Company Open: ' +  PROPER(m.goApp.ccompanyname)
		   ELSE
		      _VFP.STATUSBAR = 'Data Path: ' +  LOWER(m.goApp.cDataFilePath)
		   ENDIF
		  this.ToolTipText = ALLTRIM(this.DisplayValue) + '-' + m.goapp.cDataFilePath
		  IF file(m.goapp.cDataFilePath+'appreg01.dbf')
		     m.goapp.Set_Reg_Keys()
		  ELSE
		     MESSAGEBOX('This company cannot be opened. There are problems with the data in its folder. ' + ;
		                'There was no company data in this folder:' + CHR(10) + ;
		                ALLTRIM(UPPER(m.goapp.cDataFilePath)),16,'Login Problem')
		  ENDIF    
		ENDIF    
	ENDPROC

	PROCEDURE cntOkCancel.cmdok.Refresh
		THIS.Enabled = NOT EMPTY(THISFORM.txtUsername.Value) or m.goapp.lnosecurity or thisform.lSetup
		
	ENDPROC

	PROCEDURE txtUsername.InteractiveChange
		THIS.Parent.cntOKcancel.Refresh()
		RETURN DODEFAULT()
		
	ENDPROC

	PROCEDURE txtUsername.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		  * Do not allow periods in user name field, since period is the appReg pather delimiter character.
		  IF m.nKeyCode = ASC('.')
		    NODEFAULT 
		  ELSE
		    RETURN DODEFAULT(m.nKeyCode, m.nShiftAltCtrl)
		  ENDIF
		
	ENDPROC

ENDDEFINE

DEFINE CLASS frmswierror AS frmmodaldialog OF "..\common\cmforms.vcx" 		&& Fatal coding error message dialog with stack dump.
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cntcontainer1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cntcontainer1.cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cntcontainer1.cmdDebug" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cntcontainer1.cmdSuspend" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cntcontainer1.cmdCopy" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cntcontainer1.cmdReport" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtMoreInfo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shape1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSource" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblMessage" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblHeader" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Imgimage1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcEmail" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtBody" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cmdcommandbuttoncustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblMoreInfo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblMessage1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblMessage3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdIgnore" UniqueID="" Timestamp="" />

	#INCLUDE "..\common\codemine.h"
	*<DefinedPropArrayMethod>
		*m: moreinfo		&& Builds the edtMoreInfo list
		*m: sendemail
		*p: cerrmethod		&& Method or program where error occured
		*p: stackinfo
		*a: aerrinfo[7,0]		&& Error information array.
	*</DefinedPropArrayMethod>

	BorderStyle = 3
	Caption = "Unexpected Problem"
	cbindingmanagerclass = cmBindingManager
	cerrmethod = 		&& Method or program where error occured
	cformbackground = .NULL.
	Closable = .F.
	Desktop = .T.
	DoCreate = .T.
	Height = 331
	lreleaseonclose = .F.
	lrememberposition = .F.
	lremembersize = .F.
	lwindowmenu = .F.
	MinHeight = 200
	MinWidth = 551
	Name = "frmswierror"
	oregistry = .NULL.
	osecurity = .NULL.
	ostring = .NULL.
	stackinfo = .F.
	Width = 551
	WindowType = 1
	Mwresize1.lblHighLight.Name = "lblHighLight"
	Mwresize1.lblShading.Name = "lblShading"
	Mwresize1.Name = "Mwresize1"

	ADD OBJECT 'Cmdcommandbuttoncustom1' AS cmdcommandbuttoncustom WITH ;
		Caption = "\<Send Email To Support", ;
		Height = 23, ;
		Left = 215, ;
		Name = "Cmdcommandbuttoncustom1", ;
		TabIndex = 4, ;
		Top = 532, ;
		Width = 144, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdIgnore' AS cmdcommandbuttoncustom WITH ;
		Cancel = .T., ;
		Caption = "\<Ignore", ;
		Default = .T., ;
		FontBold = .T., ;
		Height = 23, ;
		Left = 96, ;
		Name = "cmdIgnore", ;
		TabIndex = 3, ;
		Top = 295, ;
		Width = 77, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Cntcontainer1' AS cntcontainercustom WITH ;
		BackStyle = 0, ;
		BorderWidth = 0, ;
		creposition = vFollow,hCenter, ;
		Height = 48, ;
		Left = 10, ;
		Name = "Cntcontainer1", ;
		TabIndex = 2, ;
		Top = 269, ;
		Width = 523, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="container" />

	ADD OBJECT 'Cntcontainer1.cmdCancel' AS cmdcommandbuttoncustom WITH ;
		Caption = "\<Close", ;
		Height = 23, ;
		Left = 322, ;
		Name = "cmdCancel", ;
		TabIndex = 4, ;
		Top = 0, ;
		Width = 96
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Cntcontainer1.cmdCopy' AS cmdcommandbuttoncustom WITH ;
		Caption = "Copy to Clipboard", ;
		Height = 23, ;
		Left = 213, ;
		Name = "cmdCopy", ;
		TabIndex = 3, ;
		Top = 0, ;
		Width = 96
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Cntcontainer1.cmdDebug' AS cmdcommandbuttoncustom WITH ;
		Caption = "\<Debugger", ;
		Height = 23, ;
		Left = 266, ;
		Name = "cmdDebug", ;
		TabIndex = 6, ;
		Top = 26, ;
		Width = 96
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Cntcontainer1.cmdReport' AS cmdcommandbuttoncustom WITH ;
		Caption = "Submit", ;
		Default = .F., ;
		ForeColor = 255,0,0, ;
		Height = 23, ;
		Left = 99, ;
		Name = "cmdReport", ;
		TabIndex = 1, ;
		Top = 0, ;
		Width = 96
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Cntcontainer1.cmdSuspend' AS cmdcommandbuttoncustom WITH ;
		Caption = "\<Suspend", ;
		Height = 23, ;
		Left = 167, ;
		Name = "cmdSuspend", ;
		TabIndex = 5, ;
		Top = 26, ;
		Width = 96
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'edtBody' AS edteditboxcustom WITH ;
		Height = 106, ;
		Left = 56, ;
		Name = "edtBody", ;
		TabIndex = 13, ;
		Top = 412, ;
		Width = 444, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="editbox" />

	ADD OBJECT 'edtMoreInfo' AS edteditboxcustom WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		FontSize = 8, ;
		Height = 228, ;
		Left = 12, ;
		Name = "edtMoreInfo", ;
		ScrollBars = 2, ;
		TabIndex = 1, ;
		Top = 18, ;
		Visible = .F., ;
		Width = 528, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="editbox" />

	ADD OBJECT 'Imgimage1' AS imgimage WITH ;
		Height = 32, ;
		Left = 20, ;
		Name = "Imgimage1", ;
		Picture = ..\graphics\w95mbx1.bmp, ;
		Top = 54, ;
		Width = 32, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\common\codemine.vcx" BaseClass="image" />

	ADD OBJECT 'lblHeader' AS lbltextcustom WITH ;
		AutoSize = .F., ;
		Caption = " ", ;
		creposition = hStretch, ;
		FontBold = .F., ;
		FontSize = 10, ;
		Height = 15, ;
		Left = 54, ;
		Name = "lblHeader", ;
		TabIndex = 8, ;
		Top = 17, ;
		Visible = .F., ;
		Width = 385, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Your Email Address", ;
		Left = 62, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 12, ;
		Top = 359, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "Your Name", ;
		Left = 61, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 17, ;
		Top = 335, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom3' AS lbllabelcustom WITH ;
		Caption = "Describe the steps needed to reproduce this error.", ;
		FontBold = .T., ;
		Left = 57, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 14, ;
		Top = 394, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblMessage' AS lbltextcustom WITH ;
		AutoSize = .F., ;
		Caption = " ", ;
		creposition = hStretch, ;
		FontBold = .F., ;
		FontSize = 10, ;
		Height = 30, ;
		Left = 13, ;
		Name = "lblMessage", ;
		TabIndex = 9, ;
		Top = 52, ;
		Visible = .F., ;
		Width = 426, ;
		WordWrap = .T., ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblMessage1' AS lbltextcustom WITH ;
		AutoSize = .T., ;
		Caption = "We would appreciate it if you could let us know about this problem by submitting it to SherWare support so we can address it as soon as possible.", ;
		creposition = hStretch, ;
		FontBold = .F., ;
		FontSize = 10, ;
		Height = 50, ;
		Left = 94, ;
		Name = "lblMessage1", ;
		TabIndex = 6, ;
		Top = 62, ;
		Width = 335, ;
		WordWrap = .T., ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblMessage3' AS label WITH ;
		Anchor = 3, ;
		AutoSize = .F., ;
		BackStyle = 0, ;
		Caption = "To report this problem click the Submit button below and fill out the form provided. Otherwise, click the copy to clipboard button and then paste the contents into an email to support@sherware.com.", ;
		ColorSource = 4, ;
		FontBold = .F., ;
		FontName = "Arial", ;
		FontSize = 10, ;
		Height = 68, ;
		Left = 94, ;
		Name = "lblMessage3", ;
		TabIndex = 16, ;
		Top = 184, ;
		Width = 385, ;
		WordWrap = .T., ;
		ZOrderSet = 16
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblMoreInfo' AS lbllabelcustom WITH ;
		Caption = "More Info", ;
		FontBold = .T., ;
		FontUnderline = .T., ;
		ForeColor = 0,0,255, ;
		Left = 25, ;
		Name = "lblMoreInfo", ;
		TabIndex = 15, ;
		Top = 260, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSource' AS lbltextcustom WITH ;
		AutoSize = .F., ;
		Caption = "An unexpected problem has been encountered.", ;
		creposition = hStretch, ;
		FontBold = .T., ;
		FontSize = 11, ;
		Height = 41, ;
		Left = 94, ;
		Name = "lblSource", ;
		TabIndex = 5, ;
		Top = 15, ;
		Width = 385, ;
		WordWrap = .T., ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Shape1' AS shape WITH ;
		BorderStyle = 0, ;
		ColorSource = 0, ;
		Height = 16, ;
		Left = 22, ;
		Name = "Shape1", ;
		Top = 61, ;
		Width = 28, ;
		ZOrderSet = 2
		*< END OBJECT: BaseClass="shape" />

	ADD OBJECT 'txtcEmail' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 168, ;
		Name = "txtcEmail", ;
		TabIndex = 11, ;
		Top = 357, ;
		Width = 332, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcName' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 168, ;
		Name = "txtcName", ;
		TabIndex = 10, ;
		Top = 333, ;
		Width = 331, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE contextmenubuild
		  * Special option to copy error info to clipboard
		  THISFORM.ContextMenuBar(CTX_BAR_CUSTOM + 1, 'Copy Error Details to Clipboard')
		  THISFORM.ContextMenuSeparator(CTX_BAR_CTL_SEP3)
		
		  * Add these 2 standard bars, but no other default form bars.
		  THISFORM.ContextMenuBar(CTX_BAR_FRM_CENTER, '%barCenter')
		  THISFORM.ContextMenuBar(CTX_BAR_FRM_RESTORE, '%barRestoreSize')
		  IF THIS.Width = THIS.nOriginalWidth AND THIS.Height = THIS.nOriginalHeight
		    SET SKIP OF BAR CTX_BAR_FRM_RESTORE OF ctxMenu .T.
		  ENDIF
		
	ENDPROC

	PROCEDURE contextmenuexecute
		LPARAMETERS cOption
		
		IF 'Copy' $ PROPER(m.cOption)
		   TRY 
		      _CLIPTEXT = thisform.edtmoreInfo.value
		   CATCH
		      _CLIPTEXT = 'Error encountered in copy to clipboard'
		   ENDTRY 
		   RETURN .T.
		ENDIF
		RETURN DODEFAULT(m.cOption)
		
	ENDPROC

	PROCEDURE Init
		LPARAMETER cMessage, cMethod, nLine
		* This (and most framework modal dialogs) has form.Desktop set to .T. so they will not be
		* clipped when called from an SDI or other Top-Level form, without the containing VFP window.
		
		DODEFAULT()
		
		TRY
		   swselect('options')
		   GO TOP
		   IF NOT options.lUseOutlook
		      IF EMPTY(options.cemailserver)
		         THISFORM.cntcontainer1.cmdreport.VISIBLE = .F.
		         thisform.lblMessage3.caption = "To report this problem " + ;
		                                        "click the copy to clipboard button and then paste the " + ;
		                                        "contents into an email to support@sherware.com."
		      ENDIF
		   ENDIF
		CATCH
		ENDTRY
		
		* If we're in development environment show more info
		IF VERSION(2) = 2
		   THISFORM.cntcontainer1.cmdDebug.VISIBLE = .T.
		   THISFORM.cntcontainer1.cmdsuspend.VISIBLE = .T.
		ELSE
		   THISFORM.cntcontainer1.cmdDebug.VISIBLE = .F.
		   THISFORM.cntcontainer1.cmdsuspend.VISIBLE = .F.
		ENDIF
		
		=AERROR(THISFORM.aErrInfo)
		
		m.nENumber = THISFORM.aErrInfo[1]
		
		IF FILE('datafiles\developer.cfg') OR INLIST(m.nENumber,5,13,43,108,111,1103,1104,1585,1298,1958)
		   IF NOT INLIST(m.nENumber,1104)
		      THISFORM.cmdignore.VISIBLE = .T.
		   ELSE
		      IF FILE('datafiles\developer.cfg')
		         THISFORM.cmdignore.VISIBLE = .T.
		      ELSE
		         THISFORM.cmdignore.VISIBLE = .F.
		      ENDIF
		   ENDIF
		ELSE
		   THISFORM.cmdignore.VISIBLE = .F.
		ENDIF
		
		DO CASE
		   CASE m.nENumber = 5 OR m.nENumber = 1103 OR m.nENumber = 1683
		      THISFORM.lblmessage1.CAPTION = 'Error: ' + TRANSFORM(m.nENumber) + CHR(13) + ;
		         'A file index error occurred. To fix this error go to Utilities, Reindex Files and choose all Files. If the problem continues contact support.'
		   CASE m.nENumber = 13
		      THISFORM.lblmessage1.CAPTION = 'Error: 13' + CHR(13) + ;
		         ALLTRIM(m.cMessage) + CHR(13) + ;
		         'Unable to open a file needed for processing. Please close this screen and try again.'
		   CASE m.nENumber = 43
		      THISFORM.lblmessage1.CAPTION = 'Error: 43' + CHR(13) + ;
		         'All available memory has been used. Please shut down the application and try again. A reboot may be needed.'
		   CASE m.nENumber = 107
		      THISFORM.lblmessage1.CAPTION = 'Error: 107' + CHR(13) + ;
		         'There was an operator/operand type mismatch. Please submit this error to support by clicking the submit button.'
		   CASE m.nENumber = 108 OR m.nENumber = 1585
		      THISFORM.lblmessage1.CAPTION = 'Error: ' + TRANSFORM(m.nENumber) + CHR(13) + ;
		         'Another user has the file in use. Please close the screen and then try again.'
		   CASE m.nENumber = 111
		      THISFORM.lblmessage1.CAPTION = 'Error: 111' + CHR(13) + ;
		         'The folder where the files are stored for this company is Read-Only. Please check your installation and file permissions and try again.'
		   CASE m.nENumber = 1104
		      THISFORM.lblmessage1.CAPTION = 'Error: 1104' + CHR(13) + ;
		         "There was a network error trying to read the data for this company. If the company's data is stored on a server, check with support to make sure the software is installed correctly."
		   CASE m.nENumber = 1190
		      THISFORM.lblmessage1.CAPTION = 'Error: 1190' + CHR(13) + ;
		         'A file has gone past the 2 Gb limit. If you are not importing, try going to Utilities, Reindex and choose to Pack All Tables and then try again.'
		   CASE m.nENumber = 1298 OR m.nENumber = 1958
		      THISFORM.lblmessage1.CAPTION = 'Error: ' + TRANSFORM(m.nENumber) + CHR(13) + ;
		         'There was a problem with your printer driver. Try selecting another driver or make sure your default printer is set correctly.'
		   CASE m.nENumber = 1561 OR m.nEnumber = 1806
		      THISFORM.lblmessage1.CAPTION = 'Error: ' + TRANSFORM(m.nEnumber) + CHR(13) + ;
		         ALLTRIM(m.cMessage) + CHR(13) + ;
		         'Go to Utilities, Update Files update the database. If the problem continues contact support.'      
		   CASE m.nENumber = 1884
		      THISFORM.lblmessage1.CAPTION = 'Error: 1884' + CHR(13) + ;
		         ALLTRIM(m.cMessage) + CHR(13) + ;
		         'The data for this company may have some data corruption. Go to Utilities, Update Files and then try again. If the problem continues contact support.'      
		   CASE m.nENumber = 2091
		      THISFORM.lblmessage1.CAPTION = 'Error: 2091' + CHR(13) + ;
		         ALLTRIM(m.cMessage) + CHR(13) + ;
		         'The data for this company has become corrupted. Contact support for help.'            
		   CASE m.nENumber = 1924 OR m.nEnumber = 1943
		      THISFORM.lblmessage1.CAPTION = 'Error: ' + TRANSFORM(m.nENumber) + CHR(13) + ;
		         ALLTRIM(m.cMessage) + CHR(13) + ;
		         IIF(m.goapp.lQBVersion, ;
		             'A call to QuickBooks has failed. Close the company and QuickBooks and then open them and try again. ', ;
		         'An object needed could not be found. Close the company and reopen it and try again. ') + ;
		         'If the problem continues contact support.'
		   OTHERWISE
		      THISFORM.lblmessage1.CAPTION = 'Error: ' + TRANSFORM(m.nENumber) + CHR(13) + m.cMessage
		ENDCASE
		
		* If a grid column.ControlSource is undefined, we get an odd message from VFP.
		* We try to provide a more descriptive message here.
		IF THISFORM.aErrInfo[1] = 2005 AND EMPTY(m.cMessage)
		   m.cMessage = 'A Grid Column ControlSource property is set to an undefined value'
		ENDIF
		
		* AERROR doesn't return an accurate msg parameter once this form is created,
		* so we pass in the original error message text.
		* Try not to include the bogus _DOTNETBRIDGE not found error.
		IF NOT EMPTY(m.cMessage) AND NOT ('DOTNETBRIDGE' $ m.cMessage)
		   IF NOT 'DOTNETBRIDGE' $ THISFORM.aErrInfo[2]
		      THISFORM.aErrInfo[2] = m.cMessage
		   ENDIF
		ENDIF
		
		THISFORM.cErrMethod = IIF(EMPTY(m.cMethod), '', PROPER(m.cMethod)) ;
		   + IIF(EMPTY(m.nLine), '', ' line ' + LTRIM(STR(m.nLine)))
		
		THIS.lblHeader.REFRESH()
		THIS.lblmessage.REFRESH()
		THIS.stackinfo = THIS.oMessage.cErrorCallStack
		THISFORM.moreinfo()
		
		* Play the special Codemine error sound
		IF NOT ISNULL(THIS.oMessage) AND NOT EMPTY(THIS.oMessage.cFatalErrorSound)
		   IF NOT PROPER(THIS.oMessage.cFatalErrorSound) == 'Default'
		      SET BELL TO (FULLPATH(THIS.oMessage.cFatalErrorSound)),1
		   ELSE
		      SET BELL TO
		   ENDIF
		   ??CHR(7)
		   SET BELL TO
		ENDIF
		
	ENDPROC

	PROCEDURE loadglobalreferences
		* Dont load any global service object references, or check for Codemine env.
		RETURN .T.
		
	ENDPROC

	PROCEDURE moreinfo		&& Builds the edtMoreInfo list
		lcClient  = m.goApp.cClient
		lcCompany = m.goApp.cRegCompany
		lcRegCode = m.goApp.cCode
		lcVersion = m.goApp.cFileVersion
		lcDate    = DTOC(FDATE(ALLTRIM(m.goApp.cexecutable)))
		lcTime    = FTIME(ALLTRIM(m.goApp.cexecutable))
		
		THISFORM.edtMoreInfo.VALUE = 'Company: ' + lcCompany + CR_LF ;
		   + 'Registration Code: ' + lcRegCode + CR_LF ;
		   + 'Software: ' + CR_LF ;
		   + ALLTRIM(m.goApp.cexecutable) + ' Version: ' + lcVersion + '  ' + ;
		   + lcDate    + '  ' + ;
		   + lcTime    + CR_LF + CR_LF ;
		   + THISFORM.lblHeader.Caption + CR_LF ;
		   + thisform.lblMESSAGE.Caption + CR_LF + CR_LF ;
		   + thisform.stackinfo
	ENDPROC

	PROCEDURE Resize
		* Nothing
	ENDPROC

	PROCEDURE sendemail
		LOCAL llResult, oSendMail, lcTime, lcVersion, lcDate, lcSubject, lcBody, lcCompany, lcClient
		TRY
		   swselect('options')
		
		   oSendMail = CREATEOBJECT('swSendMail')
		
		   * If using outlook options send line feeds as html <br>
		   * Otherwise insert a real linefeed.
		   IF options.lUseOutlook
		      lcLF = "<br>"
		   ELSE
		      lcLF = CHR(10)
		   ENDIF
		
		   lcSubject = 'Error: ' + TRANSFORM(THISFORM.aerrinfo[1]) + ' in ' + THISFORM.cerrmethod
		   lcBody    = ALLTRIM(THISFORM.edtBody.Value) + CHR(10)+CHR(10) + ;
		               thisform.edtMoreInfo.Value 
		   oSendMail.cBody         = lcBody
		   oSendMail.cTo           = 'support@sherware.com'
		   oSendMail.cSubject      = lcSubject
		   oSendMail.cEmailServer  = options.cEmailServer
		   oSendMail.cEmailAddress = options.cEmailAddress
		   oSendMail.cReplyTo      = THISFORM.txtcEmail.VALUE
		   oSendMail.cEmailUser    = options.cEmailUser
		   oSendMail.cEmailPass    = options.cEmailPass
		   oSendMail.lOutlook      = options.lUseOutlook
		   oSendMail.lUseSSL       = options.lusessl
		   oSendMail.nSMTPPort     = options.nSMTPPort
		   oSendMail.cSender       = THISFORM.txtcName.VALUE
		   WAIT WINDOW NOWAIT 'Submitting case to support...Please wait'
		   llResult = oSendMail.SendMail()
		   WAIT CLEAR 
		   IF !llResult
		      THISFORM.omessage.warning('Unable to Send Email. Try Again Later.' + CHR(10) + ;
		         oSendMail.cErrorMsg)
		   ELSE
		      MESSAGEBOX('Support Case Submitted.' + CHR(10) + CHR(10) + ;
		         'You will be receiving a confirmation email shortly.' + CHR(10)+CHR(10) + ;
		         'Please make note of the case number in the subject of the email you recieve and use that case number in all correspondence about this issue.',64, ;
		         'Support Case Submission')
		      THISFORM.HEIGHT = 255
		   ENDIF
		CATCH TO loerror
		    MESSAGEBOX('Unable to submit your case by email. Error = ' + loerror.message,48,'Email Submit Error')
		ENDTRY
		
		RETURN
		
	ENDPROC

	PROCEDURE Cmdcommandbuttoncustom1.Click
		thisform.sendemail()
	ENDPROC

	PROCEDURE cmdIgnore.Click
		THISFORM.uValue = 'IGNORE'
		THISFORM.Release()
		
	ENDPROC

	PROCEDURE Cntcontainer1.cmdCancel.Click
		THISFORM.uValue = 'CANCEL'
		m.goapp.killprocess(_screen.caption)
		THISFORM.Release()
		
	ENDPROC

	PROCEDURE Cntcontainer1.cmdCopy.Click
		THISFORM.ContextmenuExecute('Copy')
		
	ENDPROC

	PROCEDURE Cntcontainer1.cmdDebug.Click
		THISFORM.uValue = 'DEBUG'
		THISFORM.Release()
		
	ENDPROC

	PROCEDURE Cntcontainer1.cmdDebug.Init
		THIS.Visible = VERSION(2) != 0
		DODEFAULT()
		
	ENDPROC

	PROCEDURE Cntcontainer1.cmdReport.Click
		thisform.Height = 570
		
		swselect('options')
		GO top
		thisform.txtcEmail.Value = options.cEmailAddress
		thisform.txtcName.SetFocus()
		
	ENDPROC

	PROCEDURE Cntcontainer1.cmdSuspend.Click
		THISFORM.uValue = 'SUSPEND'
		THISFORM.Release()
		
	ENDPROC

	PROCEDURE Cntcontainer1.cmdSuspend.Init
		THIS.Visible = VERSION(2) != 0
		DODEFAULT()
		
	ENDPROC

	PROCEDURE edtMoreInfo.When
		RETURN .f.
	ENDPROC

	PROCEDURE lblHeader.Refresh
		LOCAL cText
		m.cText = 'Error #' + LTRIM(STR(THISFORM.aErrInfo[1])) ;
		             + ' in ' + THISFORM.cErrMethod
		
		IF NOT INLIST(THISFORM.aErrInfo[1], 1427, 1429, 1526) AND NOT ISNULL(THISFORM.aErrInfo[4]) 
		  m.cText = m.cText + ', workarea '+ LTRIM(STR(THISFORM.aErrInfo[4]))
		  IF NOT EMPTY(THISFORM.aErrInfo[4]) AND USED(THISFORM.aErrInfo[4])
		    m.cText = m.cText + '(' + ALIAS(THISFORM.aErrInfo[4]) + ')'
		  ENDIF
		  IF THISFORM.aErrInfo[1] = 1539 AND NOT ISNULL(THISFORM.aErrInfo[5])
		    DO CASE
		      CASE THISFORM.aErrInfo[5] = 1
		        m.cText = m.cText + ' Insert Trigger'
		      CASE THISFORM.aErrInfo[5] = 2
		        m.cText = m.cText + ' Update Trigger'
		      CASE THISFORM.aErrInfo[5] = 3
		        m.cText = m.cText + ' Delete Trigger'
		    ENDCASE
		  ENDIF
		ENDIF
		THIS.Caption = m.cText
		
	ENDPROC

	PROCEDURE lblMessage.Refresh
		THIS.Caption = LEFT(THISFORM.aErrInfo[2], 254)
		
	ENDPROC

	PROCEDURE lblMessage1.Init
		*!*	AERROR(gaerrors)
		*!*	IF VERSION(2) != 0 AND NOT EMPTY(MESSAGE(1))
		*!*	  THIS.Caption = gaerrors[2] + CHR(10) + LEFT('"' + MESSAGE(1) + '"', 250)
		*!*	ENDIF
		DODEFAULT()
		
	ENDPROC

	PROCEDURE lblMoreInfo.Click
		IF THIS.CAPTION = 'More Info'
		   THIS.CAPTION = 'Less Info'
		   THISFORM.edtMoreInfo.VISIBLE = .T.
		   THISFORM.lblSource.VISIBLE = .F.
		   THISFORM.imgimage1.VISIBLE  = .F.
		   thisform.shape1.Visible = .f.
		   thisform.lblmessage1.Visible = .f.
		   thisform.lblmessage3.Visible = .f.
		ELSE
		   THIS.CAPTION = 'More Info'
		   THISFORM.edtMoreInfo.VISIBLE = .F.
		   THISFORM.lblSource.VISIBLE = .T.
		   THISFORM.imgimage1.VISIBLE  = .T.
		   thisform.shape1.Visible = .t.
		   thisform.lblmessage1.Visible = .t.
		   thisform.lblmessage3.Visible = .t.
		ENDIF
		
	ENDPROC

ENDDEFINE

DEFINE CLASS frmwaterdialog AS frmmodaldialogcustom OF "cforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="txtWaterBBL" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboDisposal" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDispFac" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cntokcancelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDisbCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboDispCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblWasteCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboWasteCode" UniqueID="" Timestamp="" />

	Caption = "Enter Water BBLs and Disposal Site"
	DoCreate = .T.
	Height = 209
	Name = "frmwaterdialog"
	Width = 380
	Mwresize1.lblHighLight.Name = "lblHighLight"
	Mwresize1.lblShading.Name = "lblShading"
	Mwresize1.Name = "Mwresize1"

	ADD OBJECT 'cboDispCode' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		ColumnCount = 2, ;
		Height = 20, ;
		Left = 116, ;
		Name = "cboDispCode", ;
		TabIndex = 3, ;
		Top = 92, ;
		Width = 156
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboDisposal' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		ColumnCount = 2, ;
		Height = 20, ;
		Left = 116, ;
		Name = "cboDisposal", ;
		TabIndex = 2, ;
		Top = 57, ;
		Width = 240
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboWasteCode' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		ColumnCount = 2, ;
		Height = 20, ;
		Left = 115, ;
		Name = "cboWasteCode", ;
		TabIndex = 4, ;
		Top = 132, ;
		Width = 156
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Cntokcancelcustom1' AS cntokcancelcustom WITH ;
		Left = 104, ;
		Name = "Cntokcancelcustom1", ;
		TabIndex = 9, ;
		Top = 169, ;
		cmdcancel.Name = "cmdcancel", ;
		cmdok.Name = "cmdok"
		*< END OBJECT: ClassLib="cbutton.vcx" BaseClass="container" />

	ADD OBJECT 'lblDisbCode' AS lbllabelcustom WITH ;
		Caption = "Disposal Code", ;
		Left = 22, ;
		Name = "lblDisbCode", ;
		TabIndex = 6, ;
		Top = 94
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblDispFac' AS lbllabelcustom WITH ;
		Caption = "Facility Name", ;
		Left = 22, ;
		Name = "lblDispFac", ;
		TabIndex = 7, ;
		Top = 59
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "Water BBLs", ;
		Left = 22, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 8, ;
		Top = 23
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblWasteCode' AS lbllabelcustom WITH ;
		Caption = "Waste Type Code", ;
		Left = 22, ;
		Name = "lblWasteCode", ;
		TabIndex = 5, ;
		Top = 134
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'txtWaterBBL' AS txttextboxcustom WITH ;
		Alignment = 3, ;
		Height = 20, ;
		InputMask = "99999", ;
		Left = 116, ;
		MaxLength = 5, ;
		Name = "txtWaterBBL", ;
		TabIndex = 1, ;
		Top = 21, ;
		Value = 0, ;
		Width = 64
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE Init
		LPARA tnSaltWater, tcDispCode, tcDispMeth, tcWasteCode, tlNoPA
		
		if type('tnSaltWater') <> 'N'
		   tnSaltWater = 0
		endif
		if type('tcDispCode') <> 'C'
		   tcDispCode = ' '
		endif
		if type('tcDispMeth') <> 'C'
		   tcDispMeth = ''
		ENDIF
		IF TYPE('tcWasteCode') <> 'C'
		   tcWasteCode = ''
		ENDIF 
		         
		thisform.txtWaterBBL.VALUE = tnSaltWater
		thisform.cboDisposal.Value = tcDispCode
		thisform.cboDispCode.value = tcDispMeth
		thisform.cboWasteCode.Value = tcWasteCode
		
		IF tlNoPA
		   thisform.cboDISPCODE.Visible = .f.
		   thisform.cboDISPOSAL.Visible = .f.
		   thisform.cboWASTECODE.Visible = .f.
		   thisform.lbldisbCode.Visible = .f.
		   thisform.lblDispFac.Visible = .f.
		   thisform.lblWasteCode.Visible = .f.
		   thisform.Caption = 'Enter Water BBLs'
		ENDIF 
		DODEFAULT()
	ENDPROC

	PROCEDURE cboDispCode.Init
		* Add the disposal methods for PA
		this.addlistitem('04-Injection Well     ',1,1)
		this.addlistitem('04',1,2) 
		this.addlistitem('05-Landfill           ',2,1)
		this.addlistitem('05',2,2)
		this.addlistitem('06-Land Application   ',3,1)
		this.addlistitem('06',3,2)
		this.addlistitem('07-Surface Impoundment',4,1)
		this.addlistitem('07',4,2)
		this.addlistitem('08-Other              ',5,1)
		this.addlistitem('08',5,2)
		this.addlistitem('09-Reuse              ',6,1)
		this.addlistitem('09',6,2)
		this.addlistitem('10-Wastewater-Hauled  ',7,1)
		this.addlistitem('10',7,2)
		this.addlistitem('11-Wastewater-On Site ',8,1)
		this.addlistitem('11',8,2)
		this.addlistitem('12-Wastewater Treatmnt',9,1)
		this.addlistitem('12',9,2)
		this.addlistitem('13-Road Spread        ',10,1)
		this.addlistitem('13',10,2)
		this.listitemid = 1
	ENDPROC

	PROCEDURE cboDisposal.Init
		
		sele cdisperm, cdispsite from disposal into array ladisp order by cdispsite
		
		if _tally > 0
		  for lnx = 1 to _tally
		    this.addlistitem(ladisp[lnx,2],lnx,1)
		    this.addlistitem(ladisp[lnx,1],lnx,2)
		  endfor
		endif
		
		this.listitemid = 1
	ENDPROC

	PROCEDURE cboDisposal.Valid
		swselect('disposal')
		
		LOCATE FOR cdisperm = this.Value
		IF FOUND()
		   thisform.cboDISPCODE.Value = disposal.cdispcode
		   thisform.cbowASTECODE.Value = disposal.cwastecode
		   thisform.Refresh()
		ENDIF 
		DODEFAULT()
	ENDPROC

	PROCEDURE cboWasteCode.Init
		* Add the waste codes for PA
		this.addlistitem('802-Brine',1,1)
		this.addlistitem('802',1,2) 
		this.addlistitem('803-Drilling Fluids',2,1)
		this.addlistitem('803',2,2)
		this.addlistitem('804-Frac Fluids',3,1)
		this.addlistitem('804',3,2)
		this.addlistitem('807-Basic Sediment',4,1)
		this.addlistitem('807',4,2)
		this.addlistitem('808-Servicing Fluids',5,1)
		this.addlistitem('808',5,2)
		this.addlistitem('809-Spent Lubricants',6,1)
		this.addlistitem('809',6,2)
		this.listitemid = 1
	ENDPROC

ENDDEFINE

DEFINE CLASS swrptcriteria AS frmform OF "..\common\cmforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Swrptcriteriabuttons1" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: builddata		&& Builds the work cursor for the report.
		*m: report
		*p: cfriendlyname
		*p: coutfile		&& The name of the output file to send the report to.
		*p: creportname		&& The name of the report file.
		*p: cselectcriteria		&& The selection criteria used for the report.
		*p: csortorder		&& The sort order of the report
		*p: csvfilename
		*p: ctitle1		&& Report Title 1
		*p: ctitle2		&& Report Title 2
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	Caption = "Frmform1"
	cfriendlyname = 
	csvfilename = 
	DataSession = 2
	DoCreate = .T.
	Height = 261
	Icon = ..\graphics\sherwareicon.ico
	Name = "swrptcriteria"
	Width = 375
	_memberdata = <VFPData>
		<memberdata name="cfriendlyname" display="cFriendlyName"/>
		<memberdata name="csvfilename" display="CSVFilename"/>
		</VFPData>		&& XML Metadata for customizable properties

	ADD OBJECT 'Swrptcriteriabuttons1' AS swrptcriteriabuttons WITH ;
		Left = 60, ;
		Name = "Swrptcriteriabuttons1", ;
		Top = 180, ;
		chkExport.Alignment = 0, ;
		chkExport.Caption = "Export to Excel or Email Report", ;
		chkExport.Left = 35, ;
		chkExport.Name = "chkExport", ;
		chkExport.Top = 53, ;
		cmdclose.Name = "cmdclose", ;
		cmdclose.TabIndex = 3, ;
		cmdPreview.Name = "cmdPreview", ;
		cmdPreview.Picture = ..\graphics\preview.bmp, ;
		cmdPreview.TabIndex = 1, ;
		CMDPRINT.Name = "CMDPRINT", ;
		CMDPRINT.TabIndex = 2
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="container" />
	
	PROCEDURE builddata		&& Builds the work cursor for the report.
	ENDPROC

	PROCEDURE Error
		LPARAMETERS nerror,cmethod,nline
		
		=aerror(gaerrors)
		
		DO errorlog WITH m.cMethod, m.nLine, this.name
		
		DODEFAULT(nError,cMethod,nLine)      
	ENDPROC

	PROCEDURE Init
		IF DODEFAULT()
		   SET DELETED ON
		   this.omessage = FINDGLOBALOBJECT('cmMessage')
		   this.oregistry = FINDGLOBALOBJECT('cmRegistry')
		   thisform.swrptcriteriabuttons1.left = (this.width/2 - thisform.swrptcriteriabuttons1.width/2)
		   this.height = thisform.swrptcriteriabuttons1.top + thisform.swrptcriteriabuttons1.height + 5
		   IF NOT EMPTY(m.goapp.formicon)
		      this.Icon = m.goapp.formicon
		   ENDIF 
		ENDIF
	ENDPROC

	PROCEDURE isenabled
		LPARAMETERS cmethod,cworkarea
		*	The 'isenabled' method determines whether the specified form method can be
		*	called from a button or menu.
		*	When the forms 'Report' method is called, the forms 'isenabled' method must be
		*	set to .T..
		
		IF UPPER(m.cmethod) = "REPORT"
			RETURN .T.
		ELSE
			RETURN DODEFAULT(cmethod,cworkarea)
		ENDIF
		
	ENDPROC

	PROCEDURE Load
		IF DODEFAULT()
		   SET MULTILOCKS ON
		ENDIF   
	ENDPROC

	PROCEDURE report
		LPARA cButton
		LOCAL lnResult, lcAlias, llError
		PRIV lcTitle1, lcTitle2, lcSortOrder, lcSelect, glGrpName, m.cGrpName, llPrinted
		
		llFile = 'Export' $ THISFORM.swrptcriteriabuttons1.cmdPreview.CAPTION 
		
		lcAlias = ALIAS()
		
		* Check for the parameter. If it's not a character we're being called by the toolbar print button
		* Bail out if we got here by the toolbar button.
		IF VARTYPE(cButton) <> 'C'
		    RETURN
		ENDIF
		
		STORE '' TO m.cGrpName
		
		* If the form doesn't have a swgroup control
		* don't try to get the company name from the group
		IF TYPE('thisform.swgroup1') <> 'O'
		    glGrpName = .F.
		ELSE
		    swselect('options')
		    GO TOP
		    glGrpName = lGrpName
		    IF glGrpName
		        swselect('groups')
		        SET ORDER TO cgroup
		* If the Runcombo dropdown exists, and the value isn't New Run, get the group from that
		        IF VARTYPE(THISFORM.RunCombo1) = 'O'  AND THISFORM.RunCombo1.VISIBLE AND THISFORM.RunCombo1.ENABLED
		            IF NOT 'NEW RUN' $ UPPER(THISFORM.RunCombo1.VALUE)
		                IF SEEK(THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID, 4))
		                    m.cGrpName = cDesc
		                ELSE
		                    m.cGrpName = ''
		                ENDIF
		            ELSE
		                IF SEEK(LEFT(THISFORM.swgroup1.VALUE, 2))
		                    m.cGrpName = cDesc
		                ELSE
		                    IF LEFT(THISFORM.swgroup1.VALUE, 2) = '**'
		                        m.cGrpName = 'All Companies'
		                    ELSE
		                        m.cGrpName = ''
		                    ENDIF
		                ENDIF
		            ENDIF
		        ELSE
		            IF SEEK(LEFT(THISFORM.swgroup1.VALUE, 2))
		                m.cGrpName = cDesc
		            ELSE
		                IF LEFT(THISFORM.swgroup1.VALUE, 2) = '**'
		                    m.cGrpName = 'All Companies'
		                ELSE
		                    m.cGrpName = ''
		                ENDIF
		            ENDIF
		        ENDIF
		    ELSE
		        m.cGrpName = ''
		    ENDIF
		ENDIF
		
		IF NOT USED('compmast')
		   USE (m.goapp.cCommonFolder+'compmast') IN 0
		ENDIF
		SELECT compmast
		LOCATE FOR cidcomp = m.goapp.cidcomp
		IF FOUND()
		   m.cProcessor = cProcessor
		ELSE
		   m.cProcessor = ""
		ENDIF 
		
		SET CLASSLIB TO custom\swreports.vcx ADDITIVE 
		oReport = CREATEOBJECT('swreport')
		oReport.cAlias = lcAlias
		oReport.DataSessionID = thisform.DataSessionId
		oReport.cReportName = thisform.creportname
		oReport.cTitle1 = thisform.cTitle1
		oreport.cTitle2 = thisform.cTitle2
		oreport.cProcessor = m.cProcessor
		oreport.cSortOrder = thisform.cSortOrder
		oreport.cSelectionCriteria = thisform.cselectcriteria
		oReport.CSVFilename = this.CSVFilename
		
		IF NOT EMPTY(thisform.cFriendlyName)
		   oreport.cFriendlyName = thisform.cFriendlyName
		ELSE
		   oreport.cFriendlyName = thisform.caption
		ENDIF
		
		llReturn = oReport.SendReport(m.cButton, llFile, IIF(not EMPTY(m.cGrpName),m.cGrpName,.f.))
		
		RELEASE oReport 
	ENDPROC

	PROCEDURE Unload
		ON KEY LABEL F2
		ON KEY LABEL ENTER
		ON KEY LABEL SPACEBAR
		DODEFAULT()
	ENDPROC

ENDDEFINE
