*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="swprefs.vcx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS ach AS container 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBankTransit" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBankName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtBankName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtBankTransit" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAccountNo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCompID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkAlternate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDest" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtDest" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCompName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtDDCompName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtDestName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDestName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="TxtOrigin" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="TxtOriginName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtOrigDFI" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboServClass" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="spnACHDays" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lblfieldlabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSkipWeekends" UniqueID="" Timestamp="" />

	BorderWidth = 0
	Height = 496
	Name = "ach"
	Width = 612

	ADD OBJECT 'cboServClass' AS cbocomboboxcustom WITH ;
		ControlSource = "options.cddservclass", ;
		Left = 433, ;
		Name = "cboServClass", ;
		TabIndex = 18, ;
		Top = 212
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'chkAlternate' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Use Alternate Direct Deposit Processing", ;
		ControlSource = "options.lddalternate", ;
		Left = 164, ;
		Name = "chkAlternate", ;
		TabIndex = 25, ;
		Top = 49, ;
		Visible = .F.
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSkipWeekends' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Skip Weekend days", ;
		ControlSource = "options.lachskipweekends", ;
		Left = 375, ;
		Name = "chkSkipWeekends", ;
		TabIndex = 15, ;
		Top = 171
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'lblBankName' AS lbllabelcustom WITH ;
		Caption = "Bank Name:", ;
		Left = 68, ;
		Name = "lblBankName", ;
		TabIndex = 6, ;
		Top = 117
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblBankTransit' AS lbllabelcustom WITH ;
		Caption = "Bank Transit No:", ;
		Left = 68, ;
		Name = "lblBankTransit", ;
		TabIndex = 2, ;
		Top = 141
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblCompName' AS lbllabelcustom WITH ;
		Caption = "Company Name:", ;
		Left = 68, ;
		Name = "lblCompName", ;
		TabIndex = 9, ;
		Top = 93
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblDest' AS lbllabelcustom WITH ;
		Caption = "Routing #", ;
		Left = 68, ;
		Name = "lblDest", ;
		TabIndex = 4, ;
		Top = 304, ;
		Visible = .T.
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblDestName' AS lbllabelcustom WITH ;
		Caption = "Destination Name", ;
		Left = 68, ;
		Name = "lblDestName", ;
		TabIndex = 7, ;
		Top = 278, ;
		Visible = .T.
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lblfieldlabelcustom1' AS lblfieldlabelcustom WITH ;
		Caption = "Effective Days After", ;
		Left = 371, ;
		Name = "Lblfieldlabelcustom1", ;
		TabIndex = 29, ;
		Top = 145
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Immediate Destination", ;
		FontBold = .T., ;
		Left = 48, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 26, ;
		Top = 252
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "ACH Preferences", ;
		FontBold = .T., ;
		FontSize = 12, ;
		Left = 239, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 1, ;
		Top = 5
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom3' AS lbllabelcustom WITH ;
		Caption = "Account No:", ;
		Left = 68, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 5, ;
		Top = 165
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom4' AS lbllabelcustom WITH ;
		Caption = "Routing #", ;
		Left = 68, ;
		Name = "Lbllabelcustom4", ;
		TabIndex = 3, ;
		Top = 388, ;
		Visible = .T.
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom5' AS lbllabelcustom WITH ;
		Caption = "Company ID", ;
		Left = 68, ;
		Name = "Lbllabelcustom5", ;
		TabIndex = 24, ;
		Top = 189
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom6' AS lbllabelcustom WITH ;
		Caption = "Origin Name", ;
		Left = 68, ;
		Name = "Lbllabelcustom6", ;
		TabIndex = 8, ;
		Top = 362, ;
		Visible = .T.
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom7' AS lbllabelcustom WITH ;
		Caption = "Immediate Origin", ;
		FontBold = .T., ;
		Left = 48, ;
		Name = "Lbllabelcustom7", ;
		TabIndex = 27, ;
		Top = 336
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom8' AS lbllabelcustom WITH ;
		Caption = "Originating DFI", ;
		Left = 68, ;
		Name = "Lbllabelcustom8", ;
		TabIndex = 23, ;
		Top = 215
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom9' AS lbllabelcustom WITH ;
		Caption = "Service Class", ;
		Left = 349, ;
		Name = "Lbllabelcustom9", ;
		TabIndex = 28, ;
		Top = 215
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Shpshapecustom1' AS shpshapecustom WITH ;
		Comment = "", ;
		Height = 355, ;
		Left = 44, ;
		Name = "Shpshapecustom1", ;
		Top = 77, ;
		Width = 516
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'spnACHDays' AS spnspinnercustom WITH ;
		ControlSource = "options.iachdays", ;
		Height = 22, ;
		Left = 485, ;
		Name = "spnACHDays", ;
		SpinnerHighValue = 7.00, ;
		SpinnerLowValue = 1.00, ;
		TabIndex = 13, ;
		Top = 142, ;
		Width = 48
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="spinner" />

	ADD OBJECT 'txtAccountNo' AS txttextboxcustom WITH ;
		cencryptionkey = SherWareKey_@8@2899909, ;
		ControlSource = "options.cbankacct", ;
		creadprivilege = Tax Ids, ;
		Height = 20, ;
		Left = 163, ;
		Name = "txtAccountNo", ;
		TabIndex = 14, ;
		Top = 163, ;
		Width = 156
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtBankName' AS txttextboxcustom WITH ;
		ControlSource = "options.cbankname", ;
		creadprivilege = Tax IDs, ;
		Height = 20, ;
		Left = 163, ;
		Name = "txtBankName", ;
		TabIndex = 11, ;
		Top = 115, ;
		Width = 312
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtBankTransit' AS txttextboxcustom WITH ;
		cencryptionkey = SherWareKey_@8@2899909, ;
		ControlSource = "options.cbanktransit", ;
		creadprivilege = Tax IDs, ;
		Height = 20, ;
		Left = 163, ;
		Name = "txtBankTransit", ;
		TabIndex = 12, ;
		Top = 139, ;
		Width = 156
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCompID' AS txttextboxcustom WITH ;
		ControlSource = "options.ccompid", ;
		creadprivilege = Tax Ids, ;
		Height = 20, ;
		Left = 163, ;
		MaxLength = 10, ;
		Name = "txtCompID", ;
		TabIndex = 16, ;
		Top = 187, ;
		Width = 156
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtDDCompName' AS txttextboxcustom WITH ;
		ControlSource = "options.cddcompname", ;
		creadprivilege = Tax IDs, ;
		Height = 20, ;
		Left = 163, ;
		Name = "txtDDCompName", ;
		TabIndex = 10, ;
		Top = 91, ;
		Width = 312
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtDest' AS txttextboxcustom WITH ;
		ControlSource = "options.cdddest", ;
		creadprivilege = Tax IDs, ;
		Height = 20, ;
		Left = 163, ;
		Name = "txtDest", ;
		TabIndex = 20, ;
		Top = 302, ;
		Visible = .T., ;
		Width = 156
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtDestName' AS txttextboxcustom WITH ;
		ControlSource = "options.cdddestname", ;
		creadprivilege = Tax Ids, ;
		Height = 20, ;
		Left = 163, ;
		Name = "txtDestName", ;
		TabIndex = 19, ;
		Top = 276, ;
		Visible = .T., ;
		Width = 312
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtOrigDFI' AS txttextboxcustom WITH ;
		ControlSource = "options.cddorigdfi", ;
		creadprivilege = Tax Ids, ;
		Height = 20, ;
		Left = 163, ;
		MaxLength = 10, ;
		Name = "txtOrigDFI", ;
		TabIndex = 17, ;
		Top = 213, ;
		Width = 156
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'TxtOrigin' AS txttextboxcustom WITH ;
		ControlSource = "options.cddorigin", ;
		creadprivilege = Tax IDs, ;
		Height = 20, ;
		Left = 163, ;
		Name = "TxtOrigin", ;
		TabIndex = 22, ;
		Top = 386, ;
		Visible = .T., ;
		Width = 156
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'TxtOriginName' AS txttextboxcustom WITH ;
		ControlSource = "options.cddorigname", ;
		creadprivilege = Tax Ids, ;
		Height = 20, ;
		Left = 163, ;
		Name = "TxtOriginName", ;
		TabIndex = 21, ;
		Top = 360, ;
		Visible = .T., ;
		Width = 312
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE cboServClass.Init
		IF DODEFAULT()
		   this.AddListItem('200',1)
		   this.AddListItem('220',2)
		ENDIF 
	ENDPROC

	PROCEDURE chkAlternate.Click
		IF this.Value
		   this.Parent.lblBankName.Caption = 'Origin Name:'
		   this.Parent.lblBankTransit.Caption = 'Origin:'
		   this.Parent.lblDest.visible = .t.
		   this.Parent.lbldestName.Visible = .t.
		   this.Parent.txtdest.Visible = .t.
		   this.Parent.txtdestName.Visible = .t.
		ELSE
		   this.Parent.lblBankName.Caption = 'Bank Name:'
		   this.Parent.lblBankTransit.Caption = 'Bank Transit No:'
		   this.Parent.lblDest.visible = .f.
		   this.Parent.lbldestName.Visible = .f.
		   this.Parent.txtdest.Visible = .f.
		   this.Parent.txtdestName.Visible = .f.
		ENDIF    
	ENDPROC

	PROCEDURE spnACHDays.Init
		IF DODEFAULT()
		   IF this.Value = 0
		      this.set('value',3)
		      this.Refresh()
		   ENDIF 
		ENDIF 
	ENDPROC

ENDDEFINE

DEFINE CLASS afeprefs AS container 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtNcostplus" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblNcostplus" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtNlocationfee" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblNlocationfee" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkAllocExp" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />

	BorderWidth = 0
	Height = 496
	Name = "afeprefs"
	Width = 612

	ADD OBJECT 'chkAllocExp' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Allocate Expenses to Owners ", ;
		ControlSource = "afeopt.lallocexp", ;
		Left = 223, ;
		Name = "chkAllocExp", ;
		Top = 189, ;
		Value = .F.
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "AFE Preferences", ;
		FontBold = .T., ;
		FontSize = 12, ;
		Left = 241, ;
		Name = "Lbllabelcustom1", ;
		Top = 5
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblNcostplus' AS lblfieldlabelcustom WITH ;
		Caption = "Cost Plus Pct", ;
		Height = 16, ;
		Left = 204, ;
		Name = "lblNcostplus", ;
		TabIndex = 2, ;
		Top = 81, ;
		Width = 65
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblNlocationfee' AS lblfieldlabelcustom WITH ;
		Caption = "Location Fee", ;
		Height = 16, ;
		Left = 205, ;
		Name = "lblNlocationfee", ;
		TabIndex = 4, ;
		Top = 131, ;
		Width = 64
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Shpshapecustom1' AS shpshapecustom WITH ;
		Height = 192, ;
		Left = 156, ;
		Name = "Shpshapecustom1", ;
		Top = 51, ;
		Width = 300
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'txtNcostplus' AS txttextboxcustom WITH ;
		ControlSource = "afeopt.ncostplus", ;
		Height = 20, ;
		InputMask = "999.9999", ;
		Left = 290, ;
		Name = "txtNcostplus", ;
		TabIndex = 3, ;
		Top = 81, ;
		Width = 66
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtNlocationfee' AS txttextboxcustom WITH ;
		ControlSource = "afeopt.nlocationfee", ;
		Height = 20, ;
		InputMask = "999,999,999.99", ;
		Left = 290, ;
		Name = "txtNlocationfee", ;
		TabIndex = 5, ;
		Top = 129, ;
		Width = 116
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE chkAllocExp.Click
		IF this.Value = .t.  &&  Give warning that they'll need to re-save entries to have them show up to be processed
		   thisform.oMessage.warning('Any entries that were made in the New Run using an AFE category will need to be re-saved to allow the expense entries to be created for inclusion in future closings.')
		ENDIF
		
		DODEFAULT()
	ENDPROC

ENDDEFINE

DEFINE CLASS apprefs AS container 		&& Accounts Payable preferences container
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDefaultAccts" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcCashDefault" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcAPAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcCashAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcAcctsPayable" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCashDefault" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcDiscDefault" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdAccPayDefault" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcDiscTaken" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdDiscDefault" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkInvDate" UniqueID="" Timestamp="" />

	BorderWidth = 0
	Height = 496
	Name = "apprefs"
	Width = 612

	ADD OBJECT 'chkInvDate' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Use the Invoice Date as Post Date", ;
		ControlSource = "apopt.luseinvdate", ;
		Left = 212, ;
		Name = "chkInvDate", ;
		Top = 314, ;
		Value = .F.
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdAccPayDefault' AS cmdcommandbuttoncustom WITH ;
		Caption = "Accts Payable", ;
		Height = 20, ;
		Left = 213, ;
		Name = "cmdAccPayDefault", ;
		TabIndex = 3, ;
		TabStop = .F., ;
		Top = 166, ;
		Width = 84, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdCashDefault' AS cmdcommandbuttoncustom WITH ;
		Caption = "Cash", ;
		Height = 20, ;
		Left = 213, ;
		Name = "cmdCashDefault", ;
		TabIndex = 2, ;
		TabStop = .F., ;
		Top = 84, ;
		Width = 84, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdDiscDefault' AS cmdcommandbuttoncustom WITH ;
		Caption = "Disc Taken", ;
		Height = 20, ;
		Left = 213, ;
		Name = "cmdDiscDefault", ;
		TabIndex = 4, ;
		TabStop = .F., ;
		Top = 247, ;
		Width = 84, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'lblDefaultAccts' AS lbllabelcustom WITH ;
		BackStyle = 1, ;
		Caption = "Default  Accounts", ;
		FontBold = .T., ;
		FontSize = 10, ;
		Height = 18, ;
		Left = 236, ;
		Name = "lblDefaultAccts", ;
		TabIndex = 6, ;
		Top = 45, ;
		Width = 112, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Accounts Payable Preferences", ;
		FontBold = .T., ;
		FontSize = 12, ;
		Left = 188, ;
		Name = "Lbllabelcustom1", ;
		Top = 5
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Shpshapecustom1' AS shpshapecustom WITH ;
		Height = 307, ;
		Left = 148, ;
		Name = "Shpshapecustom1", ;
		Top = 53, ;
		Width = 300
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'txtcAcctsPayable' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 213, ;
		Name = "txtcAcctsPayable", ;
		ReadOnly = .T., ;
		TabIndex = 9, ;
		TabStop = .F., ;
		Top = 190, ;
		Width = 163, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcAPAcct' AS txtquickfill WITH ;
		clistexpression = coa.cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "apopt.capacct", ;
		InputMask = "999999", ;
		Left = 321, ;
		MaxLength = 6, ;
		Name = "txtcAPAcct", ;
		TabIndex = 12, ;
		Top = 166, ;
		Width = 54
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcCashAcct' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 213, ;
		Name = "txtcCashAcct", ;
		ReadOnly = .T., ;
		TabIndex = 8, ;
		TabStop = .F., ;
		Top = 108, ;
		Width = 163, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcCashDefault' AS txtquickfill WITH ;
		clistexpression = coa.cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "apopt.capcash", ;
		InputMask = "999999", ;
		Left = 321, ;
		MaxLength = 6, ;
		Name = "txtcCashDefault", ;
		TabIndex = 11, ;
		Top = 84, ;
		Width = 54
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcDiscDefault' AS txtquickfill WITH ;
		clistexpression = coa.cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "apopt.cdiscacct", ;
		InputMask = "999999", ;
		Left = 321, ;
		MaxLength = 6, ;
		Name = "txtcDiscDefault", ;
		TabIndex = 13, ;
		Top = 247, ;
		Width = 54
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcDiscTaken' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 213, ;
		Name = "txtcDiscTaken", ;
		ReadOnly = .T., ;
		TabIndex = 10, ;
		TabStop = .F., ;
		Top = 271, ;
		Width = 163, ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE cmdAccPayDefault.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .T.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, this.parent.txtcapacct.value, 2
		lcAcct = Coa.cAcctNo
		
		IF llOK
		   IF lcAcct <> apopt.capacct
		      THISFORM.cmdatamanager.REPLACE('apopt','capacct',lcAcct)
		      this.parent.txtcAPAcct.REFRESH()
		      this.parent.txtcAcctsPayable.VALUE = coa.cacctdesc
		      this.parent.txtcAcctsPayable.REFRESH()
		      THISFORM.lchanged = .T.
		   ENDIF
		ENDIF
		
		THISFORM.setnextcontrol(this.parent.txtcAPAcct)
	ENDPROC

	PROCEDURE cmdCashDefault.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .T.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, this.parent.txtccashdefault.value, 2
		lcAcct = Coa.cAcctNo
		
		IF llOK
		   IF lcAcct <> apopt.capcash
		      THISFORM.cmdatamanager.REPLACE('apopt','capcash',lcAcct)
		      THIS.Parent.txtcCashDefault.REFRESH()
		      THIS.Parent.txtcCashAcct.VALUE    = coa.cAcctDesc
		      THIS.Parent.txtcCashAcct.REFRESH()
		      THISFORM.lchanged = .T.
		   ENDIF
		ENDIF
		
		THISFORM.setnextcontrol(THIS.Parent.txtcCashDefault)
		
	ENDPROC

	PROCEDURE cmdDiscDefault.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .T.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, this.parent.txtcdiscdefault.value, 2
		lcAcct = Coa.cAcctNo
		
		IF llOK
		   IF lcAcct <> apopt.cdiscacct
		      THISFORM.cmdatamanager.REPLACE('apopt','cdiscacct',lcAcct)
		      this.parent.txtcDiscDefault.REFRESH()
		      this.parent.txtcDiscTaken.VALUE    = coa.cacctdesc
		      this.parent.txtcDiscTaken.REFRESH()
		      THISFORM.lchanged = .T.
		   ENDIF
		ENDIF
		
		THISFORM.setnextcontrol(this.parent.txtcDiscDefault)
	ENDPROC

	PROCEDURE txtcAcctsPayable.When
		RETURN .F.
		
	ENDPROC

	PROCEDURE txtcAPAcct.GotFocus
		ON KEY LABEL F2 _screen.activeform.pageframe.appage.apprefs.cmdAccPayDefault.Click()
		
	ENDPROC

	PROCEDURE txtcAPAcct.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtcAcctsPayable.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtcacctsPayable.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtcAPAcct.LostFocus
		ON KEY LABEL F2 *
	ENDPROC

	PROCEDURE txtcAPAcct.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtcCashAcct.When
		RETURN .F.
		
	ENDPROC

	PROCEDURE txtcCashDefault.GotFocus
		ON KEY LABEL F2 _screen.activeform.pageframe.appage.apprefs.cmdCashDefault.Click()
		                
	ENDPROC

	PROCEDURE txtcCashDefault.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtcCashAcct.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtcCashAcct.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtcCashDefault.LostFocus
		ON KEY LABEL F2 *
	ENDPROC

	PROCEDURE txtcCashDefault.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtcDiscDefault.GotFocus
		ON KEY LABEL F2 _screen.activeform.pageframe.appage.apprefs.cmdDiscDefault.Click()
		
	ENDPROC

	PROCEDURE txtcDiscDefault.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtcDiscTaken.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtcDiscTaken.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtcDiscDefault.LostFocus
		ON KEY LABEL F2 *
	ENDPROC

	PROCEDURE txtcDiscDefault.Valid
		IF NOT EMPTY(ALLTRIM(THIS.VALUE))
		   SELECT coa
		   SET ORDER TO acctno
		   IF SEEK(THIS.VALUE)
		      IF lTitle or lTotalAcct
		         thisform.omessage.display('You must use a detail account.  The account cannot be a title or totaling account.')
		         RETURN 0
		      ENDIF      
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtcDiscTaken.When
		RETURN .F.
		
	ENDPROC

ENDDEFINE

DEFINE CLASS arprefs AS container 		&& AR Preferences
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCashAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtARAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtDiscAllowed" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtSalesTax" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCashAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcCashAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdARAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdDiscAll" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSales" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdInterest" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCOG" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdInjFee" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcARAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcDiscAll" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcSalesTax" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcInterest" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcCOGS" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblPrint" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtFeeAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkNeg" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtIntInc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkBalatLeast" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkInvatLeast" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblNext" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtNext" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblMessage" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtMinBal" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtOverdue" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblOverdue" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="ediMemo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCOGS" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="opgInvType" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklSuspInc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtFeeDesc" UniqueID="" Timestamp="" />

	BorderWidth = 0
	Height = 496
	Name = "arprefs"
	Width = 612

	ADD OBJECT 'chkBalatLeast' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Balance at Least:", ;
		ControlSource = "aropt.lminbalck", ;
		Height = 16, ;
		Left = 255, ;
		Name = "chkBalatLeast", ;
		TabIndex = 35, ;
		Top = 378, ;
		Width = 102, ;
		ZOrderSet = 25
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkInvatLeast' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Invoice at Least:", ;
		ControlSource = "aropt.linvdayck", ;
		Height = 16, ;
		Left = 139, ;
		Name = "chkInvatLeast", ;
		TabIndex = 37, ;
		Top = 402, ;
		Width = 97, ;
		ZOrderSet = 26
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklSuspInc' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Include Suspense Balances When Receiving Payments", ;
		Left = 70, ;
		Name = "chklSuspInc", ;
		TabIndex = 30, ;
		Top = 321, ;
		Visible = .F.
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkNeg' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Negative Balance", ;
		ControlSource = "aropt.lnegbal", ;
		Height = 16, ;
		Left = 139, ;
		Name = "chkNeg", ;
		TabIndex = 34, ;
		Top = 378, ;
		Width = 102, ;
		ZOrderSet = 23
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdARAcct' AS cmdcommandbuttoncustom WITH ;
		Caption = "A/R Account", ;
		Height = 20, ;
		Left = 70, ;
		Name = "cmdARAcct", ;
		TabIndex = 6, ;
		TabStop = .F., ;
		Top = 96, ;
		Width = 80, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdCashAcct' AS cmdcommandbuttoncustom WITH ;
		Caption = "Cash Account", ;
		Height = 20, ;
		Left = 70, ;
		Name = "cmdCashAcct", ;
		TabIndex = 4, ;
		TabStop = .F., ;
		Top = 73, ;
		Width = 80, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdCOG' AS cmdcommandbuttoncustom WITH ;
		Caption = "Cost of Goods", ;
		Height = 20, ;
		Left = 70, ;
		Name = "cmdCOG", ;
		TabIndex = 18, ;
		TabStop = .F., ;
		Top = 188, ;
		Width = 80, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdDiscAll' AS cmdcommandbuttoncustom WITH ;
		Caption = "Disc Allowed", ;
		Height = 20, ;
		Left = 70, ;
		Name = "cmdDiscAll", ;
		TabIndex = 9, ;
		TabStop = .F., ;
		Top = 119, ;
		Width = 80, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdInjFee' AS cmdcommandbuttoncustom WITH ;
		Caption = "Injection Fee", ;
		Height = 20, ;
		Left = 71, ;
		Name = "cmdInjFee", ;
		TabIndex = 21, ;
		TabStop = .F., ;
		Top = 212, ;
		Width = 80, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdInterest' AS cmdcommandbuttoncustom WITH ;
		Caption = "Interest Inc", ;
		Height = 20, ;
		Left = 70, ;
		Name = "cmdInterest", ;
		TabIndex = 15, ;
		TabStop = .F., ;
		Top = 165, ;
		Width = 80, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdSales' AS cmdcommandbuttoncustom WITH ;
		Caption = "Sales Tax", ;
		Height = 20, ;
		Left = 70, ;
		Name = "cmdSales", ;
		TabIndex = 12, ;
		TabStop = .F., ;
		Top = 142, ;
		Width = 80, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'ediMemo' AS edteditboxcustom WITH ;
		ControlSource = "aropt.minvmsg", ;
		Height = 36, ;
		Left = 182, ;
		Name = "ediMemo", ;
		TabIndex = 29, ;
		Top = 280, ;
		Width = 231, ;
		ZOrderSet = 33
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="editbox" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		BackStyle = 1, ;
		Caption = "Invoice Prints On", ;
		FontBold = .T., ;
		ForeColor = 0,0,255, ;
		Left = 449, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 25, ;
		Top = 237, ;
		Width = 95
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "Accounts Receivable Preferences", ;
		FontBold = .T., ;
		FontSize = 12, ;
		Left = 176, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 1, ;
		Top = 5
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom3' AS lbllabelcustom WITH ;
		BackStyle = 1, ;
		Caption = "Default Accounts", ;
		FontBold = .T., ;
		ForeColor = 0,0,255, ;
		Left = 59, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 2, ;
		Top = 51
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom4' AS lbllabelcustom WITH ;
		BackStyle = 1, ;
		Caption = "Invoicing", ;
		FontBold = .T., ;
		ForeColor = 0,0,255, ;
		Left = 59, ;
		Name = "Lbllabelcustom4", ;
		TabIndex = 24, ;
		Top = 237
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom5' AS lbllabelcustom WITH ;
		BackStyle = 1, ;
		Caption = "Customer Statements", ;
		FontBold = .T., ;
		ForeColor = 0,0,255, ;
		Left = 59, ;
		Name = "Lbllabelcustom5", ;
		TabIndex = 32, ;
		Top = 343
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblMessage' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		Caption = "Invoicing Message:", ;
		Height = 16, ;
		Left = 70, ;
		Name = "lblMessage", ;
		TabIndex = 28, ;
		Top = 280, ;
		Width = 94, ;
		ZOrderSet = 29
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblNext' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		Caption = "Next Invoice Number:", ;
		Height = 16, ;
		Left = 70, ;
		Name = "lblNext", ;
		TabIndex = 27, ;
		Top = 254, ;
		Width = 104, ;
		ZOrderSet = 27
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblOverdue' AS lblfieldlabelcustom WITH ;
		BackStyle = 0, ;
		Caption = "Days Overdue", ;
		Height = 16, ;
		Left = 297, ;
		Name = "lblOverdue", ;
		TabIndex = 39, ;
		Top = 402, ;
		Width = 72, ;
		ZOrderSet = 32
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblPrint' AS lblfieldlabelcustom WITH ;
		Caption = "Print Statements for Accts With:", ;
		Height = 16, ;
		Left = 123, ;
		Name = "lblPrint", ;
		TabIndex = 33, ;
		Top = 358, ;
		Width = 156, ;
		ZOrderSet = 21
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'opgInvType' AS opgoptiongroupcustom WITH ;
		BorderStyle = 0, ;
		ButtonCount = 2, ;
		ControlSource = "aropt.ninvtype", ;
		Height = 68, ;
		Left = 437, ;
		Name = "opgInvType", ;
		TabIndex = 31, ;
		Top = 267, ;
		Width = 126, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "Pre-Printed Form", ;
		Option1.FontSize = 8, ;
		Option1.Height = 16, ;
		Option1.Left = 12, ;
		Option1.Name = "Option1", ;
		Option1.Top = 0, ;
		Option1.Width = 98, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "Plain Paper", ;
		Option2.FontSize = 8, ;
		Option2.Height = 16, ;
		Option2.Left = 12, ;
		Option2.Name = "Option2", ;
		Option2.Top = 41, ;
		Option2.Width = 71
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'Shpshapecustom1' AS shpshapecustom WITH ;
		Height = 178, ;
		Left = 47, ;
		Name = "Shpshapecustom1", ;
		Top = 58, ;
		Width = 516
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Shpshapecustom2' AS shpshapecustom WITH ;
		Height = 99, ;
		Left = 47, ;
		Name = "Shpshapecustom2", ;
		Top = 243, ;
		Width = 384
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Shpshapecustom3' AS shpshapecustom WITH ;
		Height = 99, ;
		Left = 437, ;
		Name = "Shpshapecustom3", ;
		Top = 243, ;
		Width = 126
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Shpshapecustom4' AS shpshapecustom WITH ;
		Height = 79, ;
		Left = 47, ;
		Name = "Shpshapecustom4", ;
		Top = 350, ;
		Width = 516
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'txtARAcct' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 217, ;
		Name = "txtARAcct", ;
		ReadOnly = .T., ;
		TabIndex = 8, ;
		TabStop = .F., ;
		Top = 96, ;
		Width = 264, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcARAcct' AS txtquickfill WITH ;
		clistexpression = cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "aropt.caracct", ;
		Height = 20, ;
		InputMask = "XXXXXX", ;
		Left = 158, ;
		Name = "txtcARAcct", ;
		TabIndex = 7, ;
		Top = 96, ;
		Width = 51, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCashAcct' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 217, ;
		Name = "txtCashAcct", ;
		ReadOnly = .T., ;
		TabIndex = 5, ;
		TabStop = .F., ;
		Top = 73, ;
		Width = 264, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcCashAcct' AS txtquickfill WITH ;
		clistexpression = cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "aropt.ccashacct", ;
		Height = 20, ;
		InputMask = "XXXXXX", ;
		Left = 158, ;
		Name = "txtcCashAcct", ;
		TabIndex = 3, ;
		Top = 73, ;
		Width = 51, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcCOGS' AS txtquickfill WITH ;
		clistexpression = cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "aropt.ccogsacct", ;
		Height = 20, ;
		InputMask = "XXXXXX", ;
		Left = 158, ;
		Name = "txtcCOGS", ;
		TabIndex = 19, ;
		Top = 188, ;
		Width = 51, ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcDiscAll' AS txtquickfill WITH ;
		clistexpression = cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "aropt.cdiscacct", ;
		Height = 20, ;
		InputMask = "XXXXXX", ;
		Left = 158, ;
		Name = "txtcDiscAll", ;
		TabIndex = 10, ;
		Top = 119, ;
		Width = 51, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcInterest' AS txtquickfill WITH ;
		clistexpression = cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "aropt.cintacct", ;
		Height = 20, ;
		InputMask = "XXXXXX", ;
		Left = 158, ;
		Name = "txtcInterest", ;
		TabIndex = 16, ;
		Top = 165, ;
		Width = 51, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCOGS' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 217, ;
		Name = "txtCOGS", ;
		ReadOnly = .T., ;
		TabIndex = 20, ;
		TabStop = .F., ;
		Top = 188, ;
		Width = 264
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcSalesTax' AS txtquickfill WITH ;
		clistexpression = cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "aropt.ctaxacct", ;
		Height = 20, ;
		InputMask = "XXXXXX", ;
		Left = 158, ;
		Name = "txtcSalesTax", ;
		TabIndex = 13, ;
		Top = 142, ;
		Width = 51, ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtDiscAllowed' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 217, ;
		Name = "txtDiscAllowed", ;
		ReadOnly = .T., ;
		TabIndex = 11, ;
		TabStop = .F., ;
		Top = 119, ;
		Width = 264, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtFeeAcct' AS txtquickfill WITH ;
		clistexpression = cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "aropt.cfeeacct", ;
		Height = 20, ;
		InputMask = "XXXXXX", ;
		Left = 159, ;
		Name = "txtFeeAcct", ;
		TabIndex = 22, ;
		Top = 212, ;
		Width = 51, ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtFeeDesc' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 218, ;
		Name = "txtFeeDesc", ;
		ReadOnly = .T., ;
		TabIndex = 23, ;
		TabStop = .F., ;
		Top = 212, ;
		Width = 264
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtIntInc' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 217, ;
		Name = "txtIntInc", ;
		ReadOnly = .T., ;
		TabIndex = 17, ;
		TabStop = .F., ;
		Top = 165, ;
		Width = 264
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtMinBal' AS txttextboxcustom WITH ;
		ControlSource = "aropt.nminbal", ;
		Height = 20, ;
		InputMask = "99,999.99", ;
		Left = 359, ;
		lenabled = .F., ;
		Name = "txtMinBal", ;
		TabIndex = 36, ;
		Top = 376, ;
		Width = 75, ;
		ZOrderSet = 30
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtNext' AS txttextboxcustom WITH ;
		ControlSource = "aropt.cinvnum", ;
		Height = 20, ;
		Left = 182, ;
		Name = "txtNext", ;
		TabIndex = 26, ;
		Top = 252, ;
		Width = 83, ;
		ZOrderSet = 28
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtOverdue' AS txttextboxcustom WITH ;
		ControlSource = "aropt.ninvday", ;
		Height = 20, ;
		InputMask = "999", ;
		Left = 243, ;
		lenabled = .F., ;
		Name = "txtOverdue", ;
		TabIndex = 38, ;
		Top = 400, ;
		Width = 48, ;
		ZOrderSet = 31
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtSalesTax' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 217, ;
		Name = "txtSalesTax", ;
		ReadOnly = .T., ;
		TabIndex = 14, ;
		TabStop = .F., ;
		Top = 142, ;
		Width = 264, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE chkBalatLeast.Click
		IF THIS.VALUE = .T.
		   THIS.PARENT.txtMinBal.lenabled = .T.
		   THIS.PARENT.txtMinBal.REFRESH()
		ELSE
		   THIS.PARENT.txtMinBal.lenabled = .F.
		   THIS.PARENT.txtMinBal.REFRESH()
		ENDIF
		
	ENDPROC

	PROCEDURE chkInvatLeast.Click
		IF THIS.VALUE = .T.
		   THIS.PARENT.txtOverdue.lenabled = .T.
		   THIS.PARENT.txtOverdue.REFRESH()
		ELSE
		   THIS.PARENT.txtOverdue.lenabled = .F.
		   THIS.PARENT.txtOverdue.REFRESH()
		ENDIF
		
	ENDPROC

	PROCEDURE cmdARAcct.Click
		LOCAL lcList, lcAcct
		PRIV llOK
		
		llOK = .T.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, this.parent.txtcaracct.value, 2
		
		IF llOK
		   lcAcct = coa.cacctno
		   WITH this.parent
		      .txtcARAcct.VALUE = lcAcct
		      .txtARAcct.VALUE = coa.cAcctDesc
		      .txtARAcct.REFRESH()
		      THISFORM.cmdatamanager.REPLACE('aropt','caracct',lcAcct)
		   ENDWITH
		ENDIF
		
		THISFORM.setnextcontrol(this.parent.txtcARAcct)
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE cmdCashAcct.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .T.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, this.parent.txtccashacct.value, 2
		
		IF llOK
		   WITH THIS.Parent
		      .txtcCashAcct.VALUE = coa.cacctno
		      .txtCashAcct.VALUE  = coa.cAcctDesc
		      .txtCashAcct.REFRESH()
		      THISFORM.cmdatamanager.REPLACE('aropt','ccashacct',coa.cacctno)
		   ENDWITH
		ENDIF
		
		THISFORM.setnextcontrol(this.parent.txtcCashAcct)
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE cmdCOG.Click
		LOCAL lcList, lcAcct
		PRIV llOK
		
		llOK = .T.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, this.parent.txtccogs.value, 2
		
		IF llOK
		   lcAcct = coa.cacctno
		   WITH this.Parent
		      .txtcCOGS.VALUE = lcAcct
		      .txtCOGS.VALUE = coa.cacctdesc
		      .txtCOGS.REFRESH()
		      THISFORM.cmdatamanager.REPLACE('aropt','ccogsacct',lcAcct)
		   ENDWITH
		ENDIF
		
		THISFORM.setnextcontrol(this.parent.txtcCOGS)
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE cmdDiscAll.Click
		LOCAL lcList, lcAcct
		PRIV llOK
		
		llOK = .T.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, this.parent.txtcdiscall.value, 2
		
		IF llOK
		   lcAcct = coa.cacctno
		   WITH this.parent
		      .txtcDiscAll.VALUE = lcAcct
		      .txtDiscAllowed.VALUE = coa.cacctdesc
		      .txtDiscAllowed.REFRESH()
		      THISFORM.cmdatamanager.REPLACE('aropt','cdiscacct',lcAcct)
		   ENDWITH
		ENDIF
		
		THISFORM.setnextcontrol(this.parent.txtcDiscAll)
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE cmdInjFee.Click
		LOCAL lcList, lcAcct
		PRIV llOK
		
		llOK = .T.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, this.parent.txtfeeacct.value, 2
		
		IF llOK
		   lcAcct = coa.cacctno
		   WITH this.Parent
		      .txtfeeacct.VALUE = lcAcct
		      .txtfeedesc.VALUE = coa.cacctdesc
		      .txtfeedesc.REFRESH()
		      THISFORM.cmdatamanager.REPLACE('aropt','cfeeacct',lcAcct)
		   ENDWITH
		ENDIF
		
		THISFORM.setnextcontrol(this.parent.txtfeeacct)
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE cmdInjFee.Init
		IF NOT m.goapp.lBrineOpt
		   this.Visible = .f.
		ENDIF 
		RETURN DODEFAULT()
	ENDPROC

	PROCEDURE cmdInterest.Click
		LOCAL lcList, lcAcct
		PRIV llOK
		
		llOK = .T.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, this.parent.txtcinterest.value, 2
		
		IF llOK
		   lcAcct = coa.cacctno
		   WITH this.parent
		      .txtcInterest.VALUE = lcAcct
		      .txtIntInc.VALUE = coa.cacctdesc
		      .txtIntInc.REFRESH()
		      THISFORM.cmdatamanager.REPLACE('aropt','cintacct',lcAcct)
		   ENDWITH
		ENDIF
		
		THISFORM.setnextcontrol(this.parent.txtcInterest)
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE cmdSales.Click
		LOCAL lcList, lcAcct
		PRIV llOK
		
		llOK = .T.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, this.parent.txtcsalestax.value, 2
		
		IF llOK
		   lcAcct = coa.cacctno
		   WITH this.parent
		      .txtcSalesTax.VALUE = lcAcct
		      .txtSalesTax.VALUE = coa.cacctdesc
		      .txtSalesTax.REFRESH()
		      THISFORM.cmdatamanager.REPLACE('aropt','ctaxacct',lcAcct)
		   ENDWITH
		ENDIF
		
		THISFORM.setnextcontrol(this.parent.txtcSalesTax)
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtARAcct.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtcARAcct.GotFocus
		ON KEY LABEL F2 _screen.activeform.pageframe.arpage.arprefs.cmdARAcct.Click()
		DODEFAULT()
	ENDPROC

	PROCEDURE txtcARAcct.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtARAcct.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtARAcct.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtcARAcct.LostFocus
		on key label F2 *
	ENDPROC

	PROCEDURE txtcARAcct.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtCashAcct.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtcCashAcct.GotFocus
		ON KEY LABEL F2 _screen.activeform.pageframe.arpage.arprefs.cmdCashAcct.Click()
		DODEFAULT()
	ENDPROC

	PROCEDURE txtcCashAcct.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtCashAcct.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtCashAcct.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtcCashAcct.LostFocus
		ON KEY LABEL F2 *
		
	ENDPROC

	PROCEDURE txtcCashAcct.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtcCOGS.GotFocus
		ON KEY LABEL F2 _screen.activeform.pageframe.arpage.arprefs.cmdCOG.Click()
		DODEFAULT()
	ENDPROC

	PROCEDURE txtcCOGS.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtCOGS.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtCOGS.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtcCOGS.LostFocus
		on key label F2 *
	ENDPROC

	PROCEDURE txtcCOGS.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtcDiscAll.GotFocus
		ON KEY LABEL F2 _screen.activeform.pageframe.arpage.arprefs.cmdDiscAll.Click()
		DODEFAULT()
	ENDPROC

	PROCEDURE txtcDiscAll.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtDiscAllowed.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtDiscAllowed.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtcDiscAll.LostFocus
		on key label F2 *
	ENDPROC

	PROCEDURE txtcDiscAll.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtcInterest.GotFocus
		ON KEY LABEL F2 _screen.activeform.pageframe.arpage.arprefs.cmdInterest.Click()
		DODEFAULT()
	ENDPROC

	PROCEDURE txtcInterest.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtIntInc.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtIntInc.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtcInterest.LostFocus
		on key label F2 *
	ENDPROC

	PROCEDURE txtcInterest.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtCOGS.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtcSalesTax.GotFocus
		ON KEY LABEL F2 _screen.activeform.pageframe.arpage.arprefs.cmdSales.Click()
		DODEFAULT()
	ENDPROC

	PROCEDURE txtcSalesTax.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtSalesTax.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtSalesTax.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtcSalesTax.LostFocus
		on key label F2 *
	ENDPROC

	PROCEDURE txtcSalesTax.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtDiscAllowed.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtFeeAcct.GotFocus
		ON KEY LABEL F2 _screen.activeform.pageframe.arpage.arprefs.cmdCOG.Click()
		DODEFAULT()
	ENDPROC

	PROCEDURE txtFeeAcct.Init
		IF NOT m.goapp.lBrineOpt
		   this.Visible = .f.
		ENDIF 
		RETURN DODEFAULT()
	ENDPROC

	PROCEDURE txtFeeAcct.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtfeedesc.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtfeedesc.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtFeeAcct.LostFocus
		on key label F2 *
	ENDPROC

	PROCEDURE txtFeeAcct.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtFeeDesc.Init
		IF NOT m.goapp.lBrineOpt
		   this.Visible = .f.
		ENDIF 
		RETURN DODEFAULT()
	ENDPROC

	PROCEDURE txtFeeDesc.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtIntInc.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtMinBal.Init
		IF NOT EMPTY(THIS.VALUE)
		   THIS.lenabled = .T.
		   THIS.Parent.chkBalatLeast.value = .T.
		ELSE
		   THIS.lenabled = .F.
		   THIS.Parent.chkBalatLeast.value = .F.
		ENDIF
		
	ENDPROC

	PROCEDURE txtMinBal.When
		RETURN THIS.PARENT.chkBalAtLeast.value
	ENDPROC

	PROCEDURE txtOverdue.Init
		IF DODEFAULT()
		IF NOT EMPTY(THIS.VALUE)
		   THIS.lenabled = .T.
		   THIS.PARENT.chkInvatLeast.VALUE = .T.
		   THIS.PARENT.chkInvatLeast.refresh()
		ELSE
		   THIS.lenabled = .F.
		   THIS.PARENT.chkInvatLeast.VALUE = .F.
		   THIS.PARENT.chkInvatLeast.refresh()
		ENDIF
		ENDIF
		
	ENDPROC

	PROCEDURE txtSalesTax.When
		RETURN .F.
	ENDPROC

ENDDEFINE

DEFINE CLASS checks AS container 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Shpshapecustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboAPCheck" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboDMCheck" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboPRCheck" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboLMCheck" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtMincheck" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblMincheck" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtnAPStubLines" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblNstubline" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkVoidNext" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkAPDupStub" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkDMDupStub" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkDMSkipPerf" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtmDMStubLines" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lblfieldlabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cbocomboboxcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom10" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom11" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkTwoLines" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkAPVoidNext" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklNoFirstName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdModAP" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdModDM" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdModPR" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdModLM" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdModPD" UniqueID="" Timestamp="" />

	BorderWidth = 0
	Height = 496
	Name = "checks"
	Width = 612

	ADD OBJECT 'cboAPCheck' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		BoundTo = .F., ;
		ControlSource = "apopt.cchecktype", ;
		Height = 20, ;
		Left = 148, ;
		Name = "cboAPCheck", ;
		TabIndex = 4, ;
		Top = 57, ;
		Width = 187
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Cbocomboboxcustom1' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		BoundTo = .T., ;
		ControlSource = "progopt.cchecktype", ;
		Height = 20, ;
		Left = 148, ;
		Name = "Cbocomboboxcustom1", ;
		TabIndex = 29, ;
		Top = 403, ;
		Width = 187
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboDMCheck' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		BoundTo = .T., ;
		ControlSource = "options.cchecktype", ;
		Height = 20, ;
		Left = 148, ;
		Name = "cboDMCheck", ;
		TabIndex = 10, ;
		Top = 164, ;
		Width = 187
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboLMCheck' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		BoundTo = .T., ;
		ControlSource = "landopt.cchecktype", ;
		Height = 20, ;
		Left = 148, ;
		Name = "cboLMCheck", ;
		TabIndex = 26, ;
		Top = 349, ;
		Width = 187
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboPRCheck' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		BoundTo = .T., ;
		ControlSource = "propt.cchecktype", ;
		Height = 20, ;
		Left = 148, ;
		Name = "cboPRCheck", ;
		TabIndex = 23, ;
		Top = 289, ;
		Width = 187
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'chkAPDupStub' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Print Duplicate Stub", ;
		ControlSource = "apopt.ldupstub", ;
		Left = 148, ;
		Name = "chkAPDupStub", ;
		TabIndex = 7, ;
		Top = 91
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkAPVoidNext' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Void Next Check If Overflow Occurs", ;
		Comment = "", ;
		ControlSource = "apopt.lVoidNext", ;
		Height = 16, ;
		Left = 148, ;
		Name = "chkAPVoidNext", ;
		TabIndex = 8, ;
		Top = 116, ;
		Width = 195
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkDMDupStub' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Print Duplicate Stub", ;
		ControlSource = "options.ldupstub", ;
		Left = 87, ;
		Name = "chkDMDupStub", ;
		TabIndex = 14, ;
		Top = 192
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkDMSkipPerf' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Skip Perf on Check Stub", ;
		ControlSource = "options.lskipperf", ;
		Height = 16, ;
		Left = 222, ;
		Name = "chkDMSkipPerf", ;
		TabIndex = 15, ;
		Top = 192, ;
		Width = 134
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklNoFirstName' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Don't Use Owner's Primary Name With A Secondary Address on Checks", ;
		ControlSource = "options.lNoFirstName", ;
		Left = 87, ;
		Name = "chklNoFirstName", ;
		TabIndex = 19, ;
		Top = 238
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkTwoLines' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Print Enhanced Check Stub", ;
		ControlSource = "options.ltwolines", ;
		Height = 16, ;
		Left = 380, ;
		Name = "chkTwoLines", ;
		TabIndex = 16, ;
		Top = 199, ;
		Width = 148
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkVoidNext' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Void Next Check If Overflow Occurs", ;
		Comment = "", ;
		ControlSource = "options.lVoidNext", ;
		Height = 16, ;
		Left = 87, ;
		Name = "chkVoidNext", ;
		TabIndex = 17, ;
		Top = 215, ;
		Width = 195
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdModAP' AS cmdcommandbuttoncustom WITH ;
		Caption = "Modify Ck", ;
		Left = 468, ;
		Name = "cmdModAP", ;
		Top = 108
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdModDM' AS cmdcommandbuttoncustom WITH ;
		Caption = "Modify Ck", ;
		Left = 468, ;
		Name = "cmdModDM", ;
		Top = 228
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdModLM' AS cmdcommandbuttoncustom WITH ;
		Caption = "Modify Ck", ;
		Left = 468, ;
		Name = "cmdModLM", ;
		Top = 348
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdModPD' AS cmdcommandbuttoncustom WITH ;
		Caption = "Modify Ck", ;
		Left = 468, ;
		Name = "cmdModPD", ;
		Top = 402
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdModPR' AS cmdcommandbuttoncustom WITH ;
		Caption = "Modify Ck", ;
		Left = 468, ;
		Name = "cmdModPR", ;
		Top = 288
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Lblfieldlabelcustom1' AS lblfieldlabelcustom WITH ;
		Caption = "# Lines on Check Stub:", ;
		Height = 16, ;
		Left = 294, ;
		Name = "Lblfieldlabelcustom1", ;
		TabIndex = 20, ;
		Top = 222, ;
		Width = 113
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		BackStyle = 1, ;
		Caption = "Accounts Payable", ;
		FontBold = .T., ;
		ForeColor = 0,0,255, ;
		Left = 73, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 2, ;
		Top = 26
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom10' AS lbllabelcustom WITH ;
		BackStyle = 1, ;
		Caption = "Program/Partnership Distribution", ;
		FontBold = .T., ;
		ForeColor = 0,0,255, ;
		Left = 73, ;
		Name = "Lbllabelcustom10", ;
		TabIndex = 27, ;
		Top = 381
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom11' AS lbllabelcustom WITH ;
		Caption = "Check Type", ;
		Left = 85, ;
		Name = "Lbllabelcustom11", ;
		TabIndex = 28, ;
		Top = 405
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		BackStyle = 1, ;
		Caption = "Revenue Distribution", ;
		FontBold = .T., ;
		ForeColor = 0,0,255, ;
		Left = 69, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 9, ;
		Top = 142
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom3' AS lbllabelcustom WITH ;
		BackStyle = 1, ;
		Caption = "Payroll", ;
		FontBold = .T., ;
		ForeColor = 0,0,255, ;
		Left = 73, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 21, ;
		Top = 262
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom4' AS lbllabelcustom WITH ;
		BackStyle = 1, ;
		Caption = "Delay Rentals", ;
		FontBold = .T., ;
		ForeColor = 0,0,255, ;
		Left = 73, ;
		Name = "Lbllabelcustom4", ;
		TabIndex = 24, ;
		Top = 324
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom5' AS lbllabelcustom WITH ;
		Caption = "Check Type", ;
		Left = 85, ;
		Name = "Lbllabelcustom5", ;
		TabIndex = 3, ;
		Top = 57
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom6' AS lbllabelcustom WITH ;
		Caption = "Check Type", ;
		Left = 85, ;
		Name = "Lbllabelcustom6", ;
		TabIndex = 12, ;
		Top = 166
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom7' AS lbllabelcustom WITH ;
		Caption = "Check Type", ;
		Left = 85, ;
		Name = "Lbllabelcustom7", ;
		TabIndex = 22, ;
		Top = 291
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom8' AS lbllabelcustom WITH ;
		Caption = "Check Type", ;
		Left = 85, ;
		Name = "Lbllabelcustom8", ;
		TabIndex = 25, ;
		Top = 351
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom9' AS lbllabelcustom WITH ;
		Caption = "Check Printing Preferences", ;
		FontBold = .T., ;
		FontSize = 12, ;
		Left = 200, ;
		Name = "Lbllabelcustom9", ;
		TabIndex = 1, ;
		Top = 5
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblMincheck' AS lblfieldlabelcustom WITH ;
		Caption = "Minimum Chk Amt:", ;
		Height = 16, ;
		Left = 345, ;
		Name = "lblMincheck", ;
		TabIndex = 13, ;
		Top = 173, ;
		Width = 88
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblNstubline' AS lblfieldlabelcustom WITH ;
		Caption = "# Lines on Check Stub:", ;
		Height = 16, ;
		Left = 349, ;
		Name = "lblNstubline", ;
		TabIndex = 6, ;
		Top = 68, ;
		Width = 113
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Shpshapecustom1' AS shpshapecustom WITH ;
		Height = 104, ;
		Left = 61, ;
		Name = "Shpshapecustom1", ;
		Top = 33, ;
		Width = 493
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Shpshapecustom2' AS shpshapecustom WITH ;
		Height = 115, ;
		Left = 60, ;
		Name = "Shpshapecustom2", ;
		Top = 148, ;
		Width = 494
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Shpshapecustom3' AS shpshapecustom WITH ;
		Height = 56, ;
		Left = 60, ;
		Name = "Shpshapecustom3", ;
		Top = 268, ;
		Width = 494
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Shpshapecustom4' AS shpshapecustom WITH ;
		Height = 49, ;
		Left = 60, ;
		Name = "Shpshapecustom4", ;
		Top = 330, ;
		Width = 494
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Shpshapecustom5' AS shpshapecustom WITH ;
		Height = 49, ;
		Left = 60, ;
		Name = "Shpshapecustom5", ;
		Top = 387, ;
		Width = 494
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'txtmDMStubLines' AS txttextboxcustom WITH ;
		ControlSource = "options.nstubline", ;
		Height = 20, ;
		Left = 414, ;
		Name = "txtmDMStubLines", ;
		TabIndex = 18, ;
		Top = 220, ;
		Width = 29
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtMincheck' AS txttextboxcustom WITH ;
		ControlSource = "options.nmincheck", ;
		Height = 20, ;
		InputMask = "999,999.99", ;
		Left = 436, ;
		Name = "txtMincheck", ;
		TabIndex = 11, ;
		Top = 171, ;
		Width = 84
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtnAPStubLines' AS txttextboxcustom WITH ;
		ControlSource = "apopt.nstubline", ;
		Height = 20, ;
		Left = 475, ;
		Name = "txtnAPStubLines", ;
		TabIndex = 5, ;
		Top = 66, ;
		Width = 29
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE cboAPCheck.Init
		
		THIS.ADDLISTITEM('Dot-Matrix (No Stub)',1,1)
		THIS.ADDLISTITEM('DN',1,2)
		THIS.ADDLISTITEM('Dot-Matrix (Stub Above)',2,1)
		THIS.ADDLISTITEM('DA',2,2)
		THIS.ADDLISTITEM('Dot-Matrix (Stub Below)',3,1)
		THIS.ADDLISTITEM('DB',3,2)
		THIS.ADDLISTITEM('Laser (No Stub)',4,1)
		THIS.ADDLISTITEM('LN',4,2)
		THIS.ADDLISTITEM('Laser (Stub Above)',5,1)
		THIS.ADDLISTITEM('LA',5,2)
		THIS.ADDLISTITEM('Laser (Stub Below)',6,1)
		THIS.ADDLISTITEM('LV',6,2)
		THIS.ADDLISTITEM('Laser (Middle Check)',7,1)
		THIS.ADDLISTITEM('LC',7,2)
		
		* Don't show MICR check formats if they don't have the MICR option
		IF m.goapp.lMicrOpt
		   THIS.ADDLISTITEM('MICR Laser (Stub Below)',8,1)
		   THIS.ADDLISTITEM('LE',8,2)
		   THIS.ADDLISTITEM('MICR Laser (No Stub)',9,1)
		   THIS.ADDLISTITEM('LM',9,2)
		   THIS.ADDLISTITEM('Custom Check Format',10,1)
		   THIS.ADDLISTITEM('CF',10,2)
		ELSE
		   THIS.ADDLISTITEM('Custom Check Format',8,1)
		   THIS.ADDLISTITEM('CF',8,2)
		ENDIF
		
		
		
		
		DODEFAULT()
		
		
		
		
		
	ENDPROC

	PROCEDURE cboAPCheck.Valid
		IF this.Value <> 'LA' AND this.Value <> 'LV'  &&  Don't also let them have the options marked about duplicate/voiding
		   this.Parent.chkapdupStub.set('value',.f.)
		   this.Parent.chkapvoidNext.set('value',.f.)
		ENDIF
		
		* Don't let them have duplicate stub if check in the middle is printed.
		IF this.Value = 'LC'
		   this.Parent.chkapDupStub.set('value',.f.)
		   this.Parent.chkapDupStub.visible = .f.
		ELSE
		   this.Parent.chkapDupStub.visible = .t.
		ENDIF    
		DODEFAULT()
	ENDPROC

	PROCEDURE Cbocomboboxcustom1.Init
		
		this.addlistitem('Dot-Matrix (No Stub)',1,1)
		this.addlistitem('DN',1,2)
		this.addlistitem('Dot-Matrix (Stub Above)',2,1)
		this.addlistitem('DA',2,2)
		this.addlistitem('Dot-Matrix (Stub Below)',3,1)
		this.addlistitem('DB',3,2)
		this.addlistitem('Laser (No Stub)',4,1)
		this.addlistitem('LN',4,2)
		this.addlistitem('Laser (Stub Above)',5,1)
		this.addlistitem('LA',5,2)
		this.addlistitem('Laser (Stub Below)',6,1)
		this.addlistitem('LV',6,2)
		this.addlistitem('Laser (Middle Check)',7,1)
		this.addlistitem('LC',7,2)
		
		DODEFAULT()
		
		
		
		
	ENDPROC

	PROCEDURE cboDMCheck.Init
		
		THIS.ADDLISTITEM('Dot-Matrix (No Stub)',1,1)
		THIS.ADDLISTITEM('DN',1,2)
		THIS.ADDLISTITEM('Dot-Matrix (Stub Above)',2,1)
		THIS.ADDLISTITEM('DA',2,2)
		THIS.ADDLISTITEM('Dot-Matrix (Stub Below)',3,1)
		THIS.ADDLISTITEM('DB',3,2)
		THIS.ADDLISTITEM('Laser (No Stub)',4,1)
		THIS.ADDLISTITEM('LN',4,2)
		THIS.ADDLISTITEM('Laser (Stub Above)',5,1)
		THIS.ADDLISTITEM('LA',5,2)
		THIS.ADDLISTITEM('Laser (Stub Below)',6,1)
		THIS.ADDLISTITEM('LV',6,2)
		THIS.ADDLISTITEM('Laser (Middle Check)',7,1)
		THIS.ADDLISTITEM('LC',7,2)
		
		* Don't show MICR check formats if they don't have the MICR option
		IF m.goapp.lMicrOpt
		   THIS.ADDLISTITEM('MICR Laser (Stub Below)',8,1)
		   THIS.ADDLISTITEM('LE',8,2)
		   THIS.ADDLISTITEM('MICR Laser (No Stub)',9,1)
		   THIS.ADDLISTITEM('LM',9,2)
		   THIS.ADDLISTITEM('Custom Check Format',10,1)
		   THIS.ADDLISTITEM('CF',10,2)
		ELSE
		   THIS.ADDLISTITEM('Custom Check Format',8,1)
		   THIS.ADDLISTITEM('CF',8,2)
		ENDIF
		
		DODEFAULT()
		
		*  The option for enhanced check stubs uses a dmcheklv format, so unless they've got that option chosen, the option shouldn't be visible
		IF this.Value <> 'LV'
		   this.Parent.chktwoLines.Visible = .f.
		ELSE
		   this.Parent.chktwoLines.Visible = .t.
		ENDIF 
		
		
		
		
		
	ENDPROC

	PROCEDURE cboDMCheck.Valid
		*  The option for enhanced check stubs uses a dmcheklv format, so unless they've got that option chosen, the option shouldn't be visible
		IF this.Value <> 'LV'
		   this.Parent.chkTwoLines.set('value',.f.)
		   this.Parent.chktwoLines.Visible = .f.
		ELSE
		   this.Parent.chktwoLines.Visible = .t.
		ENDIF 
		
		* Don't let them have duplicate stub if check in the middle is printed.
		DO CASE 
		   CASE LEFT(this.Value,1)="D"
		      this.Parent.chkdmDupStub.set('value',.f.)
		   this.Parent.chkdmDupStub.visible = .f.
		   this.Parent.chkdmskipPerf.set('value',.f.)
		   this.Parent.chkdmskipPerf.Visible = .f.
		   CASE this.Value = 'LC'
		   this.Parent.chkdmDupStub.set('value',.f.)
		   this.Parent.chkdmDupStub.visible = .f.
		   this.Parent.chkdmskipPerf.set('value',.f.)
		   this.Parent.chkdmskipPerf.Visible = .f.
		   CASE INLIST(this.Value,'LV','LA')
		      this.Parent.chkdmDupStub.visible = .t.
		      this.Parent.chkdmskipPerf.Visible = .T.
		   OTHERWISE
		      this.Parent.chkdmDupStub.set('value',.f.)
		   this.Parent.chkdmDupStub.visible = .f.
		   this.Parent.chkdmskipPerf.set('value',.f.)
		   this.Parent.chkdmskipPerf.Visible = .f.
		ENDCASE    
		
		DODEFAULT()
	ENDPROC

	PROCEDURE cboLMCheck.Init
		
		THIS.ADDLISTITEM('Dot-Matrix (No Stub)',1,1)
		THIS.ADDLISTITEM('DN',1,2)
		THIS.ADDLISTITEM('Dot-Matrix (Stub Above)',2,1)
		THIS.ADDLISTITEM('DA',2,2)
		THIS.ADDLISTITEM('Dot-Matrix (Stub Below)',3,1)
		THIS.ADDLISTITEM('DB',3,2)
		THIS.ADDLISTITEM('Laser (No Stub)',4,1)
		THIS.ADDLISTITEM('LN',4,2)
		THIS.ADDLISTITEM('Laser (Stub Above)',5,1)
		THIS.ADDLISTITEM('LA',5,2)
		THIS.ADDLISTITEM('Laser (Stub Below)',6,1)
		THIS.ADDLISTITEM('LV',6,2)
		THIS.ADDLISTITEM('Laser (Middle Check)',7,1)
		THIS.AddListItem('LC',7,2)
		
		IF m.goApp.lMICROpt
		   THIS.ADDLISTITEM('MICR Laser (Stub Below)',8,1)
		   THIS.ADDLISTITEM('LE',8,2)
		   THIS.ADDLISTITEM('MICR Laser (No Stub)',9,1)
		   THIS.ADDLISTITEM('LM',9,2)
		ENDIF
		
		DODEFAULT()
		
		
		
		
		
	ENDPROC

	PROCEDURE cboPRCheck.Init
		this.addlistitem('Dot-Matrix (Stub Above)',1,1)
		this.addlistitem('DA',1,2)
		this.addlistitem('Dot-Matrix (Stub Below)',2,1)
		this.addlistitem('DB',2,2)
		this.addlistitem('Laser (Stub Below)',3,1)
		this.addlistitem('LV',3,2)
		
		DODEFAULT()
		
		
		
		
	ENDPROC

	PROCEDURE chkAPDupStub.Click
		IF this.Value
		   IF this.Parent.cboAPCheck.Value = 'LC'
		      MESSAGEBOX("Duplicate stub cannot be chosen with the Check in the Middle type of check.",16,'Conflicting Option')
		      this.Value = .f.
		   ENDIF
		ENDIF 
		
		DODEFAULT()
	ENDPROC

	PROCEDURE chkAPVoidNext.Click
		IF THIS.VALUE = .T.
		   IF THIS.PARENT.cboapcheck.VALUE <> 'LV' AND this.Parent.cboapCheck.Value <> 'LA' &&  Neither correct option is chosen for check type
		      THISFORM.oMessage.Warning('Laser (Stub Below) or Laser (Stub Above) must be selected as your check type to use this option.')
		      THIS.SET('value',.F.)
		      RETURN .F.
		   ENDIF
		   DO ..\commonsource\buildcheckv WITH .T.,'AP'  &&  Add void graphic to formats
		ELSE
		   DO ..\commonsource\buildcheckv WITH .F.,'AP'  &&  Remove void graphic from formats
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE chkDMDupStub.Click
		IF this.Value
		   IF this.Parent.cbodmCheck.Value = 'LC'
		      MESSAGEBOX("Duplicate stub cannot be chosen with the Check in the Middle type of check.",16,'Conflicting Option')
		      this.Value = .f.
		   ENDIF
		ENDIF 
		
		DODEFAULT()
	ENDPROC

	PROCEDURE chkVoidNext.Click
		IF THIS.VALUE = .T.
		   IF THIS.PARENT.cbodmcheck.VALUE <> 'LV' AND this.Parent.cbodMCheck.Value <> 'LA' &&  Neither correct option is chosen for check type
		      THISFORM.oMessage.Warning('Laser (Voucher Below) or Laser (Voucher Above) must be selected as your check type to use this option.')
		      THIS.SET('value',.F.)
		      RETURN .F.
		   ENDIF
		   DO source1\buildcheckv WITH .T.,'DM'  &&  Add void graphic to formats
		ELSE
		   DO source1\buildcheckv WITH .F.,'DM'  &&  Remove void graphic from formats
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE cmdModAP.Click
		DO modicheck WITH 'AP'
	ENDPROC

	PROCEDURE cmdModDM.Click
		DO modicheck WITH 'DM'
	ENDPROC

	PROCEDURE cmdModLM.Click
		DO modicheck WITH 'LM'
	ENDPROC

	PROCEDURE cmdModPD.Click
		DO modicheck WITH 'PD'
	ENDPROC

	PROCEDURE cmdModPR.Click
		DO modicheck WITH 'PR'
	ENDPROC

ENDDEFINE

DEFINE CLASS checksdm AS container 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Shpshapecustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboAPCheck" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboDMCheck" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboLMCheck" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtMincheck" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblMincheck" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtnAPStubLines" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblNstubline" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkVoidNext" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkAPDupStub" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkDMDupStub" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkDMSkipPerf" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtmDMStubLines" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lblfieldlabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkTwoLines" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Chkcheckboxcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcCheckNo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lblfieldlabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklNoFirstName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cmdcommandbuttoncustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLMCheck" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cmdcommandbuttoncustom2" UniqueID="" Timestamp="" />

	BorderWidth = 0
	Height = 496
	Name = "checksdm"
	Width = 612

	ADD OBJECT 'cboAPCheck' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		BoundTo = .T., ;
		ControlSource = "apopt.cchecktype", ;
		Height = 20, ;
		Left = 148, ;
		Name = "cboAPCheck", ;
		TabIndex = 4, ;
		Top = 66, ;
		Width = 187
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboDMCheck' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		BoundTo = .T., ;
		ControlSource = "options.cchecktype", ;
		Height = 20, ;
		Left = 148, ;
		Name = "cboDMCheck", ;
		TabIndex = 10, ;
		Top = 183, ;
		Width = 187
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboLMCheck' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		BoundTo = .T., ;
		ControlSource = "landopt.cchecktype", ;
		Height = 20, ;
		Left = 148, ;
		Name = "cboLMCheck", ;
		TabIndex = 25, ;
		Top = 357, ;
		Width = 187
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'chkAPDupStub' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Print Duplicate Stub", ;
		ControlSource = "apopt.ldupstub", ;
		Left = 148, ;
		Name = "chkAPDupStub", ;
		TabIndex = 7, ;
		Top = 102
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Chkcheckboxcustom1' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Void Next Check If Overflow Occurs", ;
		Comment = "", ;
		ControlSource = "apopt.lVoidNext", ;
		Height = 16, ;
		Left = 148, ;
		Name = "Chkcheckboxcustom1", ;
		TabIndex = 8, ;
		Top = 129, ;
		Width = 195
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkDMDupStub' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Print Duplicate Stub", ;
		ControlSource = "options.ldupstub", ;
		Left = 90, ;
		Name = "chkDMDupStub", ;
		TabIndex = 14, ;
		Top = 211
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkDMSkipPerf' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Skip Perf on Check Stub", ;
		ControlSource = "options.lskipperf", ;
		Height = 16, ;
		Left = 234, ;
		Name = "chkDMSkipPerf", ;
		TabIndex = 15, ;
		Top = 211, ;
		Width = 134
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklNoFirstName' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Don't Use Owner's Primary Name With A Secondary Address on Checks", ;
		ControlSource = "options.lNoFirstName", ;
		Left = 90, ;
		Name = "chklNoFirstName", ;
		TabIndex = 19, ;
		Top = 256
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkTwoLines' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Print Enhanced Check Stub", ;
		ControlSource = "options.ltwolines", ;
		Height = 16, ;
		Left = 379, ;
		Name = "chkTwoLines", ;
		TabIndex = 16, ;
		Top = 211, ;
		Width = 148
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkVoidNext' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Void Next Check If Overflow Occurs", ;
		Comment = "", ;
		ControlSource = "options.lVoidNext", ;
		Height = 16, ;
		Left = 90, ;
		Name = "chkVoidNext", ;
		TabIndex = 17, ;
		Top = 235, ;
		Width = 195
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Cmdcommandbuttoncustom2' AS cmdcommandbuttoncustom WITH ;
		Caption = "Modify Ck", ;
		Left = 468, ;
		Name = "Cmdcommandbuttoncustom2", ;
		Top = 276
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Cmdcommandbuttoncustom4' AS cmdcommandbuttoncustom WITH ;
		Caption = "Modify Ck", ;
		Height = 23, ;
		Left = 468, ;
		Name = "Cmdcommandbuttoncustom4", ;
		Top = 120, ;
		Width = 75
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdLMCheck' AS cmdcommandbuttoncustom WITH ;
		Caption = "Modify Ck", ;
		Left = 468, ;
		Name = "cmdLMCheck", ;
		Top = 372
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Lblfieldlabelcustom1' AS lblfieldlabelcustom WITH ;
		Caption = "# Lines on Check Stub:", ;
		Height = 16, ;
		Left = 306, ;
		Name = "Lblfieldlabelcustom1", ;
		TabIndex = 20, ;
		Top = 235, ;
		Width = 113
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lblfieldlabelcustom2' AS lblfieldlabelcustom WITH ;
		Caption = "Next Check #", ;
		Height = 16, ;
		Left = 90, ;
		Name = "Lblfieldlabelcustom2", ;
		TabIndex = 22, ;
		Top = 282, ;
		Width = 66
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		BackStyle = 1, ;
		Caption = "Accounts Payable", ;
		FontBold = .T., ;
		ForeColor = 0,0,255, ;
		Left = 73, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 2, ;
		Top = 35
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		BackStyle = 1, ;
		Caption = "Revenue Distribution", ;
		FontBold = .T., ;
		ForeColor = 0,0,255, ;
		Left = 69, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 9, ;
		Top = 161
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom4' AS lbllabelcustom WITH ;
		BackStyle = 1, ;
		Caption = "Delay Rentals", ;
		FontBold = .T., ;
		ForeColor = 0,0,255, ;
		Left = 73, ;
		Name = "Lbllabelcustom4", ;
		TabIndex = 23, ;
		Top = 313
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom5' AS lbllabelcustom WITH ;
		Caption = "Check Type", ;
		Left = 85, ;
		Name = "Lbllabelcustom5", ;
		TabIndex = 3, ;
		Top = 66
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom6' AS lbllabelcustom WITH ;
		Caption = "Check Type", ;
		Left = 85, ;
		Name = "Lbllabelcustom6", ;
		TabIndex = 12, ;
		Top = 185
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom8' AS lbllabelcustom WITH ;
		Caption = "Check Type", ;
		Left = 85, ;
		Name = "Lbllabelcustom8", ;
		TabIndex = 24, ;
		Top = 357
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom9' AS lbllabelcustom WITH ;
		Caption = "Check Printing Preferences", ;
		FontBold = .T., ;
		FontSize = 12, ;
		Left = 200, ;
		Name = "Lbllabelcustom9", ;
		TabIndex = 1, ;
		Top = 5
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblMincheck' AS lblfieldlabelcustom WITH ;
		Caption = "Minimum Chk Amt:", ;
		Height = 16, ;
		Left = 356, ;
		Name = "lblMincheck", ;
		TabIndex = 13, ;
		Top = 185, ;
		Width = 88
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblNstubline' AS lblfieldlabelcustom WITH ;
		Caption = "# Lines on Check Stub:", ;
		Height = 16, ;
		Left = 352, ;
		Name = "lblNstubline", ;
		TabIndex = 6, ;
		Top = 70, ;
		Width = 113
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Shpshapecustom1' AS shpshapecustom WITH ;
		Height = 113, ;
		Left = 61, ;
		Name = "Shpshapecustom1", ;
		Top = 42, ;
		Width = 493
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Shpshapecustom2' AS shpshapecustom WITH ;
		Height = 143, ;
		Left = 60, ;
		Name = "Shpshapecustom2", ;
		Top = 167, ;
		Width = 494
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Shpshapecustom4' AS shpshapecustom WITH ;
		Height = 93, ;
		Left = 60, ;
		Name = "Shpshapecustom4", ;
		Top = 319, ;
		Width = 494
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'txtcCheckNo' AS txttextboxcustom WITH ;
		ControlSource = "options.ccheckno", ;
		Height = 20, ;
		Left = 171, ;
		Name = "txtcCheckNo", ;
		TabIndex = 21, ;
		Top = 280, ;
		Width = 84
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtmDMStubLines' AS txttextboxcustom WITH ;
		ControlSource = "options.nstubline", ;
		Height = 20, ;
		Left = 426, ;
		Name = "txtmDMStubLines", ;
		TabIndex = 18, ;
		Top = 232, ;
		Width = 29
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtMincheck' AS txttextboxcustom WITH ;
		ControlSource = "options.nmincheck", ;
		Height = 20, ;
		InputMask = "999,999.99", ;
		Left = 452, ;
		Name = "txtMincheck", ;
		TabIndex = 11, ;
		Top = 183, ;
		Width = 84
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtnAPStubLines' AS txttextboxcustom WITH ;
		ControlSource = "apopt.nstubline", ;
		Height = 20, ;
		Left = 478, ;
		Name = "txtnAPStubLines", ;
		TabIndex = 5, ;
		Top = 68, ;
		Width = 29
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE Init
		IF m.goapp.lQBVersion  &&  If QB version, make the Delay Rental stuff invisible, since it gets printed in QB - BH 09/18/07
		   THIS.lbllabelcustom4.VISIBLE = .F.
		   THIS.lbllabelcustom8.VISIBLE = .F.
		   THIS.shpshapecustom4.VISIBLE = .F.
		   THIS.cboLMCheck.VISIBLE = .F.
		   THIS.cmdLMCheck.Visible = .F.
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE cboAPCheck.Init
		
		THIS.ADDLISTITEM('Dot-Matrix (No Stub)',1,1)
		THIS.ADDLISTITEM('DN',1,2)
		THIS.ADDLISTITEM('Dot-Matrix (Stub Above)',2,1)
		THIS.ADDLISTITEM('DA',2,2)
		THIS.ADDLISTITEM('Dot-Matrix (Stub Below)',3,1)
		THIS.ADDLISTITEM('DB',3,2)
		THIS.ADDLISTITEM('Laser (No Stub)',4,1)
		THIS.ADDLISTITEM('LN',4,2)
		THIS.ADDLISTITEM('Laser (Stub Above)',5,1)
		THIS.ADDLISTITEM('LA',5,2)
		THIS.ADDLISTITEM('Laser (Stub Below)',6,1)
		THIS.ADDLISTITEM('LV',6,2)
		THIS.ADDLISTITEM('Laser (Middle Check)',7,1)
		THIS.ADDLISTITEM('LC',7,2)
		
		IF m.goapp.lMICROpt
		   THIS.ADDLISTITEM('MICR Laser (Stub Below)',8,1)
		   THIS.ADDLISTITEM('LE',8,2)
		   THIS.ADDLISTITEM('MICR Laser (No Stub)',9,1)
		   THIS.ADDLISTITEM('LM',9,2)
		   THIS.ADDLISTITEM('Custom Check Format',10,1)
		   THIS.ADDLISTITEM('CF',10,2)
		ELSE
		   THIS.ADDLISTITEM('Custom Check Format',8,1)
		   THIS.ADDLISTITEM('CF',8,2)   
		ENDIF
		
		DODEFAULT()
		
		
		
		
		
	ENDPROC

	PROCEDURE cboAPCheck.Valid
		IF DODEFAULT()
		* Don't let them have duplicate stub if check in the middle is printed.
		   IF THIS.VALUE = 'LC'
		      THIS.PARENT.chkAPDupStub.SET('value', .F.)
		      THIS.PARENT.chkAPDupStub.VISIBLE = .F.
		   ELSE
		      THIS.PARENT.chkAPDupStub.VISIBLE = .T.
		   ENDIF
		ENDIF
	ENDPROC

	PROCEDURE cboDMCheck.Init
		
		THIS.ADDLISTITEM('Dot-Matrix (No Stub)',1,1)
		THIS.ADDLISTITEM('DN',1,2)
		THIS.ADDLISTITEM('Dot-Matrix (Stub Above)',2,1)
		THIS.ADDLISTITEM('DA',2,2)
		THIS.ADDLISTITEM('Dot-Matrix (Stub Below)',3,1)
		THIS.ADDLISTITEM('DB',3,2)
		THIS.ADDLISTITEM('Laser (No Stub)',4,1)
		THIS.ADDLISTITEM('LN',4,2)
		THIS.ADDLISTITEM('Laser (Stub Above)',5,1)
		THIS.ADDLISTITEM('LA',5,2)
		THIS.ADDLISTITEM('Laser (Stub Below)',6,1)
		THIS.ADDLISTITEM('LV',6,2)
		THIS.ADDLISTITEM('Laser (Middle Check)',7,1)
		THIS.ADDLISTITEM('LC',7,2)
		
		* Don't show MICR check formats if they don't have the MICR option
		IF m.goapp.lMicrOpt
		   THIS.ADDLISTITEM('MICR Laser (Stub Below)',8,1)
		   THIS.ADDLISTITEM('LE',8,2)
		   THIS.ADDLISTITEM('MICR Laser (No Stub)',9,1)
		   THIS.ADDLISTITEM('LM',9,2)
		   THIS.ADDLISTITEM('Custom Check Format',10,1)
		   THIS.ADDLISTITEM('CF',10,2)
		ELSE
		   THIS.ADDLISTITEM('Custom Check Format',8,1)
		   THIS.ADDLISTITEM('CF',8,2)
		ENDIF
		
		DODEFAULT()
		
		*  The option for enhanced check stubs uses a dmcheklv format, so unless they've got that option chosen, the option shouldn't be visible
		IF this.Value <> 'LV'
		   this.Parent.chktwoLines.Visible = .f.
		ELSE
		   this.Parent.chktwoLines.Visible = .t.
		ENDIF 
		
	ENDPROC

	PROCEDURE cboDMCheck.Valid
		*  The option for enhanced check stubs uses a dmcheklv format, so unless they've got that option chosen, the option shouldn't be visible
		IF this.Value <> 'LV'
		   this.Parent.chkTwoLines.set('value',.f.)
		   this.Parent.chktwoLines.Visible = .f.
		ELSE
		   this.Parent.chktwoLines.Visible = .t.
		ENDIF 
		
		* Don't let them have duplicate stub if check in the middle is printed.
		DO CASE 
		   CASE LEFT(this.Value,1)="D"
		      this.Parent.chkdmDupStub.set('value',.f.)
		   this.Parent.chkdmDupStub.visible = .f.
		   this.Parent.chkdmskipPerf.set('value',.f.)
		   this.Parent.chkdmskipPerf.Visible = .f.
		   CASE this.Value = 'LC'
		   this.Parent.chkdmDupStub.set('value',.f.)
		   this.Parent.chkdmDupStub.visible = .f.
		   this.Parent.chkdmskipPerf.set('value',.f.)
		   this.Parent.chkdmskipPerf.Visible = .f.
		   CASE INLIST(this.Value,'LV','LA')
		      this.Parent.chkdmDupStub.visible = .t.
		      this.Parent.chkdmskipPerf.Visible = .T.
		   OTHERWISE
		      this.Parent.chkdmDupStub.set('value',.f.)
		   this.Parent.chkdmDupStub.visible = .f.
		   this.Parent.chkdmskipPerf.set('value',.f.)
		   this.Parent.chkdmskipPerf.Visible = .f.
		ENDCASE    
		
		DODEFAULT()
	ENDPROC

	PROCEDURE cboLMCheck.Init
		
		this.addlistitem('Dot-Matrix (No Stub)',1,1)
		this.addlistitem('DN',1,2)
		this.addlistitem('Dot-Matrix (Stub Above)',2,1)
		this.addlistitem('DA',2,2)
		this.addlistitem('Dot-Matrix (Stub Below)',3,1)
		this.addlistitem('DB',3,2)
		this.addlistitem('Laser (No Stub)',4,1)
		this.addlistitem('LN',4,2)
		this.addlistitem('Laser (Stub Above)',5,1)
		this.addlistitem('LA',5,2)
		this.addlistitem('Laser (Stub Below)',6,1)
		this.addlistitem('LV',6,2)
		THIS.ADDLISTITEM('Laser (Middle Check)',7,1)
		THIS.AddListItem('LC',7,2)
		
		* Don't show MICR check formats if they don't have the MICR option
		IF m.goapp.lMicrOpt
		   THIS.ADDLISTITEM('MICR Laser (Stub Below)',8,1)
		   THIS.ADDLISTITEM('LE',8,2)
		   THIS.ADDLISTITEM('MICR Laser (No Stub)',9,1)
		   THIS.ADDLISTITEM('LM',9,2)
		   THIS.ADDLISTITEM('Custom Check Format',10,1)
		   THIS.ADDLISTITEM('CF',10,2)
		ELSE
		   THIS.ADDLISTITEM('Custom Check Format',8,1)
		   THIS.ADDLISTITEM('CF',8,2)
		ENDIF
		
		
		
		DODEFAULT()
		
		
		
		
		
	ENDPROC

	PROCEDURE chkAPDupStub.Click
		IF this.Value
		   IF this.Parent.cboapCheck.Value = 'LC'
		      MESSAGEBOX("Duplicate stub cannot be chosen with the Check in the Middle type of check.",16,'Conflicting Option')
		      this.Value = .f.
		   ENDIF
		ENDIF 
		
		DODEFAULT()
	ENDPROC

	PROCEDURE Chkcheckboxcustom1.Click
		IF THIS.VALUE = .T.
		   IF THIS.PARENT.cbodmcheck.VALUE <> 'LV' AND this.Parent.cbodMCheck.Value <> 'LA' &&  Neither correct option is chosen for check type
		      THISFORM.oMessage.Warning('Laser (Voucher Below) or Laser (Voucher Above) must be selected as your check type to use this option.')
		      THIS.SET('value',.F.)
		      RETURN .F.
		   ENDIF
		   DO source1\buildcheckv WITH .T.,'AP'  &&  Add void graphic to formats
		ELSE
		   DO source1\buildcheckv WITH .F.,'AP'  &&  Remove void graphic from formats
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE chkDMDupStub.Click
		IF this.Value
		   IF this.Parent.cbodmCheck.Value = 'LC'
		      MESSAGEBOX("Duplicate stub cannot be chosen with the Check in the Middle type of check.",16,'Conflicting Option')
		      this.Value = .f.
		   ENDIF
		ENDIF 
		
		DODEFAULT()
	ENDPROC

	PROCEDURE chkVoidNext.Click
		IF THIS.VALUE = .T.
		   IF THIS.PARENT.cbodmcheck.VALUE <> 'LV' AND this.Parent.cbodMCheck.Value <> 'LA' &&  Neither correct option is chosen for check type
		      THISFORM.oMessage.Warning('Laser (Voucher Below) or Laser (Voucher Above) must be selected as your check type to use this option.')
		      THIS.SET('value',.F.)
		      RETURN .F.
		   ENDIF
		   DO source1\buildcheckv WITH .T.,'DM'  &&  Add void graphic to formats
		ELSE
		   DO source1\buildcheckv WITH .F.,'DM'  &&  Remove void graphic from formats
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE Cmdcommandbuttoncustom2.Click
		DO modicheck WITH 'DM'
	ENDPROC

	PROCEDURE Cmdcommandbuttoncustom4.Click
		DO modicheck WITH 'AP'
	ENDPROC

	PROCEDURE cmdLMCheck.Click
		DO modicheck WITH 'LM'
	ENDPROC

ENDDEFINE

DEFINE CLASS email AS container 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtEmailServer" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtEmailUser" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtEmailPass" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtEmailAddress" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdTest" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkOutlook" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkUseSSL" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSMTPPort" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtSMTPPort" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkReportErrors" UniqueID="" Timestamp="" />

	#INCLUDE "..\source\appdefs.h"
	*<DefinedPropArrayMethod>
		*p: csender		&& Name email from
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	csender = 		&& Name email from
	Height = 496
	Name = "email"
	Width = 612
	_memberdata = <VFPData>
		<memberdata name="csender" type="property" display="cSender"/>
		</VFPData>		&& XML Metadata for customizable properties

	ADD OBJECT 'chkOutlook' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Use Outlook Mail Settings", ;
		ControlSource = "options.lUseOutlook", ;
		Left = 60, ;
		Name = "chkOutlook", ;
		TabIndex = 6, ;
		Top = 59, ;
		Value = .F.
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkReportErrors' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Don't Automatically Report Errors or Diagnostics to SherWare Support", ;
		Left = 214, ;
		Name = "chkReportErrors", ;
		TabIndex = 7, ;
		ToolTipText = "Enables or Disables the automatic emailing of error reports to SherWare Support when they happen. (Recommended)", ;
		Top = 59, ;
		Value = .F.
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkUseSSL' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Use TLS/SSL", ;
		ControlSource = "options.lusessl", ;
		Left = 263, ;
		Name = "chkUseSSL", ;
		TabIndex = 14, ;
		Top = 354
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdTest' AS cmdcommandbuttoncustom WITH ;
		Caption = "Test E-Mail Setup", ;
		Height = 36, ;
		Left = 258, ;
		Name = "cmdTest", ;
		TabIndex = 15, ;
		Top = 400, ;
		Width = 96
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "E-Mail Account", ;
		Left = 76, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 2, ;
		Top = 173
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "E-Mail Preferences", ;
		FontBold = .T., ;
		FontSize = 12, ;
		Left = 236, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 1, ;
		Top = 13
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom3' AS lbllabelcustom WITH ;
		Caption = "Password", ;
		Left = 76, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 3, ;
		Top = 221
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom4' AS lbllabelcustom WITH ;
		Caption = "Mail Server", ;
		Left = 76, ;
		Name = "Lbllabelcustom4", ;
		TabIndex = 4, ;
		Top = 125
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom5' AS lbllabelcustom WITH ;
		Caption = "E-Mail Address", ;
		Left = 76, ;
		Name = "Lbllabelcustom5", ;
		TabIndex = 5, ;
		Top = 269
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSMTPPort' AS lbllabelcustom WITH ;
		Caption = "SMTP Port", ;
		Left = 76, ;
		Name = "lblSMTPPort", ;
		TabIndex = 12, ;
		Top = 317, ;
		Visible = .T.
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Shpshapecustom1' AS shpshapecustom WITH ;
		Height = 299, ;
		Left = 52, ;
		Name = "Shpshapecustom1", ;
		Top = 85, ;
		Width = 516
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'txtEmailAddress' AS txttextboxcustom WITH ;
		cencryptionkey = , ;
		ControlSource = "options.cemailaddress", ;
		Height = 20, ;
		Left = 187, ;
		Name = "txtEmailAddress", ;
		TabIndex = 11, ;
		Top = 269, ;
		Width = 308
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtEmailPass' AS txttextboxcustom WITH ;
		cencryptionkey = SherWareKey_@8@2899909, ;
		ControlSource = "options.cemailpass", ;
		Height = 20, ;
		Left = 187, ;
		Name = "txtEmailPass", ;
		PasswordChar = "*", ;
		TabIndex = 10, ;
		Top = 221, ;
		Width = 308
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtEmailServer' AS txttextboxcustom WITH ;
		ControlSource = "options.cemailserver", ;
		Height = 20, ;
		Left = 187, ;
		Name = "txtEmailServer", ;
		TabIndex = 8, ;
		Top = 125, ;
		Width = 312
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtEmailUser' AS txttextboxcustom WITH ;
		ControlSource = "options.cemailuser", ;
		Height = 20, ;
		Left = 187, ;
		Name = "txtEmailUser", ;
		TabIndex = 9, ;
		Top = 173, ;
		Width = 308
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtSMTPPort' AS txttextboxcustom WITH ;
		ControlSource = "options.nsmtpport", ;
		Left = 187, ;
		Name = "txtSMTPPort", ;
		TabIndex = 13, ;
		Top = 317, ;
		Visible = .T.
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE Init
		IF options.lUseOutlook
		   this.txtEmailAddress.set('Enabled',.f.)
		   this.txtemailPass.set('Enabled',.f.)
		   this.txtEmailServer.set('Enabled',.f.)
		   this.txtEmailUser.set('Enabled',.f.)
		   this.txtSMTPPort.set('Enabled',.f.)
		   this.chkUseSSL.set('Enabled',.f.)
		ELSE
		   this.txtEmailAddress.set('Enabled',.t.)
		   this.txtemailPass.set('Enabled',.t.)
		   this.txtEmailServer.set('Enabled',.t.)
		   this.txtEmailUser.set('Enabled',.t.)
		   this.txtSMTPPort.set('Enabled',.t.)
		   this.chkUseSSL.set('Enabled',.t.)
		ENDIF 
		
		IF this.txtsmTPPort.Value = 0
		   this.txtsmTPPort.set('Value',25)
		ENDIF 
		
		IF FILE('datafiles\nosend.txt')
		   this.chkReportErrors.value = .t.
		ELSE
		   this.chkReportErrors.value = .f.
		ENDIF 
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE chkOutlook.Click
		LOCAL oCDO AS 'swCDO'
		LOCAL llReturn, loError
		llReturn = .T.
		
		TRY
		   IF THIS.VALUE
		* Check to see if CDO can be instantiated.
		* If not, then Outlook or Outlook Express are not setup and
		* can't be used.
		      oCDO      = CREATEOBJECT('swCDO')
		      IF VARTYPE(oCDO) <> 'O'
		         THIS.VALUE = .F.
		         MESSAGEBOX('Outlook is not installed or setup on this workstation. ' + ;
		              'The email parameters will have to be specified in order ' + ;
		              'to send email from this application.', 48, 'Outlook Not Found')
		         RETURN
		      ENDIF
		
		      RELEASE oCDO
		
		      THIS.PARENT.txtEmailAddress.ENABLED = .F.
		      THIS.PARENT.txtemailPass.ENABLED    = .F.
		      THIS.PARENT.txtEmailServer.ENABLED  = .F.
		      THIS.PARENT.txtEmailUser.ENABLED    = .F.
		      THIS.PARENT.txtsmTPPort.ENABLED     = .F.
		      THIS.PARENT.chkuseSSL.ENABLED       = .F.
		   ELSE
		      THIS.PARENT.txtEmailAddress.ENABLED = .T.
		      THIS.PARENT.txtemailPass.ENABLED    = .T.
		      THIS.PARENT.txtEmailServer.ENABLED  = .T.
		      THIS.PARENT.txtEmailUser.ENABLED    = .T.
		      THIS.PARENT.txtsmTPPort.ENABLED     = .T.
		      THIS.PARENT.chkuseSSL.ENABLED       = .T.
		   ENDIF
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'chkOutlook', loError.LINENO, 'Email Prefs', loError.ERRORNO, loError.MESSAGE
		   MESSAGEBOX('Unable to process the email prefs at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
		
		
	ENDPROC

	PROCEDURE chkReportErrors.Click
		LOCAL llReturn, loError
		*:Global fh
		llReturn = .T.
		
		TRY
		   IF THIS.VALUE
		      IF NOT FILE('datafiles\nosend.txt')
		         fh = FCREATE('datafiles\nosend.txt')
		         FCLOSE(fh)
		      ENDIF
		   ELSE
		      ERASE ('datafiles\nosend.txt')
		   ENDIF
		CATCH TO loError
		   MESSAGEBOX(loError.MESSAGE, 0, 'Error')
		ENDTRY
	ENDPROC

	PROCEDURE chkUseSSL.Click
		IF this.Value
		   IF NOT FILE(m.goapp.ccommonfolder+'bin\wwdotnetbridge.dll')
		      getdlls()
		   ENDIF
		ENDIF
	ENDPROC

	PROCEDURE cmdTest.Click
		LOCAL lcTo
		LOCAL oSendMail AS 'swSendMail'
		LOCAL llResult, llReturn, loError
		*:Global omessage
		
		llReturn = .T.
		
		TRY
		   lcTo = 'support@sherware.com'
		
		   oSendMail = CREATEOBJECT('swSendMail')
		
		   omessage = findglobalobject('cmmessage')
		
		   IF VARTYPE(omessage) = 'O'
		      lcTo = omessage.gettext('Send Test Email To:', 'Send To', '<Enter Your Email Address Here>')
		   ENDIF
		
		   IF NOT '@' $ lcTo
		      omessage.Warning('Please specify your email address before sending the test email.')
		      llReturn = .F.
		      EXIT
		   ENDIF
		   oSendMail.lOutlook = THIS.PARENT.chkOutlook.VALUE
		
		   IF NOT THIS.PARENT.chkOutlook.VALUE
		      oSendMail.lUseSSL   = THIS.PARENT.chkUseSSL.VALUE
		      oSendMail.nSMTPPort = 587
		   ENDIF
		
		   oSendMail.cEmailServer  = ALLT(THIS.PARENT.txtEmailServer.VALUE)
		   oSendMail.cEmailAddress = ALLT(THIS.PARENT.txtemailAddress.VALUE)
		   oSendMail.cSender       = 'Test Email'
		   oSendMail.cEmailUser    = ALLT(THIS.PARENT.txtemailUser.VALUE)
		   oSendMail.cEmailPass    = ALLT(THIS.PARENT.txtEmailPass.VALUE)
		   IF NOT EMPTY(options.nSMTPPort)
		      oSendMail.nSMTPPort = options.nSMTPPort
		   ENDIF
		
		   oSendMail.cTo      = lcTo
		   oSendMail.cCC      = ""
		   oSendMail.cBCC     = ""
		   oSendMail.cSubject = 'Test SherWare E-Mail Setup'
		   oSendMail.cBody    = 'Test e-mail from Client:  ' + m.goapp.cClient + CR_LF + ;
		      'Company:  ' + m.goapp.cCompanyName + CR_LF + ;
		      'Software: ' + ALLTRIM(UPPER(m.goapp.cexecutable)) + CR_LF + ;
		      'RegCode:  ' + m.goapp.cCode + CR_LF + ;
		      'Version:  ' + m.goapp.cFileVersion
		
		   oSendMail.cAttachment  = ''
		
		   IF NOT oSendMail.lOutlook AND (EMPTY(oSendMail.cEmailServer) OR EMPTY(oSendMail.cEmailAddress) OR EMPTY(oSendMail.cEmailUser) OR EMPTY(oSendMail.cEmailPass))
		      omessage.Warning('If not using the option to Use Outlook Mail Settings, the Mail Server, Account, Password, and E-Mail Address must be specified on this screen. This can be gotten from your ISP or network administrator.')
		      RELEASE oSendMail
		      llReturn = .F.
		      EXIT 
		   ENDIF
		
		   TRY
		      llResult = oSendMail.SendMail()       && Send again - wait for completion
		      IF !llResult
		         DO CASE
		            CASE oSendMail.cErrorMsg = '535'
		               omessage.Warning('The validation with the email server failed.  Double-check the Mail Server, Account, and Password specified on this screen, and try again.')
		            CASE oSendMail.cErrorMsg = '-2'
		               omessage.Warning('The Mail Server cannot be found.  Double-check the Mail Server specified on this screen, and try again.')
		            OTHERWISE
		               IF 'gmail' $ LOWER(oSendMail.cEmailServer)
		                  MESSAGEBOX('Unable to send email...Check your settings and try again.' + CHR(10) + ;
		                             'Since you are using gMail, you probably will need to check out ' + ;
		                             'the instructions given in this help topic.' + CHR(10) + ;
		                             'https://support.google.com/accounts/answer/6010255?hl=en' + CHR(13)+CHR(13) + ;
		                             oSendMail.cErrorMsg, 16, 'E-Mail Setup Problem')
		               ELSE    
		                  MESSAGEBOX('Unable to send email...Check your settings and try again.' + CHR(10) + oSendMail.cErrorMsg, 16, 'E-Mail Setup Problem')
		               ENDIF    
		         ENDCASE
		      ELSE
		         MESSAGEBOX("Message sent...Check your e-mail to see if it arrives...", 0, 'E-Mail Setup')
		      ENDIF
		   CATCH TO loError
		      IF oSendMail.lOutlook
		         omessage.Warning('The test email was unable to be sent. Try un-marking the option about using Outlook settings, fill out the server and account information shown on this screen, and try again.')
		      ELSE
		         MESSAGEBOX('The test email was unable to be sent. Please verify that your internet connection is active, and try again.' + CHR(10) + ;
		              loError.MESSAGE, 48, 'Email Setup Problem')
		      ENDIF
		   ENDTRY
		   RELEASE oSendMail
		
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'cmdTest', loError.LINENO, 'Email Prefs', loError.ERRORNO, loError.MESSAGE
		   MESSAGEBOX('Unable to process the email test at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
	ENDPROC

ENDDEFINE

DEFINE CLASS energylink AS container 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtUserName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtPassword" UniqueID="" Timestamp="" />

	Height = 496
	Name = "energylink"
	Width = 612

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "User Name:", ;
		Left = 129, ;
		Name = "Lbllabelcustom1", ;
		Top = 92
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "Password:", ;
		Left = 129, ;
		Name = "Lbllabelcustom2", ;
		Top = 140
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom3' AS lbllabelcustom WITH ;
		Caption = "EnergyLink Preferences", ;
		FontBold = .T., ;
		FontSize = 12, ;
		Left = 213, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 1, ;
		Top = 21
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Shpshapecustom1' AS shpshapecustom WITH ;
		Height = 288, ;
		Left = 91, ;
		Name = "Shpshapecustom1", ;
		Top = 62, ;
		Width = 420
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'txtPassword' AS txttextboxcustom WITH ;
		cencryptionkey = SherWareKey_@8@2899909, ;
		ControlSource = "options.el_pwd", ;
		Height = 20, ;
		Left = 225, ;
		Name = "txtPassword", ;
		Top = 140, ;
		Width = 195
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtUserName' AS txttextboxcustom WITH ;
		ControlSource = "options.el_username", ;
		Height = 20, ;
		Left = 225, ;
		Name = "txtUserName", ;
		Top = 92, ;
		Width = 195
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

ENDDEFINE

DEFINE CLASS glprefs AS container 		&& G/L Preferences Container
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtRevDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtExpClearDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtUndDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSuspense" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtSuspDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklFYEnd" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCurEarn" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtSuspense" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtUndFund" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtInven" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtRevDist" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtExpClear" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblJIB" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkGroup" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtRetEarn" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdRetEarn" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCurEarn" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdInven" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdRevDist" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblMonth" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboMonth" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdExpClear" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSuspense" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblRetEarn" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCurEarn" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdUndFunds" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblInven" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtRetDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblRevDist" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCurDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkCheckName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtInvenDesc" UniqueID="" Timestamp="" />

	BorderWidth = 0
	Height = 496
	Name = "glprefs"
	Width = 612

	ADD OBJECT 'cboMonth' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		BoundTo = .T., ;
		ControlSource = "glopt.cfybegin", ;
		DisplayValue = , ;
		Height = 20, ;
		Left = 224, ;
		Margin = 2, ;
		Name = "cboMonth", ;
		RowSource = "", ;
		RowSourceType = 0, ;
		TabIndex = 2, ;
		Top = 59, ;
		Value = , ;
		Width = 102, ;
		ZOrderSet = 27
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'chkCheckName' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Specify Check File Names For Each Bank Account", ;
		ControlSource = "glopt.lchecknames", ;
		Left = 277, ;
		Name = "chkCheckName", ;
		TabIndex = 5, ;
		Top = 112
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkGroup' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "Group Data Entries By Screen Session", ;
		ControlSource = "glopt.lbunch", ;
		Height = 16, ;
		Left = 61, ;
		Name = "chkGroup", ;
		SpecialEffect = 0, ;
		Style = 0, ;
		TabIndex = 4, ;
		Top = 112, ;
		Width = 205, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklFYEnd' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Fiscal Year is Year of Ending Month", ;
		ControlSource = "glopt.lfyend", ;
		Left = 346, ;
		Name = "chklFYEnd", ;
		TabIndex = 3, ;
		Top = 61, ;
		Visible = .F.
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdCurEarn' AS swlookupbutton WITH ;
		Left = 250, ;
		Name = "cmdCurEarn", ;
		TabIndex = 17, ;
		TabStop = .F., ;
		Top = 238, ;
		ZOrderSet = 23
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdExpClear' AS swlookupbutton WITH ;
		Left = 503, ;
		Name = "cmdExpClear", ;
		TabIndex = 19, ;
		TabStop = .F., ;
		Top = 239, ;
		ZOrderSet = 28
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdInven' AS swlookupbutton WITH ;
		Left = 250, ;
		Name = "cmdInven", ;
		TabIndex = 25, ;
		TabStop = .F., ;
		Top = 297, ;
		ZOrderSet = 24
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdRetEarn' AS swlookupbutton WITH ;
		Left = 250, ;
		Name = "cmdRetEarn", ;
		TabIndex = 9, ;
		TabStop = .F., ;
		Top = 182, ;
		ZOrderSet = 22
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdRevDist' AS swlookupbutton WITH ;
		Left = 503, ;
		Name = "cmdRevDist", ;
		TabIndex = 11, ;
		TabStop = .F., ;
		Top = 183, ;
		ZOrderSet = 25
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdSuspense' AS swlookupbutton WITH ;
		Left = 361, ;
		Name = "cmdSuspense", ;
		TabIndex = 33, ;
		TabStop = .F., ;
		Top = 347, ;
		ZOrderSet = 44
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdUndFunds' AS swlookupbutton WITH ;
		Left = 503, ;
		Name = "cmdUndFunds", ;
		TabIndex = 27, ;
		TabStop = .F., ;
		Top = 298, ;
		ZOrderSet = 32
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'lblCurEarn' AS lbltextcustom WITH ;
		BackStyle = 0, ;
		Caption = "Current Earnings:", ;
		FontBold = .T., ;
		Height = 16, ;
		Left = 75, ;
		Name = "lblCurEarn", ;
		TabIndex = 20, ;
		Top = 240, ;
		Width = 99, ;
		ZOrderSet = 31
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblInven' AS lbltextcustom WITH ;
		Caption = "Inventory:", ;
		FontBold = .T., ;
		Height = 16, ;
		Left = 75, ;
		Name = "lblInven", ;
		TabIndex = 28, ;
		Top = 301, ;
		Width = 57, ;
		ZOrderSet = 33
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblJIB' AS lbltextcustom WITH ;
		Caption = "Expense Clearing:", ;
		FontBold = .T., ;
		Height = 16, ;
		Left = 328, ;
		Name = "lblJIB", ;
		TabIndex = 21, ;
		Top = 240, ;
		Width = 101, ;
		ZOrderSet = 38
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Alignment = 2, ;
		AutoSize = .F., ;
		Caption = "Default Account Numbers", ;
		FontBold = .T., ;
		Height = 17, ;
		Left = 217, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 7, ;
		Top = 151, ;
		Width = 180, ;
		ZOrderSet = 47
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "General Ledger Preferences", ;
		FontBold = .T., ;
		FontSize = 12, ;
		Left = 198, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 1, ;
		Top = 2
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblMonth' AS lbltextcustom WITH ;
		Alignment = 2, ;
		Caption = "Starting Month of Fiscal Year", ;
		Height = 16, ;
		Left = 61, ;
		Name = "lblMonth", ;
		TabIndex = 6, ;
		Top = 61, ;
		Width = 142, ;
		ZOrderSet = 26
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblRetEarn' AS lbltextcustom WITH ;
		Caption = "Retained Earnings:", ;
		FontBold = .T., ;
		Height = 16, ;
		Left = 75, ;
		Name = "lblRetEarn", ;
		TabIndex = 12, ;
		Top = 184, ;
		Width = 104, ;
		ZOrderSet = 30
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblRevDist' AS lbltextcustom WITH ;
		Caption = "Revenue Clearing:", ;
		FontBold = .T., ;
		Height = 16, ;
		Left = 328, ;
		Name = "lblRevDist", ;
		TabIndex = 13, ;
		Top = 184, ;
		Width = 102, ;
		ZOrderSet = 35
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSuspense' AS lbltextcustom WITH ;
		Caption = "Undeposited Funds:", ;
		FontBold = .T., ;
		Height = 16, ;
		Left = 328, ;
		Name = "lblSuspense", ;
		TabIndex = 29, ;
		Top = 301, ;
		Width = 112, ;
		ZOrderSet = 39
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom1' AS lbltextcustom WITH ;
		Caption = "Catch-All:", ;
		FontBold = .T., ;
		Height = 16, ;
		Left = 187, ;
		Name = "Lbltextcustom1", ;
		TabIndex = 34, ;
		Top = 352, ;
		Width = 54, ;
		ZOrderSet = 40
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Shpshapecustom1' AS shpshapecustom WITH ;
		Height = 60, ;
		Left = 38, ;
		Name = "Shpshapecustom1", ;
		Top = 38, ;
		Width = 528
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Shpshapecustom2' AS shpshapecustom WITH ;
		Height = 36, ;
		Left = 38, ;
		Name = "Shpshapecustom2", ;
		Top = 103, ;
		Width = 528
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Shpshapecustom3' AS shpshapecustom WITH ;
		Height = 258, ;
		Left = 38, ;
		Name = "Shpshapecustom3", ;
		Top = 144, ;
		Width = 528
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'txtCurDesc' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 70, ;
		Name = "txtCurDesc", ;
		ReadOnly = .T., ;
		TabIndex = 22, ;
		TabStop = .F., ;
		Top = 261, ;
		Width = 201, ;
		ZOrderSet = 36
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCurEarn' AS txtquickfill WITH ;
		clistexpression = cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "glopt.ccurearn", ;
		Height = 20, ;
		InputMask = "999999", ;
		Left = 189, ;
		Margin = 1, ;
		MaxLength = 6, ;
		Name = "txtCurEarn", ;
		SelectOnEntry = .T., ;
		TabIndex = 16, ;
		Top = 238, ;
		Width = 53, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtExpClear' AS txtquickfill WITH ;
		clistexpression = cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "glopt.cexpclear", ;
		Height = 20, ;
		InputMask = "999999", ;
		Left = 443, ;
		Margin = 1, ;
		MaxLength = 6, ;
		Name = "txtExpClear", ;
		SelectOnEntry = .T., ;
		TabIndex = 18, ;
		Top = 238, ;
		Width = 53, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtExpClearDesc' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 324, ;
		Name = "txtExpClearDesc", ;
		ReadOnly = .T., ;
		TabIndex = 23, ;
		TabStop = .F., ;
		Top = 261, ;
		Width = 201, ;
		ZOrderSet = 42
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtInven' AS txtquickfill WITH ;
		clistexpression = cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "glopt.cinventory", ;
		Height = 20, ;
		InputMask = "999999", ;
		Left = 189, ;
		Margin = 1, ;
		MaxLength = 6, ;
		Name = "txtInven", ;
		SelectOnEntry = .T., ;
		TabIndex = 24, ;
		Top = 297, ;
		Width = 53, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtInvenDesc' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 70, ;
		Name = "txtInvenDesc", ;
		ReadOnly = .T., ;
		TabIndex = 30, ;
		TabStop = .F., ;
		Top = 321, ;
		Width = 201, ;
		ZOrderSet = 37
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtRetDesc' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 70, ;
		Name = "txtRetDesc", ;
		ReadOnly = .T., ;
		TabIndex = 14, ;
		TabStop = .F., ;
		Top = 205, ;
		Width = 201, ;
		ZOrderSet = 34
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtRetEarn' AS txtquickfill WITH ;
		clistexpression = cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "glopt.cretearn", ;
		Height = 20, ;
		InputMask = "999999", ;
		Left = 189, ;
		Margin = 1, ;
		MaxLength = 6, ;
		Name = "txtRetEarn", ;
		SelectOnEntry = .T., ;
		TabIndex = 8, ;
		Top = 182, ;
		Width = 53, ;
		ZOrderSet = 21
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtRevDesc' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 324, ;
		Name = "txtRevDesc", ;
		ReadOnly = .T., ;
		TabIndex = 15, ;
		TabStop = .F., ;
		Top = 205, ;
		Width = 201, ;
		ZOrderSet = 41
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtRevDist' AS txtquickfill WITH ;
		clistexpression = cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "glopt.crevclear", ;
		Height = 20, ;
		InputMask = "999999", ;
		Left = 443, ;
		Margin = 1, ;
		MaxLength = 6, ;
		Name = "txtRevDist", ;
		SelectOnEntry = .T., ;
		TabIndex = 10, ;
		Top = 182, ;
		Width = 53, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtSuspDesc' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 181, ;
		Name = "txtSuspDesc", ;
		ReadOnly = .T., ;
		TabIndex = 35, ;
		TabStop = .F., ;
		Top = 371, ;
		Width = 201, ;
		ZOrderSet = 45
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtSuspense' AS txtquickfill WITH ;
		clistexpression = cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "glopt.csuspense", ;
		Height = 20, ;
		InputMask = "999999", ;
		Left = 296, ;
		Margin = 1, ;
		MaxLength = 6, ;
		Name = "txtSuspense", ;
		SelectOnEntry = .T., ;
		TabIndex = 32, ;
		Top = 347, ;
		Width = 53, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtUndDesc' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 324, ;
		Name = "txtUndDesc", ;
		ReadOnly = .T., ;
		TabIndex = 31, ;
		TabStop = .F., ;
		Top = 321, ;
		Width = 201, ;
		ZOrderSet = 43
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtUndFund' AS txtquickfill WITH ;
		clistexpression = cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "glopt.cundepfund", ;
		Height = 20, ;
		InputMask = "999999", ;
		Left = 443, ;
		Margin = 1, ;
		MaxLength = 6, ;
		Name = "txtUndFund", ;
		SelectOnEntry = .T., ;
		TabIndex = 26, ;
		Top = 297, ;
		Width = 53, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />
	
	PROCEDURE Init
		DODEFAULT()
		
		IF glopt.cFYBegin <> '01'
		   this.chklFYEnd.Visible = .t.
		endif
	ENDPROC

	PROCEDURE cboMonth.Init
		*
		*  Load the laMonths Array
		*
		LOCAL laMonths[12,2]
		
		
		laMonths[1,1]  = 'January'
		laMonths[2,1]  = 'February'
		laMonths[3,1]  = 'March'
		laMonths[4,1]  = 'April'
		laMonths[5,1]  = 'May'
		laMonths[6,1]  = 'June'
		laMonths[7,1]  = 'July'
		laMonths[8,1]  = 'August'
		laMonths[9,1]  = 'September'
		laMonths[10,1] = 'October'
		laMonths[11,1] = 'November'
		laMonths[12,1] = 'December'
		laMonths[1,2]  = '01'
		laMonths[2,2]  = '02'
		laMonths[3,2]  = '03'
		laMonths[4,2]  = '04'
		laMonths[5,2]  = '05'
		laMonths[6,2]  = '06'
		laMonths[7,2]  = '07'
		laMonths[8,2]  = '08'
		laMonths[9,2]  = '09'
		laMonths[10,2] = '10'
		laMonths[11,2] = '11'
		laMonths[12,2] = '12'
		
		FOR lnX = 1 TO 12
		    this.addlistitem(laMonths[lnX,1],lnX,1)
		    this.addlistitem(laMonths[lnX,2],lnX,2)
		ENDFOR    
		
		DODEFAULT()
	ENDPROC

	PROCEDURE cboMonth.Valid
		if this.value <> glopt.cFYBegin  &&  They changed it, so ask if they want to ripple through past info
		   thisform.lRecalcGL = .t.   
		endif
		
		IF DODEFAULT()
		   IF this.value <> '01'
		      this.parent.chklFYEnd.visible = .T.
		   ELSE
		      this.parent.chklFYEnd.visible = .F.
		   ENDIF   
		ENDIF   
		        
	ENDPROC

	PROCEDURE chklFYEnd.Click
		THISFORM.lRecalcGL = .T.
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE cmdCurEarn.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, this.parent.txtCurEarn.value, 2
		
		IF llOK
		   IF coa.cacctno <> glopt.ccurearn
		      THISFORM.cmdatamanager.REPLACE('glopt','ccurearn',coa.cacctno)
		      this.parent.txtCurEarn.REFRESH()
		      this.parent.txtCurDesc.VALUE = coa.cacctdesc
		      this.parent.txtCurDesc.REFRESH()
		      thisform.lchanged = .T.
		   ENDIF
		ENDIF
		THISFORM.setnextcontrol(this.parent.txtCurEarn)
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE cmdExpClear.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, this.parent.txtExpClear.value, 2
		
		IF llOK
		   IF coa.cacctno <> glopt.cexpclear
		      THISFORM.cmdatamanager.REPLACE('glopt','cexpclear',coa.cacctno)
		      this.parent.txtExpClear.REFRESH()
		      this.parent.txtExpClearDesc.VALUE = coa.cacctdesc
		      this.parent.txtExpClearDesc.REFRESH()
		      THISFORM.lchanged = .T.
		   ENDIF
		ENDIF
		THISFORM.setnextcontrol(this.parent.txtExpClear)
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE cmdInven.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, this.parent.txtInven.value, 2
		
		IF llOK
		   IF coa.cacctno <> glopt.cinventory
		      THISFORM.cmdatamanager.REPLACE('glopt','cinventory',coa.cacctno)
		      this.parent.txtInven.REFRESH()
		      this.parent.txtInvenDesc.VALUE = coa.cacctdesc
		      this.parent.txtInvenDesc.REFRESH()
		      THISFORM.lchanged = .T.
		   ENDIF
		ENDIF
		THISFORM.setnextcontrol(this.parent.txtInven)
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE cmdRetEarn.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, this.parent.txtRetEarn.value, 2
		
		IF llOK
		   IF coa.cacctno <> glopt.cretearn
		      THISFORM.cmdatamanager.REPLACE('glopt','cretearn',coa.cacctno)
		      this.parent.txtRetEarn.REFRESH()
		      this.parent.txtRetDesc.VALUE = coa.cacctdesc
		      this.parent.txtRetDesc.REFRESH()
		      THISFORM.lchanged = .T.
		   ENDIF
		
		ENDIF
		THISFORM.setnextcontrol(this.parent.txtRetEarn)
		
	ENDPROC

	PROCEDURE cmdRevDist.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, this.parent.txtRevDist.value, 2
		
		IF llOK
		   IF coa.cacctno <> glopt.crevclear
		      THISFORM.cmdatamanager.REPLACE('glopt','crevclear',coa.cacctno)
		      this.parent.txtRevDist.REFRESH()
		      this.parent.txtRevDesc.VALUE = coa.cacctdesc
		      this.parent.txtRevDesc.REFRESH()
		      THISFORM.lchanged = .T.
		   ENDIF
		ENDIF
		THISFORM.setnextcontrol(this.parent.txtRevDist)
		
		DODEFAULT()
		
		
	ENDPROC

	PROCEDURE cmdSuspense.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, this.parent.txtSuspense.value, 2
		
		IF llOK
		   IF coa.cacctno <> glopt.csuspense
		      THISFORM.cmdatamanager.REPLACE('glopt','csuspense',coa.cacctno)
		      this.parent.txtSuspense.REFRESH()
		      this.parent.txtSuspDesc.VALUE = coa.cacctdesc
		      this.parent.txtSuspDesc.REFRESH()
		      THISFORM.lchanged = .T.
		   ENDIF
		ENDIF
		THISFORM.setnextcontrol(this.parent.txtSuspense)
		
		DODEFAULT()
		
		
	ENDPROC

	PROCEDURE cmdUndFunds.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, this.parent.txtUndFund.value, 2
		
		IF llOK
		   IF coa.cacctno <> glopt.cundepfund
		      THISFORM.cmdatamanager.REPLACE('glopt','cundepfund',coa.cacctno)
		      this.parent.txtUndFund.REFRESH()
		      this.parent.txtUndDesc.VALUE = coa.cacctdesc
		      this.parent.txtUndDesc.REFRESH()
		      THISFORM.lchanged = .T.
		   ENDIF
		ENDIF
		THISFORM.setnextcontrol(this.parent.txtUndFund)
		
		DODEFAULT()
		
		
	ENDPROC

	PROCEDURE txtCurDesc.When
		RETURN .F.
		
	ENDPROC

	PROCEDURE txtCurEarn.GotFocus
		ON KEY LABEL F2 _screen.activeform.pageframe.GLPage.GLPrefs.cmdCurEarn.Click()
	ENDPROC

	PROCEDURE txtCurEarn.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtCurDesc.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtCurDesc.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtCurEarn.LostFocus
		ON KEY LABEL F2 *
	ENDPROC

	PROCEDURE txtCurEarn.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtExpClear.GotFocus
		ON KEY LABEL F2 _screen.activeform.pageframe.GLPage.GLPrefs.cmdExpClear.Click()
	ENDPROC

	PROCEDURE txtExpClear.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtExpClearDesc.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtExpClearDesc.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtExpClear.LostFocus
		ON KEY LABEL F2 *
	ENDPROC

	PROCEDURE txtExpClear.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtExpClearDesc.When
		RETURN .F.
		
	ENDPROC

	PROCEDURE txtInven.GotFocus
		ON KEY LABEL F2 _screen.activeform.pageframe.GLPage.GLPrefs.cmdInven.Click()
	ENDPROC

	PROCEDURE txtInven.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtInvenDesc.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtInvenDesc.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtInven.LostFocus
		ON KEY LABEL F2 *
	ENDPROC

	PROCEDURE txtInven.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtInvenDesc.When
		RETURN .F.
		
	ENDPROC

	PROCEDURE txtRetDesc.When
		RETURN .F.
		
	ENDPROC

	PROCEDURE txtRetEarn.GotFocus
		ON KEY LABEL F2 _screen.activeform.pageframe.GLPage.GLPrefs.cmdRetEarn.Click()
	ENDPROC

	PROCEDURE txtRetEarn.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtRetDesc.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtRetDesc.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtRetEarn.LostFocus
		ON KEY LABEL F2 *
	ENDPROC

	PROCEDURE txtRetEarn.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtRevDesc.When
		RETURN .F.
		
	ENDPROC

	PROCEDURE txtRevDist.GotFocus
		ON KEY LABEL F2 _screen.activeform.pageframe.GLPage.GLPrefs.cmdRevDist.Click()
	ENDPROC

	PROCEDURE txtRevDist.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtRevDesc.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtRevDesc.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtRevDist.LostFocus
		ON KEY LABEL F2 *
	ENDPROC

	PROCEDURE txtRevDist.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtSuspDesc.When
		RETURN .F.
		
	ENDPROC

	PROCEDURE txtSuspense.GotFocus
		ON KEY LABEL F2 _screen.activeform.pageframe.GLPage.GLPrefs.cmdSuspense.Click()
	ENDPROC

	PROCEDURE txtSuspense.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtSuspDesc.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtSuspDesc.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtSuspense.LostFocus
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtSuspense.Valid
		IF NOT EMPTY(THIS.VALUE)
		   SELECT coa
		   SET ORDER TO acctno
		   IF SEEK(ALLTRIM(THIS.VALUE))
		      IF lTitle or lTotalAcct
		         thisform.omessage.warning('%msgAcctDetail')
		         RETURN 0
		      ENDIF         
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
		
	ENDPROC

	PROCEDURE txtUndDesc.When
		RETURN .F.
		
	ENDPROC

	PROCEDURE txtUndFund.GotFocus
		ON KEY LABEL F2 _screen.activeform.pageframe.GLPage.GLPrefs.cmdUndFunds.Click()
	ENDPROC

	PROCEDURE txtUndFund.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtUndDesc.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtUndDesc.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtUndFund.LostFocus
		ON KEY LABEL F2 *
	ENDPROC

	PROCEDURE txtUndFund.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

ENDDEFINE

DEFINE CLASS housegas AS container 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtnPrice" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtARAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="ediMemo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtDetailAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkLshowpsi" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCcharge" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdARAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdDiscAll" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCcharge" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboMonth" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtNcharge" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcARAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcDetailAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblNcharge" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcCatCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLookCat" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcCatDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboTerms" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtVendorID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LookVend" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtVendName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkActual" UniqueID="" Timestamp="" />

	BorderWidth = 0
	Height = 496
	Name = "housegas"
	Width = 612

	ADD OBJECT 'cboMonth' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		BoundTo = .T., ;
		ControlSource = "gasopt.cmonth", ;
		DisplayValue = , ;
		Height = 20, ;
		Left = 214, ;
		Margin = 2, ;
		Name = "cboMonth", ;
		RowSource = "", ;
		RowSourceType = 0, ;
		TabIndex = 13, ;
		Top = 175, ;
		Value = , ;
		Width = 93, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboTerms' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		ControlSource = "gasopt.cidterm", ;
		Height = 20, ;
		Left = 214, ;
		Margin = 2, ;
		Name = "cboTerms", ;
		RowSource = "", ;
		RowSourceType = 0, ;
		TabIndex = 10, ;
		Top = 146, ;
		Width = 156, ;
		ZOrderSet = 24
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'chkActual' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Enter Actual Readings", ;
		ControlSource = "gasopt.lactual", ;
		Height = 16, ;
		Left = 300, ;
		Name = "chkActual", ;
		TabIndex = 22, ;
		ToolTipText = "Be able to enter readings that include decimals such as 69.7", ;
		Top = 264, ;
		Width = 125
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkLshowpsi' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Show PSI on reading entry screen", ;
		ControlSource = "gasopt.lshowpsi", ;
		Height = 16, ;
		Left = 96, ;
		Name = "chkLshowpsi", ;
		TabIndex = 21, ;
		Top = 264, ;
		Width = 184
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdARAcct' AS cmdcommandbuttoncustom WITH ;
		Caption = "Receivable Acct", ;
		Height = 20, ;
		Left = 119, ;
		Name = "cmdARAcct", ;
		TabIndex = 1, ;
		TabStop = .F., ;
		Top = 59, ;
		Width = 90, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdDiscAll' AS cmdcommandbuttoncustom WITH ;
		Caption = "Sales Acct", ;
		Height = 20, ;
		Left = 119, ;
		Name = "cmdDiscAll", ;
		TabIndex = 4, ;
		TabStop = .F., ;
		Top = 89, ;
		Width = 90, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdLookCat' AS cmdcommandbuttoncustom WITH ;
		Caption = "Exp Code", ;
		FontName = "Arial", ;
		FontSize = 8, ;
		Height = 20, ;
		Left = 145, ;
		Name = "cmdLookCat", ;
		TabIndex = 11, ;
		TabStop = .F., ;
		Top = 295, ;
		Visible = .T., ;
		Width = 51, ;
		ZOrderSet = 47
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'ediMemo' AS edteditboxcustom WITH ;
		ControlSource = "gasopt.minvnotes", ;
		Height = 64, ;
		Left = 132, ;
		Name = "ediMemo", ;
		TabIndex = 26, ;
		Top = 366, ;
		Width = 335, ;
		ZOrderSet = 33
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="editbox" />

	ADD OBJECT 'lblCcharge' AS lblfieldlabelcustom WITH ;
		Caption = "Extra Charge Description", ;
		Height = 16, ;
		Left = 87, ;
		Name = "lblCcharge", ;
		TabIndex = 20, ;
		Top = 235, ;
		Width = 122
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "House Gas Preferences", ;
		FontBold = .T., ;
		FontSize = 12, ;
		Left = 215, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 27, ;
		Top = 5
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom4' AS lbllabelcustom WITH ;
		Caption = "Default Terms", ;
		Height = 16, ;
		Left = 140, ;
		Name = "Lbllabelcustom4", ;
		TabIndex = 12, ;
		Top = 149, ;
		Width = 69, ;
		ZOrderSet = 23
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblNcharge' AS lblfieldlabelcustom WITH ;
		Caption = "Extra Charge", ;
		Height = 16, ;
		Left = 144, ;
		Name = "lblNcharge", ;
		TabIndex = 18, ;
		Top = 205, ;
		Width = 65
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom1' AS lbltextcustom WITH ;
		Caption = "Gas Price", ;
		Left = 160, ;
		Name = "Lbltextcustom1", ;
		TabIndex = 8, ;
		Top = 118
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom2' AS lbltextcustom WITH ;
		Caption = "Invoice Notes:", ;
		FontBold = .T., ;
		Left = 131, ;
		Name = "Lbltextcustom2", ;
		TabIndex = 25, ;
		Top = 347
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom3' AS lbltextcustom WITH ;
		Caption = "First Month of Year", ;
		Left = 114, ;
		Name = "Lbltextcustom3", ;
		TabIndex = 16, ;
		Top = 177
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LookVend' AS cmdcommandbuttoncustom WITH ;
		Caption = "Vendor", ;
		FontName = "Arial", ;
		FontSize = 8, ;
		Height = 20, ;
		Left = 145, ;
		Name = "LookVend", ;
		TabIndex = 9, ;
		TabStop = .F., ;
		Top = 322, ;
		Visible = .T., ;
		Width = 51, ;
		ZOrderSet = 47
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Shpshapecustom1' AS shpshapecustom WITH ;
		Height = 399, ;
		Left = 68, ;
		Name = "Shpshapecustom1", ;
		Top = 45, ;
		Width = 468
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'txtARAcct' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 273, ;
		Name = "txtARAcct", ;
		ReadOnly = .T., ;
		TabIndex = 3, ;
		TabStop = .F., ;
		Top = 59, ;
		Width = 216, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcARAcct' AS txtquickfill WITH ;
		clistexpression = cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "gasopt.caracct", ;
		Height = 20, ;
		InputMask = "XXXXXX", ;
		Left = 214, ;
		Name = "txtcARAcct", ;
		TabIndex = 2, ;
		Top = 59, ;
		Width = 51, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcCatCode' AS txtquickfill WITH ;
		clistexpression = ccatcode, ;
		clistworkarea = expcat, ;
		ControlSource = "gasopt.ccatcode", ;
		Enabled = .T., ;
		FontName = "Courier New", ;
		FontSize = 8, ;
		Height = 20, ;
		Left = 212, ;
		MaxLength = 4, ;
		Name = "txtcCatCode", ;
		SelectOnEntry = .T., ;
		TabIndex = 23, ;
		Top = 295, ;
		Visible = .T., ;
		Width = 41, ;
		ZOrderSet = 33
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcCatDesc' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		ControlSource = " ", ;
		FontName = "Courier New", ;
		FontSize = 8, ;
		Height = 20, ;
		Left = 259, ;
		MaxLength = 30, ;
		Name = "txtcCatDesc", ;
		TabIndex = 15, ;
		Top = 295, ;
		Visible = .T., ;
		Width = 246, ;
		ZOrderSet = 36
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCcharge' AS txttextboxcustom WITH ;
		ControlSource = "gasopt.ccharge", ;
		Height = 20, ;
		Left = 214, ;
		MaxLength = 30, ;
		Name = "txtCcharge", ;
		TabIndex = 19, ;
		Top = 233, ;
		Width = 216
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcDetailAcct' AS txtquickfill WITH ;
		clistexpression = cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "gasopt.csalesacct", ;
		Height = 20, ;
		InputMask = "XXXXXX", ;
		Left = 214, ;
		Name = "txtcDetailAcct", ;
		TabIndex = 5, ;
		Top = 88, ;
		Width = 51, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtDetailAcct' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 273, ;
		Name = "txtDetailAcct", ;
		ReadOnly = .T., ;
		TabIndex = 6, ;
		TabStop = .F., ;
		Top = 88, ;
		Width = 216, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtNcharge' AS txttextboxcustom WITH ;
		ControlSource = "gasopt.ncharge", ;
		FontSize = 8, ;
		Height = 20, ;
		Left = 214, ;
		Name = "txtNcharge", ;
		TabIndex = 17, ;
		Top = 204, ;
		Width = 69
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtnPrice' AS txttextboxcustom WITH ;
		ControlSource = "gasopt.nprice", ;
		InputMask = "999.99", ;
		Left = 214, ;
		Name = "txtnPrice", ;
		TabIndex = 7, ;
		Top = 117
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtVendName' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		ControlSource = " ", ;
		FontName = "Courier New", ;
		FontSize = 8, ;
		Height = 20, ;
		Left = 300, ;
		MaxLength = 30, ;
		Name = "txtVendName", ;
		TabIndex = 14, ;
		Top = 322, ;
		Visible = .T., ;
		Width = 205, ;
		ZOrderSet = 36
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtVendorID' AS txtquickfill WITH ;
		clistexpression = cvendorid, ;
		clistworkarea = vendor, ;
		ControlSource = "gasopt.cvendorid", ;
		Enabled = .T., ;
		FontName = "Courier New", ;
		FontSize = 8, ;
		Height = 20, ;
		Left = 212, ;
		MaxLength = 10, ;
		Name = "txtVendorID", ;
		SelectOnEntry = .T., ;
		TabIndex = 24, ;
		Top = 322, ;
		Visible = .T., ;
		Width = 76, ;
		ZOrderSet = 33
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />
	
	PROCEDURE Init
		IF DODEFAULT()
		   IF NOT EMPTY(gasopt.ccatcode)
		      swselect('expcat')
		      LOCATE FOR ccatcode = gasopt.ccatcode
		      IF FOUND()
		         this.txtcCatDesc.value = expcat.ccateg
		         this.txtcCatDesc.Refresh()
		      ENDIF 
		   ENDIF 
		   IF NOT EMPTY(gasopt.cvendorid)
		      swselect('vendor')
		      LOCATE FOR cvendorid = gasopt.cvendorid
		      IF FOUND()
		         this.txtvendName.Value = vendor.cvendname
		         this.txtvendName.Refresh()
		      ENDIF 
		   ENDIF 
		ENDIF 
	ENDPROC

	PROCEDURE cboMonth.Init
		*
		*  Load the laMonths Array
		*
		LOCAL laMonths[12,2]
		
		
		laMonths[1,1]  = 'January'
		laMonths[2,1]  = 'February'
		laMonths[3,1]  = 'March'
		laMonths[4,1]  = 'April'
		laMonths[5,1]  = 'May'
		laMonths[6,1]  = 'June'
		laMonths[7,1]  = 'July'
		laMonths[8,1]  = 'August'
		laMonths[9,1]  = 'September'
		laMonths[10,1] = 'October'
		laMonths[11,1] = 'November'
		laMonths[12,1] = 'December'
		laMonths[1,2]  = '01'
		laMonths[2,2]  = '02'
		laMonths[3,2]  = '03'
		laMonths[4,2]  = '04'
		laMonths[5,2]  = '05'
		laMonths[6,2]  = '06'
		laMonths[7,2]  = '07'
		laMonths[8,2]  = '08'
		laMonths[9,2]  = '09'
		laMonths[10,2] = '10'
		laMonths[11,2] = '11'
		laMonths[12,2] = '12'
		
		FOR lnX = 1 TO 12
		   THIS.PARENT.cboMonth.ADDLISTITEM(laMonths[lnX,1],lnX,1)
		   THIS.PARENT.cboMonth.ADDLISTITEM(laMonths[lnX,2],lnX,2)
		ENDFOR
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE cboTerms.Init
		LOCAL lnCount
		
		*
		*  Builds the data displayed in the combo list box
		*
		
		SELECT cTermDesc, cidTerm FROM terms INTO ARRAY laTerms ORDER BY cTermDesc
		lnCount = _tally
		
		This.addlistitem('NONE',1,1)
		This.addlistitem('',1,2)
		
		IF lnCount > 0
		   FOR lnX = 1 TO ALEN(laTerms,1)
		      this.addlistitem(laTerms[lnX,1],lnX+1,1)
		      this.addlistitem(laTerms[lnX,2],lnX+1,2)
		   ENDFOR   
		ENDIF   
		
		this.refresh()
		
		DODEFAULT()
	ENDPROC

	PROCEDURE cmdARAcct.Click
		LOCAL lcList, lcAcct
		PRIV llOK
		
		llOK = .T.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, THIS.PARENT.txtcARacct.value, 2
		
		IF llOK
		   lcAcct = coa.cacctno
		   THIS.PARENT.txtcARAcct.set('VALUE',lcAcct)
		   THIS.PARENT.txtARAcct.VALUE = coa.cAcctDesc
		ENDIF
		
		THISFORM.setnextcontrol(THIS.PARENT.txtcARAcct)
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE cmdDiscAll.Click
		LOCAL lcList, lcAcct
		PRIV llOK
		
		llOK = .T.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, THIS.PARENT.txtcDetailAcct.value, 2
		
		IF llOK
		   lcAcct = coa.cacctno
		   THIS.PARENT.txtcDetailAcct.set('VALUE',lcAcct)
		   THIS.PARENT.txtDetailAcct.VALUE = coa.cacctdesc 
		ENDIF
		
		THISFORM.setnextcontrol(THIS.PARENT.txtcDetailAcct)
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE cmdLookCat.Click
		thisform.hglookcat()
		
	ENDPROC

	PROCEDURE LookVend.Click
		thisform.hglookvend()
		
	ENDPROC

	PROCEDURE txtARAcct.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtcARAcct.GotFocus
		ON KEY LABEL F2 _screen.activeform.pageframe.hgprefs.housegas.cmdaracct.click()
		DODEFAULT()
	ENDPROC

	PROCEDURE txtcARAcct.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtARAcct.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtARAcct.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtcARAcct.LostFocus
		on key label F2 *
	ENDPROC

	PROCEDURE txtcCatCode.GotFocus
		ON KEY LABEL F2 _screen.activeform.HGLookCat()
		DODEFAULT()
	ENDPROC

	PROCEDURE txtcCatCode.InteractiveChange
		IF DODEFAULT()
		   SELECT expcat
		   LOCATE FOR ccatcode == this.Value
		   IF FOUND()
		      this.Parent.txtccatDesc.set('value',expcat.ccateg)
		   ELSE
		      this.Parent.txtccatDesc.set('value','')
		   ENDIF
		ENDIF       
		    
	ENDPROC

	PROCEDURE txtcCatCode.Valid
		DODEFAULT()
		
		SELE afeopt
		GO TOP
		llAllocexp = lAllocExp
		
		IF NOT EMPTY(THIS.VALUE)
		   IF this.Value = 'PLUG'
		      MESSAGEBOX('The PLUG code is reserved for the Plugging Module. ' + ;
		                 'It cannot be chosen here. Please use an alternate code.',16,'Reserved Code')
		      this.set('Value','')
		      this.Parent.txtcCatDesc.Value = ''
		      RETURN 
		   ENDIF 
		   SELECT expcat
		   SET ORDER TO ccatcode
		   IF SEEK(THIS.VALUE)
		      this.Parent.txtccatDesc.VALUE = expcat.ccateg
		      this.Parent.txtccatDesc.REFRESH()
		   ENDIF
		ENDIF
		
		
		
		
	ENDPROC

	PROCEDURE txtcCatDesc.When
		DODEFAULT()
		RETURN .F. 
	ENDPROC

	PROCEDURE txtcDetailAcct.GotFocus
		ON KEY LABEL F2 _screen.activeform.pageframe.hgprefs.housegas.cmddiscall.click()
		DODEFAULT()
	ENDPROC

	PROCEDURE txtcDetailAcct.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtDetailAcct.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtDetailAcct.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtcDetailAcct.LostFocus
		on key label F2 *
	ENDPROC

	PROCEDURE txtDetailAcct.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtVendName.When
		DODEFAULT()
		RETURN .F. 
	ENDPROC

	PROCEDURE txtVendorID.GotFocus
		ON KEY LABEL F2 _screen.activeform.HGLookVend()
		DODEFAULT()
	ENDPROC

	PROCEDURE txtVendorID.InteractiveChange
		IF DODEFAULT()
		   SELECT vendor
		   LOCATE FOR cvendorid == this.Value
		   IF FOUND()
		      this.Parent.txtvendname.set('value',vendor.cvendname)
		   ELSE
		      this.Parent.txtvendname.set('value','')
		   ENDIF
		ENDIF       
		    
	ENDPROC

	PROCEDURE txtVendorID.Valid
		DODEFAULT()
		
		
		IF NOT EMPTY(THIS.VALUE)
		   
		   SELECT vendor
		   SET ORDER TO cvendorid
		   IF SEEK(THIS.VALUE)
		      this.Parent.txtvendname.VALUE = vendor.cvendname
		      this.Parent.txtvendname.REFRESH()
		   ENDIF
		ENDIF
		
		
		
		
	ENDPROC

ENDDEFINE

DEFINE CLASS housegasdm AS container 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtnPrice" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="ediMemo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboTerms" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkLshowpsi" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCcharge" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCcharge" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtNcharge" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblNcharge" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboMonth" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcCatCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLookCat" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcCatDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtVendorID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LookVend" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtVendName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkActual" UniqueID="" Timestamp="" />

	BorderWidth = 0
	Height = 496
	Name = "housegasdm"
	Width = 612

	ADD OBJECT 'cboMonth' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		BoundTo = .T., ;
		ControlSource = "gasopt.cmonth", ;
		DisplayValue = , ;
		Height = 20, ;
		Left = 236, ;
		Margin = 2, ;
		Name = "cboMonth", ;
		RowSource = "", ;
		RowSourceType = 0, ;
		TabIndex = 7, ;
		Top = 148, ;
		Value = , ;
		Width = 93, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboTerms' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		ControlSource = "gasopt.cidterm", ;
		Height = 20, ;
		Left = 236, ;
		Margin = 2, ;
		Name = "cboTerms", ;
		RowSource = "", ;
		RowSourceType = 0, ;
		TabIndex = 4, ;
		Top = 119, ;
		Width = 156, ;
		ZOrderSet = 24
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'chkActual' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Enter Actual Readings", ;
		ControlSource = "gasopt.lactual", ;
		Height = 16, ;
		Left = 314, ;
		Name = "chkActual", ;
		TabIndex = 16, ;
		ToolTipText = "Be able to enter readings that include decimals such as 69.7", ;
		Top = 236, ;
		Width = 125
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkLshowpsi' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Show PSI on reading entry screen", ;
		ControlSource = "gasopt.lshowpsi", ;
		Height = 16, ;
		Left = 110, ;
		Name = "chkLshowpsi", ;
		TabIndex = 15, ;
		Top = 235, ;
		Width = 184
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdLookCat' AS cmdcommandbuttoncustom WITH ;
		Caption = "Exp Code", ;
		FontName = "Arial", ;
		FontSize = 8, ;
		Height = 20, ;
		Left = 136, ;
		Name = "cmdLookCat", ;
		TabIndex = 6, ;
		TabStop = .F., ;
		Top = 270, ;
		Visible = .T., ;
		Width = 51, ;
		ZOrderSet = 47
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'ediMemo' AS edteditboxcustom WITH ;
		ControlSource = "gasopt.minvnotes", ;
		Height = 64, ;
		Left = 154, ;
		Name = "ediMemo", ;
		TabIndex = 21, ;
		Top = 360, ;
		Width = 335, ;
		ZOrderSet = 33
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="editbox" />

	ADD OBJECT 'lblCcharge' AS lblfieldlabelcustom WITH ;
		Caption = "Extra Charge Description", ;
		Height = 16, ;
		Left = 109, ;
		Name = "lblCcharge", ;
		TabIndex = 14, ;
		Top = 208, ;
		Width = 122
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "House Gas Preferences", ;
		FontBold = .T., ;
		FontSize = 12, ;
		Left = 215, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 18, ;
		Top = 5
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom4' AS lbllabelcustom WITH ;
		Caption = "Default Terms", ;
		Height = 16, ;
		Left = 162, ;
		Name = "Lbllabelcustom4", ;
		TabIndex = 5, ;
		Top = 122, ;
		Width = 69, ;
		ZOrderSet = 23
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblNcharge' AS lblfieldlabelcustom WITH ;
		Caption = "Extra Charge", ;
		Height = 16, ;
		Left = 166, ;
		Name = "lblNcharge", ;
		TabIndex = 12, ;
		Top = 178, ;
		Width = 65
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom1' AS lbltextcustom WITH ;
		Caption = "Gas Price", ;
		Left = 182, ;
		Name = "Lbltextcustom1", ;
		TabIndex = 2, ;
		Top = 91
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom2' AS lbltextcustom WITH ;
		Caption = "Invoice Notes:", ;
		FontBold = .T., ;
		Left = 153, ;
		Name = "Lbltextcustom2", ;
		TabIndex = 17, ;
		Top = 341
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom3' AS lbltextcustom WITH ;
		Caption = "First Month of Year", ;
		Left = 136, ;
		Name = "Lbltextcustom3", ;
		TabIndex = 8, ;
		Top = 150
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LookVend' AS cmdcommandbuttoncustom WITH ;
		Caption = "Vendor", ;
		FontName = "Arial", ;
		FontSize = 8, ;
		Height = 20, ;
		Left = 136, ;
		Name = "LookVend", ;
		TabIndex = 3, ;
		TabStop = .F., ;
		Top = 297, ;
		Visible = .T., ;
		Width = 51, ;
		ZOrderSet = 47
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Shpshapecustom1' AS shpshapecustom WITH ;
		Height = 399, ;
		Left = 68, ;
		Name = "Shpshapecustom1", ;
		Top = 45, ;
		Width = 468
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'txtcCatCode' AS txtquickfill WITH ;
		clistexpression = ccatcode, ;
		clistworkarea = expcat, ;
		ControlSource = "gasopt.ccatcode", ;
		Enabled = .T., ;
		FontName = "Courier New", ;
		FontSize = 8, ;
		Height = 20, ;
		Left = 203, ;
		MaxLength = 4, ;
		Name = "txtcCatCode", ;
		SelectOnEntry = .T., ;
		TabIndex = 19, ;
		Top = 270, ;
		Visible = .T., ;
		Width = 41, ;
		ZOrderSet = 33
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcCatDesc' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		ControlSource = " ", ;
		FontName = "Courier New", ;
		FontSize = 8, ;
		Height = 20, ;
		Left = 250, ;
		MaxLength = 30, ;
		Name = "txtcCatDesc", ;
		TabIndex = 11, ;
		Top = 270, ;
		Visible = .T., ;
		Width = 246, ;
		ZOrderSet = 36
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCcharge' AS txttextboxcustom WITH ;
		ControlSource = "gasopt.ccharge", ;
		Height = 20, ;
		Left = 236, ;
		MaxLength = 30, ;
		Name = "txtCcharge", ;
		TabIndex = 13, ;
		Top = 206, ;
		Width = 216
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtNcharge' AS txttextboxcustom WITH ;
		ControlSource = "gasopt.ncharge", ;
		FontSize = 8, ;
		Height = 20, ;
		Left = 236, ;
		Name = "txtNcharge", ;
		TabIndex = 10, ;
		Top = 177, ;
		Width = 69
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtnPrice' AS txttextboxcustom WITH ;
		ControlSource = "gasopt.nprice", ;
		InputMask = "999.99", ;
		Left = 236, ;
		Name = "txtnPrice", ;
		TabIndex = 1, ;
		Top = 90
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtVendName' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		ControlSource = " ", ;
		FontName = "Courier New", ;
		FontSize = 8, ;
		Height = 20, ;
		Left = 291, ;
		MaxLength = 30, ;
		Name = "txtVendName", ;
		TabIndex = 9, ;
		Top = 297, ;
		Visible = .T., ;
		Width = 205, ;
		ZOrderSet = 36
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtVendorID' AS txtquickfill WITH ;
		clistexpression = cvendorid, ;
		clistworkarea = vendor, ;
		ControlSource = "gasopt.cvendorid", ;
		Enabled = .T., ;
		FontName = "Courier New", ;
		FontSize = 8, ;
		Height = 20, ;
		Left = 203, ;
		MaxLength = 10, ;
		Name = "txtVendorID", ;
		SelectOnEntry = .T., ;
		TabIndex = 20, ;
		Top = 297, ;
		Visible = .T., ;
		Width = 76, ;
		ZOrderSet = 33
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />
	
	PROCEDURE cboMonth.Init
		*
		*  Load the laMonths Array
		*
		LOCAL laMonths[12,2]
		
		
		laMonths[1,1]  = 'January'
		laMonths[2,1]  = 'February'
		laMonths[3,1]  = 'March'
		laMonths[4,1]  = 'April'
		laMonths[5,1]  = 'May'
		laMonths[6,1]  = 'June'
		laMonths[7,1]  = 'July'
		laMonths[8,1]  = 'August'
		laMonths[9,1]  = 'September'
		laMonths[10,1] = 'October'
		laMonths[11,1] = 'November'
		laMonths[12,1] = 'December'
		laMonths[1,2]  = '01'
		laMonths[2,2]  = '02'
		laMonths[3,2]  = '03'
		laMonths[4,2]  = '04'
		laMonths[5,2]  = '05'
		laMonths[6,2]  = '06'
		laMonths[7,2]  = '07'
		laMonths[8,2]  = '08'
		laMonths[9,2]  = '09'
		laMonths[10,2] = '10'
		laMonths[11,2] = '11'
		laMonths[12,2] = '12'
		
		FOR lnX = 1 TO 12
		   THIS.PARENT.cboMonth.ADDLISTITEM(laMonths[lnX,1],lnX,1)
		   THIS.PARENT.cboMonth.ADDLISTITEM(laMonths[lnX,2],lnX,2)
		ENDFOR
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE cboTerms.Init
		LOCAL lnCount
		
		*
		*  Builds the data displayed in the combo list box
		*
		
		SELECT cTermDesc, cidTerm FROM terms INTO ARRAY laTerms ORDER BY cTermDesc
		lnCount = _tally
		
		This.addlistitem('NONE',1,1)
		This.addlistitem('',1,2)
		
		IF lnCount > 0
		   FOR lnX = 1 TO ALEN(laTerms,1)
		      this.addlistitem(laTerms[lnX,1],lnX+1,1)
		      this.addlistitem(laTerms[lnX,2],lnX+1,2)
		   ENDFOR   
		ENDIF   
		
		this.refresh()
		
		DODEFAULT()
	ENDPROC

	PROCEDURE cmdLookCat.Click
		thisform.hglookcat()
		
	ENDPROC

	PROCEDURE LookVend.Click
		thisform.hglookvend()
		
	ENDPROC

	PROCEDURE txtcCatCode.GotFocus
		ON KEY LABEL F2 _screen.activeform.HGLookCat()
		DODEFAULT()
	ENDPROC

	PROCEDURE txtcCatCode.InteractiveChange
		IF DODEFAULT()
		   SELECT expcat
		   LOCATE FOR ccatcode == this.Value
		   IF FOUND()
		      this.Parent.txtccatDesc.set('value',expcat.ccateg)
		   ELSE
		      this.Parent.txtccatDesc.set('value','')
		   ENDIF
		ENDIF       
		    
	ENDPROC

	PROCEDURE txtcCatCode.Valid
		DODEFAULT()
		
		SELE afeopt
		GO TOP
		llAllocexp = lAllocExp
		
		IF NOT EMPTY(THIS.VALUE)
		   IF this.Value = 'PLUG'
		      MESSAGEBOX('The PLUG code is reserved for the Plugging Module. ' + ;
		                 'It cannot be chosen here. Please use an alternate code.',16,'Reserved Code')
		      this.set('Value','')
		      this.Parent.txtcCatDesc.Value = ''
		      RETURN 
		   ENDIF 
		   SELECT expcat
		   SET ORDER TO ccatcode
		   IF SEEK(THIS.VALUE)
		      this.Parent.txtccatDesc.VALUE = expcat.ccateg
		      this.Parent.txtccatDesc.REFRESH()
		   ENDIF
		ENDIF
		
		
		
		
	ENDPROC

	PROCEDURE txtcCatDesc.When
		DODEFAULT()
		RETURN .F. 
	ENDPROC

	PROCEDURE txtVendName.When
		DODEFAULT()
		RETURN .F. 
	ENDPROC

	PROCEDURE txtVendorID.GotFocus
		ON KEY LABEL F2 _screen.activeform.HGLookVend()
		DODEFAULT()
	ENDPROC

	PROCEDURE txtVendorID.InteractiveChange
		IF DODEFAULT()
		   SELECT vendor
		   LOCATE FOR cvendorid == this.Value
		   IF FOUND()
		      this.Parent.txtvendname.set('value',vendor.cvendname)
		   ELSE
		      this.Parent.txtvendname.set('value','')
		   ENDIF
		ENDIF       
		    
	ENDPROC

	PROCEDURE txtVendorID.Valid
		DODEFAULT()
		
		
		IF NOT EMPTY(THIS.VALUE)
		   
		   SELECT vendor
		   SET ORDER TO cvendorid
		   IF SEEK(THIS.VALUE)
		      this.Parent.txtvendname.VALUE = vendor.cvendname
		      this.Parent.txtvendname.REFRESH()
		   ENDIF
		ENDIF
		
		
		
		
	ENDPROC

ENDDEFINE

DEFINE CLASS housegasqb AS container 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtnPrice" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="ediMemo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCvendname" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkLshowpsi" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCcharge" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCcharge" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtNcharge" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblNcharge" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboMonth" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Qbaccount1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboItem" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcCatCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLookCat" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcCatDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LookVend" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkActual" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboTerms" UniqueID="" Timestamp="" />

	BorderWidth = 0
	Height = 496
	Name = "housegasqb"
	Width = 612

	ADD OBJECT 'cboItem' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		ControlSource = "gasopt.citemlist", ;
		Height = 22, ;
		Left = 188, ;
		Name = "cboItem", ;
		TabIndex = 2, ;
		Top = 77, ;
		Width = 326
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboMonth' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		BoundTo = .T., ;
		ControlSource = "gasopt.cmonth", ;
		DisplayValue = , ;
		Height = 20, ;
		Left = 253, ;
		Margin = 2, ;
		Name = "cboMonth", ;
		RowSource = "", ;
		RowSourceType = 0, ;
		TabIndex = 10, ;
		Top = 163, ;
		Value = , ;
		Width = 93, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboTerms' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		ControlSource = "gasopt.cqbterms", ;
		Height = 20, ;
		Left = 253, ;
		Margin = 2, ;
		Name = "cboTerms", ;
		RowSource = "", ;
		RowSourceType = 0, ;
		TabIndex = 7, ;
		Top = 134, ;
		Width = 156, ;
		ZOrderSet = 24
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'chkActual' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Enter Actual Readings", ;
		ControlSource = "gasopt.lactual", ;
		Height = 16, ;
		Left = 357, ;
		Name = "chkActual", ;
		TabIndex = 18, ;
		ToolTipText = "Be able to enter readings that include decimals such as 69.7", ;
		Top = 251, ;
		Width = 125
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkLshowpsi' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Show PSI on reading entry screen", ;
		ControlSource = "gasopt.lshowpsi", ;
		Height = 16, ;
		Left = 120, ;
		Name = "chkLshowpsi", ;
		TabIndex = 17, ;
		Top = 250, ;
		Width = 184
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdLookCat' AS cmdcommandbuttoncustom WITH ;
		Caption = "Exp Code", ;
		FontName = "Arial", ;
		FontSize = 8, ;
		Height = 20, ;
		Left = 142, ;
		Name = "cmdLookCat", ;
		TabIndex = 12, ;
		TabStop = .F., ;
		Top = 284, ;
		Visible = .T., ;
		Width = 51, ;
		ZOrderSet = 47
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'ediMemo' AS edteditboxcustom WITH ;
		ControlSource = "gasopt.minvnotes", ;
		Height = 64, ;
		Left = 139, ;
		Name = "ediMemo", ;
		TabIndex = 23, ;
		Top = 358, ;
		Width = 335, ;
		ZOrderSet = 33
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="editbox" />

	ADD OBJECT 'lblCcharge' AS lblfieldlabelcustom WITH ;
		Caption = "Extra Charge Description", ;
		Height = 16, ;
		Left = 126, ;
		Name = "lblCcharge", ;
		TabIndex = 16, ;
		Top = 221, ;
		Width = 122
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "House Gas Preferences", ;
		FontBold = .T., ;
		FontSize = 12, ;
		Left = 215, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 24, ;
		Top = 5
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "Receivables Acct", ;
		Left = 96, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 4, ;
		Top = 51
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom3' AS lbllabelcustom WITH ;
		Caption = "Sales QB Item", ;
		Left = 96, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 1, ;
		Top = 78
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom4' AS lbllabelcustom WITH ;
		Caption = "Default Terms", ;
		Height = 16, ;
		Left = 179, ;
		Name = "Lbllabelcustom4", ;
		TabIndex = 8, ;
		Top = 135, ;
		Width = 69, ;
		ZOrderSet = 23
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblNcharge' AS lblfieldlabelcustom WITH ;
		Caption = "Extra Charge", ;
		Height = 16, ;
		Left = 183, ;
		Name = "lblNcharge", ;
		TabIndex = 14, ;
		Top = 194, ;
		Width = 65
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom1' AS lbltextcustom WITH ;
		Caption = "Gas Price", ;
		Left = 199, ;
		Name = "Lbltextcustom1", ;
		TabIndex = 6, ;
		Top = 105
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom2' AS lbltextcustom WITH ;
		Caption = "Invoice Notes:", ;
		FontBold = .T., ;
		Left = 138, ;
		Name = "Lbltextcustom2", ;
		TabIndex = 20, ;
		Top = 339
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom3' AS lbltextcustom WITH ;
		Caption = "First Month of Year", ;
		Left = 153, ;
		Name = "Lbltextcustom3", ;
		TabIndex = 11, ;
		Top = 165
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LookVend' AS cmdcommandbuttoncustom WITH ;
		Caption = "Vendor", ;
		FontName = "Arial", ;
		FontSize = 8, ;
		Height = 20, ;
		Left = 142, ;
		Name = "LookVend", ;
		TabIndex = 9, ;
		TabStop = .F., ;
		Top = 311, ;
		Visible = .T., ;
		Width = 51, ;
		ZOrderSet = 47
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Qbaccount1' AS qbaccount WITH ;
		ControlSource = "gasopt.cqbaracct", ;
		Height = 20, ;
		lbankonly = .F., ;
		Left = 188, ;
		Name = "Qbaccount1", ;
		TabIndex = 3, ;
		Top = 47, ;
		Width = 326
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Shpshapecustom1' AS shpshapecustom WITH ;
		Height = 416, ;
		Left = 70, ;
		Name = "Shpshapecustom1", ;
		Top = 33, ;
		Width = 468
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'txtcCatCode' AS txtquickfill WITH ;
		clistexpression = ccatcode, ;
		clistworkarea = expcat, ;
		ControlSource = "gasopt.ccatcode", ;
		Enabled = .T., ;
		FontName = "Courier New", ;
		FontSize = 8, ;
		Height = 20, ;
		Left = 209, ;
		MaxLength = 4, ;
		Name = "txtcCatCode", ;
		SelectOnEntry = .T., ;
		TabIndex = 21, ;
		Top = 284, ;
		Visible = .T., ;
		Width = 41, ;
		ZOrderSet = 33
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcCatDesc' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		ControlSource = " ", ;
		FontName = "Courier New", ;
		FontSize = 8, ;
		Height = 20, ;
		Left = 256, ;
		MaxLength = 30, ;
		Name = "txtcCatDesc", ;
		TabIndex = 19, ;
		Top = 284, ;
		Visible = .T., ;
		Width = 246, ;
		ZOrderSet = 36
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCcharge' AS txttextboxcustom WITH ;
		ControlSource = "gasopt.ccharge", ;
		Height = 20, ;
		Left = 253, ;
		MaxLength = 30, ;
		Name = "txtCcharge", ;
		TabIndex = 15, ;
		Top = 221, ;
		Width = 216
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCvendname' AS txtquickfill WITH ;
		BackColor = 255,255,255, ;
		clistexpression = cVendName, ;
		clistworkarea = Vendor, ;
		ControlSource = "", ;
		Height = 20, ;
		Left = 209, ;
		Margin = 1, ;
		MaxLength = 40, ;
		Name = "txtCvendname", ;
		ReadOnly = .F., ;
		TabIndex = 22, ;
		Top = 312, ;
		Width = 295, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtNcharge' AS txttextboxcustom WITH ;
		ControlSource = "gasopt.ncharge", ;
		FontSize = 8, ;
		Height = 20, ;
		Left = 253, ;
		Name = "txtNcharge", ;
		TabIndex = 13, ;
		Top = 192, ;
		Width = 69
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtnPrice' AS txttextboxcustom WITH ;
		ControlSource = "gasopt.nprice", ;
		InputMask = "999.99", ;
		Left = 253, ;
		Name = "txtnPrice", ;
		TabIndex = 5, ;
		Top = 105
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE cboItem.Init
		
		lncount = 1
		SELE qbitems
		SET ORDER TO citemid
		SCAN
		   SCATTER MEMVAR
		   THIS.ADDLISTITEM[m.cItemID,lnCount,1]
		   THIS.ADDLISTITEM[m.clistid,lnCount,2]
		   lncount = lncount + 1
		ENDSCAN
		DODEFAULT()
		
	ENDPROC

	PROCEDURE cboMonth.Init
		*
		*  Load the laMonths Array
		*
		LOCAL laMonths[12,2]
		
		
		laMonths[1,1]  = 'January'
		laMonths[2,1]  = 'February'
		laMonths[3,1]  = 'March'
		laMonths[4,1]  = 'April'
		laMonths[5,1]  = 'May'
		laMonths[6,1]  = 'June'
		laMonths[7,1]  = 'July'
		laMonths[8,1]  = 'August'
		laMonths[9,1]  = 'September'
		laMonths[10,1] = 'October'
		laMonths[11,1] = 'November'
		laMonths[12,1] = 'December'
		laMonths[1,2]  = '01'
		laMonths[2,2]  = '02'
		laMonths[3,2]  = '03'
		laMonths[4,2]  = '04'
		laMonths[5,2]  = '05'
		laMonths[6,2]  = '06'
		laMonths[7,2]  = '07'
		laMonths[8,2]  = '08'
		laMonths[9,2]  = '09'
		laMonths[10,2] = '10'
		laMonths[11,2] = '11'
		laMonths[12,2] = '12'
		
		FOR lnX = 1 TO 12
		   THIS.PARENT.cboMonth.ADDLISTITEM(laMonths[lnX,1],lnX,1)
		   THIS.PARENT.cboMonth.ADDLISTITEM(laMonths[lnX,2],lnX,2)
		ENDFOR
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE cboTerms.Init
		LOCAL lnCount
		
		*
		*  Builds the data displayed in the combo list box
		*
		
		SELECT cTermDesc, cidTerm FROM terms INTO ARRAY laTerms ORDER BY cTermDesc
		lnCount = _tally
		
		This.addlistitem('NONE',1,1)
		This.addlistitem('',1,2)
		
		IF lnCount > 0
		   FOR lnX = 1 TO ALEN(laTerms,1)
		      this.addlistitem(laTerms[lnX,1],lnX+1,1)
		      this.addlistitem(laTerms[lnX,2],lnX+1,2)
		   ENDFOR   
		ENDIF   
		
		this.refresh()
		
		DODEFAULT()
	ENDPROC

	PROCEDURE cmdLookCat.Click
		thisform.hglookcat()
		
	ENDPROC

	PROCEDURE LookVend.Click
		thisform.hglookvend()
		
	ENDPROC

	PROCEDURE txtcCatCode.GotFocus
		ON KEY LABEL F2 _screen.activeform.HGLookCat()
		DODEFAULT()
	ENDPROC

	PROCEDURE txtcCatCode.InteractiveChange
		IF DODEFAULT()
		   SELECT expcat
		   LOCATE FOR ccatcode == this.Value
		   IF FOUND()
		      this.Parent.txtccatDesc.set('value',expcat.ccateg)
		   ELSE
		      this.Parent.txtccatDesc.set('value','')
		   ENDIF
		ENDIF       
		    
	ENDPROC

	PROCEDURE txtcCatCode.Valid
		DODEFAULT()
		
		SELE afeopt
		GO TOP
		llAllocexp = lAllocExp
		
		IF NOT EMPTY(THIS.VALUE)
		   IF this.Value = 'PLUG'
		      MESSAGEBOX('The PLUG code is reserved for the Plugging Module. ' + ;
		                 'It cannot be chosen here. Please use an alternate code.',16,'Reserved Code')
		      this.set('Value','')
		      this.Parent.txtcCatDesc.Value = ''
		      RETURN 
		   ENDIF 
		   SELECT expcat
		   SET ORDER TO ccatcode
		   IF SEEK(THIS.VALUE)
		      this.Parent.txtccatDesc.VALUE = expcat.ccateg
		      this.Parent.txtccatDesc.REFRESH()
		   ENDIF
		ENDIF
		
		
		
		
	ENDPROC

	PROCEDURE txtcCatDesc.When
		DODEFAULT()
		RETURN .F. 
	ENDPROC

	PROCEDURE txtCvendname.InteractiveChange
		IF DODEFAULT()
		   thisform.cmdatamanager.replace('gasopt','cvendorid',vendor.cvendorid)
		ENDIF 
	ENDPROC

	PROCEDURE txtCvendname.LostFocus
		ON KEY LABEL F2 *
		DODEFAULT()
	ENDPROC

	PROCEDURE txtCvendname.Valid
		IF DODEFAULT()
		   SELE vendor
		   LOCATE FOR cvendorid = gasopt.cvendorid
		   IF FOUND()
		      IF EMPTY(ALLT(vendor.clistid))
		         IF THISFORM.omessage.CONFIRM('The vendor file needs to be synchronized with QuickBooks before this vendor can be used. Synchronize now?')
		            m.goapp.oQB.sync_vendors()
		         ELSE
		            RETURN .F.
		         ENDIF
		      ENDIF
		      
		   ELSE
		      IF NOT EMPTY(THIS.VALUE)
		         WAIT WIND NOWAIT 'Invalid vendor entered.'
		         thisform.txtcvendname.set('value','')
		         return 0
		      
		      ENDIF
		   ENDIF
		ENDIF
		
	ENDPROC

	PROCEDURE txtCvendname.When
		ON KEY LABEL F2 _screen.activeform.HGLookVend()
		DODEFAULT()
	ENDPROC

ENDDEFINE

DEFINE CLASS landprefs AS container 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklDueStart" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboCashAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboRentAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtLeadDays" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkExpense" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcCatCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcCatDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLookCat" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblRentAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkdelayuser" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkExpireLeaseRpt" UniqueID="" Timestamp="" />

	BorderWidth = 0
	Height = 496
	Name = "landprefs"
	Width = 612

	ADD OBJECT 'cboCashAcct' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		ColumnCount = 2, ;
		ControlSource = "landopt.ccashacct", ;
		Height = 20, ;
		Left = 216, ;
		Name = "cboCashAcct", ;
		TabIndex = 1, ;
		Top = 72, ;
		Width = 252, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboRentAcct' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		ColumnCount = 2, ;
		ControlSource = "Landopt.crentacct", ;
		Height = 20, ;
		Left = 216, ;
		Name = "cboRentAcct", ;
		TabIndex = 2, ;
		Top = 108, ;
		Width = 252, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'chkdelayuser' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Only check when signed in as: ", ;
		ControlSource = "", ;
		Left = 183, ;
		Name = "chkdelayuser", ;
		TabIndex = 4, ;
		Top = 213, ;
		Visible = .F.
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkExpense' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Expense Delay Rentals To Producing Wells", ;
		ControlSource = "landopt.lexpense", ;
		Left = 183, ;
		Name = "chkExpense", ;
		TabIndex = 8, ;
		Top = 286
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkExpireLeaseRpt' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Include the expiring leases report with the delay rental report", ;
		ControlSource = "landopt.lexpirereport", ;
		Left = 183, ;
		Name = "chkExpireLeaseRpt", ;
		TabIndex = 5, ;
		Top = 261, ;
		Visible = .T.
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklDueStart' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Check for Rentals Due at Startup", ;
		ControlSource = "landopt.lchkduestart", ;
		Left = 183, ;
		Name = "chklDueStart", ;
		TabIndex = 3, ;
		Top = 190
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdLookCat' AS cmdcommandbuttoncustom WITH ;
		Caption = "Exp Code", ;
		FontName = "Arial", ;
		FontSize = 8, ;
		Height = 20, ;
		Left = 144, ;
		Name = "cmdLookCat", ;
		TabIndex = 10, ;
		TabStop = .F., ;
		Top = 324, ;
		Visible = .F., ;
		Width = 51, ;
		ZOrderSet = 47
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Cash Account", ;
		Left = 132, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 13, ;
		Top = 72
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "Lead Time in Days To Use For Checking", ;
		Left = 183, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 6, ;
		Top = 238
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom3' AS lbllabelcustom WITH ;
		Caption = "Land Management Preferences", ;
		FontBold = .T., ;
		FontSize = 12, ;
		Left = 186, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 9, ;
		Top = 5
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblRentAcct' AS lbllabelcustom WITH ;
		Caption = "Rental Account", ;
		Left = 132, ;
		Name = "lblRentAcct", ;
		TabIndex = 14, ;
		Top = 108
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Shpshapecustom1' AS shpshapecustom WITH ;
		Height = 324, ;
		Left = 89, ;
		Name = "Shpshapecustom1", ;
		Top = 48, ;
		Width = 432
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'txtcCatCode' AS txtquickfill WITH ;
		clistexpression = ccatcode, ;
		clistworkarea = expcat, ;
		ControlSource = "landopt.ccatcode", ;
		Enabled = .T., ;
		FontName = "Courier New", ;
		FontSize = 8, ;
		Height = 20, ;
		Left = 211, ;
		MaxLength = 4, ;
		Name = "txtcCatCode", ;
		SelectOnEntry = .T., ;
		TabIndex = 11, ;
		Top = 324, ;
		Visible = .F., ;
		Width = 41, ;
		ZOrderSet = 33
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcCatDesc' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		ControlSource = " ", ;
		FontName = "Courier New", ;
		FontSize = 8, ;
		Height = 20, ;
		Left = 258, ;
		MaxLength = 30, ;
		Name = "txtcCatDesc", ;
		TabIndex = 12, ;
		Top = 324, ;
		Visible = .F., ;
		Width = 246, ;
		ZOrderSet = 36
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtLeadDays' AS txttextboxcustom WITH ;
		ControlSource = "landopt.nleaddays", ;
		Height = 20, ;
		InputMask = "999", ;
		Left = 385, ;
		Name = "txtLeadDays", ;
		TabIndex = 7, ;
		Top = 236, ;
		Width = 36
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE Init
		IF landopt.lExpense
		   this.cmdLookCat.Visible = .t.
		   this.txtcCatCode.Visible = .t.
		   this.txtcCatDesc.Visible = .t.
		ENDIF
		IF landopt.lchkduestart
		   this.chkdelayuser.Visible = .t.
		ENDIF 
		
		SELECT expcat
		LOCATE FOR cCatCode = landopt.cCatCode
		IF FOUND()
		   this.txtcCatDesc.set('value',expcat.cCateg)
		ENDIF
		
		this.chkdelayuser.Caption = 'Only check when signed in as: ' + ALLTRIM(m.goapp.cuser)
		IF FILE('datafiles\'+ALLTRIM(m.goapp.cuser)+'.drp')
		   this.chkdelayuser.Value = .t.
		   this.chkdelayuser.Visible = .t.
		ELSE
		   this.chkdelayuser.Value = .f.
		ENDIF
		
		DODEFAULT()
	ENDPROC

	PROCEDURE cboCashAcct.Init
		LOCAL lnCount
		*
		*  Builds the data displayed in the combo list box
		*
		SELECT glopt
		lcUnDepFund = cUnDepFund
		
		SELECT  cAcctNo +' - ' + cAcctDesc, cacctno FROM coa INTO ARRAY laAcct WHERE lBankacct = .T. AND cAcctNo <> lcUnDepFund AND NOT DELETED() ORDER BY cAcctNo
		lnCount = _TALLY
		
		IF lnCount > 0
		   FOR lnX = 1 TO ALEN(laAcct,1)
		      THIS.ADDLISTITEM(laAcct[lnX,1],lnX,1)
		      THIS.ADDLISTITEM(laAcct[lnX,2],lnX,2)
		   ENDFOR
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE cboRentAcct.Init
		LOCAL lnCount
		*
		*  Builds the data displayed in the combo list box
		*
		SELECT  cAcctNo +' - ' + cAcctDesc, cacctno FROM coa INTO ARRAY laAcct WHERE NOT lBankacct = .T. AND NOT DELETED() ORDER BY cAcctNo
		lnCount = _TALLY
		
		IF lnCount > 0
		   FOR lnX = 1 TO ALEN(laAcct,1)
		      THIS.ADDLISTITEM(laAcct[lnX,1],lnX,1)
		      THIS.ADDLISTITEM(laAcct[lnX,2],lnX,2)
		   ENDFOR
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE chkdelayuser.Click
		LOCAL fh
		
		TRY
		   IF THIS.VALUE
		      fh = FCREATE('datafiles\'+ALLTRIM(m.goapp.cuser)+'.drp')
		      FCLOSE(fh)
		   ELSE
		      ERASE ('datafiles\'+ALLTRIM(m.goapp.cuser)+'.drp')
		   ENDIF
		CATCH
		ENDTRY
		
	ENDPROC

	PROCEDURE chkExpense.Click
		IF this.Value
		   this.Parent.cmdLookCat.Visible  = .t.
		   this.Parent.txtcCatCode.Visible = .t.
		   this.Parent.txtccatDesc.Visible = .t.
		ELSE
		   this.Parent.cmdLookCat.Visible  = .f.
		   this.Parent.txtcCatCode.Visible = .f.
		   this.Parent.txtccatDesc.Visible = .f.
		ENDIF       
		   
	ENDPROC

	PROCEDURE chkExpireLeaseRpt.Click
		LOCAL fh
		
		TRY
		   IF THIS.VALUE
		      fh = FCREATE('datafiles\'+ALLTRIM(m.goapp.cuser)+'.drp')
		      FCLOSE(fh)
		   ELSE
		      ERASE ('datafiles\'+ALLTRIM(m.goapp.cuser)+'.drp')
		   ENDIF
		CATCH
		ENDTRY
		
	ENDPROC

	PROCEDURE chklDueStart.Click
		IF this.Value
		   this.Parent.chkdelayuser.Visible = .t.
		ELSE
		   this.Parent.chkdelayuser.Visible = .f.
		   this.Parent.chkdelayuser.Value = .f.
		ENDIF 
	ENDPROC

	PROCEDURE cmdLookCat.Click
		thisform.lookcat()
		
	ENDPROC

	PROCEDURE txtcCatCode.GotFocus
		ON KEY LABEL F2 _screen.activeform.LookCat()
		DODEFAULT()
	ENDPROC

	PROCEDURE txtcCatCode.InteractiveChange
		IF DODEFAULT()
		   SELECT expcat
		   LOCATE FOR ccatcode == this.Value
		   IF FOUND()
		      this.Parent.txtccatDesc.set('value',expcat.ccateg)
		   ELSE
		      this.Parent.txtccatDesc.set('value','')
		   ENDIF
		ENDIF       
		    
	ENDPROC

	PROCEDURE txtcCatCode.Valid
		DODEFAULT()
		
		SELE afeopt
		GO TOP
		llAllocexp = lAllocExp
		
		IF NOT EMPTY(THIS.VALUE)
		   IF this.Value = 'PLUG'
		      MESSAGEBOX('The PLUG code is reserved for the Plugging Module. ' + ;
		                 'It cannot be chosen here. Please use an alternate code.',16,'Reserved Code')
		      this.set('Value','')
		      this.Parent.txtcCatDesc.Value = ''
		      RETURN 
		   ENDIF 
		   SELECT expcat
		   SET ORDER TO ccatcode
		   IF SEEK(THIS.VALUE)
		      this.Parent.txtccatDesc.VALUE = expcat.ccateg
		      this.Parent.txtccatDesc.REFRESH()
		   ENDIF
		ENDIF
		
		
		
		
	ENDPROC

	PROCEDURE txtcCatDesc.When
		DODEFAULT()
		RETURN .F. 
	ENDPROC

ENDDEFINE

DEFINE CLASS landprefsdm AS container 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtLeadDays" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkExpense" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcCatCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcCatDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLookCat" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklDueStart" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkdelayuser" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkExpireLeaseRpt" UniqueID="" Timestamp="" />

	BorderWidth = 0
	Height = 496
	Name = "landprefsdm"
	Width = 612

	ADD OBJECT 'chkdelayuser' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Only check when signed in as: ", ;
		ControlSource = "", ;
		Left = 174, ;
		Name = "chkdelayuser", ;
		TabIndex = 4, ;
		Top = 148, ;
		Visible = .F.
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkExpense' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Expense Delay Rentals To Producing Wells", ;
		ControlSource = "landopt.lexpense", ;
		Left = 174, ;
		Name = "chkExpense", ;
		TabIndex = 7, ;
		Top = 239
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkExpireLeaseRpt' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Include the expiring leases report with the delay rental report", ;
		ControlSource = "landopt.lexpirereport", ;
		Left = 174, ;
		Name = "chkExpireLeaseRpt", ;
		TabIndex = 6, ;
		Top = 208, ;
		Visible = .T.
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklDueStart' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Check for Rentals Due at Startup", ;
		ControlSource = "landopt.lchkduestart", ;
		Left = 174, ;
		Name = "chklDueStart", ;
		TabIndex = 3, ;
		Top = 119
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdLookCat' AS cmdcommandbuttoncustom WITH ;
		Caption = "Exp Code", ;
		FontName = "Arial", ;
		FontSize = 8, ;
		Height = 20, ;
		Left = 129, ;
		Name = "cmdLookCat", ;
		TabIndex = 8, ;
		TabStop = .F., ;
		Top = 281, ;
		Visible = .F., ;
		Width = 51, ;
		ZOrderSet = 47
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "Lead Time in Days To Use For Checking", ;
		Left = 174, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 2, ;
		Top = 180
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom3' AS lbllabelcustom WITH ;
		Caption = "Land Management Preferences", ;
		FontBold = .T., ;
		FontSize = 12, ;
		Left = 186, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 1, ;
		Top = 5
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Shpshapecustom1' AS shpshapecustom WITH ;
		Height = 288, ;
		Left = 94, ;
		Name = "Shpshapecustom1", ;
		Top = 54, ;
		Width = 420
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'txtcCatCode' AS txtquickfill WITH ;
		clistexpression = ccatcode, ;
		clistworkarea = expcat, ;
		ControlSource = "landopt.ccatcode", ;
		Enabled = .T., ;
		FontName = "Courier New", ;
		FontSize = 8, ;
		Height = 20, ;
		Left = 199, ;
		Name = "txtcCatCode", ;
		SelectOnEntry = .T., ;
		TabIndex = 9, ;
		Top = 281, ;
		Visible = .F., ;
		Width = 36, ;
		ZOrderSet = 33
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcCatDesc' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		ControlSource = " ", ;
		FontName = "Courier New", ;
		FontSize = 8, ;
		Height = 20, ;
		Left = 243, ;
		MaxLength = 30, ;
		Name = "txtcCatDesc", ;
		TabIndex = 10, ;
		Top = 281, ;
		Visible = .F., ;
		Width = 246, ;
		ZOrderSet = 36
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtLeadDays' AS txttextboxcustom WITH ;
		ControlSource = "landopt.nleaddays", ;
		Height = 20, ;
		InputMask = "999", ;
		Left = 376, ;
		Name = "txtLeadDays", ;
		TabIndex = 5, ;
		Top = 178, ;
		Width = 36
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE Init
		
		IF landopt.lExpense
		   this.cmdLookCat.Visible = .t.
		   this.txtcCatCode.Visible = .t.
		   this.txtcCatDesc.Visible = .t.
		ENDIF
		IF landopt.lchkduestart
		   this.chkdelayuser.Visible = .t.
		ENDIF 
		
		SWSELECT('expcat')
		LOCATE FOR cCatCode = landopt.cCatCode
		IF FOUND()
		   this.txtcCatDesc.set('value',expcat.cCateg)
		ENDIF
		
		this.chkdelayuser.Caption = 'Only check when signed in as: ' + ALLTRIM(m.goapp.cuser)
		IF FILE('datafiles\'+ALLTRIM(m.goapp.cuser)+'.drp')
		   this.chkdelayuser.Value = .t.
		   this.chkdelayuser.Visible = .t.
		ELSE
		   this.chkdelayuser.Value = .f.
		ENDIF
		
		DODEFAULT()
	ENDPROC

	PROCEDURE chkdelayuser.Click
		LOCAL fh
		
		TRY
		   IF THIS.VALUE
		      fh = FCREATE('datafiles\'+ALLTRIM(m.goapp.cuser)+'.drp')
		      FCLOSE(fh)
		   ELSE
		      ERASE ('datafiles\'+ALLTRIM(m.goapp.cuser)+'.drp')
		   ENDIF
		CATCH
		ENDTRY
		
	ENDPROC

	PROCEDURE chkExpense.Click
		IF THIS.VALUE
		   THIS.PARENT.cmdlookCat.VISIBLE = .T.
		   THIS.PARENT.txtccatCode.VISIBLE = .T.
		   THIS.PARENT.txtccatdesc.VISIBLE = .T.
		ELSE
		   THIS.PARENT.cmdlookCat.VISIBLE = .F.
		   THIS.PARENT.txtccatCode.VISIBLE = .F.
		   THIS.PARENT.txtccatdesc.VISIBLE = .F.
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE chkExpireLeaseRpt.Click
		LOCAL fh
		
		TRY
		   IF THIS.VALUE
		      fh = FCREATE('datafiles\'+ALLTRIM(m.goapp.cuser)+'.drp')
		      FCLOSE(fh)
		   ELSE
		      ERASE ('datafiles\'+ALLTRIM(m.goapp.cuser)+'.drp')
		   ENDIF
		CATCH
		ENDTRY
		
	ENDPROC

	PROCEDURE chklDueStart.Click
		IF this.Value
		   this.Parent.chkdelayuser.Visible = .t.
		ELSE
		   this.Parent.chkdelayuser.Visible = .f.
		   this.Parent.chkdelayuser.Value = .f.
		ENDIF 
	ENDPROC

	PROCEDURE cmdLookCat.Click
		thisform.lookcat()
	ENDPROC

	PROCEDURE txtcCatCode.GotFocus
		ON KEY LABEL F2 _screen.activeform.LookCat()
		DODEFAULT()
	ENDPROC

	PROCEDURE txtcCatCode.InteractiveChange
		IF DODEFAULT()
		   SELECT expcat
		   LOCATE FOR ccatcode == this.Value
		   IF FOUND()
		      this.Parent.txtccatDesc.set('value',expcat.ccateg)
		   ELSE
		      this.Parent.txtccatDesc.set('value','')
		   ENDIF
		ENDIF       
		    
	ENDPROC

	PROCEDURE txtcCatCode.Valid
		DODEFAULT()
		
		SELE afeopt
		GO TOP
		llAllocexp = lAllocExp
		
		IF NOT EMPTY(THIS.VALUE)
		   SELECT expcat
		   SET ORDER TO ccatcode
		   IF SEEK(THIS.VALUE)
		      THIS.Parent.txtcCatDesc.VALUE = expcat.ccateg
		      THIS.Parent.txtcCatDesc.REFRESH()
		   ENDIF
		ENDIF
		
		
		
		
	ENDPROC

	PROCEDURE txtcCatDesc.When
		DODEFAULT()
		RETURN .F. 
	ENDPROC

ENDDEFINE

DEFINE CLASS landprefsqb AS container 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtLeadDays" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkExpense" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Qbaccount1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Qbaccount2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblRentAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcCatCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcCatDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLookCat" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklDueStart" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkdelayuser" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkExpireLeaseRpt" UniqueID="" Timestamp="" />

	BorderWidth = 0
	Height = 496
	Name = "landprefsqb"
	Width = 612

	ADD OBJECT 'chkdelayuser' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Only check when signed in as: ", ;
		ControlSource = "", ;
		Left = 178, ;
		Name = "chkdelayuser", ;
		TabIndex = 7, ;
		Top = 205, ;
		Visible = .F.
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkExpense' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Expense Delay Rentals To Producing Wells", ;
		ControlSource = "landopt.lexpense", ;
		Left = 178, ;
		Name = "chkExpense", ;
		TabIndex = 11, ;
		Top = 275
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkExpireLeaseRpt' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Include the expiring leases report with the delay rental report", ;
		ControlSource = "landopt.lexpirereport", ;
		Left = 178, ;
		Name = "chkExpireLeaseRpt", ;
		TabIndex = 9, ;
		Top = 252, ;
		Visible = .T.
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklDueStart' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Check for Rentals Due at Startup", ;
		ControlSource = "landopt.lchkduestart", ;
		Left = 178, ;
		Name = "chklDueStart", ;
		TabIndex = 6, ;
		Top = 182
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdLookCat' AS cmdcommandbuttoncustom WITH ;
		Caption = "Exp Code", ;
		FontName = "Arial", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 120, ;
		Name = "cmdLookCat", ;
		TabIndex = 12, ;
		TabStop = .F., ;
		Top = 302, ;
		Visible = .F., ;
		Width = 63, ;
		ZOrderSet = 47
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Cash Acct:", ;
		Left = 85, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 2, ;
		Top = 86
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "Lead Time in Days To Use For Checking", ;
		Left = 178, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 10, ;
		Top = 230
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom3' AS lbllabelcustom WITH ;
		Caption = "Land Management Preferences", ;
		FontBold = .T., ;
		FontSize = 12, ;
		Left = 186, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 1, ;
		Top = 5
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblRentAcct' AS lbllabelcustom WITH ;
		Caption = "Rental Acct:", ;
		Left = 85, ;
		Name = "lblRentAcct", ;
		TabIndex = 4, ;
		Top = 122
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Qbaccount1' AS qbaccount WITH ;
		ControlSource = "landopt.cqbcashacct", ;
		lbankonly = .T., ;
		Left = 157, ;
		Name = "Qbaccount1", ;
		TabIndex = 3, ;
		Top = 86
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Qbaccount2' AS qbaccount WITH ;
		ControlSource = "landopt.cqbrentacct", ;
		Left = 157, ;
		Name = "Qbaccount2", ;
		TabIndex = 5, ;
		Top = 122
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Shpshapecustom1' AS shpshapecustom WITH ;
		Height = 288, ;
		Left = 60, ;
		Name = "Shpshapecustom1", ;
		Top = 48, ;
		Width = 480
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'txtcCatCode' AS txtquickfill WITH ;
		clistexpression = ccatcode, ;
		clistworkarea = expcat, ;
		ControlSource = "landopt.ccatcode", ;
		Enabled = .T., ;
		FontName = "Courier New", ;
		FontSize = 8, ;
		Height = 20, ;
		Left = 190, ;
		Name = "txtcCatCode", ;
		SelectOnEntry = .T., ;
		TabIndex = 13, ;
		Top = 303, ;
		Visible = .F., ;
		Width = 36, ;
		ZOrderSet = 33
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcCatDesc' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		ControlSource = " ", ;
		FontName = "Courier New", ;
		FontSize = 8, ;
		Height = 20, ;
		Left = 234, ;
		MaxLength = 30, ;
		Name = "txtcCatDesc", ;
		TabIndex = 14, ;
		Top = 303, ;
		Visible = .F., ;
		Width = 246, ;
		ZOrderSet = 36
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtLeadDays' AS txttextboxcustom WITH ;
		ControlSource = "landopt.nleaddays", ;
		Height = 20, ;
		InputMask = "999", ;
		Left = 380, ;
		Name = "txtLeadDays", ;
		TabIndex = 8, ;
		Top = 228, ;
		Width = 36
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE Init
		IF DODEFAULT()
		   IF landopt.lExpense
		      THIS.cmdLookCat.VISIBLE = .T.
		      THIS.txtcCatCode.VISIBLE = .T.
		      THIS.txtcCatDesc.VISIBLE = .T.
		   ENDIF
		   IF landopt.lchkduestart
		      this.chkdelayuser.Visible = .t.
		   ENDIF
		   
		   SELECT expcat
		   LOCATE FOR cCatCode = landopt.cCatCode
		   IF FOUND()
		      THIS.txtcCatDesc.SET('value',expcat.cCateg)
		   ENDIF
		
		   THIS.chkdelayuser.CAPTION = 'Only check when signed in as: ' + ALLTRIM(m.goapp.cuser)
		   IF FILE('datafiles\'+ALLTRIM(m.goapp.cuser)+'.drp')
		      THIS.chkdelayuser.VALUE = .T.
		      THIS.chkdelayuser.VISIBLE = .T.
		   ELSE
		      IF landopt.lchkduestart
		         THIS.chkdelayuser.VALUE = .F.
		         THIS.chkdelayuser.VISIBLE = .T.
		      ELSE
		         THIS.chkdelayuser.VALUE = .F.
		      ENDIF
		   ENDIF
		ENDIF
		
	ENDPROC

	PROCEDURE chkdelayuser.Click
		LOCAL fh
		
		TRY
		   IF THIS.VALUE
		      fh = FCREATE('datafiles\'+ALLTRIM(m.goapp.cuser)+'.drp')
		      FCLOSE(fh)
		   ELSE
		      ERASE ('datafiles\'+ALLTRIM(m.goapp.cuser)+'.drp')
		   ENDIF
		CATCH
		ENDTRY
		
	ENDPROC

	PROCEDURE chkExpense.Click
		IF THIS.VALUE
		   THIS.PARENT.cmdlookCat.VISIBLE  = .T.
		   THIS.PARENT.txtccatCode.VISIBLE = .T.
		   THIS.PARENT.txtccatdesc.VISIBLE = .T.
		ELSE
		   THIS.PARENT.cmdlookCat.VISIBLE  = .F.
		   THIS.PARENT.txtccatCode.VISIBLE = .F.
		   THIS.PARENT.txtccatdesc.VISIBLE = .F.
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE chkExpireLeaseRpt.Click
		LOCAL fh
		
		TRY
		   IF THIS.VALUE
		      fh = FCREATE('datafiles\'+ALLTRIM(m.goapp.cuser)+'.drp')
		      FCLOSE(fh)
		   ELSE
		      ERASE ('datafiles\'+ALLTRIM(m.goapp.cuser)+'.drp')
		   ENDIF
		CATCH
		ENDTRY
		
	ENDPROC

	PROCEDURE chklDueStart.Click
		IF this.Value
		   this.Parent.chkdelayuser.Visible = .t.
		ELSE
		   this.Parent.chkdelayuser.Visible = .f.
		   this.Parent.chkdelayuser.Value = .f.
		ENDIF 
	ENDPROC

	PROCEDURE cmdLookCat.Click
		thisform.lookcat()
	ENDPROC

	PROCEDURE txtcCatCode.GotFocus
		ON KEY LABEL F2 _screen.activeform.LookCatQB.Click()
		DODEFAULT()
	ENDPROC

	PROCEDURE txtcCatCode.InteractiveChange
		IF DODEFAULT()
		   SELECT expcat
		   LOCATE FOR ccatcode == this.Value
		   IF FOUND()
		      this.Parent.txtccatDesc.set('value',expcat.ccateg)
		   ELSE
		      this.Parent.txtccatDesc.set('value','')
		   ENDIF
		ENDIF       
		    
	ENDPROC

	PROCEDURE txtcCatCode.Valid
		DODEFAULT()
		
		SELE afeopt
		GO TOP
		llAllocexp = lAllocExp
		
		IF NOT EMPTY(THIS.VALUE)
		   SELECT expcat
		   SET ORDER TO ccatcode
		   IF SEEK(THIS.VALUE)
		      this.parent.txtcCatDesc.VALUE = expcat.ccateg
		      this.parent.txtcCatDesc.REFRESH()
		   ENDIF
		ENDIF
		
		
		
		
	ENDPROC

	PROCEDURE txtcCatDesc.When
		DODEFAULT()
		RETURN .F. 
	ENDPROC

ENDDEFINE

DEFINE CLASS miscprefs AS container 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Shpshapecustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtMin1099" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblMin1099" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtnMin1099Roy" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lblfieldlabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkGross1099" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkLcalcdays" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkShowInact" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkAllocate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklEditMode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cbocomboboxcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklRoundHigh" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtnMaxRound" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCvendcomp" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCcomprptno" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCcomprptno" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCrevacctno" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCrevacctno" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtnGather" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtnCompress" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkDocShare" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkTaxNet" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkTradMenu" UniqueID="" Timestamp="" />

	BorderWidth = 0
	Height = 496
	Name = "miscprefs"
	Width = 612

	ADD OBJECT 'Cbocomboboxcustom1' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		ColumnCount = 2, ;
		ControlSource = "options.cvendcomp", ;
		Height = 20, ;
		Left = 236, ;
		Name = "Cbocomboboxcustom1", ;
		TabIndex = 16, ;
		Top = 281, ;
		Width = 340
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'chkAllocate' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Send All Revenue and Expenses To Allocation File", ;
		ControlSource = "options.lsendtoallocate", ;
		Height = 16, ;
		Left = 47, ;
		Name = "chkAllocate", ;
		TabIndex = 6, ;
		Top = 114, ;
		Width = 260
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkDocShare' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Share Documents Between Wells and Leases", ;
		ControlSource = "options.ldocshare", ;
		Left = 324, ;
		Name = "chkDocShare", ;
		TabIndex = 3, ;
		Top = 60
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkGross1099' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Build 1099s Based on Gross Revenue", ;
		ControlSource = "options.lgross1099", ;
		Left = 205, ;
		Name = "chkGross1099", ;
		Style = 0, ;
		TabIndex = 22, ;
		Top = 373
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkLcalcdays' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Calculate Days On From Period Ranges Entered", ;
		ControlSource = "options.lcalcdays", ;
		Height = 16, ;
		Left = 47, ;
		Name = "chkLcalcdays", ;
		TabIndex = 2, ;
		Top = 60, ;
		Width = 247
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklEditMode' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Turn on Edit Mode (requires clicking the edit button before making changes to a screen)", ;
		Height = 16, ;
		Left = 47, ;
		Name = "chklEditMode", ;
		TabIndex = 8, ;
		Top = 141, ;
		Value = .F., ;
		Width = 438
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklRoundHigh' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Adjust to Highest Owner ID In Well", ;
		ControlSource = "options.lroundhigh", ;
		Left = 326, ;
		Name = "chklRoundHigh", ;
		TabIndex = 11, ;
		Top = 205
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkShowInact' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Show Inactive Wells in Well Lists", ;
		ControlSource = "options.lShowInact", ;
		Left = 47, ;
		Name = "chkShowInact", ;
		TabIndex = 4, ;
		Top = 87
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkTaxNet' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Calculate Tax W/H on Net Instead of Gross", ;
		ControlSource = "options.ltaxnet", ;
		Left = 324, ;
		Name = "chkTaxNet", ;
		TabIndex = 5, ;
		Top = 87
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkTradMenu' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Show Traditional Cascading Menus", ;
		ControlSource = "options.ltradmenu", ;
		Left = 324, ;
		Name = "chkTradMenu", ;
		TabIndex = 7, ;
		Top = 114
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'lblCcomprptno' AS lblfieldlabelcustom WITH ;
		Caption = "Company Reporting No.:", ;
		Height = 16, ;
		Left = 47, ;
		Name = "lblCcomprptno", ;
		TabIndex = 26, ;
		Top = 456, ;
		Width = 118
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblCrevacctno' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		Caption = "Revenue Account No.:", ;
		Height = 16, ;
		Left = 47, ;
		Name = "lblCrevacctno", ;
		TabIndex = 25, ;
		Top = 422, ;
		Width = 111
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblCvendcomp' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Vendor Comp & Gathering Paid To:", ;
		Height = 16, ;
		Left = 47, ;
		Name = "lblCvendcomp", ;
		TabIndex = 17, ;
		Top = 283, ;
		Width = 169
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lblfieldlabelcustom1' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Minimum Royalty Int 1099 Amount:", ;
		Height = 16, ;
		Left = 47, ;
		Name = "Lblfieldlabelcustom1", ;
		TabIndex = 20, ;
		Top = 340, ;
		Width = 165
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Maximum Rounding To Adjust:", ;
		Left = 47, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 10, ;
		Top = 204
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "Gathering Charge Per MCF:", ;
		Left = 47, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 13, ;
		Top = 244
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom3' AS lbllabelcustom WITH ;
		Caption = "Miscellaneous Preferences", ;
		FontBold = .T., ;
		FontSize = 12, ;
		Left = 202, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 1, ;
		Top = 6
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom4' AS lbllabelcustom WITH ;
		Caption = "Compression Charge Per MCF:", ;
		Left = 327, ;
		Name = "Lbllabelcustom4", ;
		TabIndex = 15, ;
		Top = 244
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblMin1099' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Minimum Working Int 1099 Amount:", ;
		Height = 16, ;
		Left = 302, ;
		Name = "lblMin1099", ;
		TabIndex = 21, ;
		Top = 340, ;
		Width = 168
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Shpshapecustom1' AS shpshapecustom WITH ;
		Height = 84, ;
		Left = 18, ;
		Name = "Shpshapecustom1", ;
		Top = 318, ;
		Width = 576
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Shpshapecustom2' AS shpshapecustom WITH ;
		Height = 126, ;
		Left = 18, ;
		Name = "Shpshapecustom2", ;
		Top = 43, ;
		Width = 576
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Shpshapecustom3' AS shpshapecustom WITH ;
		Height = 123, ;
		Left = 18, ;
		Name = "Shpshapecustom3", ;
		Top = 189, ;
		Width = 576
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Shpshapecustom4' AS shpshapecustom WITH ;
		Height = 84, ;
		Left = 18, ;
		Name = "Shpshapecustom4", ;
		Top = 406, ;
		Width = 576
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'txtCcomprptno' AS txttextboxcustom WITH ;
		ControlSource = "options.ccomprptno", ;
		Height = 20, ;
		Left = 176, ;
		MaxLength = 10, ;
		Name = "txtCcomprptno", ;
		TabIndex = 24, ;
		Top = 454, ;
		Width = 76
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCrevacctno' AS txttextboxcustom WITH ;
		ControlSource = "options.crevacctno", ;
		Height = 20, ;
		Left = 176, ;
		MaxLength = 10, ;
		Name = "txtCrevacctno", ;
		TabIndex = 23, ;
		Top = 420, ;
		Width = 76
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtMin1099' AS txttextboxcustom WITH ;
		ControlSource = "options.nmin1099non", ;
		Height = 20, ;
		InputMask = "999999.99", ;
		Left = 480, ;
		Name = "txtMin1099", ;
		TabIndex = 19, ;
		Top = 338, ;
		Width = 65
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtnCompress' AS txttextboxcustom WITH ;
		ControlSource = "options.ncompress", ;
		Height = 20, ;
		InputMask = "999.9999999", ;
		Left = 480, ;
		MaxLength = 11, ;
		Name = "txtnCompress", ;
		TabIndex = 14, ;
		Top = 242, ;
		Width = 90
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtnGather' AS txttextboxcustom WITH ;
		ControlSource = "options.ngather", ;
		Height = 20, ;
		InputMask = "999.9999999", ;
		Left = 237, ;
		MaxLength = 11, ;
		Name = "txtnGather", ;
		TabIndex = 12, ;
		Top = 242, ;
		Width = 87
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtnMaxRound' AS txttextboxcustom WITH ;
		ControlSource = "options.nmaxround", ;
		Height = 20, ;
		InputMask = "99.99", ;
		Left = 236, ;
		MaxLength = 7, ;
		Name = "txtnMaxRound", ;
		TabIndex = 9, ;
		Top = 202, ;
		Width = 65
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtnMin1099Roy' AS txttextboxcustom WITH ;
		ControlSource = "options.nmin1099roy", ;
		Height = 20, ;
		InputMask = "999999.99", ;
		Left = 225, ;
		Name = "txtnMin1099Roy", ;
		TabIndex = 18, ;
		Top = 338, ;
		Width = 65
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE Init
		DODEFAULT()
		
		SELECT wells
		LOCATE FOR cState = 'NM'  &&  If there are NM wells, change the Revenue Account No to be "CRS #" for NM State 1099 reporting - BH 12/04/2008
		IF FOUND()
		   THIS.lblcRevAcctNo.CAPTION = 'CRS #:'
		ENDIF
		
	ENDPROC

	PROCEDURE Cbocomboboxcustom1.Init
		if dodefault()
		   sele cvendname, cvendorid from vendor into array lavend order by cvendname
		   
		   if _Tally > 0
		      this.addlistitem('                ',1,1)
		      this.addlistitem('          ',1,2)
		      for lnx = 1 to _tally
		          this.addlistitem(lavend[lnx,1],lnx+1,1)
		          this.addlistitem(lavend[lnx,2],lnx+1,2)
		      endfor
		   endif
		endif          
	ENDPROC

	PROCEDURE chkAllocate.Valid
		m.goapp.lSendToAllocate = this.value
		DODEFAULT()
	ENDPROC

	PROCEDURE chklEditMode.Click
		local lnX
		
		DODEFAULT()
		
		IF THIS.VALUE = .T.  &&  Create edit.com file
		   IF NOT FILE(ALLTRIM(m.goapp.ccommonfolder)+'edit.com')
		      lnX = FCREATE(ALLTRIM(m.goapp.ccommonfolder)+'edit.com')
		      fclose(lnx)
		   ENDIF
		ELSE                 &&  Delete edic.com file to turn off edit mode
		   IF FILE(ALLTRIM(m.goapp.ccommonfolder)+'edit.com')
		      delete FILE(ALLTRIM(m.goapp.ccommonfolder)+'EDIT.com')
		   ENDIF
		ENDIF
		
	ENDPROC

	PROCEDURE chklEditMode.Init
		DODEFAULT()
		
		IF FILE(m.goapp.cCommonFolder+'edit.com')  &&  If edit.com exists, mark the Edit mode checkbox
		   THIS.SET('value',.T.)
		ELSE
		   THIS.SET('value',.F.)
		ENDIF
		
		
	ENDPROC

	PROCEDURE chkTradMenu.Click
		IF this.Value
		   m.goapp.lTradMenu = .T.
		ELSE
		   m.goapp.lTradMenu = .F.
		ENDIF 
		
		
	ENDPROC

	PROCEDURE chkTradMenu.Valid
		IF DODEFAULT()
		   TABLEUPDATE(.t.,.t.,'Options')
		   RELEASE oMenu
		   PUBLIC oMenu
		   m.goApp.ShowMenu()
		   m.goApp.REFRESH()
		ENDIF
		
	ENDPROC

ENDDEFINE

DEFINE CLASS payroll AS container 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="txtPayroll" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblFederal" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDefault" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtFUTArate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtFUTAlimit" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtLiabAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblFUTArate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdBonus" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblFUTAlimit" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblLiabAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtBonusDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblExpAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtExpAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLiabAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblPayChk" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtPayChk" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdExpAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtExpense" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtBonus" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBonusExpense" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblPayExpenses" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdPayChk" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdExpense" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtLiab" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtExp" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCheck" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkFUTA" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSUTA" UniqueID="" Timestamp="" />

	BorderWidth = 0
	Height = 496
	Name = "payroll"
	Width = 612

	ADD OBJECT 'chkFUTA' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Calculate FUTA Tax", ;
		ControlSource = "propt.lcalcfuta", ;
		Left = 112, ;
		Name = "chkFUTA", ;
		TabIndex = 2, ;
		Top = 115
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSUTA' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Calculate SUTA Tax", ;
		ControlSource = "propt.lcalcsuta", ;
		Left = 112, ;
		Name = "chkSUTA", ;
		TabIndex = 1, ;
		Top = 92
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdBonus' AS swlookupbutton WITH ;
		Left = 493, ;
		Name = "cmdBonus", ;
		TabIndex = 28, ;
		Top = 251
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdExpAcct' AS swlookupbutton WITH ;
		Left = 235, ;
		lenabled = .T., ;
		Name = "cmdExpAcct", ;
		TabIndex = 15, ;
		Top = 253
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdExpense' AS swlookupbutton WITH ;
		Left = 492, ;
		Name = "cmdExpense", ;
		TabIndex = 27, ;
		Top = 179
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdLiabAcct' AS swlookupbutton WITH ;
		Left = 235, ;
		lenabled = .T., ;
		Name = "cmdLiabAcct", ;
		TabIndex = 14, ;
		Top = 189
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdPayChk' AS swlookupbutton WITH ;
		Left = 492, ;
		Name = "cmdPayChk", ;
		TabIndex = 26, ;
		Top = 110
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'lblBonusExpense' AS lbltextcustom WITH ;
		Caption = "Bonus Expense", ;
		Height = 16, ;
		Left = 345, ;
		Name = "lblBonusExpense", ;
		TabIndex = 21, ;
		Top = 253, ;
		Width = 78, ;
		ZOrderSet = 27
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblDefault' AS lbltextcustom WITH ;
		Alignment = 2, ;
		Caption = "Default Accounts", ;
		FontSize = 10, ;
		ForeColor = 0,0,255, ;
		Height = 18, ;
		Left = 380, ;
		Name = "lblDefault", ;
		TabIndex = 16, ;
		Top = 70, ;
		Width = 101, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblExpAcct' AS lbltextcustom WITH ;
		Caption = "Expense Acct.", ;
		Height = 16, ;
		Left = 90, ;
		Name = "lblExpAcct", ;
		TabIndex = 9, ;
		Top = 255, ;
		Width = 73, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblFederal' AS lbltextcustom WITH ;
		Alignment = 2, ;
		Caption = "Unemployment Settings", ;
		FontSize = 10, ;
		ForeColor = 0,0,255, ;
		Height = 18, ;
		Left = 106, ;
		Name = "lblFederal", ;
		TabIndex = 11, ;
		Top = 70, ;
		Width = 141, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblFUTAlimit' AS lbltextcustom WITH ;
		Caption = "FUTA Limit", ;
		Height = 16, ;
		Left = 110, ;
		Name = "lblFUTAlimit", ;
		TabIndex = 6, ;
		Top = 164, ;
		Width = 53, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblFUTArate' AS lbltextcustom WITH ;
		Caption = "FUTA Rate (%)", ;
		Height = 16, ;
		Left = 88, ;
		Name = "lblFUTArate", ;
		TabIndex = 5, ;
		Top = 137, ;
		Width = 75, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Payroll Preferences", ;
		FontBold = .T., ;
		FontSize = 12, ;
		Left = 230, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 29, ;
		Top = 5
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblLiabAcct' AS lbltextcustom WITH ;
		Caption = "Liability Acct.", ;
		Height = 16, ;
		Left = 97, ;
		Name = "lblLiabAcct", ;
		TabIndex = 7, ;
		Top = 191, ;
		Width = 66, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblPayChk' AS lbltextcustom WITH ;
		Caption = "Payroll Checking", ;
		Height = 16, ;
		Left = 344, ;
		Name = "lblPayChk", ;
		TabIndex = 17, ;
		Top = 112, ;
		Width = 81, ;
		ZOrderSet = 22
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblPayExpenses' AS lbltextcustom WITH ;
		Caption = "Payroll Expense", ;
		Height = 16, ;
		Left = 344, ;
		Name = "lblPayExpenses", ;
		TabIndex = 19, ;
		Top = 181, ;
		Width = 79, ;
		ZOrderSet = 27
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Shpshapecustom1' AS shpshapecustom WITH ;
		Height = 24, ;
		Left = 76, ;
		Name = "Shpshapecustom1", ;
		Top = 66, ;
		Width = 195, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Shpshapecustom2' AS shpshapecustom WITH ;
		BackStyle = 0, ;
		Height = 224, ;
		Left = 76, ;
		Name = "Shpshapecustom2", ;
		Top = 88, ;
		Width = 195, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Shpshapecustom4' AS shpshapecustom WITH ;
		Height = 24, ;
		Left = 333, ;
		Name = "Shpshapecustom4", ;
		Top = 66, ;
		Width = 195, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Shpshapecustom5' AS shpshapecustom WITH ;
		BackStyle = 0, ;
		Height = 224, ;
		Left = 333, ;
		Name = "Shpshapecustom5", ;
		Top = 88, ;
		Width = 195, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'txtBonus' AS txtquickfill WITH ;
		clistexpression = coa.cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "propt.cbonexpacct", ;
		Format = "K", ;
		Height = 20, ;
		Left = 429, ;
		MaxLength = 6, ;
		Name = "txtBonus", ;
		SelectOnEntry = .T., ;
		TabIndex = 25, ;
		Top = 251, ;
		Width = 51, ;
		ZOrderSet = 26
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtBonusDesc' AS txttextboxcustom WITH ;
		Left = 345, ;
		Name = "txtBonusDesc", ;
		ReadOnly = .T., ;
		TabIndex = 24, ;
		TabStop = .F., ;
		Top = 278, ;
		Width = 169
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCheck' AS txttextboxcustom WITH ;
		Left = 344, ;
		Name = "txtCheck", ;
		ReadOnly = .T., ;
		TabIndex = 18, ;
		TabStop = .F., ;
		Top = 136, ;
		Width = 169
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtExp' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 87, ;
		Name = "txtExp", ;
		ReadOnly = .T., ;
		TabIndex = 10, ;
		TabStop = .F., ;
		Top = 279, ;
		Width = 169
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtExpAcct' AS txtquickfill WITH ;
		clistexpression = coa.cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "propt.cfutaexp", ;
		Format = "K", ;
		Height = 20, ;
		Left = 170, ;
		lenabled = .T., ;
		MaxLength = 6, ;
		Name = "txtExpAcct", ;
		SelectOnEntry = .T., ;
		TabIndex = 13, ;
		Top = 253, ;
		Width = 51, ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtExpense' AS txtquickfill WITH ;
		clistexpression = coa.cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "propt.cprexpacct", ;
		Format = "K", ;
		Height = 20, ;
		Left = 428, ;
		MaxLength = 6, ;
		Name = "txtExpense", ;
		SelectOnEntry = .T., ;
		TabIndex = 23, ;
		Top = 179, ;
		Width = 51, ;
		ZOrderSet = 26
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtFUTAlimit' AS txttextboxcustom WITH ;
		ControlSource = "propt.nfutalimit", ;
		Format = "K", ;
		Height = 20, ;
		Left = 170, ;
		lenabled = .T., ;
		Name = "txtFUTAlimit", ;
		SelectOnEntry = .T., ;
		TabIndex = 4, ;
		Top = 162, ;
		Width = 86, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtFUTArate' AS txttextboxcustom WITH ;
		ControlSource = "propt.nfutarate", ;
		Format = "K", ;
		Height = 20, ;
		InputMask = "999.9999", ;
		Left = 170, ;
		lenabled = .T., ;
		MaxLength = 8, ;
		Name = "txtFUTArate", ;
		SelectOnEntry = .T., ;
		TabIndex = 3, ;
		Top = 135, ;
		Width = 86, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtLiab' AS txttextboxcustom WITH ;
		Enabled = .T., ;
		Height = 20, ;
		Left = 87, ;
		Name = "txtLiab", ;
		ReadOnly = .T., ;
		TabIndex = 8, ;
		TabStop = .F., ;
		Top = 215, ;
		Width = 169
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtLiabAcct' AS txtquickfill WITH ;
		clistexpression = coa.cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "propt.cfutaliab", ;
		Format = "K", ;
		Height = 20, ;
		Left = 170, ;
		lenabled = .T., ;
		MaxLength = 6, ;
		Name = "txtLiabAcct", ;
		SelectOnEntry = .T., ;
		TabIndex = 12, ;
		Top = 189, ;
		Width = 51, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtPayChk' AS txtquickfill WITH ;
		clistexpression = coa.cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "propt.cpracct", ;
		Format = "K", ;
		Height = 20, ;
		Left = 428, ;
		MaxLength = 6, ;
		Name = "txtPayChk", ;
		SelectOnEntry = .T., ;
		TabIndex = 22, ;
		Top = 110, ;
		Width = 51, ;
		ZOrderSet = 23
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtPayroll' AS txttextboxcustom WITH ;
		Left = 344, ;
		Name = "txtPayroll", ;
		ReadOnly = .T., ;
		TabIndex = 20, ;
		TabStop = .F., ;
		Top = 206, ;
		Width = 169
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE chkFUTA.Click
		IF THIS.VALUE = .T.
		   this.parent.txtFutaRate.ENABLED = .T.
		   this.parent.txtFutaLimit.ENABLED = .T.
		   this.parent.txtLiabAcct.ENABLED = .T.
		   this.parent.cmdLiabAcct.ENABLED = .T.
		   this.parent.txtExpAcct.ENABLED = .T.
		   this.parent.cmdExpAcct.ENABLED = .T.
		ELSE
		   this.parent.txtFutaRate.ENABLED = .F.
		   this.parent.txtFutaLimit.ENABLED = .F.
		   this.parent.txtLiabAcct.ENABLED = .F.
		   this.parent.cmdLiabAcct.ENABLED = .F.
		   this.parent.txtExpAcct.ENABLED = .F.
		   this.parent.cmdExpAcct.ENABLED = .F.
		ENDIF
	ENDPROC

	PROCEDURE chkSUTA.Click
		IF this.Value = .t.  &&  If marking this option, tell them to set up the correct states before running a payroll
		   thisform.oMessage.Display('Since the option to calculate SUTA is chosen, make sure to set up any states for which there is withholding deducted on the Payroll Codes >> State Unemployment Setup screen.')
		ENDIF
		
		DODEFAULT()
	ENDPROC

	PROCEDURE cmdBonus.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .T.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\CUSTOM\picklist WITH 'Coa', lcList, this.parent.txtBonus.value, 2
		lcAcct = Coa.cAcctNo
		
		IF llOK
		   IF lcAcct <> propt.cBonExpAcct
		      THISFORM.cmdatamanager.REPLACE('propt','cBonExpAcct',lcAcct)
		      THIS.Parent.txtBonus.REFRESH()
		      THIS.Parent.txtBonusDesc.VALUE    = coa.cAcctDesc
		      THIS.Parent.txtBonusDesc.REFRESH()
		      THISFORM.lchanged = .T.
		   ENDIF
		ENDIF
		
		THISFORM.setnextcontrol(THIS.Parent.txtBonus)
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE cmdExpAcct.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .T.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\CUSTOM\picklist WITH 'Coa', lcList, this.parent.txtExpAcct.value, 2
		lcAcct = Coa.cAcctNo
		
		IF llOK
		   IF lcAcct <> propt.cFutaExp
		      THISFORM.cmdatamanager.REPLACE('propt','cFutaExp',lcAcct)
		      THIS.Parent.txtExpAcct.REFRESH()
		      THIS.Parent.txtExp.VALUE    = coa.cAcctDesc
		      THIS.Parent.txtExp.REFRESH()
		      THISFORM.lchanged = .T.
		   ENDIF
		ENDIF
		
		THISFORM.setnextcontrol(THIS.Parent.txtExpAcct)
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE cmdExpense.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .T.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\CUSTOM\picklist WITH 'Coa', lcList, this.parent.txtExpense.value, 2
		lcAcct = Coa.cAcctNo
		
		IF llOK
		   IF lcAcct <> propt.cPrExpAcct
		      THISFORM.cmdatamanager.REPLACE('propt','cPrExpAcct',lcAcct)
		      THIS.Parent.txtExpense.REFRESH()
		      THIS.Parent.txtPayroll.VALUE    = coa.cAcctDesc
		      THIS.Parent.txtPayroll.REFRESH()
		      THISFORM.lchanged = .T.
		   ENDIF
		ENDIF
		
		THISFORM.setnextcontrol(THIS.Parent.txtExpense)
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE cmdLiabAcct.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .T.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\CUSTOM\picklist WITH 'Coa', lcList, this.parent.txtLiabAcct.value, 2
		lcAcct = Coa.cAcctNo
		
		IF llOK
		   IF lcAcct <> propt.cFutaLiab
		      THISFORM.cmdatamanager.REPLACE('propt','cFutaLiab',lcAcct)
		      THIS.Parent.txtLiabAcct.REFRESH()
		      THIS.Parent.txtLiab.VALUE    = coa.cAcctDesc
		      THIS.Parent.txtLiab.REFRESH()
		      THISFORM.lchanged = .T.
		   ENDIF
		ENDIF
		
		THISFORM.setnextcontrol(THIS.Parent.txtLiabAcct)
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE cmdPayChk.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .T.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\CUSTOM\picklist WITH 'Coa', lcList, this.parent.txtPayChk.value, 2
		lcAcct = Coa.cAcctNo
		
		IF llOK
		   IF lcAcct <> propt.cPrAcct
		      THISFORM.cmdatamanager.REPLACE('propt','cPrAcct',lcAcct)
		      THIS.Parent.txtPayChk.REFRESH()
		      THIS.Parent.txtCheck.VALUE    = coa.cAcctDesc
		      THIS.Parent.txtCheck.REFRESH()
		      THISFORM.lchanged = .T.
		   ENDIF
		ENDIF
		
		THISFORM.setnextcontrol(THIS.Parent.txtPayChk)
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtBonus.GotFocus
		ON KEY LABEL F2 _screen.activeform.pageframe.payroll.payrollprefs.cmdBonus.Click()
	ENDPROC

	PROCEDURE txtBonus.Init
		IF NOT EMPTY(THIS.VALUE)
		   SELECT coa
		   SET ORDER TO acctno
		   IF SEEK(THIS.VALUE)
		      THIS.Parent.txtBonusDesc.VALUE = cacctdesc
		      THIS.Parent.txtBonusDesc.REFRESH()
		   ENDIF
		ENDIF
		
		DODEFAULT()
	ENDPROC

	PROCEDURE txtBonus.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtBonusDesc.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtBonusDesc.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtBonus.LostFocus
		ON KEY LABEL F2 *
	ENDPROC

	PROCEDURE txtBonus.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtBonusDesc.When
		RETURN .F.
		
	ENDPROC

	PROCEDURE txtCheck.When
		RETURN .F.
		
	ENDPROC

	PROCEDURE txtExp.When
		RETURN .F.
		
	ENDPROC

	PROCEDURE txtExpAcct.GotFocus
		ON KEY LABEL F2 _screen.activeform.pageframe.payroll.payrollprefs.cmdExpAcct.Click()
	ENDPROC

	PROCEDURE txtExpAcct.Init
		IF NOT EMPTY(THIS.VALUE)
		   SELECT coa
		   SET ORDER TO acctno
		   IF SEEK(THIS.VALUE)
		      THIS.Parent.txtExp.VALUE = cacctdesc
		      THIS.Parent.txtExp.REFRESH()
		   ENDIF
		ENDIF
		
		DODEFAULT()
	ENDPROC

	PROCEDURE txtExpAcct.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtExp.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtExp.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtExpAcct.LostFocus
		ON KEY LABEL F2 *
	ENDPROC

	PROCEDURE txtExpAcct.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtExpense.GotFocus
		ON KEY LABEL F2 _screen.activeform.pageframe.payroll.payrollprefs.cmdExpense.Click()
		
		dodefault()
	ENDPROC

	PROCEDURE txtExpense.Init
		IF NOT EMPTY(THIS.VALUE)
		   SELECT coa
		   SET ORDER TO acctno
		   IF SEEK(THIS.VALUE)
		      THIS.Parent.txtPayroll.VALUE = cacctdesc
		      THIS.Parent.txtPayroll.REFRESH()
		   ENDIF
		ENDIF
		
		dodefault()
	ENDPROC

	PROCEDURE txtExpense.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtPayroll.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtPayroll.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtExpense.LostFocus
		ON KEY LABEL F2 *
	ENDPROC

	PROCEDURE txtExpense.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtLiab.When
		RETURN .F.
		
	ENDPROC

	PROCEDURE txtLiabAcct.GotFocus
		ON KEY LABEL F2 _screen.activeform.pageframe.payroll.payrollprefs.cmdLiabAcct.Click()
		
		dodefault()
	ENDPROC

	PROCEDURE txtLiabAcct.Init
		IF NOT EMPTY(THIS.VALUE)
		   SELECT coa
		   SET ORDER TO acctno
		   IF SEEK(THIS.VALUE)
		      THIS.Parent.txtLiab.VALUE = cacctdesc
		      THIS.Parent.txtLiab.REFRESH()
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtLiabAcct.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtLiab.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtLiab.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtLiabAcct.LostFocus
		ON KEY LABEL F2 *
	ENDPROC

	PROCEDURE txtLiabAcct.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtPayChk.GotFocus
		ON KEY LABEL F2 _screen.activeform.pageframe.payroll.payrollprefs.cmdPayChk.Click()
		
		dodefault()
	ENDPROC

	PROCEDURE txtPayChk.Init
		IF NOT EMPTY(THIS.VALUE)
		   SELECT coa
		   SET ORDER TO acctno
		   IF SEEK(THIS.VALUE)
		      THIS.Parent.txtCheck.VALUE = cacctdesc
		      THIS.Parent.txtCheck.REFRESH()
		   ENDIF
		ENDIF
		
		dodefault()
	ENDPROC

	PROCEDURE txtPayChk.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtCheck.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtCheck.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtPayChk.LostFocus
		ON KEY LABEL F2  *
	ENDPROC

	PROCEDURE txtPayChk.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtPayroll.When
		RETURN .F.
		
	ENDPROC

ENDDEFINE

DEFINE CLASS posting AS container 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="txtCdisbacct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCdisbacct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCjibacct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCjibacct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCbackacct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCbackacct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCgathacct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCgathacct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCdefacct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCdefacct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCminacct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCminacct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcTaxAcct1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCsevacct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcTaxAcct2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCtaxacct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcDisbAcctDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcDefAcctDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcMinAcctDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcTax1Desc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcTax2Desc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcJIBAcctDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcBackAcctDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcGathAcctDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLookDisbAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLookDefAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLookLegalAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLookTax1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLookTax2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLookJIBAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLookBackupAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLookCompAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcTaxAcct3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lblfieldlabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcTax3Desc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLookTax3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcTaxAcct4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lblfieldlabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcTax4Desc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLookTax4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcFixedAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lblfieldlabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcFixedAcctDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLookFixedAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkPostSummary" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSummaryWell" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcwellincacct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lblfieldlabelcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcWellIncAcctDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLookWellincacct" UniqueID="" Timestamp="" />

	BorderWidth = 0
	Height = 496
	Name = "posting"
	Width = 612

	ADD OBJECT 'chkPostSummary' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Post Summary Entries to G/L", ;
		ControlSource = "options.lsummaryPost", ;
		Left = 110, ;
		Name = "chkPostSummary", ;
		TabIndex = 50, ;
		Top = 384, ;
		Value = .F.
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSummaryWell' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Post Summary Entries to G/L by Well", ;
		ControlSource = "options.lsummaryWell", ;
		Enabled = .T., ;
		Left = 300, ;
		Name = "chkSummaryWell", ;
		TabIndex = 51, ;
		Top = 384, ;
		Value = .F.
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdLookBackupAcct' AS swlookupbutton WITH ;
		Left = 301, ;
		Name = "cmdLookBackupAcct", ;
		TabIndex = 35, ;
		Top = 272
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdLookCompAcct' AS swlookupbutton WITH ;
		Left = 301, ;
		Name = "cmdLookCompAcct", ;
		TabIndex = 39, ;
		Top = 298
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdLookDefAcct' AS swlookupbutton WITH ;
		Left = 301, ;
		Name = "cmdLookDefAcct", ;
		TabIndex = 7, ;
		Top = 90
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdLookDisbAcct' AS swlookupbutton WITH ;
		Left = 301, ;
		Name = "cmdLookDisbAcct", ;
		TabIndex = 3, ;
		Top = 64
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdLookFixedAcct' AS swlookupbutton WITH ;
		Left = 301, ;
		Name = "cmdLookFixedAcct", ;
		TabIndex = 43, ;
		Top = 324
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdLookJIBAcct' AS swlookupbutton WITH ;
		Left = 301, ;
		Name = "cmdLookJIBAcct", ;
		TabIndex = 31, ;
		Top = 246
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdLookLegalAcct' AS swlookupbutton WITH ;
		Left = 301, ;
		Name = "cmdLookLegalAcct", ;
		TabIndex = 11, ;
		Top = 116
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdLookTax1' AS swlookupbutton WITH ;
		Left = 301, ;
		Name = "cmdLookTax1", ;
		TabIndex = 15, ;
		Top = 142
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdLookTax2' AS swlookupbutton WITH ;
		Left = 301, ;
		Name = "cmdLookTax2", ;
		TabIndex = 19, ;
		Top = 168
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdLookTax3' AS swlookupbutton WITH ;
		Left = 301, ;
		Name = "cmdLookTax3", ;
		TabIndex = 23, ;
		Top = 194
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdLookTax4' AS swlookupbutton WITH ;
		Left = 301, ;
		Name = "cmdLookTax4", ;
		TabIndex = 27, ;
		Top = 220
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdLookWellincacct' AS swlookupbutton WITH ;
		Left = 301, ;
		Name = "cmdLookWellincacct", ;
		TabIndex = 47, ;
		Top = 350
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'lblCbackacct' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Backup & Tax Withholding", ;
		Height = 16, ;
		Left = 51, ;
		Name = "lblCbackacct", ;
		TabIndex = 37, ;
		Top = 274, ;
		Width = 127
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblCdefacct' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Owner Deficit Receivable", ;
		Height = 16, ;
		Left = 51, ;
		Name = "lblCdefacct", ;
		TabIndex = 9, ;
		Top = 92, ;
		Width = 125
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblCdisbacct' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Checking Account", ;
		Height = 16, ;
		Left = 51, ;
		Name = "lblCdisbacct", ;
		TabIndex = 5, ;
		Top = 66, ;
		Width = 90
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblCgathacct' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Comp & Gathering Acct", ;
		Height = 16, ;
		Left = 51, ;
		Name = "lblCgathacct", ;
		TabIndex = 41, ;
		Top = 300, ;
		Width = 115
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblCjibacct' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "JIB Receivable Account", ;
		Height = 16, ;
		Left = 51, ;
		Name = "lblCjibacct", ;
		TabIndex = 33, ;
		Top = 248, ;
		Width = 116
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblCminacct' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Legal/Min Suspense Account", ;
		Height = 16, ;
		Left = 51, ;
		Name = "lblCminacct", ;
		TabIndex = 13, ;
		Top = 118, ;
		Width = 143
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblCsevacct' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Product Tax 1 Payable", ;
		Height = 16, ;
		Left = 51, ;
		Name = "lblCsevacct", ;
		TabIndex = 17, ;
		Top = 144, ;
		Width = 110
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblCtaxacct' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Product Tax 2 Payable", ;
		Height = 16, ;
		Left = 51, ;
		Name = "lblCtaxacct", ;
		TabIndex = 21, ;
		Top = 170, ;
		Width = 110
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lblfieldlabelcustom1' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Product Tax 3 Payable", ;
		Height = 16, ;
		Left = 51, ;
		Name = "Lblfieldlabelcustom1", ;
		TabIndex = 25, ;
		Top = 196, ;
		Width = 110
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lblfieldlabelcustom2' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Product Tax 4 Payable", ;
		Height = 16, ;
		Left = 51, ;
		Name = "Lblfieldlabelcustom2", ;
		TabIndex = 29, ;
		Top = 222, ;
		Width = 110
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lblfieldlabelcustom3' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Fixed/Well Exp by Well Payable", ;
		Height = 16, ;
		Left = 51, ;
		Name = "Lblfieldlabelcustom3", ;
		TabIndex = 45, ;
		Top = 326, ;
		Width = 151
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lblfieldlabelcustom4' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Well Revenue by Well Default", ;
		Height = 16, ;
		Left = 51, ;
		Name = "Lblfieldlabelcustom4", ;
		TabIndex = 49, ;
		Top = 352, ;
		Width = 143
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Revenue Dist/JIB Posting Preferences", ;
		FontBold = .T., ;
		FontSize = 12, ;
		Left = 160, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 1, ;
		Top = 5
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'txtCbackacct' AS txtquickfill WITH ;
		clistexpression = coa.cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "options.cbackacct", ;
		Height = 20, ;
		Left = 213, ;
		MaxLength = 6, ;
		Name = "txtCbackacct", ;
		TabIndex = 34, ;
		Top = 272, ;
		Width = 76
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcBackAcctDesc' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 334, ;
		Name = "txtcBackAcctDesc", ;
		TabIndex = 36, ;
		Top = 272, ;
		Width = 216
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCdefacct' AS txtquickfill WITH ;
		clistexpression = coa.cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "options.cdefacct", ;
		Height = 20, ;
		Left = 213, ;
		MaxLength = 6, ;
		Name = "txtCdefacct", ;
		TabIndex = 6, ;
		Top = 90, ;
		Width = 76
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcDefAcctDesc' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 334, ;
		Name = "txtcDefAcctDesc", ;
		TabIndex = 8, ;
		Top = 90, ;
		Width = 216
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCdisbacct' AS txtquickfill WITH ;
		clistexpression = coa.cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "options.cdisbacct", ;
		Height = 20, ;
		Left = 213, ;
		MaxLength = 6, ;
		Name = "txtCdisbacct", ;
		TabIndex = 2, ;
		Top = 64, ;
		Width = 76
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcDisbAcctDesc' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 334, ;
		Name = "txtcDisbAcctDesc", ;
		TabIndex = 4, ;
		Top = 64, ;
		Width = 216
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcFixedAcct' AS txtquickfill WITH ;
		clistexpression = coa.cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "options.cfixedacct", ;
		Height = 20, ;
		Left = 213, ;
		MaxLength = 6, ;
		Name = "txtcFixedAcct", ;
		TabIndex = 42, ;
		Top = 324, ;
		Width = 76
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcFixedAcctDesc' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 334, ;
		Name = "txtcFixedAcctDesc", ;
		TabIndex = 44, ;
		Top = 324, ;
		Width = 216
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCgathacct' AS txtquickfill WITH ;
		clistexpression = coa.cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "options.cgathacct", ;
		Height = 20, ;
		Left = 213, ;
		MaxLength = 6, ;
		Name = "txtCgathacct", ;
		TabIndex = 38, ;
		Top = 298, ;
		Width = 76
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcGathAcctDesc' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 334, ;
		Name = "txtcGathAcctDesc", ;
		TabIndex = 40, ;
		Top = 298, ;
		Width = 216
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCjibacct' AS txtquickfill WITH ;
		clistexpression = coa.cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "options.cjibacct", ;
		Height = 20, ;
		Left = 213, ;
		MaxLength = 6, ;
		Name = "txtCjibacct", ;
		TabIndex = 30, ;
		Top = 246, ;
		Width = 76
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcJIBAcctDesc' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 334, ;
		Name = "txtcJIBAcctDesc", ;
		TabIndex = 32, ;
		Top = 246, ;
		Width = 216
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCminacct' AS txtquickfill WITH ;
		clistexpression = coa.cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "options.cminacct", ;
		Height = 20, ;
		Left = 213, ;
		MaxLength = 6, ;
		Name = "txtCminacct", ;
		TabIndex = 10, ;
		Top = 116, ;
		Width = 76
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcMinAcctDesc' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 334, ;
		Name = "txtcMinAcctDesc", ;
		TabIndex = 12, ;
		Top = 116, ;
		Width = 216
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcTax1Desc' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 334, ;
		Name = "txtcTax1Desc", ;
		TabIndex = 16, ;
		Top = 142, ;
		Width = 216
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcTax2Desc' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 334, ;
		Name = "txtcTax2Desc", ;
		TabIndex = 20, ;
		Top = 168, ;
		Width = 216
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcTax3Desc' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 334, ;
		Name = "txtcTax3Desc", ;
		TabIndex = 24, ;
		Top = 194, ;
		Width = 216
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcTax4Desc' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 334, ;
		Name = "txtcTax4Desc", ;
		TabIndex = 28, ;
		Top = 220, ;
		Width = 216
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcTaxAcct1' AS txtquickfill WITH ;
		clistexpression = coa.cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "options.ctaxacct1", ;
		Height = 20, ;
		Left = 213, ;
		MaxLength = 6, ;
		Name = "txtcTaxAcct1", ;
		TabIndex = 14, ;
		Top = 142, ;
		Width = 76
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcTaxAcct2' AS txtquickfill WITH ;
		clistexpression = coa.cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "options.ctaxacct2", ;
		Height = 20, ;
		Left = 213, ;
		MaxLength = 6, ;
		Name = "txtcTaxAcct2", ;
		TabIndex = 18, ;
		Top = 168, ;
		Width = 76
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcTaxAcct3' AS txtquickfill WITH ;
		clistexpression = coa.cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "options.ctaxacct3", ;
		Height = 20, ;
		Left = 213, ;
		MaxLength = 6, ;
		Name = "txtcTaxAcct3", ;
		TabIndex = 22, ;
		Top = 194, ;
		Width = 76
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcTaxAcct4' AS txtquickfill WITH ;
		clistexpression = coa.cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "options.ctaxacct4", ;
		Height = 20, ;
		Left = 213, ;
		MaxLength = 6, ;
		Name = "txtcTaxAcct4", ;
		TabIndex = 26, ;
		Top = 220, ;
		Width = 76
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcwellincacct' AS txtquickfill WITH ;
		clistexpression = coa.cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "options.cwellincacct", ;
		Height = 20, ;
		Left = 213, ;
		MaxLength = 6, ;
		Name = "txtcwellincacct", ;
		TabIndex = 46, ;
		Top = 350, ;
		Width = 76
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcWellIncAcctDesc' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 334, ;
		Name = "txtcWellIncAcctDesc", ;
		TabIndex = 48, ;
		Top = 350, ;
		Width = 216
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE chkPostSummary.Click
		IF this.Value
		   this.Parent.chkSummaryWell.Visible = .t.
		ELSE
		   this.Parent.chkSummaryWell.Value   = .f.
		   this.Parent.chkSummaryWell.Visible = .f.
		ENDIF    
		  
	ENDPROC

	PROCEDURE chkPostSummary.Valid
		DODEFAULT()
		IF this.Value
		   swselect('expcat')
		   LOCATE FOR ccatcode = 'EXPS'
		   IF NOT FOUND()
		      MESSAGEBOX("This option requires an expense category with a code of 'EXPS'. "  + ;
		                 "One has been added. Edit this code to specify the account that your " + ;
		                 "company's share of expenses should post to.",48,'Expense Category Requirement')
		      SET DELETED OFF
		      LOCATE FOR ccatcode='EXPS'
		      IF FOUND()
		         RECALL
		      ELSE
		         m.ccatcode = 'EXPS'
		         m.cidexpc  = 'EXPS'
		         m.ccateg   = 'Summary Posting'
		         m.cDescrip = 'Summary Posting Account'
		         m.cexpclass = '0'
		         m.ctaxcode  = 'OE'
		         INSERT INTO expcat FROM memvar
		      ENDIF 
		   ENDIF
		ENDIF               
		      
	ENDPROC

	PROCEDURE cmdLookBackupAcct.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, options.cBackAcct, 2
		
		IF llOK
		   THISFORM.cmdatamanager.REPLACE('Options', 'Cbackacct', coa.cacctno)
		   this.parent.txtcBackAcct.Refresh()
		   this.parent.txtcBackAcctDesc.VALUE = coa.cacctdesc
		   this.parent.txtcBackAcctDesc.REFRESH()
		ENDIF
		thisform.setnextcontrol(this.parent.txtcBackAcct)
		
		
		
	ENDPROC

	PROCEDURE cmdLookCompAcct.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, options.cGathAcct, 2
		
		IF llOK
		   THISFORM.cmdatamanager.REPLACE('Options', 'Cgathacct', coa.cacctno)
		   this.parent.txtcGathAcct.Refresh()
		   this.parent.txtcGathAcctDesc.VALUE = coa.cacctdesc
		   this.parent.txtcGathAcctDesc.REFRESH()
		ENDIF
		thisform.setnextcontrol(this.parent.txtcGathAcct)
		
		
		
	ENDPROC

	PROCEDURE cmdLookDefAcct.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, options.cdefacct, 2
		
		IF llOK
		   THISFORM.cmdatamanager.REPLACE('Options', 'Cdefacct', coa.cacctno)
		   this.parent.txtcDefAcct.Refresh()
		   this.parent.txtcDefAcctDesc.VALUE = coa.cacctdesc
		   this.parent.txtcDefAcctDesc.REFRESH()
		ENDIF
		thisform.setnextcontrol(this.parent.txtcDefAcct)
		
		
		
	ENDPROC

	PROCEDURE cmdLookDisbAcct.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, options.cdisbacct, 2
		
		IF llOK
		   THISFORM.cmdatamanager.REPLACE('Options', 'Cdisbacct', coa.cacctno)
		   THIS.Parent.txtcDisbAcct.refresh()
		   this.parent.txtcDisbAcctDesc.VALUE = coa.cacctdesc
		   this.parent.txtcDisbAcctDesc.REFRESH()
		ENDIF
		thisform.setnextcontrol(this.parent.txtcDisbAcct)
		
		
		
	ENDPROC

	PROCEDURE cmdLookFixedAcct.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, options.cFixedAcct, 2
		
		IF llOK
		   THISFORM.cmdatamanager.REPLACE('Options', 'Cfixedacct', coa.cacctno)
		   this.parent.txtcFixedAcct.VALUE = coa.cacctno
		   this.parent.txtcFixedAcctDesc.VALUE = coa.cacctdesc
		   this.parent.txtcFixedAcctDesc.REFRESH()
		ENDIF
		thisform.setnextcontrol(this.parent.txtcFixedAcct)
		
		
		
	ENDPROC

	PROCEDURE cmdLookJIBAcct.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, options.cJibAcct, 2
		
		IF llOK
		   THISFORM.cmdatamanager.REPLACE('Options', 'Cjibacct', coa.cacctno)
		   this.parent.txtcJIBAcct.Refresh()
		   this.parent.txtcJIBAcctDesc.VALUE = coa.cacctdesc
		   this.parent.txtcJIBAcctDesc.REFRESH()
		ENDIF
		thisform.setnextcontrol(this.parent.txtcJIBAcct)
		
		
		
	ENDPROC

	PROCEDURE cmdLookLegalAcct.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, options.cMinAcct, 2
		
		IF llOK
		   THISFORM.cmdatamanager.REPLACE('Options', 'Cminacct', coa.cacctno)
		   this.parent.txtcMinAcct.Refresh()
		   this.parent.txtcMinAcctDesc.VALUE = coa.cacctdesc
		   this.parent.txtcMinAcctDesc.REFRESH()
		ENDIF
		thisform.setnextcontrol(this.parent.txtcMinAcct)
		
		
		
	ENDPROC

	PROCEDURE cmdLookTax1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, options.cTaxAcct1, 2
		
		IF llOK
		   THISFORM.cmdatamanager.REPLACE('Options', 'Ctaxacct1', coa.cacctno)
		   this.parent.txtcTaxAcct1.Refresh()
		   this.parent.txtcTax1Desc.VALUE = coa.cacctdesc
		   this.parent.txtcTax1Desc.REFRESH()
		ENDIF
		thisform.setnextcontrol(this.parent.txtcTaxAcct1)
		
		
		
	ENDPROC

	PROCEDURE cmdLookTax2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, options.cTaxAcct2, 2
		
		IF llOK
		   THISFORM.cmdatamanager.REPLACE('Options', 'CTaxacct2', coa.cacctno)
		   this.parent.txtcTaxAcct2.Refresh()
		   this.parent.txtcTax2Desc.VALUE = coa.cacctdesc
		   this.parent.txtcTax2Desc.REFRESH()
		ENDIF
		thisform.setnextcontrol(this.parent.txtcTaxAcct2)
		
		
		
	ENDPROC

	PROCEDURE cmdLookTax3.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, options.cTaxAcct3, 2
		
		IF llOK
		   THISFORM.cmdatamanager.REPLACE('Options', 'Ctaxacct3', coa.cacctno)
		   this.parent.txtcTaxAcct3.Refresh()
		   this.parent.txtcTax3Desc.VALUE = coa.cacctdesc
		   this.parent.txtcTax3Desc.REFRESH()
		ENDIF
		thisform.setnextcontrol(this.parent.txtcTaxAcct3)
		
		
		
	ENDPROC

	PROCEDURE cmdLookTax4.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, options.cTaxAcct4, 2
		
		IF llOK
		   THISFORM.cmdatamanager.REPLACE('Options', 'Ctaxacct4', coa.cacctno)
		   this.parent.txtcTaxAcct4.Refresh()
		   this.parent.txtcTax4Desc.VALUE = coa.cacctdesc
		   this.parent.txtcTax4Desc.REFRESH()
		ENDIF
		thisform.setnextcontrol(this.parent.txtcTaxAcct4)
		
		
		
	ENDPROC

	PROCEDURE cmdLookWellincacct.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, options.cwellincacct, 2
		
		IF llOK
		   THISFORM.cmdatamanager.REPLACE('Options', 'cwellincacct', coa.cacctno)
		   this.parent.txtcwellincacct.VALUE = coa.cacctno
		   this.parent.txtcwellincacctdesc.VALUE = coa.cacctdesc
		   this.parent.txtcwellincacctdesc.REFRESH()
		ENDIF
		thisform.setnextcontrol(this.parent.txtcwellincacct)
		
		
		
	ENDPROC

	PROCEDURE txtCbackacct.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.PAGEFRAME.posting.postingprefs.cmdLookBackupAcct.CLICK()
		
	ENDPROC

	PROCEDURE txtCbackacct.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtcBackAcctDesc.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtcBackAcctDesc.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtCbackacct.LostFocus
		ON KEY LABEL F2 *
	ENDPROC

	PROCEDURE txtCbackacct.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtcBackAcctDesc.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtCdefacct.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.PAGEFRAME.posting.postingprefs.cmdLookDefAcct.CLICK()
		
	ENDPROC

	PROCEDURE txtCdefacct.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtcDefAcctDesc.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtcDefAcctDesc.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtCdefacct.LostFocus
		ON KEY LABEL F2
	ENDPROC

	PROCEDURE txtCdefacct.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtcDefAcctDesc.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtCdisbacct.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.PAGEFRAME.posting.postingprefs.cmdLookDisbAcct.CLICK()
		
	ENDPROC

	PROCEDURE txtCdisbacct.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtcDisbAcctDesc.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtcDisbAcctDesc.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtCdisbacct.LostFocus
		on key label F2
	ENDPROC

	PROCEDURE txtCdisbacct.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtcDisbAcctDesc.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtcFixedAcct.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.PAGEFRAME.posting.postingprefs.cmdLookFixedAcct.CLICK()
		
	ENDPROC

	PROCEDURE txtcFixedAcct.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtcFixedAcctDesc.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtcFixedAcctDesc.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtcFixedAcct.LostFocus
		ON KEY LABEL F2 *
	ENDPROC

	PROCEDURE txtcFixedAcct.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtcFixedAcctDesc.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtCgathacct.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.PAGEFRAME.posting.postingprefs.cmdLookCompAcct.CLICK()
		
	ENDPROC

	PROCEDURE txtCgathacct.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtcGathAcctDesc.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtcGathAcctDesc.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtCgathacct.LostFocus
		ON KEY LABEL F2 *
	ENDPROC

	PROCEDURE txtCgathacct.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtcGathAcctDesc.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtCjibacct.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.PAGEFRAME.posting.postingprefs.cmdLookJIBAcct.CLICK()
		
	ENDPROC

	PROCEDURE txtCjibacct.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtcJIBAcctDesc.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtcJIBAcctDesc.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtCjibacct.LostFocus
		ON KEY LABEL F2 *
	ENDPROC

	PROCEDURE txtCjibacct.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtcJIBAcctDesc.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtCminacct.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.PAGEFRAME.posting.postingprefs.cmdLookLegalAcct.CLICK()
		
	ENDPROC

	PROCEDURE txtCminacct.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtcMinAcctDesc.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtcMinAcctDesc.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtCminacct.LostFocus
		ON KEY LABEL F2 *
	ENDPROC

	PROCEDURE txtCminacct.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtcMinAcctDesc.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtcTax1Desc.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtcTax2Desc.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtcTax3Desc.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtcTax4Desc.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtcTaxAcct1.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.PAGEFRAME.posting.postingprefs.cmdLookTax1.CLICK()
		
	ENDPROC

	PROCEDURE txtcTaxAcct1.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtcTax1Desc.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtcTax1Desc.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtcTaxAcct1.LostFocus
		ON KEY LABEL F2 *
	ENDPROC

	PROCEDURE txtcTaxAcct1.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtcTaxAcct2.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.PAGEFRAME.posting.postingprefs.cmdLookTax2.CLICK()
		
	ENDPROC

	PROCEDURE txtcTaxAcct2.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtcTax2Desc.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtcTax2Desc.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtcTaxAcct2.LostFocus
		ON KEY LABEL F2 *
	ENDPROC

	PROCEDURE txtcTaxAcct2.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtcTaxAcct3.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.PAGEFRAME.posting.postingprefs.cmdLookTax3.CLICK()
		
	ENDPROC

	PROCEDURE txtcTaxAcct3.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtcTax3Desc.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtcTax3Desc.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtcTaxAcct3.LostFocus
		ON KEY LABEL F2 *
	ENDPROC

	PROCEDURE txtcTaxAcct3.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtcTaxAcct4.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.PAGEFRAME.posting.postingprefs.cmdLookTax4.CLICK()
		
	ENDPROC

	PROCEDURE txtcTaxAcct4.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtcTax4Desc.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtcTax4Desc.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtcTaxAcct4.LostFocus
		ON KEY LABEL F2 *
	ENDPROC

	PROCEDURE txtcTaxAcct4.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtcwellincacct.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.PAGEFRAME.posting.postingprefs.cmdLookwellincacct.CLICK()
		
	ENDPROC

	PROCEDURE txtcwellincacct.InteractiveChange
		IF DODEFAULT()   
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtcwellincacctdesc.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtcwellincacctdesc.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtcwellincacct.LostFocus
		ON KEY LABEL F2 *
	ENDPROC

	PROCEDURE txtcwellincacct.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtcWellIncAcctDesc.When
		RETURN .F.
	ENDPROC

ENDDEFINE

DEFINE CLASS postingqb AS container 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCdisbacct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCjibacct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCbackacct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCgathacct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCdefacct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCminacct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCsevacct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCtaxacct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lblfieldlabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lblfieldlabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Qbaccount1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Qbaccount2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Qbaccount3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Qbaccount4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Qbaccount5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Qbaccount6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Qbaccount7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Qbaccount8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Qbaccount9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Qbaccount10" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lblfieldlabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Qbaccount11" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lblfieldlabelcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Qbaccount12" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lblfieldlabelcustom5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Qbaccount13" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lblfieldlabelcustom6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Qbaccount14" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lblfieldlabelcustom7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Qbaccount15" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Chkcheckboxcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lblfieldlabelcustom8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Qbaccount16" UniqueID="" Timestamp="" />

	BorderWidth = 0
	Height = 496
	Name = "postingqb"
	Width = 612

	ADD OBJECT 'Chkcheckboxcustom1' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Summarize JIB Posting to QuickBooks", ;
		ControlSource = "glopt.lbunch", ;
		Left = 207, ;
		Name = "Chkcheckboxcustom1", ;
		TabIndex = 34, ;
		Top = 445
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'lblCbackacct' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Backup Withholding", ;
		Comment = "", ;
		Height = 16, ;
		Left = 95, ;
		Name = "lblCbackacct", ;
		TabIndex = 19, ;
		Top = 236, ;
		Width = 96
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblCdefacct' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Deficit Account", ;
		Comment = "", ;
		Height = 16, ;
		Left = 95, ;
		Name = "lblCdefacct", ;
		TabIndex = 5, ;
		Top = 68, ;
		Width = 76
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblCdisbacct' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Checking Account", ;
		Comment = "", ;
		Height = 16, ;
		Left = 95, ;
		Name = "lblCdisbacct", ;
		TabIndex = 3, ;
		Top = 44, ;
		Width = 90
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblCgathacct' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Comp & Gathering Acct", ;
		Comment = "", ;
		Height = 16, ;
		Left = 95, ;
		Name = "lblCgathacct", ;
		TabIndex = 23, ;
		Top = 284, ;
		Width = 115
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblCjibacct' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "JIB Receivable Account", ;
		Comment = "", ;
		Height = 16, ;
		Left = 95, ;
		Name = "lblCjibacct", ;
		TabIndex = 17, ;
		Top = 212, ;
		Width = 116
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblCminacct' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Legal Suspense Account", ;
		Comment = "", ;
		Height = 16, ;
		Left = 95, ;
		Name = "lblCminacct", ;
		TabIndex = 7, ;
		Top = 92, ;
		Width = 124
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblCsevacct' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Product Tax 1 Payable", ;
		Comment = "", ;
		Height = 16, ;
		Left = 95, ;
		Name = "lblCsevacct", ;
		TabIndex = 9, ;
		Top = 116, ;
		Width = 110
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblCtaxacct' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Product Tax 2 Payable", ;
		Comment = "", ;
		Height = 16, ;
		Left = 95, ;
		Name = "lblCtaxacct", ;
		TabIndex = 11, ;
		Top = 140, ;
		Width = 110
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lblfieldlabelcustom1' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Product Tax 3 Payable", ;
		Comment = "", ;
		Height = 16, ;
		Left = 95, ;
		Name = "Lblfieldlabelcustom1", ;
		TabIndex = 13, ;
		Top = 164, ;
		Width = 110
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lblfieldlabelcustom2' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Product Tax 4 Payable", ;
		Comment = "", ;
		Height = 16, ;
		Left = 95, ;
		Name = "Lblfieldlabelcustom2", ;
		TabIndex = 15, ;
		Top = 188, ;
		Width = 110
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lblfieldlabelcustom3' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Fixed Expense Account", ;
		Comment = "", ;
		Height = 16, ;
		Left = 95, ;
		Name = "Lblfieldlabelcustom3", ;
		TabIndex = 25, ;
		Top = 308, ;
		Width = 117
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lblfieldlabelcustom4' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Tax Withholding", ;
		Comment = "", ;
		Height = 16, ;
		Left = 95, ;
		Name = "Lblfieldlabelcustom4", ;
		TabIndex = 21, ;
		Top = 260, ;
		Width = 78
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lblfieldlabelcustom5' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Revenue Clearing Account", ;
		Comment = "", ;
		Height = 16, ;
		Left = 95, ;
		Name = "Lblfieldlabelcustom5", ;
		TabIndex = 27, ;
		Top = 332, ;
		Width = 131
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lblfieldlabelcustom6' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Expense Clearing Account", ;
		Comment = "", ;
		Height = 16, ;
		Left = 95, ;
		Name = "Lblfieldlabelcustom6", ;
		TabIndex = 29, ;
		Top = 356, ;
		Width = 130
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lblfieldlabelcustom7' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Catch-All Account", ;
		Comment = "", ;
		Height = 16, ;
		Left = 95, ;
		Name = "Lblfieldlabelcustom7", ;
		TabIndex = 31, ;
		Top = 380, ;
		Width = 90
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lblfieldlabelcustom8' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Accounts Payable", ;
		Comment = "", ;
		Height = 16, ;
		Left = 95, ;
		Name = "Lblfieldlabelcustom8", ;
		TabIndex = 33, ;
		Top = 406, ;
		Width = 90
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "QuickBooks Posting", ;
		FontBold = .T., ;
		FontSize = 12, ;
		Left = 226, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 1, ;
		Top = 5
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Qbaccount1' AS qbaccount WITH ;
		ControlSource = "options.cqbdisbacct", ;
		Height = 20, ;
		lbankonly = .T., ;
		Left = 234, ;
		Margin = 0, ;
		Name = "Qbaccount1", ;
		TabIndex = 2, ;
		Top = 41, ;
		Width = 283
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Qbaccount10' AS qbaccount WITH ;
		ControlSource = "options.cqbgathacct", ;
		Height = 20, ;
		Left = 234, ;
		Margin = 0, ;
		Name = "Qbaccount10", ;
		TabIndex = 22, ;
		Top = 281, ;
		Width = 283
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Qbaccount11' AS qbaccount WITH ;
		ControlSource = "options.cqbfixedacct", ;
		Height = 20, ;
		Left = 234, ;
		Margin = 0, ;
		Name = "Qbaccount11", ;
		TabIndex = 24, ;
		Top = 305, ;
		Width = 283
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Qbaccount12' AS qbaccount WITH ;
		ControlSource = "options.cqbtaxacct", ;
		Height = 20, ;
		Left = 234, ;
		Margin = 0, ;
		Name = "Qbaccount12", ;
		TabIndex = 20, ;
		Top = 257, ;
		Width = 283
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Qbaccount13' AS qbaccount WITH ;
		ControlSource = "glopt.cqbrevclear", ;
		Height = 20, ;
		Left = 234, ;
		Margin = 0, ;
		Name = "Qbaccount13", ;
		TabIndex = 26, ;
		Top = 329, ;
		Width = 283
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Qbaccount14' AS qbaccount WITH ;
		ControlSource = "glopt.cqbexpclear", ;
		Height = 20, ;
		Left = 234, ;
		Margin = 0, ;
		Name = "Qbaccount14", ;
		TabIndex = 28, ;
		Top = 353, ;
		Width = 283
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Qbaccount15' AS qbaccount WITH ;
		ControlSource = "glopt.cqbsuspense", ;
		Height = 20, ;
		Left = 234, ;
		Margin = 0, ;
		Name = "Qbaccount15", ;
		TabIndex = 30, ;
		Top = 377, ;
		Width = 283
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Qbaccount16' AS qbaccount WITH ;
		ControlSource = "apopt.cqbapacct", ;
		Height = 20, ;
		laponly = .T., ;
		Left = 234, ;
		Margin = 0, ;
		Name = "Qbaccount16", ;
		TabIndex = 32, ;
		Top = 403, ;
		Width = 283, ;
		_memberdata = <VFPData>
		<memberdata name="laponly" type="property" display="lAPOnly" favorites="True"/>
		<memberdata name="lbankonly" type="Property" favorites="True"/>
		</VFPData>
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Qbaccount2' AS qbaccount WITH ;
		ControlSource = "options.cqbdefacct", ;
		Height = 20, ;
		Left = 234, ;
		Margin = 0, ;
		Name = "Qbaccount2", ;
		TabIndex = 4, ;
		Top = 65, ;
		Width = 283
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Qbaccount3' AS qbaccount WITH ;
		ControlSource = "options.cqbminacct", ;
		Height = 20, ;
		Left = 234, ;
		Margin = 0, ;
		Name = "Qbaccount3", ;
		TabIndex = 6, ;
		Top = 89, ;
		Width = 283
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Qbaccount4' AS qbaccount WITH ;
		ControlSource = "options.cqbtaxacct1", ;
		Height = 20, ;
		Left = 234, ;
		Margin = 0, ;
		Name = "Qbaccount4", ;
		TabIndex = 8, ;
		Top = 113, ;
		Width = 283
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Qbaccount5' AS qbaccount WITH ;
		ControlSource = "options.cqbtaxacct2", ;
		Height = 20, ;
		Left = 234, ;
		Margin = 0, ;
		Name = "Qbaccount5", ;
		TabIndex = 10, ;
		Top = 137, ;
		Width = 283
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Qbaccount6' AS qbaccount WITH ;
		ControlSource = "options.cqbtaxacct3", ;
		Height = 20, ;
		Left = 234, ;
		Margin = 0, ;
		Name = "Qbaccount6", ;
		TabIndex = 12, ;
		Top = 161, ;
		Width = 283
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Qbaccount7' AS qbaccount WITH ;
		ControlSource = "options.cqbtaxacct4", ;
		Height = 20, ;
		Left = 234, ;
		Margin = 0, ;
		Name = "Qbaccount7", ;
		TabIndex = 14, ;
		Top = 185, ;
		Width = 283
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Qbaccount8' AS qbaccount WITH ;
		ControlSource = "options.cqbjibacct", ;
		Height = 20, ;
		Left = 234, ;
		Margin = 0, ;
		Name = "Qbaccount8", ;
		TabIndex = 16, ;
		Top = 209, ;
		Width = 283
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Qbaccount9' AS qbaccount WITH ;
		ControlSource = "options.cqbbackacct", ;
		Height = 20, ;
		Left = 234, ;
		Margin = 0, ;
		Name = "Qbaccount9", ;
		TabIndex = 18, ;
		Top = 233, ;
		Width = 283
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Shpshapecustom1' AS shpshapecustom WITH ;
		Height = 400, ;
		Left = 60, ;
		Name = "Shpshapecustom1", ;
		Top = 32, ;
		Width = 492
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />
	
	PROCEDURE Qbaccount11.Valid
		IF 'ACCOUNTS PAY' $ UPPER(this.ListItem(this.ListItemId,2))  &&  Don't let them choose an AP account for this account
		   thisform.oMessage.Warning('An account with a type of Accounts Payable cannot be selected for this account.')
		   this.set('value','')
		ENDIF
		
		DODEFAULT()
	ENDPROC

ENDDEFINE

DEFINE CLASS progprefs AS container 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCcashacct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcExpAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCashLook" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCashName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdRentLook" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtExpName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkJVPosting" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCapitalAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCapitalAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCapName" UniqueID="" Timestamp="" />

	BorderWidth = 0
	Height = 496
	Name = "progprefs"
	Width = 612

	ADD OBJECT 'chkJVPosting' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Use JV Type Posting", ;
		ControlSource = "progopt.ljvposting", ;
		Left = 230, ;
		Name = "chkJVPosting", ;
		TabIndex = 11, ;
		Top = 195
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdCapitalAcct' AS cmdcommandbuttoncustom WITH ;
		Caption = "Capital Acct", ;
		Height = 20, ;
		Left = 133, ;
		Name = "cmdCapitalAcct", ;
		TabIndex = 5, ;
		TabStop = .F., ;
		Top = 153
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdCashLook' AS cmdcommandbuttoncustom WITH ;
		Caption = "Cash Acct", ;
		Height = 20, ;
		Left = 133, ;
		Name = "cmdCashLook", ;
		TabIndex = 1, ;
		TabStop = .F., ;
		Top = 72
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdRentLook' AS cmdcommandbuttoncustom WITH ;
		Caption = "Debit Acct", ;
		Height = 20, ;
		Left = 133, ;
		Name = "cmdRentLook", ;
		TabIndex = 4, ;
		TabStop = .F., ;
		Top = 110
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Lbllabelcustom3' AS lbllabelcustom WITH ;
		Caption = "Program/Partnership Preferences", ;
		FontBold = .T., ;
		FontSize = 12, ;
		Left = 177, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 10, ;
		Top = 5
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Shpshapecustom1' AS shpshapecustom WITH ;
		Height = 288, ;
		Left = 88, ;
		Name = "Shpshapecustom1", ;
		Top = 48, ;
		Width = 432
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'txtCapitalAcct' AS txtquickfill WITH ;
		clistexpression = coa.cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "progopt.ccapacct", ;
		Height = 20, ;
		Left = 217, ;
		lrequired = .F., ;
		MaxLength = 6, ;
		Name = "txtCapitalAcct", ;
		TabIndex = 7, ;
		Top = 153, ;
		Width = 49
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCapName' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 277, ;
		lreadonly = .T., ;
		Name = "txtCapName", ;
		TabIndex = 9, ;
		Top = 153, ;
		Width = 192
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCashName' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 277, ;
		lreadonly = .T., ;
		Name = "txtCashName", ;
		TabIndex = 3, ;
		Top = 72, ;
		Width = 192
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCcashacct' AS txtquickfill WITH ;
		clistexpression = coa.cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "progopt.ccashacct", ;
		Height = 20, ;
		Left = 217, ;
		lrequired = .T., ;
		MaxLength = 6, ;
		Name = "txtCcashacct", ;
		TabIndex = 2, ;
		Top = 72, ;
		Width = 49
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcExpAcct' AS txtquickfill WITH ;
		clistexpression = coa.cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "progopt.cexpacct", ;
		Height = 20, ;
		Left = 217, ;
		lrequired = .F., ;
		MaxLength = 6, ;
		Name = "txtcExpAcct", ;
		TabIndex = 6, ;
		Top = 110, ;
		Width = 49
		*< END OBJECT: ClassLib="cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtExpName' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 277, ;
		lreadonly = .T., ;
		Name = "txtExpName", ;
		TabIndex = 8, ;
		Top = 110, ;
		Width = 192
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE Init
		IF DODEFAULT()
		   IF m.goapp.lPartnershipMod
		      this.cmdcapitalAcct.Visible = .t.
		      this.txtcapitalAcct.Visible = .t.
		      this.txtcapname.Visible     = .T.
		   ELSE
		      this.cmdcapitalAcct.Visible = .f.
		      this.txtcapitalAcct.Visible = .f.
		      this.txtcapname.Visible     = .f.   
		   ENDIF 
		ENDIF 
	ENDPROC

	PROCEDURE cmdCapitalAcct.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, this.parent.txtCapitalAcct.value, 2
		
		IF llOK
		   thisform.cmdatamanager.REPLACE('progopt','ccapacct',coa.cacctno)
		   this.parent.txtCapitalAcct.REFRESH()
		   this.parent.txtCapName.VALUE = coa.cacctdesc
		   this.parent.txtCapName.REFRESH()
		ENDIF
		
		THISFORM.setnextcontrol(THIS.Parent.txtCapitalAcct)
		
	ENDPROC

	PROCEDURE cmdCashLook.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, this.parent.txtcCashAcct.value, 2
		
		IF llOK
		   thisform.cmdatamanager.replace('progopt','ccashacct',coa.cacctno)
		   this.parent.txtcCashAcct.Refresh()
		   this.parent.txtCashName.value = coa.cacctdesc
		   this.parent.txtCashName.Refresh()
		ENDIF   
		
		THISFORM.setnextcontrol(THIS.Parent.txtcCashAcct)
		
	ENDPROC

	PROCEDURE cmdRentLook.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, this.parent.txtcExpAcct.VALUE, 2
		
		IF llOK
		   thisform.cmdatamanager.REPLACE('progopt','cexpacct',coa.cacctno)
		   this.parent.txtcExpAcct.REFRESH()
		   this.parent.txtExpName.VALUE = coa.cacctdesc
		   this.parent.txtExpName.REFRESH()
		ENDIF
		
		THISFORM.setnextcontrol(THIS.Parent.txtcExpAcct)
		
	ENDPROC

	PROCEDURE txtCapitalAcct.GotFocus
		ON KEY LABEL F2 _screen.activeform.pageframe.progprefs.progprefs.cmdRentLook.Click()
		
		DODEFAULT()
	ENDPROC

	PROCEDURE txtCapitalAcct.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtExpName.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtExpName.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtCapitalAcct.LostFocus
		on key label F2 *
	ENDPROC

	PROCEDURE txtCapName.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtCashName.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtCcashacct.GotFocus
		ON KEY LABEL F2 _screen.activeform.pageframe.progprefs.progprefs.cmdCashLook.Click()
		
		DODEFAULT()
	ENDPROC

	PROCEDURE txtCcashacct.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtCashName.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtCashName.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtCcashacct.LostFocus
		on key label F2 *
	ENDPROC

	PROCEDURE txtcExpAcct.GotFocus
		ON KEY LABEL F2 _screen.activeform.pageframe.progprefs.progprefs.cmdRentLook.Click()
		
		DODEFAULT()
	ENDPROC

	PROCEDURE txtcExpAcct.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtExpName.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtExpName.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtcExpAcct.LostFocus
		on key label F2 *
	ENDPROC

	PROCEDURE txtExpName.When
		RETURN .F.
	ENDPROC

ENDDEFINE

DEFINE CLASS progprefsqb AS container 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCapitalAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="qbCapitalAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkJVPosting" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkDetailPosting" UniqueID="" Timestamp="" />

	BorderWidth = 0
	Height = 496
	Name = "progprefsqb"
	Width = 612

	ADD OBJECT 'chkDetailPosting' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Post Incoming Receipts in Detail", ;
		ControlSource = "progopt.ldetailpost", ;
		Left = 216, ;
		lenabled = .T., ;
		Name = "chkDetailPosting", ;
		TabIndex = 4, ;
		Top = 108, ;
		Value = .F., ;
		Visible = .T.
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkJVPosting' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Use JV Type Posting", ;
		ControlSource = "progopt.ljvposting", ;
		Left = 216, ;
		Name = "chkJVPosting", ;
		TabIndex = 3, ;
		Top = 84, ;
		Value = .F.
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'lblCapitalAcct' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Capital Account", ;
		Comment = "", ;
		Height = 16, ;
		Left = 132, ;
		Name = "lblCapitalAcct", ;
		TabIndex = 2, ;
		Top = 145, ;
		Visible = .F., ;
		Width = 78
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom3' AS lbllabelcustom WITH ;
		Caption = "Program/Partnership Preferences", ;
		FontBold = .T., ;
		FontSize = 12, ;
		Left = 177, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 1, ;
		Top = 13
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'qbCapitalAcct' AS qbaccount WITH ;
		ControlSource = "progopt.cqbcapacct", ;
		Height = 20, ;
		Left = 216, ;
		Margin = 0, ;
		Name = "qbCapitalAcct", ;
		TabIndex = 5, ;
		Top = 144, ;
		Visible = .F., ;
		Width = 283
		*< END OBJECT: ClassLib="swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Shpshapecustom1' AS shpshapecustom WITH ;
		Height = 205, ;
		Left = 92, ;
		Name = "Shpshapecustom1", ;
		Top = 47, ;
		Width = 427
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />
	
	PROCEDURE Init
		IF DODEFAULT()
			IF m.goapp.lPartnershipMod
				IF progopt.ljvposting
					THIS.lblcapitalAcct.VISIBLE = .T.
					THIS.qbcapitalAcct.VISIBLE  = .T.
					THIS.chkdetailPosting.VISIBLE = .T.
				ELSE
					THIS.lblcapitalAcct.VISIBLE = .F.
					THIS.qbcapitalAcct.VISIBLE  = .F.
					THIS.chkdetailPosting.VISIBLE = .F.
				ENDIF
			ENDIF
			THIS.chkdetailPosting.ENABLED = THIS.chkJVPosting.VALUE
		ENDIF
		
	ENDPROC

	PROCEDURE chkDetailPosting.When
		IF NOT this.Parent.chkjvPosting.Value
		   MESSAGEBOX('JV Posting Must be selected to enable this option',64,'Program/Partnership Preferences')
		ENDIF    
		RETURN this.Parent.chkjVPosting.Value 
	ENDPROC

	PROCEDURE chkJVPosting.Click
		IF this.Value
		   this.Parent.lblcapitalAcct.Visible = .t.
		   this.Parent.qbCapitalAcct.Visible = .t.
		   THIS.parent.chkdetailPosting.VISIBLE = .T.
		ELSE 
		   this.Parent.chkdetailPosting.value = .f.
		   this.Parent.chkdetailPosting.Visible = .f.
		   this.Parent.lblcapitalAcct.Visible = .f.
		   this.Parent.qbCapitalAcct.Visible = .f.
		ENDIF    
		
	ENDPROC

ENDDEFINE

DEFINE CLASS reporting AS container 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkAcctdesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkStmcomp" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkStminv" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkLgrpname" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkLrefid" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkLexpdate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkBillNotesRev" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkLexpsum" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkStminv2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Chkcheckboxcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkJIBNotes" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkShowVendor" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklRevSum" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Chkcheckboxcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Chkcheckboxcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkDecimalInts" UniqueID="" Timestamp="" />

	BorderWidth = 0
	Height = 496
	Name = "reporting"
	Width = 612

	ADD OBJECT 'chkAcctdesc' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Use Expense Code Description On Reports Instead of Expense Code Name", ;
		ControlSource = "options.lacctdesc", ;
		Height = 16, ;
		Left = 76, ;
		Name = "chkAcctdesc", ;
		TabIndex = 3, ;
		Top = 60, ;
		Width = 379
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkBillNotesRev' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Use Description From Bills On Statement Instead of Expense Code Name", ;
		ControlSource = "options.lbilldesc", ;
		Enabled = .T., ;
		Height = 16, ;
		Left = 76, ;
		Name = "chkBillNotesRev", ;
		TabIndex = 16, ;
		Top = 342, ;
		Width = 365
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Chkcheckboxcustom1' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Don't Show Previous Balance and Payments on JIB Statements", ;
		ControlSource = "options.lnojibbal", ;
		Left = 76, ;
		Name = "Chkcheckboxcustom1", ;
		TabIndex = 9, ;
		Top = 176
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Chkcheckboxcustom2' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Change Price on WI Statements To Deduct Comp & Gather", ;
		ControlSource = "options.lhidecomp", ;
		Height = 16, ;
		Left = 76, ;
		Name = "Chkcheckboxcustom2", ;
		TabIndex = 20, ;
		Top = 438, ;
		Width = 297
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Chkcheckboxcustom3' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Change Price on Royalty Stmts To Deduct Comp & Gather", ;
		ControlSource = "options.lchgprice", ;
		Height = 16, ;
		Left = 76, ;
		Name = "Chkcheckboxcustom3", ;
		TabIndex = 19, ;
		Top = 462, ;
		Width = 294
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkDecimalInts' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Show Interests as Decimal Interests on Reports", ;
		ControlSource = "options.ldecimalints", ;
		Left = 76, ;
		Name = "chkDecimalInts", ;
		TabIndex = 7, ;
		Top = 130
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkJIBNotes' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Use Description From Bills on JIB Statements Instead of Expense Code Name", ;
		ControlSource = "options.ljibnotes", ;
		Left = 76, ;
		Name = "chkJIBNotes", ;
		TabIndex = 10, ;
		Top = 199
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkLexpdate' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Print Date On Expense Line of Statements", ;
		ControlSource = "options.lexpdate", ;
		Height = 16, ;
		Left = 76, ;
		Name = "chkLexpdate", ;
		TabIndex = 14, ;
		Top = 294, ;
		Width = 219
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkLexpsum' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Summarize Expenses by Expense Code and Prod Prd on Revenue and JIB Statements", ;
		ControlSource = "options.lexpsum", ;
		Height = 16, ;
		Left = 76, ;
		Name = "chkLexpsum", ;
		TabIndex = 6, ;
		Top = 106, ;
		Width = 431
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkLgrpname' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "Use Group Name As Company Name On Reports", ;
		ControlSource = "options.lgrpname", ;
		Height = 16, ;
		Left = 76, ;
		Name = "chkLgrpname", ;
		TabIndex = 4, ;
		Top = 83, ;
		Width = 253
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkLrefid' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Show Reference ID On Statements", ;
		ControlSource = "options.lrefid", ;
		Height = 16, ;
		Left = 76, ;
		Name = "chkLrefid", ;
		TabIndex = 12, ;
		Top = 246, ;
		Width = 187
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklRevSum' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Summarize Revenue by Type and Prod Period", ;
		ControlSource = "options.lrevsum", ;
		Height = 16, ;
		Left = 76, ;
		Name = "chklRevSum", ;
		TabIndex = 18, ;
		Top = 414, ;
		Width = 238
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkShowVendor' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Print Expense Vendor Name on Statements", ;
		ControlSource = "options.lshowvendor", ;
		Left = 76, ;
		Name = "chkShowVendor", ;
		TabIndex = 13, ;
		Top = 270
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkStmcomp' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Print Compressed Statements", ;
		ControlSource = "options.lstmcomp", ;
		Height = 16, ;
		Left = 76, ;
		Name = "chkStmcomp", ;
		TabIndex = 15, ;
		Top = 318, ;
		Width = 160
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkStminv' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Change Deficit Statements To Invoices", ;
		ControlSource = "options.lstminv", ;
		Height = 16, ;
		Left = 76, ;
		Name = "chkStminv", ;
		TabIndex = 5, ;
		Top = 366, ;
		Width = 203
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkStminv2' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Invoice Direct Paid Owners for Expenses on Statements", ;
		ControlSource = "options.ldirinv", ;
		Height = 16, ;
		Left = 76, ;
		Name = "chkStminv2", ;
		TabIndex = 17, ;
		Top = 390, ;
		Width = 289
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Reporting Preferences", ;
		FontBold = .T., ;
		FontSize = 12, ;
		Left = 219, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 1, ;
		Top = 5
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		BackStyle = 1, ;
		Caption = "General Options", ;
		FontBold = .T., ;
		ForeColor = 0,0,255, ;
		Left = 52, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 2, ;
		Top = 36
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom3' AS lbllabelcustom WITH ;
		BackStyle = 1, ;
		Caption = "JIB Statements", ;
		FontBold = .T., ;
		ForeColor = 0,0,255, ;
		Left = 52, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 8, ;
		Top = 155
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom4' AS lbllabelcustom WITH ;
		BackStyle = 1, ;
		Caption = "Owner Distribution Statements (Revenue)", ;
		FontBold = .T., ;
		ForeColor = 0,0,255, ;
		Left = 52, ;
		Name = "Lbllabelcustom4", ;
		TabIndex = 11, ;
		Top = 225
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Shpshapecustom1' AS shpshapecustom WITH ;
		Height = 440, ;
		Left = 36, ;
		Name = "Shpshapecustom1", ;
		Top = 43, ;
		Width = 564
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Shpshapecustom2' AS shpshapecustom WITH ;
		Height = 72, ;
		Left = 36, ;
		Name = "Shpshapecustom2", ;
		Top = 162, ;
		Width = 564
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />
	
	PROCEDURE chkAcctdesc.Click
		DODEFAULT()
		
		IF THIS.VALUE
		   IF THIS.PARENT.chkjiBNotes.VALUE OR THIS.PARENT.chkbillNotesRev.VALUE
		      MESSAGEBOX('This option and the option to Use Description From Bills on Statement instead of Expense Code Name are ' + ;
		         'mutually exclusive. Only one can be used at a time.', 48, 'Conflicting Options')
		      THIS.VALUE = .F.
		   ENDIF
		ENDIF
		
		
		
		
	ENDPROC

	PROCEDURE chkBillNotesRev.Click
		DODEFAULT()
		
		IF THIS.VALUE
		   IF THIS.PARENT.chkAcctdesc.VALUE
		      MESSAGEBOX('This option and the option to "Use Expense Code Description on Reports instead of Expense Code Name" ' + ;
		         'are mutually exclusive. Only one can be marked at a time.',48,'Conflicting Options')
		      THIS.VALUE = .F.
		   ENDIF
		ENDIF
		
		
		
	ENDPROC

	PROCEDURE Chkcheckboxcustom2.Click
		IF NOT this.Value  &&  They've un-marked it
		   IF thisform.oMessage.confirm('Due to legal challenges related to the practice of hiding charges from owners on their statements, once this is un-marked, it cannot be enabled again.  Continue?')
		      DODEFAULT()
		   ELSE
		      this.set('value',.t.)
		      RETURN
		   ENDIF
		endif
	ENDPROC

	PROCEDURE Chkcheckboxcustom2.Init
		SELECT options
		GO top
		IF NOT options.lHideComp
		   this.Visible = .f.
		ENDIF
		
		DODEFAULT()
	ENDPROC

	PROCEDURE Chkcheckboxcustom3.Click
		IF NOT this.Value  &&  They've un-marked it
		   IF thisform.oMessage.confirm('Due to legal challenges related to the practice of hiding charges from owners on their statements, once this is un-marked, it cannot be enabled again.  Continue?')
		      DODEFAULT()
		   ELSE
		      this.set('value',.t.)
		      RETURN
		   ENDIF
		endif
	ENDPROC

	PROCEDURE Chkcheckboxcustom3.Init
		SELECT options
		GO top
		IF NOT options.lChgPrice
		   this.Visible = .f.
		ENDIF
		
		DODEFAULT()
	ENDPROC

	PROCEDURE chkJIBNotes.Click
		DODEFAULT()
		
		IF THIS.VALUE
		    IF THIS.PARENT.chkacctdesc.VALUE
		       MESSAGEBOX('This option and the option to "Use Expense Code Description On Reports Instead of Expense Code Name" are ' + ;
		            'mutually exclusive. Only one can be used at a time.',48,'Conflicting Options')
		       this.Value = .f.     
		    ENDIF
		ENDIF
		
		
		
	ENDPROC

	PROCEDURE chkLrefid.Click
		IF this.Value
		   IF options.lshowvendor
		      MESSAGEBOX('The option to show the reference ID conflicts with the option to show the vendor name. ' + ;
		                 'Please choose one or the other.',0,'Conflicting Options')
		      this.setvalue(.f.)
		   ENDIF
		ENDIF
		           
	ENDPROC

	PROCEDURE chkShowVendor.Click
		IF this.Value
		   IF options.lrefid
		      MESSAGEBOX('The option to show the vendor name conflicts with the option to show the reference ID. ' + ;
		                 'Please choose one or the other.',0,'Conflicting Options')
		      this.setvalue(.f.)
		   ENDIF
		ENDIF
		           
	ENDPROC

ENDDEFINE

DEFINE CLASS treeno AS container 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtUserName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtPassword" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtDept" UniqueID="" Timestamp="" />

	Height = 496
	Name = "treeno"
	Width = 612

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "User Name:", ;
		Left = 132, ;
		Name = "Lbllabelcustom1", ;
		Top = 84
		*< END OBJECT: ClassLib="..\..\dmie_rv\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "Password:", ;
		Left = 132, ;
		Name = "Lbllabelcustom2", ;
		Top = 132
		*< END OBJECT: ClassLib="..\..\dmie_rv\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom3' AS lbllabelcustom WITH ;
		Caption = "Treeno Preferences", ;
		FontBold = .T., ;
		FontSize = 12, ;
		Left = 230, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 1, ;
		Top = 13
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom4' AS lbllabelcustom WITH ;
		Caption = "Department:", ;
		Left = 132, ;
		Name = "Lbllabelcustom4", ;
		Top = 176
		*< END OBJECT: ClassLib="..\..\dmie_rv\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Shpshapecustom1' AS shpshapecustom WITH ;
		Height = 288, ;
		Left = 94, ;
		Name = "Shpshapecustom1", ;
		Top = 54, ;
		Width = 420
		*< END OBJECT: ClassLib="ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'txtDept' AS txttextboxcustom WITH ;
		cencryptionkey = , ;
		ControlSource = "options.ctreenodept", ;
		Height = 20, ;
		Left = 228, ;
		Name = "txtDept", ;
		Top = 176, ;
		Width = 156
		*< END OBJECT: ClassLib="..\..\dmie_rv\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtPassword' AS txttextboxcustom WITH ;
		cencryptionkey = SherWareKey_@8@2899909, ;
		ControlSource = "options.ctreenopwd", ;
		Left = 228, ;
		Name = "txtPassword", ;
		Top = 132
		*< END OBJECT: ClassLib="..\..\dmie_rv\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtUserName' AS txttextboxcustom WITH ;
		ControlSource = "options.ctreenouser", ;
		Left = 228, ;
		Name = "txtUserName", ;
		Top = 84
		*< END OBJECT: ClassLib="..\..\dmie_rv\custom\ccontrol.vcx" BaseClass="textbox" />

ENDDEFINE
