*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="preferences.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "appdefs.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor10" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor11" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor12" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor13" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor14" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 651
	Left = 170
	Name = "Dataenvironment"
	Top = 245
	Width = 896

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "glopt", ;
		BufferModeOverride = 5, ;
		CursorSource = "glopt", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor10' AS cursor WITH ;
		Alias = "gasopt", ;
		CursorSource = "gasopt", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor10", ;
		Top = 260, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor11' AS cursor WITH ;
		Alias = "progopt", ;
		CursorSource = "progopt", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor11", ;
		Top = 260, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor12' AS cursor WITH ;
		Alias = "expcat", ;
		CursorSource = "expcat", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 427, ;
		Name = "Cursor12", ;
		Top = 276, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor13' AS cursor WITH ;
		Alias = "glmaster", ;
		BufferModeOverride = 5, ;
		CursorSource = "glmaster", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor13", ;
		Top = 380, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor14' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 225, ;
		Name = "Cursor14", ;
		Top = 382, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "coa", ;
		CursorSource = "coa", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "apopt", ;
		BufferModeOverride = 5, ;
		CursorSource = "apopt", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "options", ;
		BufferModeOverride = 5, ;
		CursorSource = "options", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor4", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "propt", ;
		BufferModeOverride = 5, ;
		CursorSource = "propt", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor5", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "landopt", ;
		BufferModeOverride = 5, ;
		CursorSource = "landopt", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor6", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor7' AS cursor WITH ;
		Alias = "aropt", ;
		BufferModeOverride = 5, ;
		CursorSource = "aropt", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 423, ;
		Name = "Cursor7", ;
		Top = 34, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor8' AS cursor WITH ;
		Alias = "vendor", ;
		CursorSource = "vendor", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 425, ;
		Name = "Cursor8", ;
		Top = 153, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor9' AS cursor WITH ;
		Alias = "afeopt", ;
		CursorSource = "afeopt", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor9", ;
		Top = 260, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formpreferences AS frmdatamanagerformcustom OF "..\custom\cforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="PageFrame" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lbl01" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lbl02" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lbl03" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lbl04" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lbl05" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lbl07" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lbl06" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lbl08" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lbl15" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lbl14" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lbl09" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lbl11" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lbl10" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lbl12" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lbl13" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cntokcancelcustom1" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: addblanks		&& Add blank records to each preference (option) table if they are empty.
		*m: hglookcat
		*m: hglookvend
		*m: lookcat
		*m: processprefs
		*m: resetinvno
		*p: glmaint
		*p: lrecalcgl
	*</DefinedPropArrayMethod>

	Caption = "Preferences"
	DoCreate = .T.
	glmaint = .F.
	Height = 528
	HelpContextID = 79
	lrecalcgl = .F.
	Name = "FormPreferences"
	Visible = .T.
	Width = 787
	_memberdata = <VFPData>
		<memberdata name="addblanks" display="AddBlanks"/>
		<memberdata name="hglookcat" display="HGLookCat"/>
		<memberdata name="hglookvend" display="HGLookVend"/>
		</VFPData>
	cmdatamanager.Name = "cmdatamanager"
	cmdatamanager.ZOrderSet = 0
	CMLOOKUPMANAGER.Name = "CMLOOKUPMANAGER"
	Mwresize1.lblHighLight.Name = "lblHighLight"
	Mwresize1.lblShading.Name = "lblShading"
	Mwresize1.Name = "Mwresize1"

	ADD OBJECT 'Cntokcancelcustom1' AS cntokcancelcustom WITH ;
		Height = 36, ;
		Left = 594, ;
		Name = "Cntokcancelcustom1", ;
		TabIndex = 39, ;
		Top = 457, ;
		Width = 163, ;
		ZOrderSet = 20, ;
		cmdcancel.Height = 34, ;
		cmdcancel.Left = 87, ;
		cmdcancel.Name = "cmdcancel", ;
		cmdcancel.Top = 2, ;
		cmdcancel.Width = 75, ;
		cmdok.Default = .F., ;
		cmdok.Height = 34, ;
		cmdok.Left = 1, ;
		cmdok.Name = "cmdok", ;
		cmdok.Top = 2, ;
		cmdok.Width = 75
		*< END OBJECT: ClassLib="..\custom\cbutton.vcx" BaseClass="container" />

	ADD OBJECT 'lbl01' AS _hyperlinklabel WITH ;
		BackStyle = 0, ;
		Caption = "General Ledger", ;
		Left = 24, ;
		Name = "lbl01", ;
		Top = 54, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\..\..\..\program files (x86)\microsoft visual foxpro 9\ffc\_hyperlink.vcx" BaseClass="label" />

	ADD OBJECT 'lbl02' AS _hyperlinklabel WITH ;
		BackStyle = 0, ;
		Caption = "Accounts Payable", ;
		Left = 24, ;
		Name = "lbl02", ;
		Top = 84, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\..\..\..\program files (x86)\microsoft visual foxpro 9\ffc\_hyperlink.vcx" BaseClass="label" />

	ADD OBJECT 'lbl03' AS _hyperlinklabel WITH ;
		BackStyle = 0, ;
		Caption = "Accounts Receivable", ;
		Left = 24, ;
		Name = "lbl03", ;
		Top = 114, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\..\..\..\program files (x86)\microsoft visual foxpro 9\ffc\_hyperlink.vcx" BaseClass="label" />

	ADD OBJECT 'lbl04' AS _hyperlinklabel WITH ;
		BackStyle = 0, ;
		Caption = "Check Printing", ;
		Left = 24, ;
		Name = "lbl04", ;
		Top = 144, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\..\..\..\program files (x86)\microsoft visual foxpro 9\ffc\_hyperlink.vcx" BaseClass="label" />

	ADD OBJECT 'lbl05' AS _hyperlinklabel WITH ;
		BackStyle = 0, ;
		Caption = "Reporting", ;
		Left = 24, ;
		Name = "lbl05", ;
		Top = 174, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\..\..\..\program files (x86)\microsoft visual foxpro 9\ffc\_hyperlink.vcx" BaseClass="label" />

	ADD OBJECT 'lbl06' AS _hyperlinklabel WITH ;
		BackStyle = 0, ;
		Caption = "Rev Dist/JIB Posting", ;
		Left = 24, ;
		Name = "lbl06", ;
		Top = 204, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\..\..\..\program files (x86)\microsoft visual foxpro 9\ffc\_hyperlink.vcx" BaseClass="label" />

	ADD OBJECT 'lbl07' AS _hyperlinklabel WITH ;
		BackStyle = 0, ;
		Caption = "Payroll", ;
		Left = 24, ;
		Name = "lbl07", ;
		Top = 234, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\..\..\..\program files (x86)\microsoft visual foxpro 9\ffc\_hyperlink.vcx" BaseClass="label" />

	ADD OBJECT 'lbl08' AS _hyperlinklabel WITH ;
		BackStyle = 0, ;
		Caption = "AFE Management", ;
		Left = 24, ;
		Name = "lbl08", ;
		Top = 264, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\..\..\..\program files (x86)\microsoft visual foxpro 9\ffc\_hyperlink.vcx" BaseClass="label" />

	ADD OBJECT 'lbl09' AS _hyperlinklabel WITH ;
		BackStyle = 0, ;
		Caption = "Land Management", ;
		Left = 24, ;
		Name = "lbl09", ;
		Top = 294, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\..\..\..\program files (x86)\microsoft visual foxpro 9\ffc\_hyperlink.vcx" BaseClass="label" />

	ADD OBJECT 'lbl10' AS _hyperlinklabel WITH ;
		BackStyle = 0, ;
		Caption = "House Gas", ;
		Left = 24, ;
		Name = "lbl10", ;
		Top = 324, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\..\..\..\program files (x86)\microsoft visual foxpro 9\ffc\_hyperlink.vcx" BaseClass="label" />

	ADD OBJECT 'lbl11' AS _hyperlinklabel WITH ;
		BackStyle = 0, ;
		Caption = "Program/Partnerships", ;
		Left = 24, ;
		Name = "lbl11", ;
		Top = 354, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\..\..\..\program files (x86)\microsoft visual foxpro 9\ffc\_hyperlink.vcx" BaseClass="label" />

	ADD OBJECT 'lbl12' AS _hyperlinklabel WITH ;
		BackStyle = 0, ;
		Caption = "ACH Setup", ;
		Left = 24, ;
		Name = "lbl12", ;
		Top = 384, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\..\..\..\program files (x86)\microsoft visual foxpro 9\ffc\_hyperlink.vcx" BaseClass="label" />

	ADD OBJECT 'lbl13' AS _hyperlinklabel WITH ;
		BackStyle = 0, ;
		Caption = "Misc Preferences", ;
		Left = 24, ;
		Name = "lbl13", ;
		Top = 414, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\..\..\..\program files (x86)\microsoft visual foxpro 9\ffc\_hyperlink.vcx" BaseClass="label" />

	ADD OBJECT 'lbl14' AS _hyperlinklabel WITH ;
		BackStyle = 0, ;
		Caption = "E-Mail Preferences", ;
		Left = 24, ;
		Name = "lbl14", ;
		Top = 444, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\..\..\..\program files (x86)\microsoft visual foxpro 9\ffc\_hyperlink.vcx" BaseClass="label" />

	ADD OBJECT 'lbl15' AS _hyperlinklabel WITH ;
		BackStyle = 0, ;
		Caption = "Cloud Doc Mgmt", ;
		Left = 24, ;
		Name = "lbl15", ;
		Top = 474, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\..\..\..\program files (x86)\microsoft visual foxpro 9\ffc\_hyperlink.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Preference Sets", ;
		FontBold = .T., ;
		FontSize = 10, ;
		Left = 28, ;
		Name = "Lbllabelcustom1", ;
		Top = 23
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'PageFrame' AS pgfpageframecustom WITH ;
		ErasePage = .T., ;
		Height = 496, ;
		Left = 165, ;
		Name = "PageFrame", ;
		PageCount = 15, ;
		TabOrientation = 0, ;
		Tabs = .F., ;
		Top = 15, ;
		Width = 612, ;
		ZOrderSet = 3, ;
		Page1.BackStyle = 0, ;
		Page1.Caption = "Page1", ;
		Page1.Name = "GLPage", ;
		Page10.Caption = "Page10", ;
		Page10.Name = "LandPrefs", ;
		Page11.Caption = "Page11", ;
		Page11.Name = "HGPrefs", ;
		Page12.Caption = "Page12", ;
		Page12.Name = "ProgPrefs", ;
		Page13.Caption = "Page13", ;
		Page13.Name = "ACHPrefs", ;
		Page14.Caption = "Email", ;
		Page14.Name = "Email", ;
		Page15.Caption = "", ;
		Page15.Name = "CloudDoc", ;
		Page2.Caption = "Page2", ;
		Page2.Name = "APPage", ;
		Page3.Caption = "Page3", ;
		Page3.Name = "ARPage", ;
		Page4.Caption = "Page4", ;
		Page4.Name = "CheckPage", ;
		Page5.Caption = "Page5", ;
		Page5.Name = "Reporting", ;
		Page6.Caption = "Page6", ;
		Page6.Name = "Misc", ;
		Page7.Caption = "Page7", ;
		Page7.Name = "Payroll", ;
		Page8.Caption = "Page8", ;
		Page8.Name = "Posting", ;
		Page9.Caption = "Page9", ;
		Page9.Name = "AFEPrefs"
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="pageframe" />

	ADD OBJECT 'Shpshapecustom1' AS shpshapecustom WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 6, ;
		BorderWidth = 2, ;
		Height = 504, ;
		Left = 4, ;
		Name = "Shpshapecustom1", ;
		Top = 14, ;
		Width = 152, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />
	
	PROCEDURE addblanks		&& Add blank records to each preference (option) table if they are empty.
		 SET DELETED ON 
		   SELECT glopt  &&  Select all the various options tables, and make sure there's a record in them - BH 8/29/06
		   COUNT FOR NOT DELETED() TO lnCount
		   IF lnCount = 0
		      APPEND BLANK
		   ENDIF
		   GO TOP
		
		   SELECT apopt
		   COUNT FOR NOT DELETED() TO lnCount
		   IF lnCount = 0
		      APPEND BLANK
		   ENDIF
		   GO TOP
		
		   SELECT aropt
		   COUNT FOR NOT DELETED() TO lnCount
		   IF lnCount = 0
		      APPEND BLANK
		   ENDIF
		   GO TOP
		
		   SELECT options
		   COUNT FOR NOT DELETED() TO lnCount
		   IF lnCount = 0
		      APPEND BLANK
		   ENDIF
		   GO TOP
		   
		   SELECT propt
		   COUNT FOR NOT DELETED() TO lnCount
		   IF lnCount = 0
		      APPEND BLANK
		   ENDIF
		   GO TOP
		
		   SELECT afeopt
		   COUNT FOR NOT DELETED() TO lnCount
		   IF lnCount = 0
		      APPEND BLANK
		      REPLACE lAllocExp WITH .T.
		   ENDIF
		   GO TOP
		
		   SELECT landopt
		   COUNT FOR NOT DELETED() TO lnCount
		   IF lnCount = 0
		      APPEND BLANK
		   ENDIF
		   GO TOP
		   
		   SELECT gasopt
		   COUNT FOR NOT DELETED() TO lnCount
		   IF lnCount = 0
		      APPEND BLANK
		   ENDIF
		   GO TOP
		
		   SELECT progopt
		   COUNT FOR NOT DELETED() TO lnCount
		   IF lnCount = 0
		      APPEND BLANK
		   ENDIF
		   GO TOP
		   
		
	ENDPROC

	PROCEDURE hglookcat
		LOCAL lcList
		PRIV llOK
		
		llOK = .T.
		
		IF USED('exptmp')
		   USE IN exptmp
		ENDIF
		IF USED('exptmp1')
		   USE IN exptmp1
		ENDIF
		
		SELECT cCatCode,cCateg,cExpClass,IIF(lAFEType,'X','') AS lAFEType  ;
		   FROM expcat INTO CURSOR exptmp1
		
		USE DBF('exptmp1') AGAIN IN 0 ALIAS exptmp
		SELECT exptmp
		INDEX ON cCatCode           TAG cCatCode
		INDEX ON cCateg             TAG cCateg
		INDEX ON cExpClass+cCatCode TAG cExpClass
		
		lcList = 'ccatcode\Code,ccateg\Category,cexpclass\Cls,lAFEType\AFE'
		
		DO FORM '..\custom\picklist' WITH 'exptmp', lcList, THISFORM.pageframe.hgprefs.housegas.txtccatcode.VALUE, 4, .T., .T.
		
		IF llOK
		   THIS.pageframe.hgprefs.housegas.txtccatcode.set('VALUE',exptmp.cCatCode)
		   THIS.pageframe.hgprefs.housegas.txtcCatDesc.set('value',exptmp.ccateg)
		ENDIF
		
		
	ENDPROC

	PROCEDURE hglookvend
		LOCAL lcList
		PRIV llOK
		
		llOK = .T.
		
		lcList = 'cvendorid,csortfield'
		
		DO FORM ..\Custom\PickList WITH 'Vendor', lcList, THIS.pageframe.hgprefs.housegas.txtVendorID.value, 2
		
		IF llOK
		   THIS.pageframe.hgprefs.housegas.txtvendorid.value = Vendor.cVendorID
		   THIS.pageframe.hgprefs.housegas.txtvendname.value = Vendor.cVendName
		   THIS.pageframe.hgprefs.housegas.txtvendorid.refresh()
		   THIS.pageframe.hgprefs.housegas.txtvendname.refresh()
		ENDIF   
		
		
	ENDPROC

	PROCEDURE Init
		IF DODEFAULT()
		
		   thisform.AddBlanks()  
		   
		   THISFORM.glmaint = CREATEOBJECT('glmaint')
		
		   * Don't show GL preferences if no GL privilege
		   IF NOT m.goapp.lGLData
		      THISFORM.lbl01.Visible = .F.
		   ELSE
		      THISFORM.lbl01.VISIBLE = .T.
		   ENDIF
		   
		   * Don't show AP preferences if no AP privilege
		   IF NOT m.goapp.lAPData
		      THISFORM.lbl02.Visible = .F.
		   ELSE
		      THISFORM.lbl02.VISIBLE = .T.
		   ENDIF
		   
		   * Don't show AR preferences if no AR privilege
		   IF NOT m.goapp.lARData
		      THISFORM.lbl03.Visible = .F.
		   ELSE
		      THISFORM.lbl03.VISIBLE = .T.
		   ENDIF
		
		   * Don't show Check printing if no cash privilege
		   IF NOT m.goapp.lCashData
		      THISFORM.lbl04.Visible = .F.
		   ELSE
		      THISFORM.lbl04.VISIBLE = .T.
		   ENDIF
		
		   * Don't show Reporting if no reporting privilege
		   IF NOT m.goapp.lReportMenu
		      THISFORM.lbl05.Visible = .F.
		   ELSE
		      THISFORM.lbl05.VISIBLE = .T.
		   ENDIF
		
		   * Don't show Rev Dist/Jib Posting if no revdist or jib privilege
		   IF NOT m.goapp.lRevDistData AND NOT m.goapp.lJIBData
		      THISFORM.lbl06.Visible = .F.
		   ELSE
		      THISFORM.lbl06.VISIBLE = .T.
		   ENDIF
		
		   * Don't show ACH Setup if no direct deposit privilege
		   IF NOT m.goapp.ldirdmdep
		      THISFORM.lbl12.Visible = .F.
		   ELSE
		      THISFORM.lbl12.VISIBLE = .T.
		   ENDIF
		
		   * Don't show Payroll preferences if no Payroll option or privilege
		   IF NOT m.goapp.lPayrollOpt OR NOT m.goapp.lPayrollData
		      THISFORM.lbl07.VISIBLE = .F.
		   ELSE
		      THISFORM.lbl07.VISIBLE = .T.
		   ENDIF
		
		   * Don't show AFE preferences if no AFE option or privilege
		   IF NOT m.goapp.lAFEOpt OR NOT m.goapp.lAFEData
		      thisform.lbl08.Visible = .F.
		   ELSE
		      THISFORM.lbl08.VISIBLE = .T.
		   ENDIF
		
		   * Don't show Land preferences if no Land option or privilege
		   IF NOT m.goapp.lLandOpt OR NOT m.goapp.lLandData
		      THISFORM.lbl09.VISIBLE = .F.
		   ELSE
		      THISFORM.lbl09.VISIBLE = .T.
		   ENDIF
		
		   * Don't show House Gas preferences if no HG option or privilege
		   IF NOT m.goapp.lHouseGasOpt OR NOT m.goapp.lHouseGasData
		      THISFORM.lbl10.VISIBLE = .F.
		   ELSE
		      THISFORM.lbl10.VISIBLE = .T.
		   ENDIF
		
		   * Don't show program preferences if no program option
		   IF NOT m.goapp.lProgOpt 
		      THISFORM.lbl11.VISIBLE = .F.
		   ELSE
		      THISFORM.lbl11.VISIBLE = .T.
		   ENDIF
		
		   * Don't show Cloud Doc Mgmt preferences if no Cloud Doc option
		   IF NOT m.goapp.lCloudDocs
		      THISFORM.lbl15.VISIBLE = .F.
		   ELSE
		      THISFORM.lbl15.VISIBLE = .T.
		   ENDIF
		   
		   * Arrange the hyperlink labels in order to account
		   * for missing labels because of config options or privileges
		   lnTop = 54
		   FOR lnx = 1 TO 15
		      lclbl = PADL(TRANSFORM(lnx),2,'0')
		      lclabelv = 'thisform.lbl' + lclbl + '.visible'
		      lclabelt = 'thisform.lbl' + lclbl + '.top'
		      
		      IF &lcLabelv
		         STORE lntop TO (lclabelt)
		         lntop = lntop + 30
		      ENDIF
		   endfor
		      
		      
		ENDIF
		
	ENDPROC

	PROCEDURE lookcat
		LOCAL lcList
		PRIV llOK
		
		llOK = .T.
		
		IF USED('exptmp')
		   USE IN exptmp
		ENDIF
		IF USED('exptmp1')
		   USE IN exptmp1
		ENDIF
		
		SELECT cCatCode,cCateg,cExpClass,IIF(lAFEType,'X','') AS lAFEType  ;
		   FROM expcat INTO CURSOR exptmp1
		
		USE DBF('exptmp1') AGAIN IN 0 ALIAS exptmp
		SELECT exptmp
		INDEX ON cCatCode           TAG cCatCode
		INDEX ON cCateg             TAG cCateg
		INDEX ON cExpClass+cCatCode TAG cExpClass
		
		lcList = 'ccatcode\Code,ccateg\Category,cexpclass\Cls,lAFEType\AFE'
		
		DO FORM '..\custom\picklist' WITH 'exptmp', lcList, THIS.pageframe.landprefs.landprefs.txtccatcode.VALUE, 4, .T., .T.
		
		IF llOK
		   THIS.pageframe.landprefs.landprefs.txtccatcode.set('VALUE',exptmp.cCatCode)
		   THIS.pageframe.landprefs.landprefs.txtcCatDesc.set('value',exptmp.ccateg)
		ENDIF
		
		
	ENDPROC

	PROCEDURE processprefs
		IF THISFORM.lRecalcGL
		   IF THISFORM.oMessage.CONFIRM('You changed the starting month of your fiscal year or the year in which your fiscal year ends.  Would you like to recalculate your existing data?')
		      wait window nowait 'Changing G/L information, please wait...'
		      CREATE CURSOR temp  ;
		         (nMonth     N(2,0),  ;
		         nYear      N(4,0))
		
		      lnCount = 1
		      SELECT MONTH(ddate) AS nMonth, YEAR(ddate) AS nYear FROM glmaster INTO CURSOR temp1 GROUP BY nMONTH, nYear
		
		      SELECT temp
		      APPEND FROM DBF('temp1')
		      SCAN
		         lcPeriod = thisform.glmaint.getperiod(ctod(PADL(ALLTRIM(STR(temp.nMonth)),2,'0') + '/01/' + ALLTRIM(STR(temp.nYear))),.F.)
		         lcYear = thisform.glmaint.getperiod(ctod(PADL(ALLTRIM(STR(temp.nMonth)),2,'0') + '/01/' + ALLTRIM(STR(temp.nYear))),.T.)
		         SELECT glmaster
		         REPLACE cYear WITH lcYear, cPeriod WITH lcPeriod FOR MONTH(ddate) = temp.nMonth AND YEAR(ddate) = temp.nYear
		      ENDSCAN
		
		      SELECT glmaster
		      =TABLEUPDATE(.t.)
		      WAIT CLEAR 
		   ENDIF
		ENDIF
		llsuccess = TABLEUPDATE(2,.f.,'glopt')
		llsuccess = TABLEUPDATE(2,.f.,'apopt')
		llsuccess = TABLEUPDATE(2,.f.,'aropt')
		llsuccess = thisform.ResetInvNo()
		llsuccess = TABLEUPDATE(2,.f.,'options')
		llsuccess = TABLEUPDATE(2,.f.,'afeopt')
		llsuccess = TABLEUPDATE(2,.f.,'landopt')
		llsuccess = TABLEUPDATE(2,.f.,'propt')
		llsuccess = TABLEUPDATE(2,.f.,'progopt')
		
		SELECT options
		SCATTER NAME m.goapp.oOptions
		
	ENDPROC

	PROCEDURE resetinvno
		LOCAL llSuccess, oRegistry
		
		oRegistry = m.goapp.oRegistry
		
		llSuccess = .t. 
		TRY
		   * Lock the counter so no other users can access it.
		   oCounter = oRegistry.LockCounter('%Shared.Counters.Invoice Number')
		
		
		   lckey = PADL(ALLT(aropt.cinvnum),10,'0')
		
		   * Get the next value of the counter key
		   m.cCounterValue = oRegistry.GetCounter(oCounter)
		
		      m.ccounter = 'Invoice Number'
		      m.filecounter = lckey
		      m.regcounter = m.cCounterValue
		
		      * Table is out of sync with the counter, so update it.
		      oRegistry.SetCounter(oCounter,lckey)
		      oRegistry.UpdateCounter(oCounter)
		
		   oRegistry.UnlockCounter(oCounter)
		   USE IN invhdr
		CATCH
		   llSuccess = .f.
		ENDTRY
		
		RETURN llSuccess
	ENDPROC

	PROCEDURE Cntokcancelcustom1.cmdcancel.Click
		IF THISFORM.lchanged = .T.
		   DODEFAULT()
		ELSE
		   THISFORM.RELEASE()
		ENDIF
		
	ENDPROC

	PROCEDURE Cntokcancelcustom1.cmdok.Click
		thisform.ProcessPrefs()
		DODEFAULT()
	ENDPROC

	PROCEDURE lbl01.Click
		thisform.pageFrame.ActivePage = 1
		thisform.pageFrame.glPage.Activate
	ENDPROC

	PROCEDURE lbl02.Click
		thisform.pageframe.appage.activate
		thisform.pageframe.ActivePage = 2
	ENDPROC

	PROCEDURE lbl03.Click
		thisform.pageframe.arpage.activate
		thisform.pageframe.ActivePage = 3
	ENDPROC

	PROCEDURE lbl04.Click
		thisform.pageframe.checkpage.activate
		thisform.pageframe.ActivePage = 4
	ENDPROC

	PROCEDURE lbl05.Click
		thisform.pageframe.reporting.activate
		thisform.pageframe.ActivePage = 5
	ENDPROC

	PROCEDURE lbl06.Click
		thisform.pageframe.posting.activate
		thisform.pageframe.ActivePage = 8
	ENDPROC

	PROCEDURE lbl07.Click
		thisform.pageframe.payroll.activate
		thisform.pageframe.ActivePage = 7
	ENDPROC

	PROCEDURE lbl08.Click
		thisform.pageframe.afeprefs.activate
		thisform.pageframe.ActivePage = 9
	ENDPROC

	PROCEDURE lbl09.Click
		thisform.pageframe.landprefs.activate
		thisform.pageframe.ActivePage = 10
	ENDPROC

	PROCEDURE lbl10.Click
		thisform.pageframe.HGPrefs.activate
		thisform.pageframe.ActivePage = 11
	ENDPROC

	PROCEDURE lbl11.Click
		thisform.pageframe.ProgPrefs.activate
		thisform.pageframe.ActivePage = 12
	ENDPROC

	PROCEDURE lbl12.Click
		thisform.pageframe.ACHPrefs.activate
		thisform.pageframe.ActivePage = 13
	ENDPROC

	PROCEDURE lbl13.Click
		thisform.pageframe.Misc.activate
		thisform.pageframe.ActivePage = 6
	ENDPROC

	PROCEDURE lbl14.Click
		thisform.pageframe.Email.activate
		thisform.pageframe.ActivePage = 14
	ENDPROC

	PROCEDURE lbl15.Click
		thisform.pageframe.CloudDoc.activate
		thisform.pageframe.ActivePage = 15
	ENDPROC

	PROCEDURE PageFrame.ACHPrefs.Activate
		IF this.ControlCount = 0
		   this.AddObject('achprefs','ach')
		   WITH this.achprefs
		      .top = 0
		      .left = 0
		      .visible = .t.
		       
		         .lbldest.visible = .t.
		         .lbldestname.visible = .t.
		         .txtdest.visible = .t.
		         .txtdestname.visible = .t.
		         .lblBankName.Caption = 'Origin Name:'
		         .lblBankTransit.Caption = 'Origin:'
		       
		   ENDWITH
		ENDIF
	ENDPROC

	PROCEDURE PageFrame.AFEPrefs.Activate
		IF this.ControlCount = 0
		   this.AddObject('afeprefs','afeprefs')
		   WITH this.afeprefs
		      .top = 0
		      .left = 0
		      .visible = .t.
		   ENDWITH
		ENDIF
	ENDPROC

	PROCEDURE PageFrame.APPage.Activate
		IF this.ControlCount = 0
		   this.AddObject('apprefs','apprefs')
		   WITH this.apprefs
		      .top = 0
		      .left = 0
		      .visible = .t.
		      
		      SELECT coa
		      SET ORDER to acctno
		      
		      *  Cash Account
		      IF SEEK(.txtcCashDefault.value)
		         .txtcCashAcct.value = coa.cacctdesc
		      ELSE
		         .txtcCashAcct.value = ''
		      endif      
		      *  A/P Account
		      IF SEEK(.txtcAPAcct.value)
		         .txtcAcctsPayable.value = coa.cacctdesc
		      ELSE
		         .txtcAcctsPayable.value = ''
		      endif      
		      *  Disc Taken Account
		      IF SEEK(.txtcDiscDefault.value)
		         .txtcDiscTaken.value = coa.cacctdesc
		      ELSE
		         .txtcDiscTaken.value = ''
		      endif      
		   ENDWITH
		ENDIF
	ENDPROC

	PROCEDURE PageFrame.ARPage.Activate
		IF this.ControlCount = 0
		   this.AddObject('arprefs','arprefs')
		   WITH this.arprefs
		      .top = 0
		      .left = 0
		      .visible = .t.
		      
		      SELECT coa
		      SET ORDER to acctno
		      
		      *  Cash Account
		      IF SEEK(.txtcCashAcct.value)
		         .txtCashAcct.value = coa.cacctdesc
		      ELSE
		         .txtCashAcct.value = ''
		      endif  
		      *  A/R Account
		      IF SEEK(.txtcARAcct.value)
		         .txtARAcct.value = coa.cacctdesc
		      ELSE
		         .txtARAcct.value = ''
		      endif    
		      *  Disc Allowed Account
		      IF SEEK(.txtcDiscAll.value)
		         .txtDiscAllowed.value = coa.cacctdesc
		      ELSE
		         .txtDiscAllowed.value = ''
		      endif            
		      *  Sales Tax Account
		      IF SEEK(.txtcSalesTax.value)
		         .txtSalesTax.value = coa.cacctdesc
		      ELSE
		         .txtSalesTax.value = ''
		      endif      
		      *  Interest Account
		      IF SEEK(.txtcInterest.value)
		         .txtIntInc.value = coa.cacctdesc
		      ELSE
		         .txtIntInc.value = ''
		      endif      
		      *  COGS Account
		      IF SEEK(.txtcCOGS.value)
		         .txtCOGS.value = coa.cacctdesc
		      ELSE
		         .txtCOGS.value = ''
		      endif      
		      *  Fee Account
		      IF SEEK(.txtfeeacct.value)
		         .txtfeedesc.value = coa.cacctdesc
		      ELSE
		         .txtfeedesc.value = ''
		      endif      
		   ENDWITH
		ENDIF
	ENDPROC

	PROCEDURE PageFrame.CheckPage.Activate
		IF this.ControlCount = 0
		   this.AddObject('checkprefs','checks')
		   WITH this.checkprefs
		      .top = 0
		      .left = 0
		      .visible = .t.
		   ENDWITH
		ENDIF
	ENDPROC

	PROCEDURE PageFrame.CloudDoc.Activate
		IF this.ControlCount = 0
		   this.AddObject('clouddocs', 'treeno')
		   WITH this.clouddocs
		      .top = 0
		      .left = 0
		      .visible = .t.
		     
		   ENDWITH
		ENDIF
	ENDPROC

	PROCEDURE PageFrame.Email.Activate
		IF this.ControlCount = 0
		   this.AddObject('emailprefs','email')
		   WITH this.emailprefs
		      .top = 0
		      .left = 0
		      .visible = .t.
		     
		   ENDWITH
		ENDIF
		
	ENDPROC

	PROCEDURE PageFrame.GLPage.Activate
		IF this.ControlCount = 0
		   this.AddObject('glprefs','glprefs')
		   WITH this.glprefs
		      .top = 0
		      .left = 0
		      .visible = .t.
		      
		      SELECT glopt
		      COUNT FOR NOT DELETED() TO lnCount
		      IF lnCount = 0
		         APPEND BLANK
		      ENDIF 
		      SET DELETED ON      
		      GO TOP 
		      SELECT coa
		      SET ORDER to acctno
		      * Retained Earnings
		      IF SEEK(glopt.cRetEarn)
		         .txtRetDesc.value = coa.cacctdesc
		      ELSE
		         .txtRetDesc.value = ''   
		      endif   
		      * Current Earnings
		      IF SEEK(glopt.ccurearn)
		         .txtCurDesc.value = coa.cacctdesc
		      ELSE
		         .txtCurDesc.value = ''   
		      endif   
		      * Inventory
		      IF SEEK(glopt.cinventory)
		         .txtInvenDesc.value = coa.cacctdesc
		      ELSE
		         .txtInvenDesc.value = ''   
		      endif   
		      * Revenue Clearing
		      IF SEEK(glopt.crevclear)
		         .txtRevDesc.value = coa.cacctdesc
		      ELSE
		         .txtRevDesc.value = ''   
		      endif   
		      * Expense Clearing
		      IF SEEK(glopt.cexpclear)
		         .txtExpClearDesc.value = coa.cacctdesc
		      ELSE
		         .txtExpClearDesc.value = ''   
		      endif   
		      * Undeposited Funds
		      IF SEEK(glopt.cundepfund)
		         .txtUndDesc.value = coa.cacctdesc
		      ELSE
		         .txtUndDesc.value = ''   
		      endif   
		      * Catch-All
		      IF SEEK(glopt.csuspense)
		         .txtSuspDesc.value = coa.cacctdesc
		      ELSE
		         .txtSuspDesc.value = ''   
		      endif   
		   ENDWITH
		ENDIF
	ENDPROC

	PROCEDURE PageFrame.HGPrefs.Activate
		IF this.ControlCount = 0
		   this.AddObject('housegas','housegas')
		   WITH this.housegas
		      .top = 0
		      .left = 0
		      .visible = .t.
		      
		      SELECT coa
		      SET ORDER to acctno
		      
		      *  Receivable Account
		      IF SEEK(.txtcARAcct.value)
		         .txtARAcct.value = coa.cacctdesc
		      ELSE
		         .txtARAcct.value = ''
		      endif      
		      *  Sales Account
		      IF SEEK(.txtcDetailAcct.value)
		         .txtDetailAcct.value = coa.cacctdesc
		      ELSE
		         .txtDetailAcct.value = ''
		      endif      
		   ENDWITH
		ENDIF
	ENDPROC

	PROCEDURE PageFrame.LandPrefs.Activate
		IF this.ControlCount = 0
		   this.AddObject('landprefs','landprefs')
		   WITH this.landprefs
		      .top = 0
		      .left = 0
		      .visible = .t.
		      
		      SELECT coa
		      SET ORDER to acctno
		      
		      IF EMPTY(landopt.ccatcode)
		         SELECT expcat
		         LOCATE FOR 'DELAY RENTAL' $ UPPER(ccateg)
		         IF FOUND()
		            SELECT landopt
		            REPLACE ccatcode WITH expcat.ccatcode
		            .txtccatcode.value = expcat.ccatcode
		         ENDIF
		      ENDIF 
		      SELECT expcat
		      SET ORDER to ccatcode
		      IF SEEK(.txtccatcode.value)
		         .txtccatdesc.value = expcat.ccateg
		      ELSE
		         .txtccatdesc.value = ''
		      ENDIF 
		      IF landopt.lexpense
		         .cmdlookcat.visible  = .t.
		         .txtccatcode.visible = .t.
		         .txtccatdesc.visible = .t.
		      ELSE
		         .cmdlookcat.visible  = .f.
		         .txtccatcode.visible = .f.
		         .txtccatdesc.visible = .f.
		      ENDIF  
		   ENDWITH
		ENDIF
	ENDPROC

	PROCEDURE PageFrame.Misc.Activate
		IF THIS.CONTROLCOUNT = 0
		   THIS.ADDOBJECT('miscprefs','miscprefs')
		   WITH THIS.miscprefs
		      .TOP = 0
		      .LEFT = 0
		      .VISIBLE = .T.
		      IF m.goapp.lDocuments
		         .chkDocShare.visible = .t.
		      ELSE
		         .chkDocShare.visible = .f.
		      ENDIF 
		   ENDWITH   
		ENDIF
		
	ENDPROC

	PROCEDURE PageFrame.Payroll.Activate
		IF this.ControlCount = 0
		   this.AddObject('payrollprefs','payroll')
		   WITH this.payrollprefs
		      .top = 0
		      .left = 0
		      .visible = .t.
		   ENDWITH
		ENDIF
	ENDPROC

	PROCEDURE PageFrame.Posting.Activate
		IF this.ControlCount = 0
		   this.AddObject('postingprefs','posting')
		   WITH this.postingprefs
		      .top = 0
		      .left = 0
		      .visible = .t.
		      
		      SELECT coa
		      SET ORDER to acctno
		      
		      *  Cash Account
		      IF SEEK(.txtcDisbAcct.value)
		         .txtcDisbAcctDesc.value = coa.cacctdesc
		      ELSE
		         .txtcDisbAcctDesc.value = ''
		      endif      
		      *  Owner Deficit Account
		      IF SEEK(.txtcDefAcct.value)
		         .txtcDefAcctDesc.value = coa.cacctdesc
		      ELSE
		         .txtcDefAcctDesc.value = ''
		      endif      
		      *  Owner Minimum Account
		      IF SEEK(.txtcMinAcct.value)
		         .txtcMinAcctDesc.value = coa.cacctdesc
		      ELSE
		         .txtcMinAcctDesc.value = ''
		      endif      
		      *  Prod Tax 1 Account
		      IF SEEK(.txtcTaxAcct1.value)
		         .txtcTax1Desc.value = coa.cacctdesc
		      ELSE
		         .txtcTax1Desc.value = ''
		      endif      
		      *  Prod Tax 2 Account
		      IF SEEK(.txtcTaxAcct2.value)
		         .txtcTax2Desc.value = coa.cacctdesc
		      ELSE
		         .txtcTax2Desc.value = ''
		      endif      
		      *  Prod Tax 3 Account
		      IF SEEK(.txtcTaxAcct3.value)
		         .txtcTax3Desc.value = coa.cacctdesc
		      ELSE
		         .txtcTax3Desc.value = ''
		      endif      
		      *  Prod Tax 4 Account
		      IF SEEK(.txtcTaxAcct4.value)
		         .txtcTax4Desc.value = coa.cacctdesc
		      ELSE
		         .txtcTax4Desc.value = ''
		      endif      
		      *  JIB Receivable Account
		      IF SEEK(.txtcJIBAcct.value)
		         .txtcJIBAcctDesc.value = coa.cacctdesc
		      ELSE
		         .txtcJIBAcctDesc.value = ''
		      endif      
		      *  Backup/Tax Account
		      IF SEEK(.txtcBackAcct.value)
		         .txtcBackAcctDesc.value = coa.cacctdesc
		      ELSE
		         .txtcBackAcctDesc.value = ''
		      endif      
		      *  Compression/Gathering Account
		      IF SEEK(.txtcGathAcct.value)
		         .txtcGathAcctDesc.value = coa.cacctdesc
		      ELSE
		         .txtcGathAcctDesc.value = ''
		      endif      
		      *  Fixed Exp Clearing Account
		      IF SEEK(.txtcFixedAcct.value)
		         .txtcFixedAcctDesc.value = coa.cacctdesc
		      ELSE
		         .txtcFixedAcctDesc.value = ''
		      endif   
		      *  Well Inc by Well Account
		      IF SEEK(.txtcWellIncAcct.value)
		         .txtcWellIncAcctDesc.value = coa.cacctdesc
		      ELSE
		         .txtcWellIncAcctDesc.value = ''
		      endif    
		      IF options.lSummaryPost
		         .chkSummaryWell.visible = .t.
		      ELSE
		         .chkSummaryWell.visible = .f. 
		      ENDIF    
		   ENDWITH
		ENDIF
	ENDPROC

	PROCEDURE PageFrame.ProgPrefs.Activate
		IF this.ControlCount = 0
		   this.AddObject('progprefs','progprefs')
		   WITH this.progprefs
		      .top = 0
		      .left = 0
		      .visible = .t.
		      
		      SELECT coa
		      SET ORDER to acctno
		      
		      *  Cash Account
		      IF SEEK(.txtcCashAcct.value)
		         .txtCashName.value = coa.cacctdesc
		      ELSE
		         .txtCashName.value = ''
		      endif      
		      *  Expense Account
		      IF SEEK(.txtcExpAcct.value)
		         .txtExpName.value = coa.cacctdesc
		      ELSE
		         .txtExpName.value = ''
		      endif      
		   ENDWITH
		ENDIF
	ENDPROC

	PROCEDURE PageFrame.Reporting.Activate
		IF this.ControlCount = 0
		   this.AddObject('reportprefs','reporting')
		   WITH this.reportprefs
		      .top = 0
		      .left = 0
		      .visible = .t.
		   ENDWITH
		ENDIF
	ENDPROC

ENDDEFINE
