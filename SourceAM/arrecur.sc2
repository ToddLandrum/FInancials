*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="arrecur.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor10" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor11" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor12" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Relation1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor13" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor14" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 437
	InitialSelectedAlias = "invrech"
	Left = 38
	Name = "Dataenvironment"
	Top = 134
	Width = 785

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "aropt", ;
		CursorSource = "aropt", ;
		Database = ..\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor10' AS cursor WITH ;
		Alias = "invrech1", ;
		CursorSource = "invrech", ;
		Database = ..\data\appdata.dbc, ;
		Height = 90, ;
		Left = 157, ;
		Name = "Cursor10", ;
		Top = 286, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor11' AS cursor WITH ;
		Alias = "custownvend", ;
		CursorSource = "custownvend", ;
		Database = ..\data\appdata.dbc, ;
		Height = 90, ;
		Left = 431, ;
		Name = "Cursor11", ;
		Top = 256, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor12' AS cursor WITH ;
		Alias = "custs", ;
		CursorSource = "custs", ;
		Database = ..\data\appdata.dbc, ;
		Height = 90, ;
		Left = 48, ;
		Name = "Cursor12", ;
		Top = 291, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor13' AS cursor WITH ;
		Alias = "allunits", ;
		CursorSource = "allunits", ;
		Database = ..\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor13", ;
		Top = 380, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor14' AS cursor WITH ;
		Alias = "gldept", ;
		CursorSource = "gldept", ;
		Database = ..\data\appdata.dbc, ;
		Height = 90, ;
		Left = 539, ;
		Name = "Cursor14", ;
		Top = 78, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "coa", ;
		CursorSource = "coa", ;
		Database = ..\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Order = "acctno", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "invrech", ;
		BufferModeOverride = 5, ;
		CursorSource = "invrech", ;
		Database = ..\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Order = "cbatch", ;
		Top = 19, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "invrecd", ;
		BufferModeOverride = 5, ;
		CursorSource = "invrecd", ;
		Database = ..\data\appdata.dbc, ;
		Height = 90, ;
		Left = 427, ;
		Name = "Cursor4", ;
		Top = 6, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "items", ;
		CursorSource = "items", ;
		Database = ..\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor5", ;
		Order = "citemid", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "salestx", ;
		CursorSource = "salestx", ;
		Database = ..\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor6", ;
		Order = "ctaxcode", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor7' AS cursor WITH ;
		Alias = "terms", ;
		CursorSource = "terms", ;
		Database = ..\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor7", ;
		Order = "cidterm", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor8' AS cursor WITH ;
		Alias = "custown", ;
		CursorSource = "custown", ;
		Database = ..\data\appdata.dbc, ;
		Height = 90, ;
		Left = 430, ;
		Name = "Cursor8", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor9' AS cursor WITH ;
		Alias = "invrecd1", ;
		CursorSource = "invrecd", ;
		Database = ..\data\appdata.dbc, ;
		Height = 90, ;
		Left = 317, ;
		Name = "Cursor9", ;
		Top = 288, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Relation1' AS relation WITH ;
		ChildAlias = "invrecd", ;
		ChildOrder = "cbatch", ;
		Name = "Relation1", ;
		ParentAlias = "invrech", ;
		RelationalExpr = "cbatch"
		*< END OBJECT: BaseClass="relation" />

ENDDEFINE

DEFINE CLASS formarrecur AS frmdatamanagerformcustom OF "..\.\custom\cforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="cboSalesTax" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtNsalestax" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblNsalestax" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCcustid" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shape1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLookCust" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcCustid" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcAcctNo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCreference" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCreference" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLookDept" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcWellID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtNinvtot" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblNinvtot" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtNinvbal" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblNinvbal" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboTerms" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcItemId" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcItemDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtnPrice" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtnQuantity" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtnExtension" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInvdet" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInvdet.Column1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInvdet.Column1.txtcItemId" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInvdet.Column2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInvdet.Column2.txtcItemDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInvdet.Column3.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInvdet.Column3.txtnPrice" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInvdet.Column4.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInvdet.Column4.txtnQuantity" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInvdet.Column7.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInvdet.Column7.tctnExtension" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInvdet.Column5.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInvdet.Column5.txtcAcctNo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInvdet.Column6.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInvdet.Column6.txtcTaxable" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInvdet.Column8.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInvdet.Column8.cmdDelete" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInvdet.Column9.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInvdet.Column9.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInvdet.Column10.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdInvdet.Column10.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLookItem" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLookCOA" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLookWell" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcDeptNo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcPriceCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcWellName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboTaxable" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcAcctDesc" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: adddetail
		*m: calcext		&& Calculates the detail extension total
		*m: calctot		&& Calculates the Invoice Totals
		*m: getprice		&& Gets the price for the item based upon the price code passed.
		*m: lookcoa
		*m: setstate		&& Resets the form state for non bound controls so that the save button still works.
		*m: valterms		&& Validate Terms and Set Due Date and Disc Date based on the Terms
		*p: ldeptrequired
		*p: lexempt
		*p: lwellrequired
		*p: nextension
		*p: nprice
		*p: nquantity
	*</DefinedPropArrayMethod>

	Caption = "Recurring Invoices"
	cdisplayname = 
	clistexpression = invrech.ccustid
	cnavworkarea = Invrech
	cworkarea = Invrech
	DoCreate = .T.
	Height = 423
	HelpContextID = 460
	ldeptrequired = .F.
	lexempt = .F.
	lexpliciteditmode = .F.
	lwellrequired = .F.
	Name = "FormARRecur"
	Width = 673
	cmdatamanager.Name = "cmdatamanager"
	cmdatamanager.TabIndex = 1
	cmdatamanager.ZOrderSet = 0
	cmlookupmanager.Name = "cmlookupmanager"

	ADD OBJECT 'cboSalesTax' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		ControlSource = "invrech.ctaxcode", ;
		FontSize = 8, ;
		Height = 20, ;
		Left = 168, ;
		Margin = 2, ;
		Name = "cboSalesTax", ;
		RowSource = "", ;
		RowSourceType = 0, ;
		Style = 2, ;
		TabIndex = 33, ;
		Top = 373, ;
		Width = 156, ;
		ZOrderSet = 42
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboTaxable' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		ColumnCount = 1, ;
		FontName = "Arial", ;
		Height = 20, ;
		Left = 597, ;
		Name = "cboTaxable", ;
		TabIndex = 27, ;
		Top = 102, ;
		Width = 64, ;
		ZOrderSet = 56
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboTerms' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		ControlSource = "invrech.cidterm", ;
		FontSize = 8, ;
		Height = 20, ;
		Left = 330, ;
		Margin = 2, ;
		Name = "cboTerms", ;
		RowSource = "", ;
		RowSourceType = 0, ;
		TabIndex = 7, ;
		Top = 48, ;
		Width = 156, ;
		ZOrderSet = 24
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'cmdLookCOA' AS cmdcommandbuttoncustom WITH ;
		Caption = "Account", ;
		Height = 20, ;
		Left = 279, ;
		Name = "cmdLookCOA", ;
		TabIndex = 12, ;
		TabStop = .F., ;
		Top = 80, ;
		Width = 72, ;
		ZOrderSet = 32
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdLookCust' AS swlookupbutton WITH ;
		Left = 172, ;
		Name = "cmdLookCust", ;
		TabIndex = 3, ;
		Top = 10
		*< END OBJECT: ClassLib="..\.\custom\swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdLookDept' AS cmdcommandbuttoncustom WITH ;
		Caption = "Dept", ;
		FontName = "Arial", ;
		FontSize = 8, ;
		Height = 20, ;
		Left = 441, ;
		Name = "cmdLookDept", ;
		TabIndex = 10, ;
		TabStop = .F., ;
		Top = 79, ;
		Width = 53, ;
		ZOrderSet = 42
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdLookItem' AS cmdcommandbuttoncustom WITH ;
		Caption = "Item ID", ;
		Height = 20, ;
		Left = 12, ;
		Name = "cmdLookItem", ;
		TabIndex = 11, ;
		TabStop = .F., ;
		Top = 80, ;
		Width = 72, ;
		ZOrderSet = 31
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdLookWell' AS cmdcommandbuttoncustom WITH ;
		Caption = " Well/Lease", ;
		Height = 20, ;
		Left = 355, ;
		Name = "cmdLookWell", ;
		TabIndex = 13, ;
		TabStop = .F., ;
		Top = 80, ;
		Width = 77, ;
		ZOrderSet = 33
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'grdInvdet' AS grdgridcustom WITH ;
		ColumnCount = 10, ;
		cworkarea = invrecd, ;
		Height = 174, ;
		lallowautoappend = .F., ;
		lallownew = .F., ;
		lcolumnmemory = .F., ;
		Left = 0, ;
		LinkMaster = "", ;
		Name = "grdInvdet", ;
		Panel = 1, ;
		RecordSource = "invrecd", ;
		RecordSourceType = 1, ;
		RelationalExpr = "", ;
		TabIndex = 30, ;
		Top = 158, ;
		Width = 666, ;
		ZOrderSet = 31, ;
		Column1.ColumnOrder = 2, ;
		Column1.ControlSource = "invrecd.citemid", ;
		Column1.FontSize = 8, ;
		Column1.Name = "Column1", ;
		Column10.ColumnOrder = 8, ;
		Column10.ControlSource = "invrecd.cdeptno", ;
		Column10.FontSize = 8, ;
		Column10.Name = "Column10", ;
		Column2.ColumnOrder = 3, ;
		Column2.ControlSource = "invrecd.citemdesc", ;
		Column2.FontSize = 8, ;
		Column2.Name = "Column2", ;
		Column2.Width = 131, ;
		Column3.ColumnOrder = 4, ;
		Column3.ControlSource = "invrecd.nprice", ;
		Column3.FontSize = 8, ;
		Column3.Name = "Column3", ;
		Column3.Width = 57, ;
		Column4.ColumnOrder = 5, ;
		Column4.ControlSource = "invrecd.nquantity", ;
		Column4.FontSize = 8, ;
		Column4.Name = "Column4", ;
		Column4.Width = 57, ;
		Column5.ColumnOrder = 9, ;
		Column5.Comment = "Column7", ;
		Column5.ControlSource = "invrecd.nextension", ;
		Column5.FontSize = 8, ;
		Column5.Name = "Column7", ;
		Column5.Width = 75, ;
		Column6.ColumnOrder = 6, ;
		Column6.ControlSource = "invrecd.cacctno", ;
		Column6.FontSize = 8, ;
		Column6.Name = "Column5", ;
		Column6.Width = 51, ;
		Column7.ColumnOrder = 10, ;
		Column7.ControlSource = "invrecd.ctaxable", ;
		Column7.FontSize = 8, ;
		Column7.Name = "Column6", ;
		Column7.Width = 24, ;
		Column8.ColumnOrder = 1, ;
		Column8.Name = "Column8", ;
		Column8.Sparse = .F., ;
		Column8.Width = 12, ;
		Column9.ColumnOrder = 7, ;
		Column9.ControlSource = "invrecd.cunitno", ;
		Column9.FontSize = 8, ;
		Column9.Name = "Column9", ;
		Column9.Width = 69
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="grid" />

	ADD OBJECT 'grdInvdet.Column1.Header1' AS header WITH ;
		Caption = "Item ID", ;
		FontSize = 8, ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdInvdet.Column1.txtcItemId' AS txtquickfill WITH ;
		clistexpression = items.citemid, ;
		clistworkarea = items, ;
		ControlSource = "invrecd.citemid", ;
		FontName = "Arial", ;
		FontSize = 8, ;
		lallowexceptions = .F., ;
		Left = 37, ;
		Name = "txtcItemId", ;
		Top = 33
		*< END OBJECT: ClassLib="..\.\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdInvdet.Column10.Header1' AS header WITH ;
		Caption = "Dept", ;
		FontSize = 8, ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdInvdet.Column10.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ControlSource = "invrecd.cdeptno", ;
		FontSize = 8, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'grdInvdet.Column2.Header1' AS header WITH ;
		Caption = "Description", ;
		FontSize = 8, ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdInvdet.Column2.txtcItemDesc' AS txttextboxcustom WITH ;
		ControlSource = "invrecd.citemdesc", ;
		cworkarea = , ;
		FontName = "Arial", ;
		FontSize = 8, ;
		Left = 100, ;
		Name = "txtcItemDesc", ;
		Top = 35
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdInvdet.Column3.Header1' AS header WITH ;
		Caption = "Price", ;
		FontSize = 8, ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdInvdet.Column3.txtnPrice' AS txttextboxcustom WITH ;
		ControlSource = "invrecd.nprice", ;
		cworkarea = , ;
		FontName = "Arial", ;
		FontSize = 8, ;
		Left = 14, ;
		Name = "txtnPrice", ;
		Top = 23
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdInvdet.Column4.Header1' AS header WITH ;
		Caption = "Quantity", ;
		FontSize = 8, ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdInvdet.Column4.txtnQuantity' AS txttextboxcustom WITH ;
		ControlSource = "invrecd.nquantity", ;
		cworkarea = , ;
		FontName = "Arial", ;
		FontSize = 8, ;
		Left = 19, ;
		Name = "txtnQuantity", ;
		Top = 35
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdInvdet.Column5.Header1' AS header WITH ;
		Caption = "Account", ;
		FontSize = 8, ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdInvdet.Column5.txtcAcctNo' AS txtquickfill WITH ;
		clistexpression = cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "invrecd.cacctno", ;
		FontName = "Arial", ;
		FontSize = 8, ;
		Left = 27, ;
		Name = "txtcAcctNo", ;
		Top = 33
		*< END OBJECT: ClassLib="..\.\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdInvdet.Column6.Header1' AS header WITH ;
		Caption = "Tax", ;
		FontSize = 8, ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdInvdet.Column6.txtcTaxable' AS txttextboxcustom WITH ;
		ControlSource = "invrecd.ctaxable", ;
		cworkarea = , ;
		FontName = "Arial", ;
		FontSize = 8, ;
		InputMask = "! X", ;
		Left = 61, ;
		Name = "txtcTaxable", ;
		Top = 23
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdInvdet.Column7.Header1' AS header WITH ;
		Caption = "Extension", ;
		FontSize = 8, ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdInvdet.Column7.tctnExtension' AS txttextboxcustom WITH ;
		ControlSource = "invrecd.nextension", ;
		cworkarea = , ;
		FontName = "Arial", ;
		FontSize = 8, ;
		Left = 57, ;
		Name = "tctnExtension", ;
		Top = 35
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'grdInvdet.Column8.cmdDelete' AS cmdcommandbuttoncustom WITH ;
		Caption = "X", ;
		FontBold = .T., ;
		ForeColor = 255,0,0, ;
		Left = 13, ;
		Name = "cmdDelete", ;
		Top = 21
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'grdInvdet.Column8.Header1' AS header WITH ;
		Caption = "", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdInvdet.Column9.Header1' AS header WITH ;
		Caption = " Well ID", ;
		FontSize = 8, ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdInvdet.Column9.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ControlSource = "invrecd.cunitno", ;
		FontSize = 8, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Label1' AS lbllabelcustom WITH ;
		Caption = "Price", ;
		Height = 16, ;
		Left = 175, ;
		Name = "Label1", ;
		TabIndex = 15, ;
		Top = 82, ;
		Width = 26, ;
		ZOrderSet = 35
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Label2' AS lbllabelcustom WITH ;
		Caption = "Quantity", ;
		Height = 16, ;
		Left = 234, ;
		Name = "Label2", ;
		TabIndex = 16, ;
		Top = 82, ;
		Width = 42, ;
		ZOrderSet = 36
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Label3' AS lbllabelcustom WITH ;
		Caption = "Extension", ;
		Height = 16, ;
		Left = 545, ;
		Name = "Label3", ;
		TabIndex = 17, ;
		Top = 82, ;
		Width = 49, ;
		ZOrderSet = 37
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblCcustid' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		Caption = "Customer ID", ;
		Height = 16, ;
		Left = 15, ;
		Name = "lblCcustid", ;
		TabIndex = 5, ;
		Top = 12, ;
		Width = 60, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblCreference' AS lblfieldlabelcustom WITH ;
		Caption = "Reference", ;
		Height = 16, ;
		Left = 22, ;
		Name = "lblCreference", ;
		TabIndex = 8, ;
		Top = 50, ;
		Width = 53, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Terms", ;
		Height = 16, ;
		Left = 287, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 9, ;
		Top = 50, ;
		Width = 32, ;
		ZOrderSet = 23
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "PC", ;
		Height = 16, ;
		Left = 105, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 14, ;
		Top = 82, ;
		Width = 15, ;
		ZOrderSet = 40
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom3' AS lbllabelcustom WITH ;
		Caption = "Sales Tax", ;
		Height = 16, ;
		Left = 112, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 35, ;
		Top = 375, ;
		Width = 50, ;
		ZOrderSet = 47
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblNinvbal' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		Caption = "Balance Due:", ;
		Height = 16, ;
		Left = 456, ;
		Name = "lblNinvbal", ;
		TabIndex = 38, ;
		Top = 398, ;
		Width = 66, ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblNinvtot' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		Caption = "Subtotal:", ;
		Height = 16, ;
		Left = 478, ;
		Name = "lblNinvtot", ;
		TabIndex = 32, ;
		Top = 352, ;
		Width = 44, ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblNsalestax' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		Caption = "Sales Taxes:", ;
		Height = 16, ;
		Left = 457, ;
		Name = "lblNsalestax", ;
		TabIndex = 36, ;
		Top = 375, ;
		Width = 65, ;
		ZOrderSet = 44
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Shape1' AS shape WITH ;
		BackColor = 255,255,128, ;
		Height = 74, ;
		Left = 0, ;
		Name = "Shape1", ;
		SpecialEffect = 0, ;
		Top = 76, ;
		Width = 667, ;
		ZOrderSet = 6
		*< END OBJECT: BaseClass="shape" />

	ADD OBJECT 'txtcAcctDesc' AS txttextboxcustom WITH ;
		BackColor = 192,192,192, ;
		Height = 20, ;
		Left = 301, ;
		lreadonly = .T., ;
		Margin = 1, ;
		Name = "txtcAcctDesc", ;
		TabIndex = 28, ;
		TabStop = .F., ;
		Top = 124, ;
		Width = 157, ;
		ZOrderSet = 39
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcAcctNo' AS txtquickfill WITH ;
		clistexpression = cacctno, ;
		clistworkarea = coa, ;
		Height = 20, ;
		Left = 279, ;
		lrequired = .F., ;
		Margin = 1, ;
		MaxLength = 6, ;
		Name = "txtcAcctNo", ;
		TabIndex = 23, ;
		Top = 102, ;
		Width = 72, ;
		ZOrderSet = 41
		*< END OBJECT: ClassLib="..\.\common\cmgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcCustid' AS txtquickfill WITH ;
		clistexpression = custown.ccustid, ;
		clistworkarea = custown, ;
		ControlSource = "invrech.ccustid", ;
		Format = "K!", ;
		Left = 88, ;
		MaxLength = 10, ;
		Name = "txtcCustid", ;
		TabIndex = 2, ;
		Top = 10, ;
		Width = 79
		*< END OBJECT: ClassLib="..\.\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcDeptNo' AS txtquickfill WITH ;
		clistexpression = cdeptno, ;
		clistworkarea = gldept, ;
		FontName = "Courier New", ;
		FontSize = 8, ;
		Height = 20, ;
		InputMask = "XXXXXXXX", ;
		Left = 434, ;
		Name = "txtcDeptNo", ;
		SelectOnEntry = .T., ;
		TabIndex = 25, ;
		Top = 102, ;
		Width = 68, ;
		ZOrderSet = 33
		*< END OBJECT: ClassLib="..\.\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcItemDesc' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 12, ;
		Margin = 1, ;
		Name = "txtcItemDesc", ;
		TabIndex = 19, ;
		Top = 124, ;
		Width = 288, ;
		ZOrderSet = 26
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcItemId' AS txtquickfill WITH ;
		clistexpression = items.citemid, ;
		clistworkarea = items, ;
		Format = "!", ;
		Height = 20, ;
		InputMask = "XXXXXXXXXX", ;
		Left = 12, ;
		Margin = 1, ;
		Name = "txtcItemId", ;
		TabIndex = 18, ;
		Top = 102, ;
		Width = 82, ;
		ZOrderSet = 25
		*< END OBJECT: ClassLib="..\.\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcName' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		ControlSource = "", ;
		FontSize = 8, ;
		Height = 20, ;
		Left = 200, ;
		lreadonly = .F., ;
		Margin = 1, ;
		Name = "txtcName", ;
		TabIndex = 4, ;
		Top = 10, ;
		Width = 316, ;
		ZOrderSet = 21
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcPriceCode' AS txttextboxcustom WITH ;
		Format = "K", ;
		Height = 20, ;
		InputMask = "X", ;
		Left = 98, ;
		Margin = 1, ;
		Name = "txtcPriceCode", ;
		TabIndex = 20, ;
		Top = 102, ;
		Width = 20, ;
		ZOrderSet = 34
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCreference' AS txttextboxcustom WITH ;
		ControlSource = "invrech.creference", ;
		FontSize = 8, ;
		Height = 20, ;
		Left = 88, ;
		Margin = 1, ;
		MaxLength = 15, ;
		Name = "txtCreference", ;
		TabIndex = 6, ;
		Top = 48, ;
		Width = 113, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcWellID' AS txtquickfill WITH ;
		clistexpression = cwellid, ;
		clistworkarea = wells, ;
		Height = 20, ;
		Left = 355, ;
		lrequired = .F., ;
		Margin = 1, ;
		Name = "txtcWellID", ;
		TabIndex = 24, ;
		Top = 102, ;
		Width = 77, ;
		ZOrderSet = 42
		*< END OBJECT: ClassLib="..\.\common\cmgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcWellName' AS txttextboxcustom WITH ;
		BackColor = 192,192,192, ;
		Height = 20, ;
		Left = 459, ;
		lreadonly = .T., ;
		Margin = 1, ;
		Name = "txtcWellName", ;
		TabIndex = 29, ;
		TabStop = .F., ;
		Top = 124, ;
		Width = 196, ;
		ZOrderSet = 38
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtnExtension' AS txttextboxcustom WITH ;
		Alignment = 3, ;
		ControlSource = "", ;
		FontSize = 8, ;
		Format = "K", ;
		Height = 20, ;
		InputMask = "999999999.99", ;
		Left = 503, ;
		Margin = 1, ;
		Name = "txtnExtension", ;
		TabIndex = 26, ;
		Top = 102, ;
		Value = 0, ;
		Width = 91, ;
		ZOrderSet = 29
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtNinvbal' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		ControlSource = "invrech.ninvbal", ;
		FontSize = 8, ;
		Height = 20, ;
		InputMask = "999999999.99", ;
		Left = 530, ;
		Margin = 1, ;
		Name = "txtNinvbal", ;
		TabIndex = 37, ;
		TabStop = .F., ;
		Top = 396, ;
		Width = 96, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtNinvtot' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		ControlSource = "invrech.nsubtotal", ;
		FontSize = 8, ;
		Height = 20, ;
		InputMask = "999999999.99", ;
		Left = 530, ;
		lenabled = .T., ;
		Margin = 1, ;
		Name = "txtNinvtot", ;
		TabIndex = 31, ;
		TabStop = .F., ;
		Top = 350, ;
		Width = 96, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtnPrice' AS txttextboxcustom WITH ;
		Alignment = 3, ;
		ControlSource = "", ;
		FontSize = 8, ;
		Height = 20, ;
		InputMask = "999999.9999", ;
		Left = 120, ;
		Margin = 1, ;
		Name = "txtnPrice", ;
		TabIndex = 21, ;
		Top = 102, ;
		Value = 0, ;
		Width = 77, ;
		ZOrderSet = 27
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtnQuantity' AS txttextboxcustom WITH ;
		Alignment = 3, ;
		ControlSource = "", ;
		FontSize = 8, ;
		Height = 20, ;
		InputMask = "9999999.9999", ;
		Left = 199, ;
		Margin = 1, ;
		Name = "txtnQuantity", ;
		TabIndex = 22, ;
		Top = 102, ;
		Value = 0, ;
		Width = 77, ;
		ZOrderSet = 28
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtNsalestax' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		ControlSource = "invrech.nsalestax", ;
		FontSize = 8, ;
		Height = 20, ;
		InputMask = "999999999.99", ;
		Left = 530, ;
		Margin = 1, ;
		Name = "txtNsalestax", ;
		TabIndex = 34, ;
		TabStop = .F., ;
		Top = 373, ;
		Width = 96, ;
		ZOrderSet = 43
		*< END OBJECT: ClassLib="..\.\custom\ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE Activate
		DODEFAULT()
		
		*
		*  Plug in the customer name if needed.
		*
		IF NOT EMPTY(THISFORM.txtcCustid.VALUE)
		   SELECT custown
		   LOCATE FOR cCustId = THISFORM.txtcCustid.VALUE
		   IF FOUND()
		      THISFORM.txtcName.VALUE = cCustName
		   ENDIF
		ENDIF
		
		SELECT invrech
		
	ENDPROC

	PROCEDURE adddetail
		*
		*  Adds the detail line to the Invrecd table
		*  Called from the valid of the Taxable textbox
		*
		
		LOCAL m.cItemId, m.cItemDesc, m.nQuantity, m.nPrice, m.cAcctNo, ;
		      m.cUnitno, m.cDeptNo, m.nExtension, m.cTaxable, m.cidinvd, ;
		      m.cItemDesc
		 
		WITH this
		   m.cItemId    = .txtcItemId.value
		   m.cItemDesc  = .txtcItemDesc.value
		   m.nPrice     = .txtnPrice.value
		   m.nQuantity  = .txtnQuantity.value
		   m.cAcctNo    = .txtcAcctNo.value
		   m.nExtension = .txtnExtension.value
		   m.cUnitNo    = .txtcWellID.Value
		   m.cDeptNo    = .txtcDeptNo.value
		   IF m.nExtension = 0 AND ALLTRIM(m.cItemId) <> '*'
		      RETURN
		   ENDIF   
		   m.cTaxable   = .cboTaxable.value
		   m.nDiscPct   = 0
		   m.nItemTax   = 0
		   m.nInterest  = 0
		   m.cPayee     = ' '
		   m.cTaxCode   = ' '
		   m.dExpDate   = {}
		   m.nDiscount  = 0
		   m.cExtDesc   = 0
		   .cmdatamanager.new('Invrecd')
		   .cmdatamanager.replace('Invrecd', 'Citemid', m.cItemId)
		   .cmdatamanager.replace('Invrecd', 'Citemdesc', m.cItemDesc)
		   .cmdatamanager.replace('Invrecd', 'Nprice', m.nPrice)
		   .cmdatamanager.replace('Invrecd', 'Nquantity', m.nQuantity)
		   .cmdatamanager.replace('Invrecd', 'Cacctno', m.cAcctNo)
		   .cmdatamanager.replace('Invrecd', 'Nextension', m.nExtension)
		   .cmdatamanager.replace('Invrecd', 'cTaxable', m.cTaxable)
		   .cmdatamanager.replace('Invrecd', 'cUnitNo', m.cUnitno)
		   .cmdatamanager.replace('Invrecd', 'cDeptNo', m.cDeptNo)
		   .txtcItemId.value = ' '
		   .txtcItemDesc.value = ' '
		   .txtnPrice.value = 0
		   .txtnQuantity.value = 0
		   .txtcPriceCode.value = '1'
		   .txtcAcctNo.value = ' '
		   .txtnExtension.value = 0
		   .txtcAcctDesc.value = ''
		   .txtcwellID.Value = ''
		   .txtcWellName.Value = ''
		   .txtcAcctDesc.Value = ''
		   .txtcDeptNo.Value = ''
		   .cboTaxable.value = 'E'
		   .txtcItemId.setfocus()
		   .CalcTot()
		   .refresh()
		ENDWITH
		
	ENDPROC

	PROCEDURE calcext		&& Calculates the detail extension total
		*
		*  Calculates the extension by using the price*quantity
		*
		thisform.txtnExtension.value = thisform.txtnPrice.value * thisform.txtnQuantity.value
		thisform.txtnExtension.refresh()
	ENDPROC

	PROCEDURE calctot		&& Calculates the Invoice Totals
		*
		*  Calculates the invoice totals
		*
		LOCAL lnSelect, lnRecno, lnTotal, lcBatch, lnRate, lnTaxable, lnSubTotal, lnBalance
		
		lcBatch = invrech.cbatch
		
		lnSelect = SELECT()
		SELECT invrecd
		lnRecno = RECNO()
		SUM(nExtension) TO lnSubTotal FOR cbatch = lcBatch
		SUM(nExtension) TO lnTaxable FOR cbatch = lcBatch AND cTaxable = 'T'
		IF lnRecno <= RECCOUNT()
		   GOTO (lnRecno)
		ENDIF
		
		IF NOT EMPTY(thisform.cboSalesTax.value)
		   SELECT salestx
		   IF SEEK(thisform.cboSalesTax.value)
		      lnRate     = nTaxRate
		      lnSalesTax = ROUND(lnTaxable * (lnRate/100),2)
		      lnTotal    = lnSubTotal + lnSalesTax
		   ELSE
		      lnSalesTax = 0
		      lnTotal    = lnSubTotal
		   ENDIF
		ELSE
		   lnSalesTax = 0
		   lnTotal    = lnSubTotal
		ENDIF            
		
		lnBalance = lnTotal
		
		IF invrech.nsalestax <> lnSalestax
		   This.cmdatamanager.Replace('InvrecH', 'nSalestax', lnSalesTax)     
		ENDIF
		IF invrech.ninvtot <> lnTotal   
		   This.cmdatamanager.Replace('InvrecH', 'nInvTot', lnTotal)
		ENDIF
		IF invrech.nsubtotal <> lnSubTotal   
		   This.cmdatamanager.Replace('InvrecH', 'nSubtotal', lnSubTotal)
		ENDIF
		IF invrech.ninvbal <> lnBalance   
		   This.cmdatamanager.Replace('InvrecH', 'nInvBal', lnBalance)
		ENDIF   
		
		Thisform.txtninvbal.Refresh()
		thisform.txtninvtot.refresh()
		
		SELECT (lnSelect)
	ENDPROC

	PROCEDURE getprice		&& Gets the price for the item based upon the price code passed.
		LPARAMETERS tcPriceCode
		
		ASSERT BETWEEN(tcPriceCode,'1','5')  MESSAGE 'Invalid Price Code Passed to GetPrice method'
		
		SELECT items
		IF SEEK(thisform.txtcItemId.value)
		   DO CASE
		      CASE tcPriceCode = '1'
		         thisform.txtnPrice.value = nPrice1
		         thisform.txtnPrice.Refresh()
		      CASE tcPriceCode = '2'
		         thisform.txtnPrice.value = nPrice2
		         thisform.txtnPrice.Refresh()   
		      CASE tcPriceCode = '3'
		         thisform.txtnPrice.value = nPrice3
		         thisform.txtnPrice.Refresh()   
		      CASE tcPriceCode = '4'
		         thisform.txtnPrice.value = nPrice4
		         thisform.txtnPrice.Refresh()   
		      CASE tcPriceCode = '5'
		         thisform.txtnPrice.value = nPrice5
		         thisform.txtnPrice.Refresh()   
		   ENDCASE
		ENDIF       
		         
	ENDPROC

	PROCEDURE Init
		SET DELETED ON
		
		DODEFAULT()
	ENDPROC

	PROCEDURE list
		LPARAMETERS cworkarea
		LOCAL lcList
		PRIV llOK
		
		llOK   = .T.
		lcList = 'ccustid\Customer ID,ccustname\Customer Name,creference\Reference,ninvtot\Total'
		
		IF THIS.FlushControlBuffer() AND THIS.beforenav('invrech')
		
		   SELECT invrech.ccustid, ;
		      custown.ccustname, ;
		      invrech.creference, ;
		      invrech.ninvtot, ;
		      invrech.cbatch ;
		      FROM invrech, custown ;
		      WHERE invrech.ccustid = custown.ccustid ;
		      INTO CURSOR tempinv1 ;
		      ORDER BY invrech.ccustid
		
		   IF _TALLY > 0
		      USE DBF('tempinv1') AGAIN IN 0 ALIAS tempinv EXCL
		      SELECT tempinv
		      INDEX ON ccustid TAG ccustid
		      INDEX ON ccustname TAG ccustname
		      INDEX ON creference TAG creference
		      INDEX ON ninvtot TAG ninvtot
		
		      DO FORM picklist WITH 'tempinv', lcList, 'cbatch', 4, .T., .T.
		
		      IF llOK
		         THISFORM.cmdatamanager.setrecordposition('Invrech')
		         THISFORM.REFRESH()
		      ENDIF
		   ELSE
		      THISFORM.omessage.DISPLAY('There are no recurring invoices to choose from.')
		   ENDIF
		
		   IF USED('tempinv1')
		      USE IN tempinv1
		   ENDIF
		   IF USED('tempinv')
		      USE IN tempinv
		   ENDIF
		
		   THISFORM.txtcCustId.SETFOCUS()
		ELSE
		   RETURN
		ENDIF
		
	ENDPROC

	PROCEDURE lookcoa
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, 'cacctno', 2
		
		IF llOK
		   thisform.grdinvdet.column5.txtcAcctNo.value = coa.cacctno
		   thisform.cmdatamanager.replace('invrecd', 'cacctno', coa.cacctno)
		   thisform.grdinvdet.column5.txtcAcctNo.refresh()
		ENDIF   
		
		thisform.grdinvdet.column5.txtcAcctNo.SetFocus()
	ENDPROC

	PROCEDURE setstate		&& Resets the form state for non bound controls so that the save button still works.
		this.lChanged = .T.
		m.goStateManager.RefreshAll('Form Edit')
	ENDPROC

	PROCEDURE valterms		&& Validate Terms and Set Due Date and Disc Date based on the Terms
	ENDPROC

	PROCEDURE cboSalesTax.afterchange
		DODEFAULT()
		thisform.calctot()
		
	ENDPROC

	PROCEDURE cboSalesTax.Init
		LOCAL lnCount
		*
		*  Add the detail lines to the combo box
		*
		
		SELECT cEntity, cTaxCode FROM salestx INTO ARRAY laTaxes ORDER BY cTaxCode
		lnCount = _tally
		
		this.addlistitem('NONE',1,1)
		this.addlistitem('',1,2)
		
		IF lnCount > 0
		   FOR lnX = 1 TO ALEN(laTaxes)
		       this.addlistitem(laTaxes[lnX],lnX+1,1)
		       this.addlistitem(laTaxes[lnX],lnX+1,2)
		   ENDFOR
		ENDIF   
		
		DODEFAULT()
	ENDPROC

	PROCEDURE cboTaxable.Init
		this.addlistitem('Taxable',1,1)
		this.addlistitem('T',1,2)
		this.addlistitem('Exempt',2,1)
		this.addlistitem('E',2,2)
		this.listitemid = 1
		
		dodefault()
	ENDPROC

	PROCEDURE cboTaxable.LostFocus
		IF NOT INLIST(THIS.VALUE,'E','T')
		   THIS.VALUE = 'E'
		ENDIF
		
		THISFORM.txtcAcctDesc.VALUE = ''
		thisform.lchanged = .t.
		
		IF (LASTKEY() = 13 OR LASTKEY() = 9) AND not mDown()  &&  Tab or enter, but not a mouseclick
		   IF this.Parent.txtnextension.Value = 0
		      thisform.oMessage.Warning('You cannot add a zero-amount detail line.')
		   else
		      THISFORM.AddDetail()
		   endif
		endif
		
	ENDPROC

	PROCEDURE cboTerms.Init
		LOCAL lnCount
		*
		*  Builds the data displayed in the combo list box
		*
		
		SELECT cTermDesc, cidTerm FROM terms INTO ARRAY laTerms ORDER BY cTermDesc
		lnCount = _tally
		
		This.addlistitem('NONE',1,1)
		This.addlistitem('',1,2)
		
		IF lnCount > 0
		   FOR lnX = 1 TO ALEN(laTerms,1)
		      this.addlistitem(laTerms[lnX,1],lnX+1,1)
		      this.addlistitem(laTerms[lnX,2],lnX+1,2)
		   ENDFOR   
		ENDIF   
		
		DODEFAULT()
	ENDPROC

	PROCEDURE cmdatamanager.afterchange
		LPARAMETERS cworkarea,cfield
		
		DO CASE
		   CASE UPPER(m.cField) + ',' $ 'NQUANTITY,NPRICE,'
		      m.nExtension = invrecd.nQuantity * invrecd.nPrice
		      RETURN this.Replace('InvrecD', 'nExtension', m.nExtension )
		      
		   CASE UPPER(m.cField) == 'NEXTENSION'
		      thisform.Calctot()
		ENDCASE
		RETURN .T.      
	ENDPROC

	PROCEDURE cmdatamanager.afterdelete
		LPARAMETERS cworkarea
		
		IF UPPER(m.cWorkarea) == 'INVRECD'
		   * Recalculate the invoice totals
		   thisform.calctot()
		ENDIF   
		
		DODEFAULT(cworkarea)
	ENDPROC

	PROCEDURE cmdatamanager.afternav
		LPARAMETERS cworkarea
		
		
		*
		*  Plug in the customer name if needed.
		*
		IF NOT EMPTY(invrech.ccustid)
		   SELECT custown
		   LOCATE FOR cCustId = thisform.txtcCustid.value
		   IF FOUND()
		      thisform.txtcName.value = cCustName
		   ENDIF
		ENDIF      
		
		IF m.cWorkArea = 'Invrech'
		   thisform.calctot()
		ENDIF   
		
		SELECT invrech
		   
		RETURN (DODEFAULT(m.cWorkArea))   
	ENDPROC

	PROCEDURE cmdatamanager.afternew
		LPARAMETERS cworkarea
		LOCAL llFoundTerm, lcidTerm
		
		DO CASE
		   CASE UPPER(m.cWorkarea) = 'INVRECH'    && Invoice Headers
		      m.cBatch = THISFORM.oRegistry.IncrementCounter('%Shared.Counters.Batch')
		      SELECT invrech1
		      SET DELETED OFF
		      SET ORDER TO cBatch
		      DO WHILE SEEK(m.cBatch)
		         m.cBatch = THISFORM.oRegistry.IncrementCounter('%Shared.Counters.Batch')
		      ENDDO
		      SELECT invrech
		      SET DELETED ON
		      REPLACE cBatch  WITH m.cBatch
		*
		*  Look for a default terms record so that we can set the terms
		*  to that default
		      llFoundTerm = .F.
		      SELECT terms
		      SCAN FOR lDefTerm = .T.
		         lcidTerm = cidTerm
		         llFoundTerm = .T.
		         EXIT
		      ENDSCAN
		      SELECT invrech
		      IF llFoundTerm
		         REPLACE cidTerm WITH lcidTerm
		      ENDIF
		
		      THISFORM.txtcName.VALUE = ''
		      THISFORM.txtcCustId.SETFOCUS()
		      
		*
		*  Look for a default Sales Tax record and set the form to use it
		*
		      llFoundSalesTax = .F.
		      SELECT salestx
		      SCAN FOR lDefTax = .T.
		         lcTaxCode = cTaxCode
		         llFoundSalesTax = .T.
		         EXIT
		      ENDSCAN
		      IF llFoundSalesTax
		         THISFORM.cboSalesTax.SET('value',lcTaxCode)
		      ELSE
		         THISFORM.cboSalesTax.SET('value','')
		      ENDIF
		      
		      thisform.setnextcontrol(thisform.txtccustid)
		
		   CASE UPPER(m.cWorkarea) = 'INVRECD'
		      m.cidinvdr = THISFORM.oRegistry.IncrementCounter('%Shared.Counters.Invoice Detail')
		      SELECT invrecd1
		      SET DELETED OFF
		      SET ORDER TO cinvdr
		      DO WHILE SEEK(m.cIdInvdr)
		         m.cidinvdr = THISFORM.oRegistry.IncrementCounter('%Shared.Counters.Invoice Detail')
		      ENDDO
		      SELECT invrecd
		      SET DELETED ON
		      REPLACE Invrecd.cidInvdr WITH m.cidinvdr, ;
		         cBatch                WITH invrech.cBatch
		
		ENDCASE
		
	ENDPROC

	PROCEDURE cmdatamanager.beforeupdate
		LPARAMETERS cworkarealist
		
		IF invrech.nInvTot = 0
		   WAIT WIND NOWAIT 'You cannot save a zero amount invoice....'
		   RETURN .F.
		ENDIF   
		
		RETURN (DODEFAULT(cworkarealist))
		
	ENDPROC

	PROCEDURE cmdLookCOA.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .T.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, thisform.txtcacctno.value, 2
		
		IF llOK
		   thisform.txtcAcctNo.value   = coa.cacctno
		   thisform.txtcAcctDesc.value = coa.cAcctDesc
		   thisform.txtcAcctNo.refresh()
		   thisform.txtcAcctDesc.refresh()
		ENDIF   
		
		thisform.setnextcontrol(thisform.txtcAcctNo)
		
		SELECT invrech
	ENDPROC

	PROCEDURE cmdLookCust.Click
		LOCAL lcList
		PRIV llOK
		
		llOK   = .T.
		lcList = 'ccustid,ccustname'
		
		SET SAFETY OFF
		SELECT custown
		INDEX ON ccustid TAG ccustid
		INDEX ON ccustname TAG ccustname
		
		DO FORM ..\CUSTOM\picklist WITH 'Custown', lcList, thisform.txtccustid.value, 2
		
		IF llOK
		   THISFORM.cmdatamanager.REPLACE('invrech','cCustid',custown.ccustid)
		   THISFORM.txtCcustid.VALUE = custown.ccustid
		   THISFORM.txtCcustid.REFRESH()
		   THISFORM.txtcName.VALUE = custown.cCustName
		   THISFORM.txtcName.REFRESH()
		ENDIF
		
		thisform.setnextcontrol(THISFORM.txtcCustId)
		
	ENDPROC

	PROCEDURE cmdLookDept.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .T.
		
		lcList = 'cdeptno\Dept No,cdeptdesc\Department Description'
		
		DO FORM ..\custom\picklist WITH 'gldept', lcList, thisform.txtcdeptno.value, 2,.f.,.t.
		
		IF llOK
		   thisform.txtcDeptNo.value = gldept.cdeptno
		   thisform.txtcDeptNo.refresh()
		ENDIF   
		
		thisform.txtcDeptNo.SetFocus()
		
		
		
	ENDPROC

	PROCEDURE cmdLookItem.Click
		LOCAL lcList
		PRIV llOK
		
		llOK   = .T.
		lcList = 'citemid,citemdesc,cvendorid'
		
		DO FORM ..\custom\picklist WITH 'Items', lcList, thisform.txtcitemid.value, 3
		
		IF llOK
		   thisform.txtcItemId.value = Items.citemid
		   thisform.txtcItemDesc.value = items.cItemDesc
		   thisform.txtcItemId.refresh()
		   thisform.txtcItemDesc.refresh()
		   thisform.txtcAcctNo.value = items.cDefAcct
		   thisform.txtcAcctNo.Refresh()
		ENDIF   
		
		thisform.setnextcontrol(thisform.txtcItemID)
		
		SELECT invrech
	ENDPROC

	PROCEDURE cmdLookWell.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .T.
		
		lcList = 'cunitno\Unit No,cname\Name,ctype\Type'
		set safety off
		sele allunits
		index on cunitno tag cunitno
		index on cname tag cname
		set safety on
		
		DO FORM ..\Custom\PickList WITH 'Allunits', lcList, thisform.txtcwellid.value, 3, .f., .t.
		
		IF llOK
		   thisform.txtcwellid.value   = allunits.cunitno
		   thisform.txtcWellName.value = allunits.cname
		   thisform.txtcWellID.refresh()
		   thisform.txtcWellName.refresh()
		ENDIF   
		
		thisform.setnextcontrol(Thisform.txtcwellid)
		
		ON KEY LABEL F10 _screen.activeform.Save()
		ON KEY LABEL CTRL+A _screen.activeform.New()
		ON KEY LABEL CTRL+D _screen.activeform.Delete()
		ON KEY LABEL CTRL+L _screen.activeform.List()
		
	ENDPROC

	PROCEDURE grdInvdet.AfterRowColChange
		LPARAMETERS ncol
		
		thisform.calctot()
		
		DODEFAULT(nCol)
	ENDPROC

	PROCEDURE grdInvdet.Column5.txtcAcctNo.Valid
		IF coa.ltitle OR coa.ltotalacct
		   thisform.omessage.warning('%msgAcctDetail')
		   RETURN 0
		ELSE
		   DODEFAULT()
		ENDIF      
	ENDPROC

	PROCEDURE grdInvdet.Column6.txtcTaxable.Valid
		DODEFAULT()
		
		IF THIS.VALUE <> 'T' AND THIS.VALUE <> 'E' &&  Don't let it be something other than taxable or exempt
		   THIS.SET('value','E')
		ENDIF
		
		
	ENDPROC

	PROCEDURE grdInvdet.Column8.cmdDelete.Click
		DODEFAULT()
		
		SELECT invrecd
		DELETE NEXT 1
		GO top
		thisform.Refresh()  &&  Not sure why doing it twice works, but it does, so don't mess with it anymore... - BH 3-24-06
		thisform.calctot()
		thisform.Refresh()
		thisform.calctot()
		
		
	ENDPROC

	PROCEDURE txtcAcctDesc.When
		RETURN .F.
		
	ENDPROC

	PROCEDURE txtcAcctNo.GotFocus
		ON KEY LABEL F2 _screen.activeform.cmdLookCOA.Click()
		DODEFAULT()
	ENDPROC

	PROCEDURE txtcAcctNo.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      thisform.txtcacCTDESC.set('value',coa.cacctdesc)
		   ELSE
		      thisform.txtcacCTDESC.set('value','')
		   ENDIF 
		ENDIF    
	ENDPROC

	PROCEDURE txtcAcctNo.LostFocus
		ON KEY LABEL F2 *
		thisform.setnextcontrol(thisform.txtcWellID)
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtcAcctNo.Valid
		LOCAL llReturn
		
		IF NOT MDOWN()
		   IF NOT EMPTY(THIS.VALUE)
		      SELECT coa
		      SET ORDER TO acctno
		      IF SEEK(THIS.VALUE)
		         IF lTitle OR lTotalAcct
		            THISFORM.omessage.warning('%msgAcctDetail')
		            RETURN 0
		         ENDIF
		         thisform.lWellRequired = lacctunit
		         thisform.lDeptRequired = lacctdept
		         thisform.txtcAcctDesc.set('value',cAcctDesc)
		      ENDIF
		   ELSE
		      thisform.txtcAcctDesc.set('value','')
		   ENDIF
		ENDIF
		DODEFAULT()
		
		
		
	ENDPROC

	PROCEDURE txtcCustid.GotFocus
		ON KEY LABEL F2 _screen.activeform.cmdLookCust.Click()
		DODEFAULT()
	ENDPROC

	PROCEDURE txtcCustid.InteractiveChange
		IF DODEFAULT()
		   SELECT custown
		   LOCATE FOR ccustid == this.Value
		   IF FOUND()
		      thisform.txtcName.set('value',custown.ccustname)
		   ELSE
		      thisform.txtcName.set('value','')
		   ENDIF 
		ENDIF 
	ENDPROC

	PROCEDURE txtcCustid.LostFocus
		on key label F2 *
	ENDPROC

	PROCEDURE txtcCustid.Valid
		IF DODEFAULT()
		   IF NOT EMPTY(THIS.VALUE)
		      SELECT custownvend
		      LOCATE FOR cID = THIS.VALUE
		      IF FOUND()
		         IF NOT EMPTY(custownvend.cidterm)
		            IF custownvend.cidterm <> invrech.cidterm
		               THISFORM.cmdatamanager.REPLACE('invrech','cidterm',custownvend.cidterm)
		               THISFORM.cboTerms.REFRESH()
		            endif
		         ENDIF
		         IF custownvend.cType = 'Owner'
		            IF invrech.cinvtype <> 'J'
		               THISFORM.cmdatamanager.REPLACE('invrech','cinvtype','J')
		            endif
		         ENDIF
		      ENDIF
		
		      IF LEFT(cType,1) = 'C'  &&  Customer
		         SELECT custs
		         LOCATE FOR cCustid = custownvend.cID
		         IF FOUND()
		            IF cTaxStat = 'T'  &&  Taxable
		               IF NOT EMPTY(custs.cTaxCode)
		                  IF custs.cTaxCode <> thisform.cboSalesTax.Value
		                     THISFORM.cboSalesTax.SET('value',custs.cTaxCode)
		                  endif
		               ENDIF
		            ELSE
		               THISFORM.cboSalesTax.SET('value','')
		            ENDIF
		         ENDIF
		      ENDIF
		      SELECT invrech
		   ENDIF
		ENDIF
		
		
	ENDPROC

	PROCEDURE txtcDeptNo.GotFocus
		ON KEY LABEL F2 _screen.activeform.cmdLookDept.Click()
		DODEFAULT()
	ENDPROC

	PROCEDURE txtcDeptNo.Valid
		DODEFAULT()
		IF EMPTY(THIS.VALUE)
		   IF NOT MDOWN()
		      IF THISFORM.lDeptRequired
		         THISFORM.omessage.DISPLAY('A valid department code is required when using this account no.')
		         RETURN 0
		      ENDIF
		   ENDIF
		ENDIF
		
		
	ENDPROC

	PROCEDURE txtcItemDesc.LostFocus
		IF EMPTY(thisform.cboTaxable.value)
		   thisform.cboTaxable.value = 'E'
		   thisform.cboTaxable.Refresh()
		ENDIF   
		
		IF LEFT(thisform.txtcItemId.value,1) = '*' AND lastkey() <> 15  && Comment line
		   thisform.adddetail()
		ENDIF   
		
	ENDPROC

	PROCEDURE txtcItemId.GotFocus
		ON KEY LABEL F2 _screen.activeform.cmdLookItem.Click()
		DODEFAULT()
	ENDPROC

	PROCEDURE txtcItemId.InteractiveChange
		IF THIS.VALUE <> '*' AND DODEFAULT()
		   SELECT items
		   LOCATE FOR citemid == THIS.VALUE
		   IF FOUND()
		      THISFORM.txtcitemDesc.SET('value',items.citemdesc)
		   ELSE
		      THISFORM.txtcitemDesc.SET('value','')
		   ENDIF
		ELSE  &&  Comment line
		   THISFORM.txtcitemDesc.SET('value','')
		ENDIF
		
	ENDPROC

	PROCEDURE txtcItemId.LostFocus
		ON KEY LABEL F2 *
		
		DODEFAULT()
	ENDPROC

	PROCEDURE txtcItemId.Valid
		LOCAL llReturn
		llReturn = .T.
		
		IF NOT EMPTY(THIS.VALUE) AND THIS.VALUE <> '*'
		   SELECT items
		   IF SEEK(THIS.VALUE)
		      THISFORM.txtcItemDesc.VALUE = cItemDesc
		      THISFORM.txtcItemDesc.REFRESH()
		      SWSELECT('custs')
		      LOCATE FOR ccustid = invrech.ccustid  &&  Retrieve the proper price level to use for this customer
		      IF FOUND()
		         DO CASE
		            CASE custs.cPriceDef = '5'
		               THISFORM.txtnPrice.VALUE = items.nPrice5
		               THISFORM.txtcPriceCode.VALUE = '5'
		            CASE custs.cPriceDef = '4'
		               THISFORM.txtnPrice.VALUE = items.nPrice4
		               THISFORM.txtcPriceCode.VALUE = '4'
		            CASE custs.cPriceDef = '3'
		               THISFORM.txtnPrice.VALUE = items.nPrice3
		               THISFORM.txtcPriceCode.VALUE = '3'
		            CASE custs.cPriceDef = '2'
		               THISFORM.txtnPrice.VALUE = items.nPrice2
		               THISFORM.txtcPriceCode.VALUE = '2'
		            OTHERWISE
		               THISFORM.txtnPrice.VALUE = items.nPrice1
		               THISFORM.txtcPriceCode.VALUE = '1'
		         ENDCASE
		      ELSE
		         THISFORM.txtnPrice.VALUE = items.nPrice1
		         THISFORM.txtcPriceCode.VALUE = '1'
		      ENDIF
		      SELECT items
		      THISFORM.txtnPrice.REFRESH()
		      THISFORM.txtcPriceCode.REFRESH()
		      THISFORM.txtcAcctNo.VALUE = cDefAcct
		      THISFORM.txtcAcctNo.REFRESH()
		      IF NOT THISFORM.lExempt  &&  If not exempt, then use the setting for the item, otherwise, exempt everything
		         THISFORM.cboTaxable.SET('value',ctaxable)
		      ELSE
		         THISFORM.cboTaxable.SET('value','E')
		      ENDIF
		      IF NOT EMPTY(cDefAcct)
		         THISFORM.txtcAcctNo.SET('value',cDefAcct)
		         THISFORM.txtcAcctNo.VALID()
		      ENDIF
		      llReturn = .T.
		   ENDIF
		ELSE
		   thisform.txtcpriceCode.set('value','1')  &&  Make sure the price code gets set
		ENDIF
		
		SELECT invrech
		
		RETURN (llReturn)
		
		
	ENDPROC

	PROCEDURE txtcName.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtcPriceCode.LostFocus
		thisform.getprice(this.value)
	ENDPROC

	PROCEDURE txtcPriceCode.Valid
		IF EMPTY(THIS.VALUE)
		   THIS.VALUE = '1'
		ENDIF
		
	ENDPROC

	PROCEDURE txtcWellID.GotFocus
		ON KEY LABEL F2 _screen.activeform.cmdLookWell.Click()
		DODEFAULT()
	ENDPROC

	PROCEDURE txtcWellID.InteractiveChange
		IF DODEFAULT()
		   SELECT wells
		   LOCATE FOR cwellid == this.Value
		   IF FOUND()
		      thisform.txtcwellname.Value = wells.cwellname
		   ELSE
		      thisform.txtcwellname.Value = ''
		   ENDIF
		endif      
		       
	ENDPROC

	PROCEDURE txtcWellID.LostFocus
		ON KEY LABEL F2 *
		DODEFAULT()
		
		IF EMPTY(this.Value)
		   thisform.txtcwellName.set('value','')
		ENDIF
		
		thisform.setnextcontrol(thisform.txtnExtension)
		
		
		
		
	ENDPROC

	PROCEDURE txtcWellID.Valid
		DODEFAULT()
		
		IF EMPTY(this.value) AND NOT MDOWN()
		   IF thisform.lwellrequired
		      thisform.omessage.display('%msgwellrequired')
		      RETURN 0
		   ENDIF
		ENDIF     
		
	ENDPROC

	PROCEDURE txtcWellName.When
		RETURN .F.
		
	ENDPROC

	PROCEDURE txtNinvbal.When
		DODEFAULT()
		RETURN .F.
	ENDPROC

	PROCEDURE txtNinvtot.When
		DODEFAULT()
		RETURN .F.
	ENDPROC

	PROCEDURE txtnPrice.Valid
		thisform.CalcExt()
		DODEFAULT()
	ENDPROC

	PROCEDURE txtnQuantity.Valid
		thisform.CalcExt()
		DODEFAULT()
	ENDPROC

	PROCEDURE txtNsalestax.When
		DODEFAULT()
		RETURN .F.
	ENDPROC

ENDDEFINE
