*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="glactlist.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor10" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 678
	Left = 40
	Name = "Dataenvironment"
	Top = 235
	Width = 780

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "coa", ;
		BufferModeOverride = 5, ;
		CursorSource = "coa", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 9, ;
		Name = "Cursor1", ;
		Top = 16, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor10' AS cursor WITH ;
		Alias = "coabal1", ;
		CursorSource = "coabal", ;
		Database = x:\convert\wolfepak\loneoak\sahara\datafiles\saharadata\appdata.dbc, ;
		Height = 90, ;
		Left = 570, ;
		Name = "Cursor10", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "coabal", ;
		BufferModeOverride = 5, ;
		CursorSource = "coabal", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 333, ;
		Name = "Cursor2", ;
		Top = 126, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "glmaster", ;
		CursorSource = "glmaster", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Filter = "", ;
		Height = 90, ;
		Left = 178, ;
		Name = "Cursor3", ;
		Top = 0, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "checks", ;
		CursorSource = "checks", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Filter = "", ;
		Height = 90, ;
		Left = 329, ;
		Name = "Cursor4", ;
		Top = 7, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "custs", ;
		CursorSource = "custs", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 328, ;
		Name = "Cursor5", ;
		Top = 274, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "csdishdr", ;
		CursorSource = "csdishdr", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 11, ;
		Name = "Cursor6", ;
		Top = 143, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor7' AS cursor WITH ;
		Alias = "emps", ;
		CursorSource = "emps", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor7", ;
		Top = 260, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor8' AS cursor WITH ;
		Alias = "investor", ;
		CursorSource = "investor", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor8", ;
		Top = 260, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor9' AS cursor WITH ;
		Alias = "vendor", ;
		CursorSource = "vendor", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 173, ;
		Name = "Cursor9", ;
		Top = 135, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formglactlist AS frmrptcriteria OF "appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Shpshapecustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBegDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblenddate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="date1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Date2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Glmaint" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblToYear" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEndID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBegID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblToPeriod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblFromYear" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblFromPeriod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtYear" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtYear2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtPeriod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtPeriod2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="optSelect" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSummarize" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklNoAct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSelected" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSelected" UniqueID="" Timestamp="" />

	Caption = "G/L Account Activity"
	DataSession = 2
	DoCreate = .T.
	Height = 514
	HelpContextID = 412
	Name = "FormGlactlist"
	Visible = .T.
	Width = 447
	Swrptcriteriabuttons1.chkExport.Alignment = 0
	Swrptcriteriabuttons1.chkExport.Name = "chkExport"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.cmdPreview.Name = "cmdPreview"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 106
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 22
	Swrptcriteriabuttons1.Top = 437
	Swrptcriteriabuttons1.ZOrderSet = 7

	ADD OBJECT 'chklNoAct' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Exclude Accounts With No Activity", ;
		Left = 203, ;
		Name = "chklNoAct", ;
		TabIndex = 2, ;
		Top = 32, ;
		Value = .T., ;
		ZOrderSet = 26
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSelected' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Choose Selected Accounts", ;
		Left = 141, ;
		Name = "chkSelected", ;
		TabIndex = 14, ;
		Top = 240, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSummarize' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Summarize Activity by Journal", ;
		Left = 203, ;
		Name = "chkSummarize", ;
		TabIndex = 3, ;
		Top = 60, ;
		Value = .F., ;
		ZOrderSet = 25
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'date1' AS dpk WITH ;
		Left = 107, ;
		Name = "date1", ;
		TabIndex = 8, ;
		Top = 156, ;
		Visible = .F., ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />

	ADD OBJECT 'Date2' AS dpk WITH ;
		Left = 276, ;
		Name = "Date2", ;
		TabIndex = 9, ;
		Top = 156, ;
		Visible = .F., ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />

	ADD OBJECT 'Glmaint' AS glmaint WITH ;
		Left = 24, ;
		Name = "Glmaint", ;
		Top = 372
		*< END OBJECT: ClassLib="..\custom\swgl.vcx" BaseClass="custom" />

	ADD OBJECT 'lblBegDate' AS lbllabelcustom WITH ;
		Caption = "Beginning Date:", ;
		Left = 26, ;
		Name = "lblBegDate", ;
		TabIndex = 24, ;
		Top = 159, ;
		Visible = .F., ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblBegID' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "From Account Number:", ;
		Height = 16, ;
		Left = 17, ;
		Name = "lblBegID", ;
		TabIndex = 10, ;
		Top = 275, ;
		Width = 113, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblenddate' AS lbllabelcustom WITH ;
		Caption = "Ending Date:", ;
		Left = 211, ;
		Name = "lblenddate", ;
		TabIndex = 23, ;
		Top = 159, ;
		Visible = .F., ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblEndID' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "To Account Number:", ;
		Height = 16, ;
		Left = 29, ;
		Name = "lblEndID", ;
		TabIndex = 13, ;
		Top = 326, ;
		Width = 101, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblFromPeriod' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "Fiscal Period:", ;
		Height = 16, ;
		Left = 200, ;
		Name = "lblFromPeriod", ;
		TabIndex = 18, ;
		Top = 159, ;
		Width = 66, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblFromYear' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "Fiscal Year:", ;
		Height = 16, ;
		Left = 24, ;
		Name = "lblFromYear", ;
		TabIndex = 17, ;
		Top = 159, ;
		Width = 60, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		BackStyle = 1, ;
		Caption = "Print By", ;
		FontBold = .T., ;
		Left = 18, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 11, ;
		Top = 17, ;
		ZOrderSet = 23
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		BackStyle = 1, ;
		Caption = "Selection Criteria", ;
		FontBold = .T., ;
		Left = 18, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 16, ;
		Top = 136, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom3' AS lbllabelcustom WITH ;
		BackStyle = 1, ;
		Caption = "Account Range", ;
		FontBold = .T., ;
		Left = 18, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 21, ;
		Top = 252, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSelected' AS lbllabelcustom WITH ;
		Caption = "All IDs Selected", ;
		ForeColor = 0,0,255, ;
		Left = 140, ;
		Name = "lblSelected", ;
		TabIndex = 12, ;
		Top = 303, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblToPeriod' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "To Fiscal Period:", ;
		Height = 16, ;
		Left = 199, ;
		Name = "lblToPeriod", ;
		TabIndex = 20, ;
		Top = 192, ;
		Visible = .F., ;
		Width = 81, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblToYear' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "To Fiscal Year:", ;
		Height = 16, ;
		Left = 24, ;
		Name = "lblToYear", ;
		TabIndex = 19, ;
		Top = 192, ;
		Visible = .F., ;
		Width = 75, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'optSelect' AS opgoptiongroupcustom WITH ;
		AutoSize = .F., ;
		ButtonCount = 4, ;
		Height = 96, ;
		Left = 12, ;
		Name = "optSelect", ;
		TabIndex = 1, ;
		Top = 24, ;
		Width = 156, ;
		ZOrderSet = 22, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "Fiscal Period", ;
		Option1.FontSize = 8, ;
		Option1.Height = 16, ;
		Option1.Left = 12, ;
		Option1.Name = "Option1", ;
		Option1.Top = 12, ;
		Option1.Width = 79, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "Fiscal Year", ;
		Option2.FontSize = 8, ;
		Option2.Height = 16, ;
		Option2.Left = 12, ;
		Option2.Name = "Option2", ;
		Option2.Top = 33, ;
		Option2.Width = 73, ;
		Option3.AutoSize = .T., ;
		Option3.Caption = "Fiscal Period Range", ;
		Option3.FontSize = 8, ;
		Option3.Height = 16, ;
		Option3.Left = 12, ;
		Option3.Name = "Option3", ;
		Option3.Top = 54, ;
		Option3.Width = 113, ;
		Option4.AutoSize = .T., ;
		Option4.Caption = "Accounting Date Range", ;
		Option4.FontSize = 8, ;
		Option4.Height = 16, ;
		Option4.Left = 12, ;
		Option4.Name = "Option4", ;
		Option4.Top = 75, ;
		Option4.Width = 132
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'Shpshapecustom1' AS shpshapecustom WITH ;
		Height = 120, ;
		Left = 12, ;
		Name = "Shpshapecustom1", ;
		Top = 259, ;
		Width = 420, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Shpshapecustom2' AS shpshapecustom WITH ;
		Height = 72, ;
		Left = 171, ;
		Name = "Shpshapecustom2", ;
		Top = 24, ;
		Width = 259, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Shpshapecustom3' AS shpshapecustom WITH ;
		Height = 84, ;
		Left = 12, ;
		Name = "Shpshapecustom3", ;
		Top = 142, ;
		Width = 420, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		Left = 138, ;
		Name = "Swrptlook1", ;
		TabIndex = 15, ;
		Top = 272, ;
		ZOrderSet = 10, ;
		Swlookupbutton1.Left = 60, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton1.Top = 0, ;
		Swlookupbutton2.Left = 60, ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		Swlookupbutton2.Top = 52, ;
		TxtBegID.clistexpression = coa.cacctno, ;
		TxtBegID.clistworkarea = coa, ;
		TxtBegID.Height = 20, ;
		TxtBegID.InputMask = "XXXXXX", ;
		TxtBegID.Left = 0, ;
		TxtBegID.MaxLength = 6, ;
		TxtBegID.Name = "TxtBegID", ;
		TxtBegID.Top = 0, ;
		TxtBegID.Width = 53, ;
		TxtBegName.Name = "TxtBegName", ;
		TxtEndID.clistexpression = coa.cacctno, ;
		TxtEndID.clistworkarea = coa, ;
		TxtEndID.Height = 20, ;
		TxtEndID.InputMask = "XXXXXX", ;
		TxtEndID.Left = 0, ;
		TxtEndID.MaxLength = 6, ;
		TxtEndID.Name = "TxtEndID", ;
		TxtEndID.Top = 51, ;
		TxtEndID.Width = 53, ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />

	ADD OBJECT 'txtPeriod' AS swperiod WITH ;
		Height = 20, ;
		Left = 311, ;
		MaxLength = 2, ;
		Name = "txtPeriod", ;
		TabIndex = 5, ;
		Top = 157, ;
		Width = 24, ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtPeriod2' AS swperiod WITH ;
		Height = 20, ;
		Left = 311, ;
		MaxLength = 2, ;
		Name = "txtPeriod2", ;
		TabIndex = 7, ;
		Top = 190, ;
		Width = 24, ;
		ZOrderSet = 21
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtYear' AS swyear WITH ;
		Height = 20, ;
		Left = 132, ;
		MaxLength = 4, ;
		Name = "txtYear", ;
		TabIndex = 4, ;
		Top = 157, ;
		Width = 39, ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtYear2' AS swyear WITH ;
		Height = 20, ;
		Left = 132, ;
		MaxLength = 4, ;
		Name = "txtYear2", ;
		TabIndex = 6, ;
		Top = 190, ;
		Width = 39, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE builddata
		LOCAL lcYear, lcPeriod, lcAcct1, lcAcct2, lnSort, lcYear2, lcPeriod2, lcCurFY
		LOCAL lnCount
		
		lcYear      = THISFORM.txtYear.VALUE
		lcPeriod    = THISFORM.txtPeriod.VALUE
		lcAcct1     = THISFORM.swrptlook1.txtBegID.VALUE
		lcAcct2     = THISFORM.swrptlook1.txtEndID.VALUE
		lnOption    = THISFORM.optSelect.VALUE
		lcYear2     = THISFORM.txtYear2.VALUE
		lcPeriod2   = THISFORM.txtPeriod2.VALUE
		llSummarize = THISFORM.chkSummarize.VALUE
		ldDate1     = THISFORM.Date1.VALUE
		ldDate2     = THISFORM.Date2.VALUE
		lnCount     = 0
		llSelected  = THISFORM.chkSelected.VALUE
		
		IF NOT llSelected
		   lcSelect    = "BETWEEN(cacctno,lcAcct1,lcAcct2)"
		   lcSelectNew = "BETWEEN(coabalnew.cacctno,lcAcct1,lcAcct2)"
		   lcSelectCOA = "BETWEEN(coa.cacctno,lcAcct1,lcAcct2)"
		ELSE
		   lcSelect    = "cacctno in (select cid from selected)"
		   lcSelectNew = "coabalnew.cacctno in (select cid from selected)"
		   lcSelectCOA = "coa.cacctno in (select cid from selected)"
		ENDIF
		
		*
		*  Set the report title
		*
		DO CASE
		   CASE lnOption = 1
		      THISFORM.cTitle1 = 'For Fiscal Period: ' + THISFORM.txtPeriod.VALUE + '/' + THISFORM.txtYear.VALUE
		      lcYear2          = lcYear
		      lcPeriod2        = lcPeriod
		
		   CASE lnOption = 2
		      THISFORM.cTitle1 = 'For Fiscal Year: ' + THISFORM.txtYear.VALUE
		      lcYear2          = lcYear
		      lcPeriod2        = lcPeriod
		
		   CASE lnOption = 3
		      THISFORM.cTitle1 = 'For Period Range: ' + THISFORM.txtPeriod.VALUE + '/' + THISFORM.txtYear.VALUE + ' - ' + ;
		         THISFORM.txtPeriod2.VALUE + '/' + THISFORM.txtYear2.VALUE
		   CASE lnOption = 4
		      THISFORM.cTitle1 = 'As Of Date: ' + DTOC(THISFORM.Date1.VALUE)
		      lcYear2          = lcYear
		      lcPeriod2        = lcPeriod
		
		ENDCASE
		
		*
		*  Set Selection and Sort Criteria
		*
		THISFORM.cSelectCriteria = 'Acct: ' + THISFORM.swrptlook1.txtBegID.VALUE + ' - ' + THISFORM.swrptlook1.txtEndID.VALUE
		THISFORM.cSortOrder      = 'Account Number'
		IF llSummarize
		   THISFORM.cTitle2         = 'Summary'
		ELSE
		   THISFORM.cTitle2         = ''
		ENDIF
		
		*
		*  Recalculate account balances
		*
		*IF THISFORM.chkRecalculate.VALUE = .T.
		WAIT WIND NOWAIT 'Calculating Account Balances...'
		THISFORM.glmaint.calcbalance()
		WAIT CLEAR
		*ENDIF
		
		WAIT WIND NOWAIT 'Building the report...Please wait.'
		
		SELECT  cYear,;
		   cPeriod ;
		   FROM coabalnew ;
		   WHERE BETWEEN(cYear + cPeriod, lcYear + lcPeriod, lcYear2 + lcPeriod2) ;
		   INTO CURSOR tempcoabal ;
		   ORDER BY cYear, cPeriod ;
		   GROUP BY cYear, cPeriod
		
		CREATE CURSOR balance   ;
		   (cAcctNo     C(6),    ;
		   cBalGroup   C(1),    ;
		   nAcctType   N(2),    ;
		   cAcctType   C(25),   ;
		   cAcctDesc   C(30),   ;
		   cYear       C(4),    ;
		   cPeriod     C(2),    ;
		   nBegBal     N(15, 2), ;
		   nDebits     N(15, 2), ;
		   nCredits    N(15, 2), ;
		   nEndBal     N(15, 2))
		INDEX ON cAcctNo TAG AcctNo
		INDEX ON cAcctNo + cYear + cPeriod TAG cacctprd
		*
		*  Get the periods activity for each account in the range.
		*
		DO CASE
		   CASE lnOption = 1     && Fiscal Period
		      SELECT  coa.cAcctNo,       ;
		         coa.cAcctDesc,     ;
		         coa.nAcctType,     ;
		         coabalnew.cYear AS cYear,  ;
		         coabalnew.cPeriod AS cPeriod, ;
		         coabalnew.nDebits,    ;
		         coabalnew.nCredits    ;
		         FROM coabalnew, coa ;
		         WHERE coabalnew.cAcctNo = coa.cAcctNo ;
		         AND coabalnew.cYear + coabalnew.cPeriod = lcYear + lcPeriod ;
		         AND &lcSelectCOA ;
		         AND NOT DELETED() ;
		         INTO CURSOR tempbal1 ;
		         ORDER BY coa.cAcctNo ;
		         GROUP BY coa.cAcctNo
		
		      IF NOT THISFORM.chklNoAct.VALUE
		         SELECT  coa.cAcctNo,            ;
		            coa.cAcctDesc,          ;
		            coa.nAcctType,     ;
		            lcYear AS cYear,    ;
		            lcPeriod AS cPeriod, ;
		            0 AS nDebits,           ;
		            0 AS nCredits           ;
		            FROM coabalnew, coa ;
		            WHERE coa.cAcctNo NOT IN (SELECT  cAcctNo ;
		            FROM coabalnew ;
		            WHERE cYear + cPeriod = lcYear + lcPeriod) ;
		            AND &lcSelectCOA ;
		            AND NOT DELETED() ;
		            INTO CURSOR tempbal2 ;
		            ORDER BY 1 ;
		            GROUP BY 1
		      ENDIF
		
		   CASE lnOption = 2     && Fiscal Year
		      SELECT  coa.cAcctNo,       ;
		         coa.cAcctDesc,     ;
		         coa.nAcctType,     ;
		         coabalnew.cYear AS cYear,  ;
		         coabalnew.cPeriod AS cPeriod, ;
		         SUM(coabalnew.nDebits) AS nDebits,    ;
		         SUM(coabalnew.nCredits) AS nCredits    ;
		         FROM coabalnew, coa ;
		         WHERE coabalnew.cAcctNo = coa.cAcctNo ;
		         AND coabalnew.cYear = lcYear ;
		         AND &lcSelectCOA ;
		         AND NOT DELETED() ;
		         INTO CURSOR tempbal1 ;
		         ORDER BY coa.cAcctNo ;
		         GROUP BY coa.cAcctNo
		
		      IF NOT THISFORM.chklNoAct.VALUE
		         SELECT  coa.cAcctNo,            ;
		            coa.cAcctDesc,          ;
		            coa.nAcctType,     ;
		            lcYear AS cYear,    ;
		            lcPeriod AS cPeriod, ;
		            0 AS nDebits,           ;
		            0 AS nCredits           ;
		            FROM coabalnew, coa ;
		            WHERE coa.cAcctNo NOT IN (SELECT  cAcctNo ;
		            FROM coabalnew ;
		            WHERE cYear = lcYear) ;
		            AND &lcSelectCOA ;
		            AND NOT DELETED() ;
		            INTO CURSOR tempbal2 ;
		            ORDER BY 1 ;
		            GROUP BY 1
		      ENDIF
		
		   CASE lnOption = 3     && Fiscal Period Range
		      IF NOT THISFORM.chklNoAct.VALUE
		         SELECT tempcoabal
		         SCAN
		            SCATTER MEMVAR
		            SELECT  coa.cAcctNo,            ;
		               coa.cAcctDesc,          ;
		               coa.nAcctType,     ;
		               m.cYear AS cYear,    ;
		               m.cPeriod AS cPeriod, ;
		               000000000.00 AS nDebits,           ;
		               000000000.00 AS nCredits           ;
		               FROM coa  ;
		               WHERE coa.cAcctNo NOT IN (SELECT  cAcctNo ;
		               FROM coabalnew WHERE ;
		               BETWEEN(coabalnew.cYear + coabalnew.cPeriod, ;
		               lcYear + lcPeriod, ;
		               lcYear2 + lcPeriod2)) ;
		               AND &lcSelectCOA ;
		               AND NOT DELETED() ;
		               INTO CURSOR tempbal2 ;
		               ORDER BY coa.cAcctNo, cYear, cPeriod;
		               GROUP BY coa.cAcctNo, cYear, cPeriod
		            SELECT balance
		            APPEND FROM DBF('tempbal2')
		         ENDSCAN
		      ENDIF
		
		      SELECT  coa.cAcctNo,       ;
		         coa.cAcctDesc,     ;
		         coa.nAcctType,     ;
		         coabalnew.cYear AS cYear,  ;
		         coabalnew.cPeriod AS cPeriod, ;
		         SUM(coabalnew.nDebits) AS nDebits,    ;
		         SUM(coabalnew.nCredits) AS nCredits    ;
		         FROM coa, coabalnew ;
		         WHERE coabalnew.cAcctNo = coa.cAcctNo ;
		         AND BETWEEN(coabalnew.cYear + coabalnew.cPeriod, ;
		         lcYear + lcPeriod, ;
		         lcYear2 + lcPeriod2) ;
		         AND &lcSelectCOA ;
		         AND NOT DELETED() ;
		         INTO CURSOR tempbal1 ;
		         ORDER BY coa.cAcctNo, cYear, cPeriod;
		         GROUP BY coa.cAcctNo, cYear, cPeriod
		
		      SELECT balance
		      APPEND FROM DBF('tempbal1')
		
		   CASE lnOption = 4     && Date Range
		
		      SELECT  coa.cAcctNo,       ;
		         coa.cAcctDesc,     ;
		         coa.nAcctType,     ;
		         glmaster.cYear, ;
		         glmaster.cPeriod, ;
		         SUM(glmaster.nDebits)  AS nDebits,    ;
		         SUM(glmaster.nCredits) AS nCredits    ;
		         FROM coa, glmaster ;
		         WHERE &lcSelectCOA ;
		         AND BETWEEN(glmaster.ddate, ldDate1, ldDate2) ;
		         AND glmaster.cAcctNo = coa.cAcctNo ;
		         AND NOT DELETED() ;
		         INTO CURSOR tempbal1 ;
		         ORDER BY 1 ;
		         GROUP BY 1
		
		      IF NOT THISFORM.chklNoAct.VALUE
		         SELECT  coa.cAcctNo,            ;
		            coa.cAcctDesc,          ;
		            coa.nAcctType,     ;
		            lcYear AS cYear,    ;
		            lcPeriod AS cPeriod, ;
		            000000000.00 AS nDebits,           ;
		            000000000.00 AS nCredits           ;
		            FROM coa ;
		            WHERE coa.cAcctNo NOT IN (SELECT  cAcctNo ;
		            FROM tempbal1) ;
		            AND &lcSelectCOA ;
		            AND NOT DELETED() ;
		            INTO CURSOR tempbal2 ;
		            ORDER BY coa.cAcctNo ;
		            GROUP BY coa.cAcctNo
		      ENDIF
		
		ENDCASE
		
		*
		*  Append the records to the balance table
		*
		IF lnOption # 3
		   SELECT balance
		   APPEND FROM DBF('tempbal1')
		   USE IN tempbal1
		
		   IF NOT THISFORM.chklNoAct.VALUE
		      APPEND FROM DBF('tempbal2')
		      USE IN tempbal2
		   ENDIF
		ENDIF
		
		SELECT balance
		SET ORDER TO AcctNo
		
		
		
		*
		*  Fill in the zero accounts
		*
		IF NOT THISFORM.chklNoAct.VALUE
		   IF lnOption # 3
		      SWSELECT('coa')
		      SCAN
		         SCATTER MEMVAR
		         IF llSelected
		            SELECT SELECTED
		            LOCATE FOR cid = m.cAcctNo
		            IF NOT FOUND()
		               LOOP
		            ENDIF
		         ELSE
		            IF NOT BETWEEN(m.cAcctNo,lcAcct1,lcAcct2)
		               LOOP
		            ENDIF
		         ENDIF
		         SELECT balance
		         SET ORDER TO AcctNo
		         IF NOT SEEK(m.cAcctNo)
		            m.cYear    = lcYear
		            m.cPeriod  = lcPeriod
		            m.nEndBal  = 0
		            m.nDebits  = 0
		            m.nCredits = 0
		            m.nBegBal  = 0
		            INSERT INTO balance FROM MEMVAR
		         ENDIF
		      ENDSCAN
		   ELSE
		      SELECT tempcoabal
		      SCAN
		         SCATTER MEMVAR
		         SWSELECT('coa')
		         SCAN
		            SCATTER MEMVAR
		            IF llSelected
		               SELECT SELECTED
		               LOCATE FOR cid = m.cAcctNo
		               IF NOT FOUND()
		                  LOOP
		               ENDIF
		            ELSE
		               IF NOT BETWEEN(m.cAcctNo,lcAcct1,lcAcct2)
		                  LOOP
		               ENDIF
		            ENDIF
		            SELECT balance
		            SET ORDER TO cacctprd
		            IF NOT SEEK(m.cAcctNo + m.cYear + m.cPeriod)
		               m.cYear    = m.cYear
		               m.cPeriod  = m.cPeriod
		               m.nEndBal  = 0
		               m.nDebits  = 0
		               m.nCredits = 0
		               m.nBegBal  = 0
		               INSERT INTO balance FROM MEMVAR
		            ENDIF
		         ENDSCAN
		      ENDSCAN
		   ENDIF
		ENDIF
		
		CREATE CURSOR tempbeg ;
		   (cAcctNo   C(6), ;
		   nAcctType  N(2), ;
		   cYear      C(4), ;
		   cPeriod    C(2), ;
		   nDebits    N(15, 2), ;
		   nCredits   N(15, 2))
		
		
		*  Get the beginning balances for each account in the range.
		DO CASE
		   CASE lnOption = 1   && Fiscal Period
		      SELECT  coabalnew.cAcctNo, ;
		         coa.nAcctType, ;
		         SUM(nDebits) AS nDebits, ;
		         SUM(nCredits) AS nCredits ;
		         FROM coabalnew, coa ;
		         WHERE coabalnew.cYear + coabalnew.cPeriod < lcYear + lcPeriod ;
		         AND coabalnew.cAcctNo = coa.cAcctNo ;
		         AND BETWEEN(coa.nAcctType, 1, 7) ;
		         AND &lcSelectNew ;
		         INTO CURSOR tempbeg1 ;
		         ORDER BY coabalnew.cAcctNo ;
		         GROUP BY coabalnew.cAcctNo
		      lnCount = _TALLY
		      SELECT  coabalnew.cAcctNo, ;
		         coa.nAcctType, ;
		         SUM(nDebits) AS nDebits, ;
		         SUM(nCredits) AS nCredits ;
		         FROM coabalnew, coa ;
		         WHERE coabalnew.cYear = lcYear ;
		         AND coabalnew.cPeriod < lcPeriod ;
		         AND coabalnew.cAcctNo = coa.cAcctNo ;
		         AND BETWEEN(coa.nAcctType, 8, 16) ;
		         AND &lcSelectNew ;
		         INTO CURSOR tempbeg2 ;
		         ORDER BY coabalnew.cAcctNo ;
		         GROUP BY coabalnew.cAcctNo
		      lnCount = lnCount + _TALLY
		
		   CASE lnOption = 2    && Fiscal Year
		      SELECT  coabalnew.cAcctNo, ;
		         coa.nAcctType, ;
		         SUM(nDebits) AS nDebits, ;
		         SUM(nCredits) AS nCredits ;
		         FROM coabalnew, coa ;
		         WHERE coabalnew.cYear < lcYear ;
		         AND coabalnew.cAcctNo = coa.cAcctNo ;
		         AND BETWEEN(coa.nAcctType, 1, 7) ;
		         AND &lcSelectNew ;
		         INTO CURSOR tempbeg1 ;
		         ORDER BY coabalnew.cAcctNo ;
		         GROUP BY coabalnew.cAcctNo
		      lnCount = _TALLY
		      SELECT  coabalnew.cAcctNo, ;
		         coa.nAcctType, ;
		         000000000.00 AS nDebits, ;
		         000000000.00 AS nCredits ;
		         FROM coabalnew, coa ;
		         WHERE coabalnew.cYear < lcYear ;
		         AND coabalnew.cAcctNo = coa.cAcctNo ;
		         AND BETWEEN(coa.nAcctType, 8, 16) ;
		         AND &lcSelectNew ;
		         INTO CURSOR tempbeg2 ;
		         ORDER BY coabalnew.cAcctNo ;
		         GROUP BY coabalnew.cAcctNo
		
		   CASE lnOption = 3  && Fiscal Period Range
		      SELECT tempcoabal
		      SCAN
		         SCATTER MEMVAR
		         SELECT  coabalnew.cAcctNo, ;
		            coa.nAcctType, ;
		            m.cYear AS cYear, ;
		            m.cPeriod AS cPeriod, ;
		            SUM(nDebits) AS nDebits, ;
		            SUM(nCredits) AS nCredits ;
		            FROM coabalnew, coa ;
		            WHERE coabalnew.cYear + coabalnew.cPeriod < m.cYear + m.cPeriod ;
		            AND coabalnew.cAcctNo = coa.cAcctNo ;
		            AND BETWEEN(coa.nAcctType, 1, 7) ;
		            AND &lcSelectNew ;
		            INTO CURSOR tempbeg1 ;
		            ORDER BY coabalnew.cAcctNo ;
		            GROUP BY coabalnew.cAcctNo
		
		         IF INT(VAL(m.cPeriod)) # 1
		            SELECT  coabalnew.cAcctNo, ;
		               coa.nAcctType, ;
		               m.cYear AS cYear, ;
		               m.cPeriod AS cPeriod, ;
		               SUM(nDebits) AS nDebits, ;
		               SUM(nCredits) AS nCredits ;
		               FROM coabalnew, coa ;
		               WHERE coabalnew.cYear = m.cYear AND  coabalnew.cPeriod < m.cPeriod ;
		               AND coabalnew.cAcctNo = coa.cAcctNo ;
		               AND BETWEEN(coa.nAcctType, 8, 16) ;
		               AND &lcSelectNew ;
		               INTO CURSOR tempbeg2 ;
		               ORDER BY coabalnew.cAcctNo;
		               GROUP BY coabalnew.cAcctNo
		         ELSE
		            SELECT  coabalnew.cAcctNo, ;
		               coa.nAcctType, ;
		               m.cYear AS cYear, ;
		               m.cPeriod AS cPeriod, ;
		               000000000.00 AS nDebits, ;
		               000000000.00  AS nCredits ;
		               FROM coabalnew, coa ;
		               WHERE coabalnew.cYear = m.cYear AND coabalnew.cPeriod < m.cPeriod ;
		               AND coabalnew.cAcctNo = coa.cAcctNo ;
		               AND BETWEEN(coa.nAcctType, 8, 16) ;
		               AND &lcSelectNew ;
		               INTO CURSOR tempbeg2 ;
		               ORDER BY coabalnew.cAcctNo;
		               GROUP BY coabalnew.cAcctNo
		         ENDIF
		         SELECT tempbeg
		         APPEND FROM DBF('tempbeg1')
		         APPEND FROM DBF('tempbeg2')
		      ENDSCAN
		      lnCount = _TALLY
		
		   CASE lnOption = 4  && Date Range
		      SELECT  coa.cAcctNo, ;
		         coa.nAcctType, ;
		         000000000.00 AS nDebits, ;
		         000000000.00 AS nCredits ;
		         FROM coa ;
		         WHERE BETWEEN(coa.nAcctType, 1, 7) ;
		         AND &lcSelectCOA ;
		         INTO CURSOR tempbeg1 ;
		         ORDER BY coa.cAcctNo ;
		         GROUP BY coa.cAcctNo
		      lcYear = TRANSFORM(YEAR(ldDate1))
		      IF ldDate1 # CTOD('01/01/'+lcYear)
		         SELECT  coa.cAcctNo, ;
		            coa.nAcctType, ;
		            000000000.00 AS nDebits, ;
		            000000000.00 AS nCredits ;
		            FROM coa ;
		            WHERE BETWEEN(coa.nAcctType, 8, 16) ;
		            AND &lcSelectCOA ;
		            INTO CURSOR tempbeg2 ;
		            ORDER BY coa.cAcctNo ;
		            GROUP BY coa.cAcctNo
		         SELECT tempbeg
		         APPEND FROM DBF('tempbeg2')
		      ENDIF
		      SELECT tempbeg
		      APPEND FROM DBF('tempbeg1')
		      lnCount = _TALLY
		ENDCASE
		
		IF NOT lnOption = 3
		   m.cYear   = lcYear
		   m.cPeriod = lcPeriod
		   SELECT tempbeg
		   APPEND FROM DBF('tempbeg1')
		   IF USED('tempbeg2')
		      APPEND FROM DBF('tempbeg2')
		   ENDIF
		ENDIF
		
		IF lnOption = 4   && Plug in the beginning balance
		   SELECT tempbeg
		   SCAN
		      m.cAcctNo = cAcctNo
		      * We want the beginning balance as of the previous day in the range,
		      * so use an early date as the starting date for processing - BH 09/12/2008
		      lnBalance = THISFORM.glmaint.getbalance(m.cAcctNo, {01/01/1900}, .F., ldDate1 - 1)
		      SELECT tempbeg
		      IF lnBalance > 0
		         REPLACE nDebits WITH lnBalance
		      ELSE
		         REPLACE nCredits WITH lnBalance
		      ENDIF
		   ENDSCAN
		ENDIF
		
		*
		*  If there are any beginning balances, update the balance table.
		*  Otherwise, the beginning balances are assumed to be zero.
		*
		
		IF lnOption # 3
		   SELECT balance
		   SET ORDER TO AcctNo
		   SELECT tempbeg
		   IF RECCOUNT() > 0
		      SCAN
		         SCATTER MEMVAR
		         lnBegBal = ABS(m.nDebits) - ABS(m.nCredits)
		         SELECT balance
		         IF SEEK(m.cAcctNo)
		            REPLACE nBegBal WITH lnBegBal
		         ENDIF
		      ENDSCAN
		   ENDIF
		ELSE
		   SELECT balance
		   SET ORDER TO cacctprd
		   SELECT tempbeg
		   IF RECCOUNT() > 0
		      SCAN
		         SCATTER MEMVAR
		         lnBegBal = ABS(m.nDebits) - ABS(m.nCredits)
		         SELECT balance
		         IF SEEK(m.cAcctNo + m.cYear + m.cPeriod)
		            REPLACE nBegBal WITH lnBegBal
		         ENDIF
		      ENDSCAN
		   ENDIF
		
		ENDIF
		
		*
		*  Plug the ending balances for each account in the range.
		*
		SELECT balance
		SCAN
		   SCATTER MEMVAR
		   m.nEndBal = m.nBegBal + m.nDebits - m.nCredits
		   REPLACE nEndBal WITH m.nEndBal
		ENDSCAN
		
		CREATE CURSOR glmast ;
		   (cidglma    C(10), ;
		   cbatch     C(8),  ;
		   cYear      C(4),  ;
		   cPeriod    C(2),  ;
		   csource    C(2),  ;
		   cref       C(20), ;
		   ddate      D,     ;
		   cdesc      C(40), ;
		   cAcctNo    C(6),  ;
		   cunitno    C(10), ;
		   cdeptno    C(10), ;
		   nDebits    N(15, 2), ;
		   nCredits   N(15, 2), ;
		   centtime   C(8),  ;
		   dentdate   D, ;
		   cdmbatch   C(8), ;
		   cid        C(10), ;
		   cidchec    C(8), ;
		   ccheckno   C(10), ;
		   cname      C(30))
		
		IF llSummarize
		
		   DO CASE
		      CASE lnOption = 1
		         SELE SPACE(6) AS cbatch, ;
		            ddate, ;
		            cref, ;
		            cdesc, ;
		            cAcctNo, ;
		            cYear, ;
		            cPeriod, ;
		            csource, ;
		            SUM(nDebits)  AS nDebits, ;
		            SUM(nCredits) AS nCredits, ;
		            SPACE(10)     AS cunitno, ;
		            SPACE(10)     AS cid, ;
		            SPACE(10)     AS cdeptno ;
		            FROM glmaster ;
		            WHERE cYear   = lcYear ;
		            AND cPeriod = lcPeriod ;
		            AND &lcSelect ;
		            AND NOT DELETED() ;
		            INTO CURSOR glmastx ;
		            ORDER BY cYear, cPeriod, csource, cAcctNo ;
		            GROUP BY cYear, cPeriod, csource, cAcctNo
		
		         SELECT  * ;
		            FROM glmastx ;
		            WHERE cYear   = lcYear ;
		            AND cPeriod = lcPeriod ;
		            AND &lcSelect ;
		            AND NOT DELETED() ;
		            INTO CURSOR glmast1 ;
		            ORDER BY cAcctNo
		
		      CASE lnOption = 2
		         SELE SPACE(6) AS cbatch, ;
		            ddate, ;
		            cref, ;
		            cdesc, ;
		            cAcctNo, ;
		            cYear, ;
		            cPeriod, ;
		            csource, ;
		            SUM(nDebits)  AS nDebits, ;
		            SUM(nCredits) AS nCredits, ;
		            SPACE(10)     AS cunitno, ;
		            SPACE(10)     AS cid, ;
		            SPACE(10)     AS cdeptno ;
		            FROM glmaster ;
		            WHERE cYear   = lcYear ;
		            AND &lcSelect ;
		            AND NOT DELETED() ;
		            INTO CURSOR glmastx ;
		            ORDER BY cYear, cPeriod, csource, cAcctNo ;
		            GROUP BY cYear, cPeriod, csource, cAcctNo
		
		         SELECT  * ;
		            FROM glmastx ;
		            WHERE cYear   = lcYear ;
		            AND &lcSelect ;
		            AND NOT DELETED() ;
		            INTO CURSOR glmast1 ;
		            ORDER BY cYear, cPeriod, csource, cAcctNo
		
		      CASE lnOption = 3
		         SELE SPACE(6) AS cbatch, ;
		            ddate, ;
		            cref, ;
		            cdesc, ;
		            cAcctNo, ;
		            cYear, ;
		            cPeriod, ;
		            csource, ;
		            SUM(nDebits)  AS nDebits, ;
		            SUM(nCredits) AS nCredits, ;
		            SPACE(10)     AS cunitno, ;
		            SPACE(10)     AS cid, ;
		            SPACE(10)     AS cdeptno ;
		            FROM glmaster ;
		            WHERE BETWEEN(cYear + cPeriod, ;
		            lcYear + lcPeriod, ;
		            lcYear2 + lcPeriod2) ;
		            AND &lcSelect ;
		            AND NOT DELETED() ;
		            INTO CURSOR glmastx ;
		            ORDER BY cYear, cPeriod, csource, cAcctNo ;
		            GROUP BY cYear, cPeriod, csource, cAcctNo
		
		         SELECT  * ;
		            FROM glmastx ;
		            WHERE BETWEEN(cYear + cPeriod, ;
		            lcYear + lcPeriod, ;
		            lcYear2 + lcPeriod2) ;
		            AND &lcSelect ;
		            AND NOT DELETED() ;
		            INTO CURSOR glmast1 ;
		            ORDER BY cYear, cPeriod, csource, cAcctNo
		
		      CASE lnOption = 4
		         SELE SPACE(6) AS cbatch, ;
		            ddate, ;
		            cref, ;
		            cdesc, ;
		            cAcctNo, ;
		            cYear, ;
		            cPeriod, ;
		            csource, ;
		            SUM(nDebits)  AS nDebits, ;
		            SUM(nCredits) AS nCredits, ;
		            SPACE(10)     AS cunitno, ;
		            SPACE(10)     AS cid, ;
		            SPACE(10)     AS cdeptno ;
		            FROM glmaster ;
		            WHERE BETWEEN(glmaster.ddate, ldDate1, ldDate2) ;
		            AND &lcSelect ;
		            AND NOT DELETED() ;
		            INTO CURSOR glmastx ;
		            ORDER BY cYear, cPeriod, csource, cAcctNo ;
		            GROUP BY cYear, cPeriod, csource, cAcctNo
		
		         SELECT  * ;
		            FROM glmastx ;
		            WHERE cYear   = lcYear ;
		            AND cPeriod = lcPeriod ;
		            AND &lcSelect ;
		            AND NOT DELETED() ;
		            INTO CURSOR glmast1 ;
		            ORDER BY cAcctNo
		
		   ENDCASE
		ELSE
		   DO CASE
		      CASE lnOption = 1
		         SELECT  * ;
		            FROM glmaster ;
		            WHERE cYear   = lcYear ;
		            AND cPeriod = lcPeriod ;
		            AND &lcSelect ;
		            AND NOT DELETED() ;
		            INTO CURSOR glmast1 ;
		            ORDER BY cAcctNo, ddate
		
		      CASE lnOption = 2
		         SELECT  * ;
		            FROM glmaster ;
		            WHERE cYear   = lcYear ;
		            AND &lcSelect ;
		            AND NOT DELETED() ;
		            INTO CURSOR glmast1 ;
		            ORDER BY cAcctNo, ddate
		
		      CASE lnOption = 3
		         SELECT  * ;
		            FROM glmaster ;
		            WHERE BETWEEN(cYear + cPeriod, ;
		            lcYear + lcPeriod, ;
		            lcYear2 + lcPeriod2) ;
		            AND &lcSelect ;
		            AND NOT DELETED() ;
		            INTO CURSOR glmast1 ;
		            ORDER BY cAcctNo, ddate
		
		      CASE lnOption = 4
		         SELECT  * ;
		            FROM glmaster ;
		            WHERE BETWEEN(glmaster.ddate, ldDate1, ldDate2) ;
		            AND &lcSelect ;
		            AND NOT DELETED() ;
		            INTO CURSOR glmast1 ;
		            ORDER BY cAcctNo, ddate
		   ENDCASE
		
		ENDIF
		SELECT glmast
		APPEND FROM DBF('glmast1')
		USE IN glmast1
		SELECT glmast
		INDEX ON cAcctNo TAG AcctNo
		INDEX ON cAcctNo + cYear + cPeriod TAG cacctprd
		
		****************************************************************
		*  Fill in the entity name
		****************************************************************
		SELECT glmast
		SET ORDER TO AcctNo
		SCAN
		   IF NOT EMPTY(cid)
		      m.cid = cid
		      IF csource # 'PR'
		         SWSELECT('investor')
		         LOCATE FOR cownerid = m.cid
		         IF FOUND()
		            SELECT glmast
		            REPL cname WITH investor.csortfield
		         ELSE
		            SWSELECT('vendor')
		            LOCATE FOR cvendorid = m.cid
		            IF FOUND()
		               SELECT glmast
		               REPL cname WITH vendor.csortfield
		            ELSE
		               SWSELECT('custs')
		               LOCATE FOR ccustid = m.cid
		               IF FOUND()
		                  SELECT glmast
		                  REPLACE cname WITH custs.ccustname
		               ELSE
		                  SWSELECT('revsrc')
		                  LOCATE FOR crevkey = m.cid
		                  IF FOUND()
		                     SELECT glmast
		                     REPLACE cname WITH revsrc.crevname
		                  ELSE
		                     SWSELECT('emps')
		                     LOCATE FOR cempid = m.cid
		                     IF FOUND()
		                        SELECT glmast
		                        REPLACE cname WITH ALLTRIM(emps.clastname) + ' ' + ALLTRIM(emps.cfirstname)
		                     ENDIF
		                  ENDIF
		               ENDIF
		            ENDIF
		         ENDIF
		      ELSE
		         *  If it's a PR source, check emps. This prevents dumb people who have employee IDs that are the same as other IDs
		         *  from seeing the wrong name beside the entries.
		         SWSELECT('emps')
		         LOCATE FOR cempid = m.cid
		         IF FOUND()
		            SELECT glmast
		            REPLACE cname WITH ALLTRIM(emps.clastname) + ' ' + ALLTRIM(emps.cfirstname)
		         ENDIF
		      ENDIF
		   ELSE
		      IF glmast.csource = 'CS'  &&  If it's from cash, it may be a cash disb, and if it was done as a manual check, plug in the name from the CSDISHDR, since there's no ID to match up with
		         SWSELECT('csdishdr')
		         SET ORDER TO cbatch
		         IF SEEK(glmast.cbatch)
		            SELECT glmast
		            REPLACE cname WITH csdishdr.cname
		         ENDIF
		      ENDIF
		   ENDIF
		   IF llSummarize
		      DO CASE
		         CASE glmast.csource = 'CS'
		            lcDesc = 'Cash Journal'
		         CASE glmast.csource = 'CR'
		            lcDesc = 'Cash Journal'
		         CASE glmast.csource = 'GJ'
		            lcDesc = 'General Journal'
		         CASE glmast.csource = 'DM'
		            lcDesc = 'Rev Dist Journal'
		         CASE glmast.csource = 'AP'
		            lcDesc = 'Accts Payable Journal'
		         CASE glmast.csource = 'AR'
		            lcDesc = 'Accts Recv Journal'
		         CASE glmast.csource = 'PR'
		            lcDesc = 'Payroll Journal'
		         CASE glmast.csource = 'YE'
		            lcDesc = 'General Journal'
		         OTHERWISE
		            lcDesc = 'Unknown Journal'
		      ENDCASE
		
		      SELE glmast
		      REPL cref WITH 'Summary', ;
		         cdesc WITH lcDesc
		   ENDIF
		ENDSCAN
		
		**********************************************************************************
		*  Fill in the check number by looking up the check
		*  in the checks table.
		**********************************************************************************
		SWSELECT('coa')
		SET ORDER TO AcctNo   && CACCTNO
		
		SELECT glmast
		SCAN
		   m.cAcctNo = cAcctNo
		   m.cidchec = cidchec
		   IF NOT EMPTY(ALLT(m.cidchec))
		      * Only change the reference if this is a bank acct
		      SWSELECT('coa')
		      IF SEEK(m.cAcctNo)
		         IF coa.lBankAcct
		            SWSELECT('checks')
		            SET ORDER TO cidchec
		            IF SEEK(m.cidchec)
		               IF lPrinted
		                  m.cref = 'CK: ' + ALLT(ccheckno)
		               ELSE
		                  m.cref = 'Not Printed'
		               ENDIF
		               SELECT glmast
		               REPLACE cref WITH m.cref
		            ENDIF
		         ENDIF
		      ENDIF
		   ENDIF
		ENDSCAN
		
		WAIT CLEAR
		
		SELECT glmast
		lnDetailCount = RECCOUNT()
		
		IF lnOption # 3
		   THISFORM.cReportName = 'source\glact1.frx'
		   SELECT balance
		   SET ORDER TO AcctNo
		   SELECT glmast
		   SET ORDER TO AcctNo
		   SELECT balance
		   GO TOP
		   SET RELATION TO balance.cAcctNo INTO glmast IN balance
		   SET SKIP TO glmast
		ELSE
		   THISFORM.cReportName = 'source\glact1a.frx'
		   SELECT balance
		   SET ORDER TO cacctprd
		   SELECT glmast
		   SET ORDER TO cacctprd
		   SELECT balance
		   GO TOP
		   SET RELATION TO balance.cAcctNo + balance.cYear + balance.cPeriod INTO glmast IN balance
		   SET SKIP TO glmast
		ENDIF
		
		IF lnDetailCount > 0
		   THISFORM.CSVFilename = 'glmast'
		   SELECT balance
		   GO TOP
		   SELECT glmast
		   GO TOP
		   SELECT balance
		   RETURN .T.
		ELSE
		   RETURN .F.
		ENDIF
		
		
		
		
		
		
		
	ENDPROC

	PROCEDURE Init
		DODEFAULT()
		thisform.cReportName = 'glact1.frx'
		thisform.txtYear2.visible = .F.
		thisform.txtPeriod2.visible = .F.
		thisform.lblToYear.visible = .F.
		thisform.lblToPeriod.visible = .F.
		
		thisform.chkSummarize.value = .f.
		thisform.chklnoact.value = .t.
		
		SELECT coa
		SET ORDER TO acctno
		GO TOP
		thisform.swrptlook1.txtBegID.value = cacctno
		thisform.swrptlook1.txtBegName.value = cAcctDesc
		GO BOTT
		thisform.swrptlook1.txtEndID.value = cacctno
		thisform.swrptlook1.txtEndName.value = cAcctDesc
		
		this.optSelect.value = 1
		
		thisform.txtyear.Value = GetFiscalYear(DATE())
		thisform.txtyear2.Value = GetFiscalYear(DATE())
		
		thisform.txtperiod.Value = GetFiscalPeriod(DATE())
		thisform.txtperiod2.Value = GetFiscalPeriod(DATE())
		
		
		
		
	ENDPROC

	PROCEDURE chkSelected.Click
		IF this.Value
		   DO FORM commonsource\selected-ids WITH 'COA' LINKED 
		   lnCount = RECCOUNT('selected')
		   thisform.lblselected.Caption = TRANSFORM(lnCount) + ' Accounts Selected'
		   thisform.lblselected.Visible = .T.
		   thisform.lblbegID.Visible = .F.
		   thisform.lblendID.Visible = .F.
		   thisform.swrptlook1.Visible = .F.
		ELSE
		   thisform.lblselected.Visible = .F.
		   thisform.lblbegID.Visible = .T.
		   thisform.lblendID.Visible = .T.
		   thisform.swrptlook1.Visible = .T.
		ENDIF 
	ENDPROC

	PROCEDURE optSelect.Option1.Click
		
		
	ENDPROC

	PROCEDURE optSelect.Valid
		DO CASE
		   CASE THIS.VALUE = 1
		      THISFORM.lblFromYear.CAPTION = 'Fiscal Year:'
		      THISFORM.lblFromPeriod.CAPTION = 'Fiscal Period:'
		      THISFORM.txtYear.VISIBLE       = .t.
		      THISFORM.txtYear2.VISIBLE = .F.
		      THISFORM.txtPeriod2.VISIBLE = .F.
		      THISFORM.lblToYear.VISIBLE = .F.
		      THISFORM.lblToPeriod.VISIBLE = .F.
		      THISFORM.lblFromYear.VISIBLE = .T.
		      THISFORM.lblFromPeriod.VISIBLE = .T.
		      THISFORM.txtPeriod.VISIBLE = .T.
		      THISFORM.lblBegDate.VISIBLE    = .f.
		      THISFORM.date1.VISIBLE         = .f.
		      THISFORM.lblEndDate.VISIBLE    = .f.
		      THISFORM.date2.VISIBLE         = .f.
		   CASE THIS.VALUE = 2
		      THISFORM.lblFromYear.CAPTION = 'Fiscal Year:'
		      THISFORM.txtYear.VISIBLE       = .t.
		      THISFORM.lblFromYear.VISIBLE = .T.
		      THISFORM.lblFromPeriod.VISIBLE = .F.
		      THISFORM.txtPeriod.VISIBLE = .F.
		      THISFORM.txtYear2.VISIBLE = .F.
		      THISFORM.txtPeriod2.VISIBLE = .F.
		      THISFORM.lblToYear.VISIBLE = .F.
		      THISFORM.lblToPeriod.VISIBLE = .F.
		      THISFORM.lblFromPeriod.VISIBLE = .F.
		      THISFORM.txtPeriod.VISIBLE = .F.
		      THISFORM.lblBegDate.VISIBLE    = .f.
		      THISFORM.date1.VISIBLE         = .f.
		      THISFORM.lblEndDate.VISIBLE    = .f.
		      THISFORM.date2.VISIBLE         = .f.
		   CASE THIS.VALUE = 3
		      THISFORM.lblFromYear.CAPTION = 'From Fiscal Year:'
		      THISFORM.lblFromPeriod.CAPTION = 'From Fiscal Period:'
		      THISFORM.lblToYear.CAPTION = 'To Fiscal Year:'
		      THISFORM.lblToPeriod.CAPTION = 'To Fiscal Period:'
		      THISFORM.lblFromYear.visible = .t.
		      THISFORM.txtYear.VISIBLE       = .t.
		      THISFORM.txtPeriod.VISIBLE = .T.
		      THISFORM.lblFromPeriod.VISIBLE = .T.
		      THISFORM.txtYear2.VISIBLE = .T.
		      THISFORM.txtPeriod2.VISIBLE = .T.
		      THISFORM.lblToYear.VISIBLE = .T.
		      THISFORM.lblToPeriod.VISIBLE = .T.
		      THISFORM.lblBegDate.VISIBLE    = .f.
		      THISFORM.date1.VISIBLE         = .f.
		      THISFORM.lblEndDate.VISIBLE    = .f.
		      THISFORM.date2.VISIBLE         = .f.
		   CASE THIS.VALUE = 4
		      THISFORM.lblFromYear.VISIBLE   = .F.
		      THISFORM.lblToYear.VISIBLE     = .F.
		      THISFORM.lblFromPeriod.VISIBLE = .F.
		      THISFORM.lblToPeriod.VISIBLE   = .F.
		      THISFORM.txtYear.VISIBLE       = .F.
		      THISFORM.txtYear2.VISIBLE      = .F.
		      THISFORM.txtPeriod.VISIBLE     = .F.
		      THISFORM.txtPeriod2.VISIBLE    = .F.
		      THISFORM.lblBegDate.VISIBLE    = .T.
		      THISFORM.date1.VISIBLE         = .T.
		      THISFORM.lblEndDate.VISIBLE    = .t.
		      THISFORM.date2.VISIBLE         = .t.
		   OTHERWISE
		      THISFORM.lblFromYear.VISIBLE   = .T.
		      THISFORM.lblToYear.VISIBLE     = .T.
		      THISFORM.lblFromPeriod.VISIBLE = .T.
		      THISFORM.lblToPeriod.VISIBLE   = .T.
		      THISFORM.txtYear.VISIBLE       = .T.
		      THISFORM.txtYear2.VISIBLE      = .T.
		      THISFORM.txtPeriod.VISIBLE     = .T.
		      THISFORM.txtPeriod2.VISIBLE    = .T.
		      THISFORM.lblBegDate.VISIBLE    = .F.
		      THISFORM.date1.VISIBLE         = .F.
		      THISFORM.lblEndDate.VISIBLE    = .f.
		      THISFORM.date2.VISIBLE         = .f.
		ENDCASE
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\CUSTOM\picklist WITH 'coa', lcList, THISFORM.swrptlook1.txtBegID.VALUE, 2
		
		IF llOK
		   THISFORM.swrptlook1.txtBegName.VALUE = coa.cacctdesc
		   THISFORM.swrptlook1.txtBegID.VALUE = coa.cacctno
		   THISFORM.REFRESH()
		ENDIF
		
		
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\CUSTOM\picklist WITH 'coa', lcList, THISFORM.swrptlook1.txtEndID.VALUE, 2
		
		IF llOK
		   THISFORM.swrptlook1.txtEndName.VALUE = coa.cacctdesc
		   THISFORM.swrptlook1.txtEndID.VALUE = coa.cacctno
		   THISFORM.REFRESH()
		ENDIF
		
		
		
	ENDPROC

	PROCEDURE Swrptlook1.TxtBegID.Init
		swselect('coa')
		DODEFAULT()
	ENDPROC

	PROCEDURE Swrptlook1.TxtEndID.Init
		swselect('coa')
		DODEFAULT()
	ENDPROC

ENDDEFINE
