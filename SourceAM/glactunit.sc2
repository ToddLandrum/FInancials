*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="glactunit.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor11" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor10" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 594
	Left = 534
	Name = "Dataenvironment"
	Top = 139
	Width = 647

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "coa", ;
		BufferModeOverride = 5, ;
		CursorSource = "coa", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 9, ;
		Name = "Cursor1", ;
		Top = 16, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor10' AS cursor WITH ;
		Alias = "emps", ;
		CursorSource = "emps", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 176, ;
		Name = "Cursor10", ;
		Top = 148, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor11' AS cursor WITH ;
		Alias = "vendor", ;
		CursorSource = "vendor", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor11", ;
		Top = 260, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "coabal", ;
		BufferModeOverride = 5, ;
		CursorSource = "coabal", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 333, ;
		Name = "Cursor2", ;
		Top = 126, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "glmaster", ;
		CursorSource = "glmaster", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Filter = "", ;
		Height = 90, ;
		Left = 178, ;
		Name = "Cursor3", ;
		Top = 0, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "checks", ;
		CursorSource = "checks", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Filter = "", ;
		Height = 90, ;
		Left = 329, ;
		Name = "Cursor4", ;
		Top = 7, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "custs", ;
		CursorSource = "custs", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 464, ;
		Name = "Cursor5", ;
		Top = 172, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "csdishdr", ;
		CursorSource = "csdishdr", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 31, ;
		Name = "Cursor6", ;
		Top = 167, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor7' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 151, ;
		Name = "Cursor7", ;
		Top = 274, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor8' AS cursor WITH ;
		Alias = "coabalu", ;
		CursorSource = "coabalu", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 484, ;
		Name = "Cursor8", ;
		Top = 16, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor9' AS cursor WITH ;
		Alias = "investor", ;
		CursorSource = "investor", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 13, ;
		Name = "Cursor9", ;
		Top = 324, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formglactunit AS frmrptcriteria OF "appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Shpshapecustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblenddate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBegDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="date1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lblfieldlabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lblfieldlabelcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblToYear" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lblfieldlabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lblfieldlabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblToPeriod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblFromYear" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblFromPeriod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtYear2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtPeriod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtPeriod2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="optSelect" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkRecalculate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSummarize" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklNoAct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtYear" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Glmaint" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Date2" UniqueID="" Timestamp="" />

	Caption = "G/L Account Activity By Well"
	DataSession = 2
	DoCreate = .T.
	Height = 580
	HelpContextID = 412
	Name = "FormGlactunit"
	Visible = .T.
	Width = 445
	Swrptcriteriabuttons1.chkExport.Alignment = 0
	Swrptcriteriabuttons1.chkExport.Name = "chkExport"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.cmdPreview.Name = "cmdPreview"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 113
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 25
	Swrptcriteriabuttons1.Top = 504
	Swrptcriteriabuttons1.ZOrderSet = 27

	ADD OBJECT 'chklNoAct' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Exclude Accounts With No Activity", ;
		Left = 180, ;
		Name = "chklNoAct", ;
		TabIndex = 2, ;
		Top = 36, ;
		Value = .F., ;
		ZOrderSet = 26
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkRecalculate' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Recalculate Account Balances Before Running", ;
		Left = 180, ;
		Name = "chkRecalculate", ;
		TabIndex = 4, ;
		Top = 92, ;
		Value = .F., ;
		ZOrderSet = 25
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSummarize' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Summarize Activity by Journal", ;
		Left = 180, ;
		Name = "chkSummarize", ;
		TabIndex = 3, ;
		Top = 64, ;
		Value = .F., ;
		ZOrderSet = 26
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'date1' AS dpk WITH ;
		Height = 20, ;
		Left = 107, ;
		Name = "date1", ;
		TabIndex = 9, ;
		Top = 156, ;
		Visible = .F., ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />

	ADD OBJECT 'Date2' AS dpk WITH ;
		Height = 20, ;
		Left = 276, ;
		Name = "Date2", ;
		TabIndex = 10, ;
		Top = 156, ;
		Visible = .F., ;
		ZOrderSet = 30
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />

	ADD OBJECT 'Glmaint' AS glmaint WITH ;
		Left = 24, ;
		Name = "Glmaint", ;
		Top = 372
		*< END OBJECT: ClassLib="..\custom\swgl.vcx" BaseClass="custom" />

	ADD OBJECT 'lblBegDate' AS lbllabelcustom WITH ;
		Caption = "Beginning Date:", ;
		Left = 26, ;
		Name = "lblBegDate", ;
		TabIndex = 27, ;
		Top = 159, ;
		Visible = .F., ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblenddate' AS lbllabelcustom WITH ;
		Caption = "Ending Date:", ;
		Left = 211, ;
		Name = "lblenddate", ;
		TabIndex = 26, ;
		Top = 159, ;
		Visible = .F., ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lblfieldlabelcustom1' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "To Account Number:", ;
		Height = 16, ;
		Left = 29, ;
		Name = "Lblfieldlabelcustom1", ;
		TabIndex = 13, ;
		Top = 306, ;
		Width = 101, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lblfieldlabelcustom2' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "From Account Number:", ;
		Height = 16, ;
		Left = 17, ;
		Name = "Lblfieldlabelcustom2", ;
		TabIndex = 11, ;
		Top = 255, ;
		Width = 113, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lblfieldlabelcustom3' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "To Well ID", ;
		Height = 16, ;
		Left = 29, ;
		Name = "Lblfieldlabelcustom3", ;
		TabIndex = 20, ;
		Top = 439, ;
		Width = 49, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lblfieldlabelcustom4' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "From Well ID", ;
		Height = 16, ;
		Left = 17, ;
		Name = "Lblfieldlabelcustom4", ;
		TabIndex = 18, ;
		Top = 388, ;
		Width = 61, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblFromPeriod' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "Fiscal Period:", ;
		Height = 16, ;
		Left = 200, ;
		Name = "lblFromPeriod", ;
		TabIndex = 21, ;
		Top = 159, ;
		Width = 66, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblFromYear' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "Fiscal Year:", ;
		Height = 16, ;
		Left = 24, ;
		Name = "lblFromYear", ;
		TabIndex = 19, ;
		Top = 159, ;
		Width = 60, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		BackStyle = 1, ;
		Caption = "Print By", ;
		FontBold = .T., ;
		Left = 18, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 12, ;
		Top = 17, ;
		ZOrderSet = 24
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		BackStyle = 1, ;
		Caption = "Selection Criteria", ;
		FontBold = .T., ;
		Left = 18, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 17, ;
		Top = 136, ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom3' AS lbllabelcustom WITH ;
		BackStyle = 1, ;
		Caption = "Account Range", ;
		FontBold = .T., ;
		Left = 18, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 24, ;
		Top = 231, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom4' AS lbllabelcustom WITH ;
		BackStyle = 1, ;
		Caption = "Well Range", ;
		FontBold = .T., ;
		Left = 18, ;
		Name = "Lbllabelcustom4", ;
		TabIndex = 14, ;
		Top = 364, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblToPeriod' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "To Fiscal Period:", ;
		Height = 16, ;
		Left = 199, ;
		Name = "lblToPeriod", ;
		TabIndex = 23, ;
		Top = 192, ;
		Visible = .F., ;
		Width = 81, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblToYear' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "To Fiscal Year:", ;
		Height = 16, ;
		Left = 24, ;
		Name = "lblToYear", ;
		TabIndex = 22, ;
		Top = 192, ;
		Visible = .F., ;
		Width = 75, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'optSelect' AS opgoptiongroupcustom WITH ;
		AutoSize = .F., ;
		ButtonCount = 4, ;
		Height = 96, ;
		Left = 12, ;
		Name = "optSelect", ;
		TabIndex = 1, ;
		Top = 24, ;
		Width = 156, ;
		ZOrderSet = 23, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "Fiscal Period", ;
		Option1.FontSize = 8, ;
		Option1.Height = 16, ;
		Option1.Left = 12, ;
		Option1.Name = "Option1", ;
		Option1.Top = 12, ;
		Option1.Width = 79, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "Fiscal Year", ;
		Option2.FontSize = 8, ;
		Option2.Height = 16, ;
		Option2.Left = 12, ;
		Option2.Name = "Option2", ;
		Option2.Top = 33, ;
		Option2.Width = 73, ;
		Option3.AutoSize = .T., ;
		Option3.Caption = "Fiscal Period Range", ;
		Option3.FontSize = 8, ;
		Option3.Height = 16, ;
		Option3.Left = 12, ;
		Option3.Name = "Option3", ;
		Option3.Top = 54, ;
		Option3.Width = 113, ;
		Option4.AutoSize = .T., ;
		Option4.Caption = "Accounting Date Range", ;
		Option4.FontSize = 8, ;
		Option4.Height = 16, ;
		Option4.Left = 12, ;
		Option4.Name = "Option4", ;
		Option4.Top = 75, ;
		Option4.Width = 132
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'Shpshapecustom1' AS shpshapecustom WITH ;
		Height = 120, ;
		Left = 12, ;
		Name = "Shpshapecustom1", ;
		Top = 238, ;
		Width = 420, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Shpshapecustom2' AS shpshapecustom WITH ;
		Height = 96, ;
		Left = 171, ;
		Name = "Shpshapecustom2", ;
		Top = 24, ;
		Width = 259, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Shpshapecustom3' AS shpshapecustom WITH ;
		Height = 84, ;
		Left = 12, ;
		Name = "Shpshapecustom3", ;
		Top = 142, ;
		Width = 420, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Shpshapecustom4' AS shpshapecustom WITH ;
		Height = 120, ;
		Left = 12, ;
		Name = "Shpshapecustom4", ;
		Top = 371, ;
		Width = 420, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		Left = 138, ;
		Name = "Swrptlook1", ;
		TabIndex = 15, ;
		Top = 252, ;
		ZOrderSet = 12, ;
		Swlookupbutton1.Left = 60, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton1.Top = 0, ;
		Swlookupbutton2.Left = 60, ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		Swlookupbutton2.Top = 52, ;
		TxtBegID.clistexpression = coa.cacctno, ;
		TxtBegID.clistworkarea = coa, ;
		TxtBegID.Height = 20, ;
		TxtBegID.InputMask = "XXXXXX", ;
		TxtBegID.Left = 0, ;
		TxtBegID.MaxLength = 6, ;
		TxtBegID.Name = "TxtBegID", ;
		TxtBegID.Top = 0, ;
		TxtBegID.Width = 53, ;
		TxtBegName.Name = "TxtBegName", ;
		TxtEndID.clistexpression = coa.cacctno, ;
		TxtEndID.clistworkarea = coa, ;
		TxtEndID.Height = 20, ;
		TxtEndID.InputMask = "XXXXXX", ;
		TxtEndID.Left = 0, ;
		TxtEndID.MaxLength = 6, ;
		TxtEndID.Name = "TxtEndID", ;
		TxtEndID.Top = 51, ;
		TxtEndID.Width = 53, ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />

	ADD OBJECT 'Swrptlook2' AS swrptlook WITH ;
		Left = 132, ;
		Name = "Swrptlook2", ;
		TabIndex = 16, ;
		Top = 383, ;
		ZOrderSet = 5, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		txtBegID.clistexpression = wells.cwellid, ;
		txtBegID.clistworkarea = wells, ;
		txtBegID.Name = "txtBegID", ;
		TxtBegName.Name = "TxtBegName", ;
		txtEndID.clistexpression = wells.cwellid, ;
		txtEndID.clistworkarea = wells, ;
		txtEndID.Name = "txtEndID", ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />

	ADD OBJECT 'txtPeriod' AS swperiod WITH ;
		Height = 20, ;
		Left = 311, ;
		Name = "txtPeriod", ;
		TabIndex = 6, ;
		Top = 157, ;
		ZOrderSet = 21
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtPeriod2' AS swperiod WITH ;
		Height = 20, ;
		Left = 311, ;
		Name = "txtPeriod2", ;
		TabIndex = 8, ;
		Top = 190, ;
		ZOrderSet = 22
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtYear' AS swyear WITH ;
		Height = 20, ;
		Left = 132, ;
		MaxLength = 4, ;
		Name = "txtYear", ;
		TabIndex = 5, ;
		Top = 157, ;
		Width = 40, ;
		ZOrderSet = 29
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtYear2' AS swyear WITH ;
		Height = 20, ;
		Left = 132, ;
		MaxLength = 4, ;
		Name = "txtYear2", ;
		TabIndex = 7, ;
		Top = 190, ;
		Width = 40, ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE builddata
		LOCAL lcYear, lcPeriod, lcAcct1, lcAcct2, lnSort, lcYear2, lcPeriod2, lcCurFY
		LOCAL lnCount
		
		lcYear      = THISFORM.txtYear.VALUE
		lcPeriod    = THISFORM.txtPeriod.VALUE
		lcAcct1     = THISFORM.swrptlook1.txtBegID.VALUE
		lcAcct2     = THISFORM.swrptlook1.txtEndID.VALUE
		lcUnit1     = THISFORM.swrptlook2.txtBegID.VALUE
		lcUnit2     = THISFORM.swrptlook2.txtEndID.VALUE
		lnOption    = THISFORM.optSelect.VALUE
		lcYear2     = THISFORM.txtYear2.VALUE
		lcPeriod2   = THISFORM.txtPeriod2.VALUE
		llSummarize = THISFORM.chkSummarize.VALUE
		ldDate1     = THISFORM.Date1.VALUE
		ldDate2     = THISFORM.Date2.VALUE
		lnCount     = 0
		
		*
		*  Set the report title
		*
		DO CASE
		   CASE lnOption = 1
		      THISFORM.cTitle1 = 'For Fiscal Period: ' + THISFORM.txtPeriod.VALUE +'/'+ THISFORM.txtYear.VALUE
		   CASE lnOption = 2
		      THISFORM.cTitle1 = 'For Fiscal Year: ' + THISFORM.txtYear.VALUE
		   CASE lnOption = 3
		      THISFORM.cTitle1 = 'For Period Range: ' + THISFORM.txtPeriod.VALUE +'/'+ THISFORM.txtYear.VALUE + ' - ' + ;
		         THISFORM.txtPeriod2.VALUE +'/'+ THISFORM.txtYear2.VALUE
		   CASE lnOption = 4
		      THISFORM.cTitle1 = 'Between Dates: ' + DTOC(THISFORM.Date1.VALUE) + '/' + DTOC(THISFORM.Date2.VALUE)
		ENDCASE
		
		*
		*  Set Selection and Sort Criteria
		*
		THISFORM.cSelectCriteria = 'Acct: ' + THISFORM.swrptlook1.txtBegID.VALUE + ' - ' + THISFORM.swrptlook1.txtEndID.VALUE
		THISFORM.cSortOrder      = 'Account Number'
		IF llSummarize
		   THISFORM.cTitle2         = 'Summary'
		ELSE
		   THISFORM.cTitle2         = ''
		ENDIF
		
		*
		*  Recalculate account balances
		*
		IF THISFORM.chkRecalculate.VALUE = .T.
		   WAIT WIND NOWAIT 'Calculating Account Balances...'
		   THISFORM.glmaint.calcbalancew()
		ENDIF
		
		WAIT WIND NOWAIT 'Building the report...Please wait.'
		
		CREATE CURSOR balance   ;
		   (cAcctNo     C(6),    ;
		   cunitno     C(10), ;
		   cname       C(40), ;
		   cBalGroup   C(1),    ;
		   nAcctType   N(2),    ;
		   cAcctType   C(25),   ;
		   cAcctDesc   C(30),   ;
		   cFiscalYr   C(4),    ;
		   cFiscalPrd  C(2),    ;
		   nBegBal     N(12,2), ;
		   nDebits     N(12,2), ;
		   nCredits    N(12,2), ;
		   nEndBal     N(12,2))
		INDEX ON cAcctNo TAG AcctNo
		
		*
		*  Get the periods activity for each account in the range.
		*
		DO CASE
		   CASE lnOption = 1     && Fiscal Period
		      SELECT coa.cAcctNo,       ;
		         coa.cAcctDesc,     ;
		         coa.nAcctType,     ;
		         coabalu.cwellid AS cunitno, ;
		         coabalu.cFiscalYr,  ;
		         coabalu.cFiscalPrd, ;
		         coabalu.nDebits, ;
		         coabalu.nCredits   ;
		         FROM coabalu, coa ;
		         WHERE coabalu.cAcctNo = coa.cAcctNo ;
		         AND BETWEEN(coabalu.cwellid,lcUnit1,lcUnit2) ;
		         AND coabalu.cFiscalYr + coabalu.cFiscalPrd = lcYear+lcPeriod ;
		         AND BETWEEN(coa.cAcctNo, lcAcct1, lcAcct2) ;
		         AND NOT DELETED() ;
		         INTO CURSOR tempbal1 ;
		         ORDER BY coabalu.cwellid, coa.cAcctNo ;
		         GROUP BY coabalu.cwellid, coa.cAcctNo
		         
		      IF NOT THISFORM.chklNoAct.VALUE
		         SELECT coa.cAcctNo,            ;
		            coa.cAcctDesc,          ;
		            coa.nAcctType,     ;
		            lcYear AS cFiscalYr,    ;
		            lcPeriod AS cFiscalPrd, ;
		            0 AS nDebits,           ;
		            0 AS nCredits           ;
		            FROM coabalu, coa ;
		            WHERE coa.cAcctNo NOT IN (SELECT cAcctNo FROM coabalu WHERE cFiscalYr+cFiscalPrd=lcYear+lcPeriod) ;
		            AND BETWEEN(coa.cAcctNo, lcAcct1, lcAcct2) ;
		            AND NOT DELETED() ;
		            INTO CURSOR tempbal2 ;
		            ORDER BY 1 ;
		            GROUP BY 1
		      ENDIF
		
		   CASE lnOption = 2     && Fiscal Year
		      SELECT coa.cAcctNo,       ;
		         coa.cAcctDesc,     ;
		         coa.nAcctType,     ;
		         coabalu.cFiscalYr,  ;
		         coabalu.cFiscalPrd, ;
		         coabalu.cwellid AS cunitno, ;
		         SUM(coabalu.nDebits) AS nDebits,    ;
		         SUM(coabalu.nCredits) AS nCredits    ;
		         FROM coabalu, coa ;
		         WHERE coabalu.cAcctNo = coa.cAcctNo ;
		         AND BETWEEN(coabalu.cwellid,lcUnit1,lcUnit2) ;
		         AND coabalu.cFiscalYr = lcYear ;
		         AND BETWEEN(coa.cAcctNo, lcAcct1, lcAcct2) ;
		         AND NOT DELETED() ;
		         INTO CURSOR tempbal1 ;
		         ORDER BY coabalu.cwellid, coa.cAcctNo ;
		         GROUP BY coabalu.cwellid, coa.cAcctNo
		         
		      IF NOT THISFORM.chklNoAct.VALUE
		         SELECT coa.cAcctNo,            ;
		            coa.cAcctDesc,          ;
		            coa.nAcctType,     ;
		            lcYear AS cFiscalYr,    ;
		            lcPeriod AS cFiscalPrd, ;
		            0 AS nDebits,           ;
		            0 AS nCredits           ;
		            FROM coabalu, coa ;
		            WHERE coa.cAcctNo NOT IN (SELECT cAcctNo FROM coabalu WHERE cFiscalYr=lcYear) ;
		            AND BETWEEN(coa.cAcctNo, lcAcct1, lcAcct2) ;
		            AND NOT DELETED() ;
		            INTO CURSOR tempbal2 ;
		            ORDER BY 1 ;
		            GROUP BY 1
		      ENDIF
		
		   CASE lnOption = 3     && Fiscal Period Range
		      SELECT coa.cAcctNo,       ;
		         coa.cAcctDesc,     ;
		         coa.nAcctType,     ;
		         coabalu.cFiscalYr,  ;
		         coabalu.cFiscalPrd, ;
		         coabalu.cwellid AS cunitno, ;
		         SUM(coabalu.nDebits) AS nDebits,    ;
		         SUM(coabalu.nCredits) AS nCredits    ;
		         FROM coa, coabalu ;
		         WHERE coabalu.cAcctNo = coa.cAcctNo ;
		         AND BETWEEN(coabalu.cwellid,lcUnit1,lcUnit2) ;
		         AND BETWEEN(coabalu.cFiscalYr+coabalu.cFiscalPrd,;
		         lcYear+lcPeriod, ;
		         lcYear2+lcPeriod2) ;
		         AND BETWEEN(coa.cAcctNo, lcAcct1, lcAcct2) ;
		         AND NOT DELETED() ;
		         INTO CURSOR tempbal1 ;
		         ORDER BY coabalu.cwellid, coa.cAcctNo ;
		         GROUP BY coabalu.cwellid, coa.cAcctNo
		         
		      IF NOT THISFORM.chklNoAct.VALUE
		         SELECT coa.cAcctNo,            ;
		            coa.cAcctDesc,          ;
		            coa.nAcctType,     ;
		            lcYear AS cFiscalYr,    ;
		            lcPeriod AS cFiscalPrd, ;
		            000000000.00 AS nDebits,           ;
		            000000000.00 AS nCredits           ;
		            FROM coa, coabalu ;
		            WHERE coa.cAcctNo NOT IN (SELECT cAcctNo FROM coabalu WHERE ;
		            BETWEEN(cFiscalYr+cFiscalPrd, ;
		            lcYear+lcPeriod, ;
		            lcYear2+lcPeriod2)) ;
		            AND BETWEEN(coa.cAcctNo, lcAcct1, lcAcct2) ;
		            AND NOT DELETED() ;
		            INTO CURSOR tempbal2 ;
		            ORDER BY coa.cAcctNo ;
		            GROUP BY coa.cAcctNo
		      ENDIF
		
		   CASE lnOption = 4     && Date Range
		
		      SELECT coa.cAcctNo,       ;
		         coa.cAcctDesc,     ;
		         coa.nAcctType,     ;
		         glmaster.cunitno, ;
		         glmaster.cyear AS cFiscalYr,  ;
		         glmaster.cperiod AS cFiscalPrd, ;
		         SUM(glmaster.nDebits)  AS nDebits,    ;
		         SUM(glmaster.nCredits) AS nCredits    ;
		         FROM coa, glmaster ;
		         WHERE BETWEEN(coa.cAcctNo, lcAcct1, lcAcct2) ;
		         AND BETWEEN(glmaster.cunitno,lcUnit1,lcUnit2) ;
		         AND BETWEEN(glmaster.ddate,ldDate1,ldDate2) ;
		         AND glmaster.cAcctNo = coa.cAcctNo ;
		         AND NOT DELETED() ;
		         INTO CURSOR tempbal1 ;
		         ORDER BY glmaster.cunitno, coa.cAcctNo ;
		         GROUP BY glmaster.cunitno, coa.cAcctNo
		         
		      IF NOT THISFORM.chklNoAct.VALUE
		         SELECT coa.cAcctNo,            ;
		            coa.cAcctDesc,          ;
		            coa.nAcctType,     ;
		            lcYear AS cFiscalYr,    ;
		            lcPeriod AS cFiscalPrd, ;
		            000000000.00 AS nDebits,           ;
		            000000000.00 AS nCredits           ;
		            FROM coa ;
		            WHERE coa.cAcctNo NOT IN (SELECT cAcctNo FROM tempbal1) ;
		            AND BETWEEN(coa.cAcctNo, lcAcct1, lcAcct2) ;
		            AND NOT DELETED() ;
		            INTO CURSOR tempbal2 ;
		            ORDER BY coa.cAcctNo ;
		            GROUP BY coa.cAcctNo
		      ENDIF
		
		ENDCASE
		
		*
		*  Append the records to the balance table
		*
		SELECT balance
		APPEND FROM DBF('tempbal1')
		USE IN tempbal1
		
		IF NOT THISFORM.chklNoAct.VALUE
		   APPEND FROM DBF('tempbal2')
		   USE IN tempbal2
		ENDIF
		
		SET ORDER TO AcctNo
		
		*
		*  Fill in the zero accounts
		*
		IF NOT THISFORM.chklNoAct.VALUE
		   SELECT coa
		   SCAN
		      SCATTER MEMVAR
		      IF NOT BETWEEN(m.cAcctNo, lcAcct1, lcAcct2)
		         LOOP
		      ENDIF
		      SELECT balance
		      SET ORDER TO AcctNo
		      IF NOT SEEK(m.cAcctNo)
		         m.cFiscalYr  = lcYear
		         m.cFiscalPrd = lcPeriod
		         m.nEndBal    = 0
		         m.nDebits    = 0
		         m.nCredits   = 0
		         m.nBegBal    = 0
		         INSERT INTO balance FROM MEMVAR
		      ENDIF
		   ENDSCAN
		ENDIF
		
		CREATE CURSOR tempbeg ;
		   (cAcctNo    C(6), ;
		   cunitno    C(10), ;
		   nAcctType  N(2), ;
		   nDebits    N(12,2), ;
		   nCredits   N(12,2))
		*
		*  Get the beginning balances for each account in the range.
		*
		
		DO CASE
		   CASE lnOption = 1
		      SELECT coabalu.cAcctNo, ;
		         coabalu.cwellid AS cunitno, ;
		         coa.nAcctType, ;
		         SUM(nDebits) AS nDebits, ;
		         SUM(nCredits) AS nCredits ;
		         FROM coabalu, coa ;
		         WHERE coabalu.cFiscalYr+coabalu.cFiscalPrd < lcYear+lcPeriod ;
		         AND BETWEEN(coabalu.cwellid,lcUnit1,lcUnit2) ;
		         AND coabalu.cAcctNo = coa.cAcctNo ;
		         AND BETWEEN(coa.nAcctType,1,7) ;
		         AND BETWEEN(coabalu.cAcctNo, lcAcct1, lcAcct2) ;
		         INTO CURSOR tempbeg1 ;
		         ORDER BY coabalu.cwellid, coabalu.cAcctNo ;
		         GROUP BY coabalu.cwellid, coabalu.cAcctNo
		
		      lnCount = _TALLY
		
		      SELECT coabalu.cAcctNo, ;
		         coabalu.cwellid AS cunitno, ;
		         coa.nAcctType, ;
		         SUM(nDebits) AS nDebits, ;
		         SUM(nCredits) AS nCredits ;
		         FROM coabalu, coa ;
		         WHERE coabalu.cFiscalYr = lcYear ;
		         AND coabalu.cFiscalPrd < lcPeriod ;
		         AND BETWEEN(coabalu.cwellid,lcUnit1,lcUnit2) ;
		         AND coabalu.cAcctNo = coa.cAcctNo ;
		         AND BETWEEN(coa.nAcctType,8,16) ;
		         AND BETWEEN(coabalu.cAcctNo, lcAcct1, lcAcct2) ;
		         INTO CURSOR tempbeg2 ;
		         ORDER BY coabalu.cwellid, coabalu.cAcctNo ;
		         GROUP BY coabalu.cwellid, coabalu.cAcctNo
		
		      lnCount = lnCount + _TALLY
		
		   CASE lnOption = 2
		      SELECT coabalu.cAcctNo, ;
		         coabalu.cwellid AS cunitno, ;
		         coa.nAcctType, ;
		         SUM(nDebits) AS nDebits, ;
		         SUM(nCredits) AS nCredits ;
		         FROM coabalu, coa ;
		         WHERE coabalu.cFiscalYr < lcYear ;
		         AND BETWEEN(coabalu.cwellid,lcUnit1,lcUnit2) ;
		         AND coabalu.cAcctNo = coa.cAcctNo ;
		         AND BETWEEN(coa.nAcctType,1,7) ;
		         AND BETWEEN(coabalu.cAcctNo, lcAcct1, lcAcct2) ;
		         INTO CURSOR tempbeg1 ;
		         ORDER BY coabalu.cwellid, coabalu.cAcctNo ;
		         GROUP BY coabalu.cwellid, coabalu.cAcctNo
		
		      lnCount = _TALLY
		
		      SELECT coabalu.cAcctNo, ;
		         coabalu.cwellid AS cunitno, ;
		         coa.nAcctType, ;
		         0 AS nDebits, ;
		         0 AS nCredits ;
		         FROM coabalu, coa ;
		         WHERE coabalu.cFiscalYr < lcYear ;
		         AND BETWEEN(coabalu.cwellid,lcUnit1,lcUnit2) ;
		         AND coabalu.cAcctNo = coa.cAcctNo ;
		         AND BETWEEN(coa.nAcctType,8,16) ;
		         AND BETWEEN(coabalu.cAcctNo, lcAcct1, lcAcct2) ;
		         INTO CURSOR tempbeg2 ;
		         ORDER BY coabalu.cwellid, coabalu.cAcctNo ;
		         GROUP BY coabalu.cwellid, coabalu.cAcctNo
		      lnCount = lnCount + _TALLY
		
		   CASE lnOption = 3
		      SELECT coabalu.cAcctNo, ;
		         coabalu.cwellid AS cunitno, ;
		         coa.nAcctType, ;
		         SUM(nDebits) AS nDebits, ;
		         SUM(nCredits) AS nCredits ;
		         FROM coabalu, coa ;
		         WHERE coabalu.cFiscalYr+coabalu.cFiscalPrd < lcYear+lcPeriod ;
		         AND coabalu.cAcctNo = coa.cAcctNo ;
		         AND BETWEEN(coabalu.cwellid,lcUnit1,lcUnit2) ;
		         AND BETWEEN(coa.nAcctType,1,7) ;
		         AND BETWEEN(coabalu.cAcctNo, lcAcct1, lcAcct2) ;
		         INTO CURSOR tempbeg1 ;
		         ORDER BY coabalu.cwellid, coabalu.cAcctNo ;
		         GROUP BY coabalu.cwellid, coabalu.cAcctNo
		
		      lnCount = _TALLY
		
		      SELECT coabalu.cAcctNo, ;
		         coabalu.cwellid AS cunitno, ;
		         coa.nAcctType, ;
		         SUM(nDebits) AS nDebits, ;
		         SUM(nCredits) AS nCredits ;
		         FROM coabalu, coa ;
		         WHERE coabalu.cFiscalYr+coabalu.cFiscalPrd < lcYear+lcPeriod ;
		         AND coabalu.cAcctNo = coa.cAcctNo ;
		         AND BETWEEN(coabalu.cwellid,lcUnit1,lcUnit2) ;
		         AND BETWEEN(coa.nAcctType,8,16) ;
		         AND BETWEEN(coabalu.cAcctNo, lcAcct1, lcAcct2) ;
		         INTO CURSOR tempbeg2 ;
		         ORDER BY coabalu.cwellid, coabalu.cAcctNo ;
		         GROUP BY coabalu.cwellid, coabalu.cAcctNo
		
		      lnCount = lnCount + _TALLY
		
		   CASE lnOption = 4
		      SELECT coa.cAcctNo, ;
		         wells.cwellid AS cunitno, ;
		         coa.nAcctType, ;
		         000000000.00 AS nDebits, ;
		         000000000.00 AS nCredits ;
		         FROM coa, wells;
		         WHERE BETWEEN(coa.nAcctType,1,7) ;
		         AND BETWEEN(coa.cAcctNo, lcAcct1, lcAcct2) ;
		         AND BETWEEN(wells.cwellid,lcUnit1,lcUnit2) ;
		         INTO CURSOR tempbeg1 ;
		         ORDER BY wells.cwellid, coa.cAcctNo ;
		         GROUP BY wells.cwellid, coa.cAcctNo
		
		      lnCount = _TALLY
		
		      SELECT coa.cAcctNo, ;
		         wells.cwellid AS cunitno, ;
		         coa.nAcctType, ;
		         000000000.00 AS nDebits, ;
		         000000000.00 AS nCredits ;
		         FROM coa, wells ;
		         WHERE BETWEEN(coa.nAcctType,8,16) ;
		         AND BETWEEN(coa.cAcctNo, lcAcct1, lcAcct2) ;
		         AND BETWEEN(wells.cwellid,lcUnit1,lcUnit2) ;
		         INTO CURSOR tempbeg2 ;
		         ORDER BY wells.cwellid, coa.cAcctNo ;
		         GROUP BY wells.cwellid, coa.cAcctNo
		
		      lnCount = lnCount + _TALLY
		ENDCASE
		
		SELECT tempbeg
		APPEND FROM DBF('tempbeg1')
		
		IF USED('tempbeg2')
		   APPEND FROM DBF('tempbeg2')
		ENDIF
		
		IF lnCount > 0
		   IF lnOption = 4   && Plug in the beginning balance
		      SELECT tempbeg
		      SCAN
		         m.cAcctNo = cAcctNo
		         m.cunitno = cunitno
		         lnBalance = THISFORM.glmaint.getbalance(m.cAcctNo,{12/31/2006},m.cunitno,ldDate1-1)
		         SELECT balance
		         LOCATE FOR cAcctNo = m.cAcctNo AND cunitno == m.cunitno
		         IF FOUND()
		            IF lnBalance <> 0
		               REPLACE nBegBal WITH lnBalance
		            ENDIF
		         ENDIF
		      ENDSCAN
		   ELSE
		      *
		      *  If there are any beginning balances, update the balance table.
		      *  Otherwise, the beginning balances are assumed to be zero.
		      *
		      SELECT tempbeg
		      SCAN
		         SCATTER MEMVAR
		         lnBegBal = ABS(m.nDebits) - ABS(m.nCredits)
		         SELECT balance
		         IF SEEK(m.cAcctNo)
		            REPLACE nBegBal WITH lnBegBal
		         ENDIF
		      ENDSCAN
		   ENDIF
		ENDIF
		
		
		
		*
		*  Plug the ending balances for each account in the range.
		*
		SELECT balance
		SCAN
		   SCATTER MEMVAR
		   SELECT wells
		   LOCATE FOR cwellid = m.cunitno
		   IF FOUND()
		      m.cname = cwellname
		   ELSE
		      m.cname = 'Unknown Unit '
		   ENDIF
		   SELECT balance
		   m.nEndBal = m.nBegBal + m.nDebits - m.nCredits
		   REPLACE nEndBal WITH m.nEndBal, ;
		      cname   WITH m.cname
		ENDSCAN
		
		CREATE CURSOR glmast ;
		   (cidglma    C(10), ;
		   cbatch     C(8),  ;
		   cyear      C(4),  ;
		   cperiod    C(2),  ;
		   csource    C(2),  ;
		   cref       C(20), ;
		   ddate      D,     ;
		   cdesc      C(40), ;
		   cAcctNo    C(6),  ;
		   cunitno    C(10), ;
		   cCatCode   c(4),  ;
		   cdeptno    C(10), ;
		   nDebits    N(12,2), ;
		   nCredits   N(12,2), ;
		   centtime   C(8),  ;
		   dentdate   D, ;
		   cdmbatch   C(8), ;
		   cid        C(10), ;
		   cidchec    C(8), ;
		   ccheckno   C(10), ;
		   cname      C(30))
		
		IF llSummarize
		
		   DO CASE
		      CASE lnOption = 1
		         SELE SPACE(6) AS cbatch, ;
		            ddate, ;
		            cref, ;
		            cdesc, ;
		            cAcctNo, ;
		            cyear, ;
		            cperiod, ;
		            csource, ;
		            cunitno, ;
		            SUM(nDebits)  AS nDebits, ;
		            SUM(nCredits) AS nCredits, ;
		            SPACE(10)     AS cid, ;
		            SPACE(10)     AS cdeptno ;
		            FROM glmaster ;
		            WHERE cyear   = lcYear ;
		            AND cperiod = lcPeriod ;
		            AND BETWEEN(cAcctNo, lcAcct1, lcAcct2) ;
		            AND BETWEEN(cunitno, lcUnit1, lcUnit2) ;
		            AND NOT DELETED() ;
		            INTO CURSOR glmastx ;
		            ORDER BY cunitno, cyear, cperiod, csource, cAcctNo ;
		            GROUP BY cunitno, cyear, cperiod, csource, cAcctNo
		
		         SELECT * FROM glmastx ;
		            WHERE cyear   = lcYear ;
		            AND cperiod = lcPeriod ;
		            AND NOT DELETED() ;
		            INTO CURSOR glmast1 ;
		            ORDER BY cunitno, cAcctNo
		
		      CASE lnOption = 2
		         SELE SPACE(6) AS cbatch, ;
		            ddate, ;
		            cref, ;
		            cdesc, ;
		            cAcctNo, ;
		            cyear, ;
		            cperiod, ;
		            csource, ;
		            cunitno, ;
		            SUM(nDebits)  AS nDebits, ;
		            SUM(nCredits) AS nCredits, ;
		            SPACE(10)     AS cid, ;
		            SPACE(10)     AS cdeptno ;
		            FROM glmaster ;
		            WHERE cyear   = lcYear ;
		            AND BETWEEN(cAcctNo, lcAcct1, lcAcct2) ;
		            AND BETWEEN(cunitno, lcUnit1, lcUnit2) ;
		            AND NOT DELETED() ;
		            INTO CURSOR glmastx ;
		            ORDER BY cunitno, cyear, cperiod, csource, cAcctNo ;
		            GROUP BY cunitno, cyear, cperiod, csource, cAcctNo
		
		         SELECT * FROM glmastx ;
		            WHERE cyear   = lcYear ;
		            AND BETWEEN(cAcctNo, lcAcct1, lcAcct2) ;
		            AND NOT DELETED() ;
		            INTO CURSOR glmast1 ;
		            ORDER BY cunitno, cyear, cperiod, csource, cAcctNo
		
		      CASE lnOption = 3
		         SELE SPACE(6) AS cbatch, ;
		            ddate, ;
		            cref, ;
		            cdesc, ;
		            cAcctNo, ;
		            cyear, ;
		            cperiod, ;
		            csource, ;
		            cunitno, ;
		            SUM(nDebits)  AS nDebits, ;
		            SUM(nCredits) AS nCredits, ;
		            SPACE(10)     AS cid, ;
		            SPACE(10)     AS cdeptno ;
		            FROM glmaster ;
		            WHERE BETWEEN(cyear+cperiod, ;
		            lcYear+lcPeriod, ;
		            lcYear2+lcPeriod2) ;
		            AND BETWEEN(cAcctNo, lcAcct1, lcAcct2) ;
		            AND BETWEEN(cunitno, lcUnit1, lcUnit2) ;
		            AND NOT DELETED() ;
		            INTO CURSOR glmastx ;
		            ORDER BY cunitno, cyear, cperiod, csource, cAcctNo ;
		            GROUP BY cunitno, cyear, cperiod, csource, cAcctNo
		
		         SELECT * FROM glmastx ;
		            WHERE BETWEEN(cyear+cperiod, ;
		            lcYear+lcPeriod, ;
		            lcYear2+lcPeriod2) ;
		            AND BETWEEN(cAcctNo, lcAcct1, lcAcct2) ;
		            AND NOT DELETED() ;
		            INTO CURSOR glmast1 ;
		            ORDER BY cunitno, cyear, cperiod, csource, cAcctNo
		
		      CASE lnOption = 4
		         SELE SPACE(6) AS cbatch, ;
		            ddate, ;
		            cref, ;
		            cdesc, ;
		            cAcctNo, ;
		            cyear, ;
		            cperiod, ;
		            csource, ;
		            cunitno, ;
		            SUM(nDebits)  AS nDebits, ;
		            SUM(nCredits) AS nCredits, ;
		            SPACE(10)     AS cid, ;
		            SPACE(10)     AS cdeptno ;
		            FROM glmaster ;
		            WHERE BETWEEN(glmaster.ddate,ldDate1, ldDate2) ;
		            AND BETWEEN(cAcctNo, lcAcct1, lcAcct2) ;
		            AND BETWEEN(cunitno, lcUnit1, lcUnit2) ;
		            AND NOT DELETED() ;
		            INTO CURSOR glmastx ;
		            ORDER BY cunitno, cyear, cperiod, csource, cAcctNo ;
		            GROUP BY cunitno, cyear, cperiod, csource, cAcctNo
		
		         SELECT * FROM glmastx ;
		            WHERE cyear   = lcYear ;
		            AND cperiod = lcPeriod ;
		            AND BETWEEN(cAcctNo, lcAcct1, lcAcct2) ;
		            AND NOT DELETED() ;
		            INTO CURSOR glmast1 ;
		            ORDER BY cunitno, cAcctNo
		
		   ENDCASE
		ELSE
		   DO CASE
		      CASE lnOption = 1
		         SELECT * FROM glmaster ;
		            WHERE cyear   = lcYear ;
		            AND cperiod = lcPeriod ;
		            AND BETWEEN(cAcctNo, lcAcct1, lcAcct2) ;
		            AND BETWEEN(cunitno, lcUnit1, lcUnit2) ;
		            AND NOT DELETED() ;
		            INTO CURSOR glmast1 ;
		            ORDER BY cunitno, cAcctNo, ddate
		
		      CASE lnOption = 2
		         SELECT * FROM glmaster ;
		            WHERE cyear   = lcYear ;
		            AND BETWEEN(cAcctNo, lcAcct1, lcAcct2) ;
		            AND BETWEEN(cunitno, lcUnit1, lcUnit2) ;
		            AND NOT DELETED() ;
		            INTO CURSOR glmast1 ;
		            ORDER BY cunitno, cAcctNo, ddate
		
		      CASE lnOption = 3
		         SELECT * FROM glmaster ;
		            WHERE BETWEEN(cyear+cperiod, ;
		            lcYear+lcPeriod, ;
		            lcYear2+lcPeriod2) ;
		            AND BETWEEN(cAcctNo, lcAcct1, lcAcct2) ;
		            AND BETWEEN(cunitno, lcUnit1, lcUnit2) ;
		            AND NOT DELETED() ;
		            INTO CURSOR glmast1 ;
		            ORDER BY cunitno, cAcctNo, ddate
		
		      CASE lnOption = 4
		         SELECT * FROM glmaster ;
		            WHERE BETWEEN(glmaster.ddate,ldDate1,ldDate2) ;
		            AND BETWEEN(cAcctNo, lcAcct1, lcAcct2) ;
		            AND BETWEEN(cunitno, lcUnit1, lcUnit2) ;
		            AND NOT DELETED() ;
		            INTO CURSOR glmast1 ;
		            ORDER BY cunitno, cAcctNo, ddate
		   ENDCASE
		
		ENDIF
		SELECT glmast
		APPEND FROM DBF('glmast1')
		USE IN glmast1
		INDEX ON cAcctNo+cunitno TAG AcctNo
		INDEX ON cunitno+cAcctNo TAG cunitno
		
		SELECT glmast
		SCAN
		   IF NOT EMPTY(cid)
		      m.cid = cid
		      SELECT investor
		      LOCATE FOR cownerid = m.cid
		      IF FOUND()
		         SELECT glmast
		         REPL cname WITH investor.csortfield
		      ELSE
		         SELECT vendor
		         LOCATE FOR cvendorid = m.cid
		         IF FOUND()
		            SELECT glmast
		            REPL cname WITH vendor.csortfield
		         ELSE
		            SELECT custs
		            LOCATE FOR ccustid = m.cid
		            IF FOUND()
		               SELECT glmast
		               REPLACE cname WITH custs.ccustname
		            ELSE
		               SELECT emps
		               LOCATE FOR cempid = m.cid
		               IF FOUND()
		                  SELECT glmast
		                  REPLACE cname WITH ALLTRIM(emps.clastname) + ' ' + ALLTRIM(emps.cfirstname)
		               ENDIF
		            ENDIF
		         ENDIF
		      ENDIF
		   ELSE
		      IF glmast.csource = 'CS'  &&  If it's from cash, it may be a cash disb, and if it was done as a manual check, plug in the name from the CSDISHDR, since there's no ID to match up with
		         SELECT csdishdr
		         SET ORDER TO cbatch
		         IF SEEK(glmast.cbatch)
		            SELECT glmast
		            REPLACE cname WITH csdishdr.cname
		         ENDIF
		      ENDIF
		   ENDIF
		   IF llSummarize
		      DO CASE
		         CASE glmast.csource = 'CS'
		            lcDesc = 'Cash Journal'
		         CASE glmast.csource = 'CR'
		            lcDesc = 'Cash Journal'
		         CASE glmast.csource = 'GJ'
		            lcDesc = 'General Journal'
		         CASE glmast.csource = 'DM'
		            lcDesc = 'Rev Dist Journal'
		         CASE glmast.csource = 'AP'
		            lcDesc = 'Accts Payable Journal'
		         CASE glmast.csource = 'AR'
		            lcDesc = 'Accts Recv Journal'
		         CASE glmast.csource = 'PR'
		            lcDesc = 'Payroll Journal'
		         CASE glmast.csource = 'YE'
		            lcDesc = 'General Journal'
		         OTHERWISE
		            lcDesc = 'Unknown Journal'
		      ENDCASE
		
		      SELE glmast
		      REPL cref WITH 'Summary', ;
		         cdesc WITH lcDesc
		   ENDIF
		ENDSCAN
		
		*
		*  Fill in the check number by looking up the check
		*  in the checks table.
		*
		SELECT glmast
		SCAN
		   m.cAcctNo = cAcctNo
		   m.cidchec = cidchec
		   IF NOT EMPTY(ALLT(m.cidchec))
		      SELECT checks
		      SET ORDER TO cidchec
		      IF SEEK(m.cidchec)
		         IF lPrinted
		            m.cref = 'CK: ' + ALLT(ccheckno)
		         ELSE
		            m.cref = 'Not Printed'
		         ENDIF
		         SELECT glmast
		         REPLACE cref WITH m.cref
		      ENDIF
		   ENDIF
		ENDSCAN
		
		WAIT CLEAR
		
		SELECT balance
		COUNT FOR NOT DELETED() TO lnCount
		GO TOP
		SET RELATION TO cunitno+cAcctNo INTO glmast
		SET SKIP TO glmast
		
		IF lnCount > 0
		   RETURN .T.
		ELSE
		   RETURN .F.
		ENDIF
		
		
		
		
		
		
	ENDPROC

	PROCEDURE Init
		DODEFAULT()
		thisform.cReportName = 'source\glact2.frx'
		thisform.txtYear2.visible = .F.
		thisform.txtPeriod2.visible = .F.
		thisform.lblToYear.visible = .F.
		thisform.lblToPeriod.visible = .F.
		
		thisform.chkSummarize.value = .f.
		
		SELECT coa
		SET ORDER TO acctno
		GO TOP
		thisform.swrptlook1.txtBegID.value = cacctno
		thisform.swrptlook1.txtBegName.value = cAcctDesc
		GO BOTT
		thisform.swrptlook1.txtEndID.value = cacctno
		thisform.swrptlook1.txtEndName.value = cAcctDesc
		
		SELECT wells
		SET ORDER to cwellid
		GO TOP
		thisform.swrptlook2.txtBegID.value = cwellid
		thisform.swrptlook2.txtBegName.value = cwellname
		GO BOTT
		thisform.swrptlook2.txtEndID.value = cwellid
		thisform.swrptlook2.txtEndName.value = cwellname
		
		this.optSelect.value = 1
		
		thisform.txtyear.Value = GetFiscalYear(DATE())
		thisform.txtyear2.Value = GetFiscalYear(DATE())
		
		thisform.txtperiod.Value = GetFiscalPeriod(DATE())
		thisform.txtperiod2.Value = GetFiscalPeriod(DATE())
		
		
		
		
	ENDPROC

	PROCEDURE report
		LPARAMETERS cbutton
		
		LOCAL lnResult, lcAlias
		PRIV lcTitle1, lcTitle2, lcSortOrder, lcSelect, glGrpName, m.cGrpName
		
		*
		*  Check to see if the requirements for calling this method are met.
		*
		ASSERT TYPE('this.cReportName') = 'C' MESSAGE 'You must set the cReportName property to use this class'
		ASSERT INLIST(m.cButton,'F','P','S')  MESSAGE 'The parm to the report method must be either "F" or "P"'
		
		IF TYPE('this.ctitle1') <> 'C'
		   THIS.ctitle1 = ''
		ENDIF
		IF TYPE('this.ctitle2') <> 'C'
		   THIS.ctitle2 = ''
		ENDIF
		
		lcAlias = ALIAS()
		
		*
		*  Check on using group name in place of company name
		*
		IF NOT USED('options')
		   IF TYPE('m.goApp') = 'O'
		      USE (ALLTRIM(m.goapp.cdatafilepath)+'options') IN 0
		   ENDIF
		ENDIF
		IF NOT USED('groups')
		   IF TYPE('m.goApp') = 'O'
		      USE (ALLTRIM(m.goapp.cdatafilepath)+'groups') IN 0
		   ENDIF
		ENDIF
		
		* If the form doesn't have a swgroup control
		* don't try to get the company name from the group
		IF TYPE('thisform.swgroup1') <> 'O'
		   glGrpName = .F.
		ELSE
		
		   SELECT options
		   GO TOP
		   glGrpName = lGrpName
		   IF glGrpName
		      SELECT groups
		      SET ORDER TO cgroup
		      IF SEEK(LEFT(THISFORM.swgroup1.VALUE,2))
		         m.cGrpName = cDesc
		      ELSE
		         IF LEFT(THISFORM.swgroup1.VALUE,2) = '**'
		            m.cGrpName = 'All Companies'
		         ELSE
		            m.cGrpName = ''
		         ENDIF
		      ENDIF
		   ELSE
		      m.cGrpName = ''
		   ENDIF
		ENDIF
		
		*
		*  Make the cProducer variable a default value for development purposes
		*
		IF TYPE('m.goApp') = 'O'
		   m.cProducer = m.goapp.cCompanyName
		   IF m.goApp.lDemo
		      m.cProducer = 'Demo Version of Software'
		      m.cGrpName  = m.cProducer
		   ENDIF
		ELSE
		   m.cProducer = 'Development Company, Inc.'
		ENDIF
		
		IF TYPE('m.cProcessor') <> 'C'
		   m.cProcessor = ''
		ENDIF
		
		
		lcTitle1    = THISFORM.ctitle1
		lcTitle2    = THISFORM.ctitle2
		lcSortOrder = THISFORM.cSortOrder
		lcSelect    = THISFORM.cSelectCriteria
		
		*
		*  Set defaults for titles and criteria if not in correct format
		*
		IF TYPE('lcTitle1') <> 'C'
		   lcTitle1 = ''
		ENDIF
		IF TYPE('lcTitle2') <> 'C'
		   lcTitle2 = ''
		ENDIF
		IF TYPE('lcSortOrder') <> 'C'
		   lcSortOrder = ''
		ENDIF
		IF TYPE('lcSelect') <> 'C'
		   lcSelect = ''
		ENDIF
		
		SELECT (lcAlias)
		
		
		*
		*  Send the report to the proper location based upon the button pressed.
		*
		DO CASE
		   CASE m.cButton = 'P'
		      REPORT FORM (THIS.cReportName) TO PRINTER PROMPT NOCONSOLE NOEJECT
		
		   CASE m.cButton = 'S'
		      IF THISFORM.swrptcriteriabuttons1.cmdPreview.CAPTION = 'File'
		         DO FORM utfileout WITH thisform.cReportName, thisform.caption, lcTitle2, lcSortOrder, lcSelect, 'GLMAST'
		      ELSE
		         LOCAL lcPreviewWindowName
		         lcPreviewWindowName=SYS(2015)
		         DEFINE WINDOW (lcPreviewWindowName) ;
		             FROM 0,0 TO SROWS(),SCOLS() ;
		             TITLE "Report Preview" ;
		             SYSTEM CLOSE FLOAT GROW MINIMIZE ZOOM
		         ZOOM WINDOW (lcPreviewWindowName) MAX
		
		         REPORT FORM (THIS.cReportName) PREVIEW WINDOW (lcPreviewWindowName)
		         RELEASE WINDOW (lcPreviewWindowName)
		         IF THISFORM.oMessage.Confirm('Should the report be sent to the printer now?')
		            REPORT FORM (THIS.cReportName) TO PRINTER PROMPT NOCONSOLE NOEJECT
		         ENDIF
		      ENDIF
		ENDCASE
		
		
	ENDPROC

	PROCEDURE optSelect.Option1.Click
		
		
	ENDPROC

	PROCEDURE optSelect.Valid
		DO CASE
		   CASE THIS.VALUE = 1
		      THISFORM.lblFromYear.CAPTION = 'Fiscal Year:'
		      THISFORM.lblFromPeriod.CAPTION = 'Fiscal Period:'
		      THISFORM.txtYear.VISIBLE       = .t.
		      THISFORM.txtYear2.VISIBLE = .F.
		      THISFORM.txtPeriod2.VISIBLE = .F.
		      THISFORM.lblToYear.VISIBLE = .F.
		      THISFORM.lblToPeriod.VISIBLE = .F.
		      THISFORM.lblFromYear.VISIBLE = .T.
		      THISFORM.lblFromPeriod.VISIBLE = .T.
		      THISFORM.txtPeriod.VISIBLE = .T.
		      THISFORM.lblBegDate.VISIBLE    = .f.
		      THISFORM.date1.VISIBLE         = .f.
		      THISFORM.lblEndDate.VISIBLE    = .f.
		      THISFORM.date2.VISIBLE         = .f.
		   CASE THIS.VALUE = 2
		      THISFORM.lblFromYear.CAPTION = 'Fiscal Year:'
		      THISFORM.txtYear.VISIBLE       = .t.
		      THISFORM.lblFromYear.VISIBLE = .T.
		      THISFORM.lblFromPeriod.VISIBLE = .F.
		      THISFORM.txtPeriod.VISIBLE = .F.
		      THISFORM.txtYear2.VISIBLE = .F.
		      THISFORM.txtPeriod2.VISIBLE = .F.
		      THISFORM.lblToYear.VISIBLE = .F.
		      THISFORM.lblToPeriod.VISIBLE = .F.
		      THISFORM.lblFromPeriod.VISIBLE = .F.
		      THISFORM.txtPeriod.VISIBLE = .F.
		      THISFORM.lblBegDate.VISIBLE    = .f.
		      THISFORM.date1.VISIBLE         = .f.
		      THISFORM.lblEndDate.VISIBLE    = .f.
		      THISFORM.date2.VISIBLE         = .f.
		   CASE THIS.VALUE = 3
		      THISFORM.lblFromYear.CAPTION = 'From Fiscal Year:'
		      THISFORM.lblFromPeriod.CAPTION = 'From Fiscal Period:'
		      THISFORM.lblToYear.CAPTION = 'To Fiscal Year:'
		      THISFORM.lblToPeriod.CAPTION = 'To Fiscal Period:'
		      THISFORM.lblFromYear.visible = .t.
		      THISFORM.txtYear.VISIBLE       = .t.
		      THISFORM.txtPeriod.VISIBLE = .T.
		      THISFORM.lblFromPeriod.VISIBLE = .T.
		      THISFORM.txtYear2.VISIBLE = .T.
		      THISFORM.txtPeriod2.VISIBLE = .T.
		      THISFORM.lblToYear.VISIBLE = .T.
		      THISFORM.lblToPeriod.VISIBLE = .T.
		      THISFORM.lblBegDate.VISIBLE    = .f.
		      THISFORM.date1.VISIBLE         = .f.
		      THISFORM.lblEndDate.VISIBLE    = .f.
		      THISFORM.date2.VISIBLE         = .f.
		   CASE THIS.VALUE = 4
		      THISFORM.lblFromYear.VISIBLE   = .F.
		      THISFORM.lblToYear.VISIBLE     = .F.
		      THISFORM.lblFromPeriod.VISIBLE = .F.
		      THISFORM.lblToPeriod.VISIBLE   = .F.
		      THISFORM.txtYear.VISIBLE       = .F.
		      THISFORM.txtYear2.VISIBLE      = .F.
		      THISFORM.txtPeriod.VISIBLE     = .F.
		      THISFORM.txtPeriod2.VISIBLE    = .F.
		      THISFORM.lblBegDate.VISIBLE    = .T.
		      THISFORM.date1.VISIBLE         = .T.
		      THISFORM.lblEndDate.VISIBLE    = .t.
		      THISFORM.date2.VISIBLE         = .t.
		   OTHERWISE
		      THISFORM.lblFromYear.VISIBLE   = .T.
		      THISFORM.lblToYear.VISIBLE     = .T.
		      THISFORM.lblFromPeriod.VISIBLE = .T.
		      THISFORM.lblToPeriod.VISIBLE   = .T.
		      THISFORM.txtYear.VISIBLE       = .T.
		      THISFORM.txtYear2.VISIBLE      = .T.
		      THISFORM.txtPeriod.VISIBLE     = .T.
		      THISFORM.txtPeriod2.VISIBLE    = .T.
		      THISFORM.lblBegDate.VISIBLE    = .F.
		      THISFORM.date1.VISIBLE         = .F.
		      THISFORM.lblEndDate.VISIBLE    = .f.
		      THISFORM.date2.VISIBLE         = .f.
		ENDCASE
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\CUSTOM\picklist WITH 'coa', lcList, THISFORM.swrptlook1.txtBegID.VALUE, 2
		
		IF llOK
		   THISFORM.swrptlook1.txtBegName.VALUE = coa.cacctdesc
		   THISFORM.swrptlook1.txtBegID.VALUE = coa.cacctno
		   THISFORM.REFRESH()
		ENDIF
		
		
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\CUSTOM\picklist WITH 'coa', lcList, THISFORM.swrptlook1.txtEndID.VALUE, 2
		
		IF llOK
		   THISFORM.swrptlook1.txtEndName.VALUE = coa.cacctdesc
		   THISFORM.swrptlook1.txtEndID.VALUE = coa.cacctno
		   THISFORM.REFRESH()
		ENDIF
		
		
		
	ENDPROC

	PROCEDURE Swrptlook2.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cwellid,cwellname,cgroup,cwellstat'
		DO FORM ..\custom\picklist WITH 'Wells', lcList, thisform.swrptlook2.txtBegId.value, 4
		
		IF llOK
		   thisform.swrptlook2.txtBegId.value = cwellid
		   thisform.swrptlook2.txtBegName.value = cwellname
		   thisform.swrptlook2.txtBegId.SetFocus()
		   thisform.swrptlook2.txtBegId.refresh()
		   thisform.swrptlook2.txtBegName.refresh()
		ENDIF   
	ENDPROC

	PROCEDURE Swrptlook2.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cwellid,cwellname,cgroup,cwellstat'
		DO FORM ..\custom\picklist WITH 'Wells', lcList, thisform.swrptlook2.txtEndId.value, 4
		
		IF llOK
		   thisform.swrptlook2.txtEndId.value = cwellid
		   thisform.swrptlook2.txtEndName.value = cwellname
		   thisform.swrptlook2.txtEndId.SetFocus()
		   thisform.swrptlook2.txtEndId.refresh()
		   thisform.swrptlook2.txtEndName.refresh()
		ENDIF   
	ENDPROC

	PROCEDURE Swrptlook2.txtBegID.GotFocus
		ON KEY LABEL F2 _screen.activeform.swrptlook2.swlookupbutton1.Click()
		DODEFAULT()
	ENDPROC

	PROCEDURE Swrptlook2.txtEndID.GotFocus
		ON KEY LABEL F2 _screen.activeform.swrptlook2.swlookupbutton2.Click()
		DODEFAULT()
	ENDPROC

ENDDEFINE
