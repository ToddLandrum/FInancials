*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="glacctactw.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 558
	Left = 40
	Name = "Dataenvironment"
	Top = 235
	Width = 761

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "coa", ;
		BufferModeOverride = 5, ;
		CursorSource = "coa", ;
		Database = ..\datafiles\brinetestingdata\appdata.dbc, ;
		Height = 90, ;
		Left = 9, ;
		Name = "Cursor1", ;
		Top = 16, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "coabalu", ;
		CursorSource = "coabalu", ;
		Database = ..\datafiles\brinetestingdata\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor2", ;
		Top = 169, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "glmaster", ;
		CursorSource = "glmaster", ;
		Database = ..\datafiles\brinetestingdata\appdata.dbc, ;
		Filter = "", ;
		Height = 90, ;
		Left = 178, ;
		Name = "Cursor3", ;
		Top = 0, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "checks", ;
		CursorSource = "checks", ;
		Database = ..\datafiles\brinetestingdata\appdata.dbc, ;
		Filter = "", ;
		Height = 90, ;
		Left = 329, ;
		Name = "Cursor4", ;
		Top = 7, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "custownvend", ;
		CursorSource = "custownvend", ;
		Database = ..\datafiles\brinetestingdata\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor5", ;
		Top = 140, ;
		Width = 107
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "csdishdr", ;
		CursorSource = "csdishdr", ;
		Database = ..\datafiles\brinetestingdata\appdata.dbc, ;
		Height = 90, ;
		Left = 31, ;
		Name = "Cursor6", ;
		Top = 167, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor7' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\datafiles\brinetestingdata\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor7", ;
		Top = 260, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formglacctwell AS frmrptcriteria OF "appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Shpshapecustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblToYear" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEndID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBegID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblToPeriod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblFromYear" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblFromPeriod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtYear" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtYear2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtPeriod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtPeriod2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="optSelect" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSummarize" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklNoAct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEndWell" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBegWell" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkWellPage" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Glmaint" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSelected" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSelected" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSelectedWells" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSelectedWell" UniqueID="" Timestamp="" />

	Caption = "G/L Account Activity by Well"
	DataSession = 2
	DoCreate = .T.
	Height = 473
	HelpContextID = 412
	Name = "FormGLAcctWell"
	Visible = .T.
	Width = 722
	Swrptcriteriabuttons1.chkExport.Alignment = 0
	Swrptcriteriabuttons1.chkExport.Name = "chkExport"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.cmdPreview.Name = "cmdPreview"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 244
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 26
	Swrptcriteriabuttons1.Top = 393
	Swrptcriteriabuttons1.ZOrderSet = 3

	ADD OBJECT 'chklNoAct' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Exclude Accounts With No Activity", ;
		Left = 256, ;
		Name = "chklNoAct", ;
		TabIndex = 22, ;
		Top = 316, ;
		Value = .T., ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSelected' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Choose Selected Accounts", ;
		Left = 142, ;
		Name = "chkSelected", ;
		TabIndex = 5, ;
		Top = 159, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSelectedWells' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Choose Selected Wells", ;
		Left = 487, ;
		Name = "chkSelectedWells", ;
		TabIndex = 18, ;
		Top = 159, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSummarize' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Summarize Activity by Journal", ;
		Left = 256, ;
		Name = "chkSummarize", ;
		TabIndex = 24, ;
		Top = 337, ;
		Value = .F., ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkWellPage' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Report each well to a page", ;
		Left = 256, ;
		Name = "chkWellPage", ;
		TabIndex = 25, ;
		Top = 357, ;
		Value = .F., ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Glmaint' AS glmaint WITH ;
		Left = 24, ;
		Name = "Glmaint", ;
		Top = 360
		*< END OBJECT: ClassLib="..\custom\swgl.vcx" BaseClass="custom" />

	ADD OBJECT 'lblBegID' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "From Account Number:", ;
		Height = 16, ;
		Left = 17, ;
		Name = "lblBegID", ;
		TabIndex = 6, ;
		Top = 197, ;
		Width = 113, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblBegWell' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "From Well ID", ;
		Height = 16, ;
		Left = 370, ;
		Name = "lblBegWell", ;
		TabIndex = 20, ;
		Top = 196, ;
		Width = 61, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblEndID' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "To Account Number:", ;
		Height = 16, ;
		Left = 29, ;
		Name = "lblEndID", ;
		TabIndex = 8, ;
		Top = 248, ;
		Width = 101, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblEndWell' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "To Well ID", ;
		Height = 16, ;
		Left = 382, ;
		Name = "lblEndWell", ;
		TabIndex = 23, ;
		Top = 247, ;
		Width = 49, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblFromPeriod' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "Fiscal Period:", ;
		Height = 16, ;
		Left = 374, ;
		Name = "lblFromPeriod", ;
		TabIndex = 14, ;
		Top = 80, ;
		Width = 66, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblFromYear' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "Fiscal Year:", ;
		Height = 16, ;
		Left = 199, ;
		Name = "lblFromYear", ;
		TabIndex = 12, ;
		Top = 80, ;
		Width = 60, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		BackStyle = 1, ;
		Caption = "Print By", ;
		FontBold = .T., ;
		Left = 192, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 7, ;
		Top = 17, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		BackStyle = 1, ;
		Caption = "Selection Criteria", ;
		FontBold = .T., ;
		Left = 193, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 11, ;
		Top = 58, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom3' AS lbllabelcustom WITH ;
		BackStyle = 1, ;
		Caption = "Account Range", ;
		FontBold = .T., ;
		Left = 18, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 21, ;
		Top = 173, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom4' AS lbllabelcustom WITH ;
		BackStyle = 1, ;
		Caption = "Well Range", ;
		FontBold = .T., ;
		Left = 371, ;
		Name = "Lbllabelcustom4", ;
		TabIndex = 15, ;
		Top = 172, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSelected' AS lbllabelcustom WITH ;
		Caption = "All IDs Selected", ;
		ForeColor = 0,0,255, ;
		Left = 141, ;
		Name = "lblSelected", ;
		TabIndex = 13, ;
		Top = 221, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSelectedWell' AS lbllabelcustom WITH ;
		Caption = "All Owners Selected", ;
		ForeColor = 0,0,255, ;
		Left = 505, ;
		Name = "lblSelectedWell", ;
		TabIndex = 27, ;
		Top = 221, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblToPeriod' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "To Fiscal Period:", ;
		Height = 16, ;
		Left = 374, ;
		Name = "lblToPeriod", ;
		TabIndex = 17, ;
		Top = 114, ;
		Visible = .F., ;
		Width = 81, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblToYear' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "To Fiscal Year:", ;
		Height = 16, ;
		Left = 199, ;
		Name = "lblToYear", ;
		TabIndex = 16, ;
		Top = 114, ;
		Visible = .F., ;
		Width = 75, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'optSelect' AS opgoptiongroupcustom WITH ;
		AutoSize = .F., ;
		ButtonCount = 3, ;
		Height = 36, ;
		Left = 186, ;
		Name = "optSelect", ;
		TabIndex = 1, ;
		Top = 24, ;
		Width = 348, ;
		ZOrderSet = 18, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "Fiscal Period", ;
		Option1.FontSize = 8, ;
		Option1.Height = 16, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Top = 13, ;
		Option1.Width = 79, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "Fiscal Year", ;
		Option2.FontSize = 8, ;
		Option2.Height = 16, ;
		Option2.Left = 116, ;
		Option2.Name = "Option2", ;
		Option2.Top = 13, ;
		Option2.Width = 73, ;
		Option3.AutoSize = .T., ;
		Option3.Caption = "Fiscal Period Range", ;
		Option3.FontSize = 8, ;
		Option3.Height = 16, ;
		Option3.Left = 226, ;
		Option3.Name = "Option3", ;
		Option3.Top = 13, ;
		Option3.Width = 113
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'Shpshapecustom1' AS shpshapecustom WITH ;
		Height = 120, ;
		Left = 12, ;
		Name = "Shpshapecustom1", ;
		Top = 180, ;
		Width = 348, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Shpshapecustom2' AS shpshapecustom WITH ;
		Height = 80, ;
		Left = 187, ;
		Name = "Shpshapecustom2", ;
		Top = 304, ;
		Width = 348, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Shpshapecustom3' AS shpshapecustom WITH ;
		Height = 84, ;
		Left = 187, ;
		Name = "Shpshapecustom3", ;
		Top = 64, ;
		Width = 348, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Shpshapecustom4' AS shpshapecustom WITH ;
		Height = 120, ;
		Left = 365, ;
		Name = "Shpshapecustom4", ;
		Top = 179, ;
		Width = 348, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		Left = 138, ;
		Name = "Swrptlook1", ;
		TabIndex = 10, ;
		Top = 194, ;
		ZOrderSet = 6, ;
		Swlookupbutton1.Left = 60, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton1.Top = 0, ;
		Swlookupbutton2.Left = 60, ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		Swlookupbutton2.Top = 52, ;
		TxtBegID.clistexpression = coa.cacctno, ;
		TxtBegID.clistworkarea = coa, ;
		TxtBegID.Height = 20, ;
		TxtBegID.InputMask = "XXXXXX", ;
		TxtBegID.Left = 0, ;
		TxtBegID.MaxLength = 6, ;
		TxtBegID.Name = "TxtBegID", ;
		TxtBegID.Top = 0, ;
		TxtBegID.Width = 53, ;
		TxtBegName.Name = "TxtBegName", ;
		TxtEndID.clistexpression = coa.cacctno, ;
		TxtEndID.clistworkarea = coa, ;
		TxtEndID.Height = 20, ;
		TxtEndID.InputMask = "XXXXXX", ;
		TxtEndID.Left = 0, ;
		TxtEndID.MaxLength = 6, ;
		TxtEndID.Name = "TxtEndID", ;
		TxtEndID.Top = 51, ;
		TxtEndID.Width = 53, ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />

	ADD OBJECT 'Swrptlook2' AS swrptlook WITH ;
		Left = 485, ;
		Name = "Swrptlook2", ;
		TabIndex = 19, ;
		Top = 191, ;
		ZOrderSet = 5, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		txtBegID.clistexpression = wells.cwellid, ;
		txtBegID.clistworkarea = wells, ;
		txtBegID.Name = "txtBegID", ;
		TxtBegName.Name = "TxtBegName", ;
		txtEndID.clistexpression = wells.cwellid, ;
		txtEndID.clistworkarea = wells, ;
		txtEndID.Name = "txtEndID", ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />

	ADD OBJECT 'txtPeriod' AS swperiod WITH ;
		Left = 486, ;
		Name = "txtPeriod", ;
		TabIndex = 3, ;
		Top = 78, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtPeriod2' AS swperiod WITH ;
		Left = 486, ;
		Name = "txtPeriod2", ;
		TabIndex = 9, ;
		Top = 112, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtYear' AS swyear WITH ;
		Left = 307, ;
		Name = "txtYear", ;
		TabIndex = 2, ;
		Top = 78, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtYear2' AS swyear WITH ;
		Left = 307, ;
		Name = "txtYear2", ;
		TabIndex = 4, ;
		Top = 112, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE builddata
		LOCAL lcYear, lcPeriod, lcAcct1, lcAcct2, lnSort, lcYear2, lcPeriod2, lcCurFY
		LOCAL lnCount
		
		lcYear      = THISFORM.txtYear.VALUE
		lcPeriod    = THISFORM.txtPeriod.VALUE
		lcAcct1     = THISFORM.swrptlook1.txtBegID.VALUE
		lcAcct2     = THISFORM.swrptlook1.txtEndID.VALUE
		lnSort      = THISFORM.optSelect.VALUE
		lcYear2     = THISFORM.txtYear2.VALUE
		lcPeriod2   = THISFORM.txtPeriod2.VALUE
		llSummarize = THISFORM.chkSummarize.VALUE
		lcWell1     = THISFORM.swrptlook2.txtBegID.VALUE
		lcWell2     = THISFORM.swrptlook2.txtEndID.VALUE
		lnCount     = 0
		llSelect    = thisform.chkselected.Value 
		llSelectWell = thisform.chkselectedWells.Value 
		
		IF NOT llSelect
		   SELECT cacctno as cid FROM coa ;
		      INTO CURSOR selected ;
		      WHERE BETWEEN(cacctno,lcAcct1,lcAcct2) ;
		      ORDER BY cid
		ENDIF
		
		IF NOT llSelectWell
		   SELECT cwellid as cid FROM wells ;
		      INTO CURSOR selectedwells ;
		      WHERE BETWEEN(cwellid,lcWell1,lcWell2) ;
		      ORDER BY cid
		ENDIF 
		
		*
		*  Set the report title
		*
		DO CASE
		   CASE THISFORM.optSelect.VALUE = 1
		      THISFORM.cTitle1 = 'For Fiscal Period: ' + THISFORM.txtPeriod.VALUE +'/'+ THISFORM.txtYear.VALUE
		   CASE THISFORM.optSelect.VALUE = 2
		      THISFORM.cTitle1 = 'For Fiscal Year: ' + THISFORM.txtYear.VALUE
		   CASE THISFORM.optSelect.VALUE = 3
		      THISFORM.cTitle1 = 'For Period Range: ' + THISFORM.txtPeriod.VALUE +'/'+ THISFORM.txtYear.VALUE + ' - ' + ;
		         THISFORM.txtPeriod2.VALUE +'/'+ THISFORM.txtYear2.VALUE
		ENDCASE
		
		IF NOT thisform.chkwellPage.Value
		   thisform.cReportName = 'source\glactwell'
		ELSE
		   thisform.cReportName = 'source\glactwellp'
		ENDIF    
		
		*
		*  Set Selection and Sort Criteria
		*
		THISFORM.cSelectCriteria = 'Acct: ' + THISFORM.swrptlook1.txtBegID.VALUE + ' - ' + THISFORM.swrptlook1.txtEndID.VALUE
		THISFORM.cSortOrder      = 'Account Number'
		IF llSummarize
		   THISFORM.cTitle2         = 'Summary'
		ELSE
		   THISFORM.cTitle2         = ''
		ENDIF
		
		IF USED('coabalnew')
		   USE IN coabalnew
		ENDIF
		IF USED('coabalwell')
		   USE IN coabalwell
		ENDIF 
		
		*
		*  Recalculate account balances
		*
		*IF THISFORM.chkRecalculate.VALUE = .T.
		   WAIT WIND NOWAIT 'Calculating Account Balances...'
		   THISFORM.glmaint.calcbalancew()
		*ENDIF
		
		
		*  GLMAINT was changed so the work cursor is coabalnew, and not coabalwell, which breaks everything below.
		*  Create a coaballwell and keep going.
		IF USED('coabalnew') AND NOT USED('coabalwell')
		   SELECT * FROM coabalnew INTO cursor coabalwell
		ENDIF 
		
		WAIT WIND NOWAIT 'Building the report...Please wait.'
		
		CREATE CURSOR balance   ;
		   (cAcctNo    C(6),    ;
		   cunitno     C(10), ;
		   cwellname   c(40), ;
		   cBalGroup   C(1),    ;
		   nAcctType   N(2),    ;
		   cAcctType   C(25),   ;
		   cAcctDesc   C(30),   ;
		   cYear       C(4),    ;
		   cPeriod     C(2),    ;
		   nBegBal     N(12,2), ;
		   nDebits     N(12,2), ;
		   nCredits    N(12,2), ;
		   nEndBal     N(12,2))
		INDEX on cunitno+cAcctNo TAG cunitacct
		INDEX ON cunitno TAG cunitno
		
		*
		*  Get the periods activity for each account in the range.
		*
		DO CASE
		   CASE lnSort = 1     && Fiscal Period
		      SELECT coa.cAcctNo,       ;
		         coa.cAcctDesc,     ;
		         coa.nAcctType,     ;
		         coabalwell.cunitno, ;
		         coabalwell.cYear,  ;
		         coabalwell.cPeriod, ;
		         coabalwell.nDebits,    ;
		         coabalwell.nCredits    ;
		         FROM coabalwell, coa ;
		         WHERE coabalwell.cunitno in (select cid from selectedwells) ;
		         AND coabalwell.cAcctNo = coa.cAcctNo ;
		         AND coabalwell.cYear + coabalwell.cPeriod = lcYear+lcPeriod ;
		         AND coa.cacctno in (select cid from selected) ;
		         AND NOT DELETED() ;
		         INTO CURSOR tempbal1 ;
		         ORDER BY coabalwell.cunitno, coa.cAcctNo  ;
		         GROUP BY coabalwell.cunitno, coa.cAcctNo
		
		      IF NOT THISFORM.chklNoAct.VALUE
		         SELECT coa.cAcctNo,            ;
		            coa.cAcctDesc,          ;
		            coa.nAcctType,     ;
		            SPACE(10) AS cunitno, ;
		            lcYear AS cYear,    ;
		            lcPeriod AS cPeriod, ;
		            0 AS nDebits,           ;
		            0 AS nCredits           ;
		            FROM coa, wells ;
		            WHERE coa.cAcctNo NOT IN (SELECT cAcctNo FROM coabalwell WHERE cYear+cPeriod=lcYear+lcPeriod) ;
		            AND coa.cacctno in (select cid from selected) ;
		            AND NOT DELETED() ;
		            INTO CURSOR tempbal2 ;
		            ORDER BY 1 ;
		            GROUP BY 1
		      ENDIF
		
		   CASE lnSort = 2     && Fiscal Year
		      SELECT coa.cAcctNo,       ;
		         coa.cAcctDesc,     ;
		         coa.nAcctType,     ;
		         coabalwell.cunitno, ;
		         coabalwell.cYear,  ;
		         coabalwell.cPeriod, ;
		         SUM(coabalwell.nDebits) AS nDebits,    ;
		         SUM(coabalwell.nCredits) AS nCredits    ;
		         FROM coabalwell, coa ;
		         WHERE coabalwell.cunitno in (select cid from selectedwells) ;
		         AND coabalwell.cAcctNo = coa.cAcctNo ;
		         AND coabalwell.cYear = lcYear ;
		         AND coa.cacctno in (select cid from selected) ;
		         AND NOT DELETED() ;
		         INTO CURSOR tempbal1 ;
		         ORDER BY coabalwell.cunitno, coa.cAcctNo ;
		         GROUP BY coabalwell.cunitno, coa.cAcctNo
		
		      IF NOT THISFORM.chklNoAct.VALUE
		         SELECT coa.cAcctNo,            ;
		            coa.cAcctDesc,          ;
		            coa.nAcctType,     ;
		            SPACE(10) AS cunitno, ;
		            lcYear AS cYear,    ;
		            lcPeriod AS cPeriod, ;
		            0 AS nDebits,           ;
		            0 AS nCredits           ;
		            FROM coa ;
		            WHERE coa.cAcctNo NOT IN (SELECT cAcctNo FROM coabalwell WHERE cYear=lcYear) ;
		            AND coa.cacctno in (select cid from selected) ;
		            AND NOT DELETED() ;
		            INTO CURSOR tempbal2 ;
		            ORDER BY 1 ;
		            GROUP BY 1
		      ENDIF
		
		   CASE lnSort = 3     && Fiscal Period Range
		      IF NOT THISFORM.chklNoAct.VALUE
		         SELECT coa.cAcctNo,            ;
		            coa.cAcctDesc,          ;
		            coa.nAcctType,     ;
		            lcYear AS cYear,    ;
		            SPACE(10) AS cunitno, ;
		            lcPeriod AS cPeriod, ;
		            000000000.00 AS nDebits,           ;
		            000000000.00 AS nCredits           ;
		            FROM coa ;
		            WHERE coa.cAcctNo NOT IN (SELECT cAcctNo FROM coabalwell WHERE ;
		            BETWEEN(cYear+cPeriod, ;
		            lcYear+lcPeriod, ;
		            lcYear2+lcPeriod2)) ;
		            AND coa.cacctno in (select cid from selected) ;
		            AND NOT DELETED() ;
		            INTO CURSOR tempbal2 ;
		            ORDER BY 1 ;
		            GROUP BY 1
		      ENDIF
		
		      SELECT coa.cAcctNo,       ;
		         coa.cAcctDesc,     ;
		         coa.nAcctType,     ;
		         coabalwell.cYear,  ;
		         coabalwell.cPeriod, ;
		         coabalwell.cunitno, ;
		         SUM(coabalwell.nDebits) AS nDebits,    ;
		         SUM(coabalwell.nCredits) AS nCredits    ;
		         FROM coa, coabalwell ;
		         WHERE coabalwell.cunitno in (select cid from selectedwells) ;
		         AND coabalwell.cAcctNo = coa.cAcctNo ;
		         AND BETWEEN(coabalwell.cYear+coabalwell.cPeriod,;
		         lcYear+lcPeriod, ;
		         lcYear2+lcPeriod2) ;
		         AND coa.cacctno in (select cid from selected) ;
		         AND NOT DELETED() ;
		         INTO CURSOR tempbal1 ;
		         ORDER BY coabalwell.cunitno, coa.cAcctNo ;
		         GROUP BY coabalwell.cunitno, coa.cAcctNo
		
		ENDCASE
		
		*
		*  Append the records to the balance table
		*
		SELECT balance
		APPEND FROM DBF('tempbal1')
		USE IN tempbal1
		
		IF NOT THISFORM.chklNoAct.VALUE
		   SWSELECT('wells')
		   SCAN 
		      m.cunitno = cwellid
		      SELECT selectedwells
		      LOCATE FOR cid = m.cunitno
		      IF NOT FOUND()
		         LOOP
		      ENDIF 
		      SELECT tempbal2
		      SCAN
		         SCATTER memvar
		         m.cunitno = wells.cwellid
		         INSERT INTO balance FROM memvar
		      ENDSCAN
		   ENDSCAN 
		ENDIF
		
		SELECT balance
		SET ORDER TO cunitno
		
		*
		*  Fill in the zero accounts
		*
		IF NOT THISFORM.chklNoAct.VALUE
		   SWSELECT('coa')
		   SCAN 
		      SCATTER MEMVAR
		      SELECT selected
		      LOCATE FOR cid = m.cacctno
		      IF NOT FOUND()
		         LOOP
		      ENDIF 
		      SWSELECT('wells')
		      SCAN 
		         m.cunitno = cwellid
		         SELECT selectedwells
		         LOCATE FOR cid = m.cunitno
		         IF NOT FOUND()
		            LOOP
		         ENDIF 
		         SELECT balance
		         SET ORDER TO cunitacct
		         IF NOT SEEK(m.cunitno+m.cAcctNo)
		            m.cYear  = lcYear
		            m.cPeriod = lcPeriod
		            m.nEndBal    = 0
		            m.nDebits    = 0
		            m.nCredits   = 0
		            m.nBegBal    = 0
		            INSERT INTO balance FROM MEMVAR
		         ENDIF
		      ENDSCAN
		   ENDSCAN
		ENDIF
		
		CREATE CURSOR tempbeg ;
		   (cAcctNo    C(6), ;
		   cunitno    c(10), ;
		   nAcctType  N(2), ;
		   nDebits    N(12,2), ;
		   nCredits   N(12,2))
		*
		*  Get the beginning balances for each account in the range.
		*
		
		DO CASE
		   CASE lnSort = 1
		      SELECT coabalwell.cAcctNo, ;
		         coa.nAcctType, ;
		         coabalwell.cunitno AS cunitno, ;
		         SUM(nDebits) AS nDebits, ;
		         SUM(nCredits) AS nCredits ;
		         FROM coabalwell, coa ;
		         WHERE coabalwell.cunitno in (select cid from selectedwells) ;
		         AND coabalwell.cYear+coabalwell.cPeriod < lcYear+lcPeriod ;
		         AND coabalwell.cAcctNo = coa.cAcctNo ;
		         AND coabalwell.cacctno in (select cid from selectedwells) ;
		         INTO CURSOR tempbeg1 ;
		         ORDER BY coabalwell.cunitno, coabalwell.cAcctNo ;
		         GROUP BY coabalwell.cunitno, coabalwell.cAcctNo
		      lnCount = _TALLY
		   CASE lnSort = 2
		      SELECT coabalwell.cAcctNo, ;
		         coa.nAcctType, ;
		         coabalwell.cunitno AS cunitno, ;
		         SUM(nDebits) AS nDebits, ;
		         SUM(nCredits) AS nCredits ;
		         FROM coabalwell, coa ;
		         WHERE coabalwell.cunitno in (select cid from selectedwells) ;
		         AND coabalwell.cYear < lcYear ;
		         AND coabalwell.cAcctNo = coa.cAcctNo ;
		         AND coabalwell.cacctno in (select cid from selectedwells) ;
		         INTO CURSOR tempbeg1 ;
		         ORDER BY coabalwell.cunitno, coabalwell.cAcctNo ;
		         GROUP BY coabalwell.cunitno, coabalwell.cAcctNo
		      lnCount = _TALLY
		   CASE lnSort = 3
		      SELECT coabalwell.cAcctNo, ;
		         coa.nAcctType, ;
		         coabalwell.cunitno AS cunitno, ;
		         SUM(nDebits) AS nDebits, ;
		         SUM(nCredits) AS nCredits ;
		         FROM coabalwell, coa ;
		         WHERE coabalwell.cunitno in (select cid from selectedwells) ;
		         AND coabalwell.cYear+coabalwell.cPeriod < lcYear+lcPeriod ;
		         AND coabalwell.cAcctNo = coa.cAcctNo ;
		         AND coabalwell.cacctno in (select cid from selectedwells) ;
		         INTO CURSOR tempbeg1 ;
		         ORDER BY coabalwell.cunitno, coabalwell.cAcctNo ;
		         GROUP BY coabalwell.cunitno, coabalwell.cAcctNo
		      lnCount = _TALLY
		ENDCASE
		
		SELECT tempbeg
		APPEND FROM DBF('tempbeg1')
		
		SELECT balance
		SET ORDER to cunitacct
		
		*
		*  If there are any beginning balances, update the balance table.
		*  Otherwise, the beginning balances are assumed to be zero.
		*
		IF lnCount > 0
		   SELECT tempbeg
		   SCAN
		      SCATTER MEMVAR
		      lnBegBal = ABS(m.nDebits) - ABS(m.nCredits)
		      SELECT balance
		      IF SEEK(m.cunitno+m.cAcctNo)
		         REPLACE nBegBal WITH lnBegBal
		      ENDIF
		   ENDSCAN
		ENDIF
		
		*
		*  Plug the ending balances for each account in the range.
		*
		SELECT balance
		SCAN
		   SCATTER MEMVAR
		   m.nEndBal = m.nBegBal + m.nDebits - m.nCredits
		   REPLACE nEndBal WITH m.nEndBal
		ENDSCAN
		
		CREATE CURSOR glmast ;
		   (cidglma    C(10), ;
		   cbatch     C(8),  ;
		   cyear      C(4),  ;
		   cperiod    C(2),  ;
		   csource    C(2),  ;
		   cref       C(20), ;
		   ddate      D,     ;
		   cdesc      C(40), ;
		   cCatCode   c(4),  ;
		   cAcctNo    C(6),  ;
		   cunitno    C(10), ;
		   cwellname  c(40), ;
		   cdeptno    C(10), ;
		   nDebits    N(12,2), ;
		   nCredits   N(12,2), ;
		   centtime   C(8),  ;
		   dentdate   D, ;
		   cdmbatch   C(8), ;
		   cid        C(10), ;
		   cidchec    C(8), ;
		   ccheckno   C(10), ;
		   cname      C(30))
		
		IF llSummarize
		
		   DO CASE
		      CASE lnSort = 1
		         SELE SPACE(6) AS cbatch, ;
		            ddate, ;
		            cref, ;
		            cdesc, ;
		            cAcctNo, ;
		            cyear, ;
		            cperiod, ;
		            csource, ;
		            cCatCode,  ;
		            SUM(nDebits)  AS nDebits, ;
		            SUM(nCredits) AS nCredits, ;
		            SPACE(10)     AS cunitno, ;
		            SPACE(10)     AS cid, ;
		            SPACE(10)     AS cdeptno ;
		            FROM glmaster ;
		            WHERE cyear   = lcYear ;
		            AND cperiod = lcPeriod ;
		            AND cacctno in (select cid from selected) ;
		            AND NOT DELETED() ;
		            INTO CURSOR glmastx ;
		            ORDER BY cyear, cperiod, csource, cunitno, cAcctNo ;
		            GROUP BY cyear, cperiod, csource, cunitno, cAcctNo
		
		         SELECT * FROM glmastx ;
		            WHERE cyear   = lcYear ;
		            AND cperiod = lcPeriod ;
		            AND cunitno in (select cid from selectedwells) ;
		            AND cacctno in (select cid from selected) ;
		            AND NOT DELETED() ;
		            INTO CURSOR glmast1 ;
		            ORDER BY cunitno, cAcctNo
		
		      CASE lnSort = 2
		         SELE SPACE(6) AS cbatch, ;
		            ddate, ;
		            cref, ;
		            cdesc, ;
		            cAcctNo, ;
		            cyear, ;
		            cperiod, ;
		            csource, ;
		            cCatCode,  ;
		            SUM(nDebits)  AS nDebits, ;
		            SUM(nCredits) AS nCredits, ;
		            SPACE(10)     AS cunitno, ;
		            SPACE(10)     AS cid, ;
		            SPACE(10)     AS cdeptno ;
		            FROM glmaster ;
		            WHERE cyear   = lcYear ;
		            AND cacctno in (select cid from selected) ;
		            AND NOT DELETED() ;
		            INTO CURSOR glmastx ;
		            ORDER BY cyear, cperiod, csource, cunitno, cAcctNo ;
		            GROUP BY cyear, cperiod, csource, cunitno, cAcctNo
		
		         SELECT * FROM glmastx ;
		            WHERE cyear   = lcYear ;
		            AND cunitno in (select cid from selectedwells) ;
		            AND cacctno in (select cid from selected) ;
		            AND NOT DELETED() ;
		            INTO CURSOR glmast1 ;
		            ORDER BY cyear, cperiod, csource, cunitno, cAcctNo
		
		      CASE lnSort = 3
		         SELE SPACE(6) AS cbatch, ;
		            ddate, ;
		            cref, ;
		            cdesc, ;
		            cAcctNo, ;
		            cyear, ;
		            cperiod, ;
		            csource, ;
		            cCatCode,  ;
		            SUM(nDebits)  AS nDebits, ;
		            SUM(nCredits) AS nCredits, ;
		            SPACE(10)     AS cunitno, ;
		            SPACE(10)     AS cid, ;
		            SPACE(10)     AS cdeptno ;
		            FROM glmaster ;
		            WHERE BETWEEN(cyear+cperiod, ;
		            lcYear+lcPeriod, ;
		            lcYear2+lcPeriod2) ;
		            AND cacctno in (select cid from selected) ;
		            AND NOT DELETED() ;
		            INTO CURSOR glmastx ;
		            ORDER BY cyear, cperiod, csource, cunitno, cAcctNo ;
		            GROUP BY cyear, cperiod, csource, cunitno, cAcctNo
		
		         SELECT * FROM glmastx ;
		            WHERE BETWEEN(cyear+cperiod, ;
		            lcYear+lcPeriod, ;
		            lcYear2+lcPeriod2) ;
		            AND cunitno in (select cid from selectedwells) ;
		            AND cacctno in (select cid from selected) ;
		            AND NOT DELETED() ;
		            INTO CURSOR glmast1 ;
		            ORDER BY cyear, cperiod, csource, cunitno, cAcctNo
		   ENDCASE
		ELSE
		   DO CASE
		      CASE lnSort = 1
		         SELECT * FROM glmaster ;
		            WHERE cyear   = lcYear ;
		            AND cperiod = lcPeriod ;
		            AND cunitno in (select cid from selectedwells) ;
		            AND cacctno in (select cid from selected) ;
		            AND NOT DELETED() ;
		            INTO CURSOR glmast1 ;
		            ORDER BY cunitno, cAcctNo, ddate
		
		      CASE lnSort = 2
		         SELECT * FROM glmaster ;
		            WHERE cyear   = lcYear ;
		            AND cunitno in (select cid from selectedwells) ;
		            AND cacctno in (select cid from selected) ;
		            AND NOT DELETED() ;
		            INTO CURSOR glmast1 ;
		            ORDER BY cunitno, cAcctNo, ddate
		
		      CASE lnSort = 3
		         SELECT * FROM glmaster ;
		            WHERE BETWEEN(cyear+cperiod, ;
		            lcYear+lcPeriod, ;
		            lcYear2+lcPeriod2) ;
		            AND cunitno in (select cid from selectedwells) ;
		            AND cacctno in (select cid from selected) ;
		            AND NOT DELETED() ;
		            INTO CURSOR glmast1 ;
		            ORDER BY cunitno, cAcctNo, ddate
		   ENDCASE
		
		ENDIF
		SELECT glmast
		APPEND FROM DBF('glmast1')
		USE IN glmast1
		INDEX ON cunitno+cacctno TAG cunitno
		
		SELECT glmast
		SET ORDER TO cunitno
		SCAN
		   IF NOT EMPTY(cid)
		      m.cid = cid
		      SWSELECT('custownvend')
		      LOCATE FOR cid = m.cid
		      IF FOUND()
		         SELECT glmast
		         REPL cname WITH custownvend.cname
		      ENDIF
		   ELSE
		      IF glmast.csource = 'CS'  &&  If it's from cash, it may be a cash disb, and if it was done as a manual check, plug in the name from the CSDISHDR, since there's no ID to match up with
		         SWSELECT('csdishdr')
		         SET ORDER TO cbatch
		         IF SEEK(glmast.cbatch)
		            SELECT glmast
		            REPLACE cname WITH csdishdr.cname
		         ENDIF
		      ENDIF
		   ENDIF
		   IF llSummarize
		      DO CASE
		         CASE glmast.csource = 'CS'
		            lcDesc = 'Cash Journal'
		         CASE glmast.csource = 'CR'
		            lcDesc = 'Cash Journal'
		         CASE glmast.csource = 'GJ'
		            lcDesc = 'General Journal'
		         CASE glmast.csource = 'DM'
		            lcDesc = 'Rev Dist Journal'
		         CASE glmast.csource = 'AP'
		            lcDesc = 'Accts Payable Journal'
		         CASE glmast.csource = 'AR'
		            lcDesc = 'Accts Recv Journal'
		         CASE glmast.csource = 'PR'
		            lcDesc = 'Payroll Journal'
		         CASE glmast.csource = 'YE'
		            lcDesc = 'General Journal'
		         OTHERWISE
		            lcDesc = 'Unknown Journal'
		      ENDCASE
		
		      SELE glmast
		      REPL cref WITH 'Summary', ;
		         cdesc WITH lcDesc
		   ENDIF
		ENDSCAN
		
		*
		*  Fill in the check number by looking up the check
		*  in the checks table.
		*
		swselect('wells')
		SET ORDER to cwellid
		SELECT balance
		SCAN
		   SWSELECT('wells')
		   IF SEEK(balance.cunitno)
		      m.cwellname = cwellname
		      SELECT balance
		      REPLACE cwellname WITH m.cwellname
		   ENDIF
		ENDSCAN
		
		SELECT glmast
		SCAN
		   m.cAcctNo = cAcctNo
		   m.cidchec = cidchec
		   IF NOT EMPTY(ALLT(m.cidchec))
		      SWSELECT('checks')
		      SET ORDER TO cidchec
		      IF SEEK(m.cidchec)
		         IF lPrinted
		            m.cref = 'CK: ' + ALLT(ccheckno)
		         ELSE
		            m.cref = 'Not Printed'
		         ENDIF
		         SELECT glmast
		         REPLACE cref WITH m.cref
		      ENDIF
		   ENDIF
		ENDSCAN
		
		WAIT CLEAR
		
		SELECT balance
		COUNT FOR NOT DELETED() TO lnCount
		GO TOP
		SET RELATION TO cunitno+cacctno INTO glmast
		SET SKIP TO glmast
		
		IF lnCount > 0
		   RETURN .T.
		ELSE
		   RETURN .F.
		ENDIF
		
		
		
		
		
		
	ENDPROC

	PROCEDURE Init
		DODEFAULT()
		thisform.txtYear2.visible = .F.
		thisform.txtPeriod2.visible = .F.
		thisform.lblToYear.visible = .F.
		thisform.lblToPeriod.visible = .F.
		
		thisform.chkSummarize.value = .f.
		thisform.chklnoact.value = .f.
		
		SWSELECT('coa')
		SET ORDER TO acctno
		GO TOP
		thisform.swrptlook1.txtBegID.value = cacctno
		thisform.swrptlook1.txtBegName.value = cAcctDesc
		GO BOTT
		thisform.swrptlook1.txtEndID.value = cacctno
		thisform.swrptlook1.txtEndName.value = cAcctDesc
		
		SWSELECT('wells')
		SET ORDER TO cwellid
		GO TOP
		thisform.swrptlook2.txtBegID.value = cwellid
		thisform.swrptlook2.txtBegName.value = cwellname
		GO BOTT
		thisform.swrptlook2.txtEndID.value = cwellid
		thisform.swrptlook2.txtEndName.value = cwellname
		this.optSelect.value = 1
		
		thisform.txtyear.Value = GetFiscalYear(DATE())
		thisform.txtyear2.Value = GetFiscalYear(DATE())
		
		thisform.txtperiod.Value = GetFiscalPeriod(DATE())
		thisform.txtperiod2.Value = GetFiscalPeriod(DATE())
		
		
	ENDPROC

	PROCEDURE report
		LPARAMETERS cbutton
		RETURN DODEFAULT(cbutton)
		
		*!*	LOCAL lnResult, lcAlias
		*!*	PRIV lcTitle1, lcTitle2, lcSortOrder, lcSelect, glGrpName, m.cGrpName
		
		*!*	*
		*!*	*  Check to see if the requirements for calling this method are met.
		*!*	*
		*!*	ASSERT TYPE('this.cReportName') = 'C' MESSAGE 'You must set the cReportName property to use this class'
		*!*	ASSERT INLIST(m.cButton,'F','P','S')  MESSAGE 'The parm to the report method must be either "F" or "P"'
		
		*!*	IF TYPE('this.ctitle1') <> 'C'
		*!*	   THIS.ctitle1 = ''
		*!*	ENDIF
		*!*	IF TYPE('this.ctitle2') <> 'C'
		*!*	   THIS.ctitle2 = ''
		*!*	ENDIF
		
		*!*	lcAlias = ALIAS()
		
		*!*	*
		*!*	*  Check on using group name in place of company name
		*!*	*
		*!*	IF NOT USED('options')
		*!*	   IF TYPE('m.goApp') = 'O'
		*!*	      USE (ALLTRIM(m.goapp.cdatafilepath)+'options') IN 0
		*!*	   ENDIF
		*!*	ENDIF
		*!*	IF NOT USED('groups')
		*!*	   IF TYPE('m.goApp') = 'O'
		*!*	      USE (ALLTRIM(m.goapp.cdatafilepath)+'groups') IN 0
		*!*	   ENDIF
		*!*	ENDIF
		
		*!*	* If the form doesn't have a swgroup control
		*!*	* don't try to get the company name from the group
		*!*	IF TYPE('thisform.swgroup1') <> 'O'
		*!*	   glGrpName = .F.
		*!*	ELSE
		
		*!*	   SELECT options
		*!*	   GO TOP
		*!*	   glGrpName = lGrpName
		*!*	   IF glGrpName
		*!*	      SELECT groups
		*!*	      SET ORDER TO cgroup
		*!*	      IF SEEK(LEFT(THISFORM.swgroup1.VALUE,2))
		*!*	         m.cGrpName = cDesc
		*!*	      ELSE
		*!*	         IF LEFT(THISFORM.swgroup1.VALUE,2) = '**'
		*!*	            m.cGrpName = 'All Companies'
		*!*	         ELSE
		*!*	            m.cGrpName = ''
		*!*	         ENDIF
		*!*	      ENDIF
		*!*	   ELSE
		*!*	      m.cGrpName = ''
		*!*	   ENDIF
		*!*	ENDIF
		
		*!*	*
		*!*	*  Make the cProducer variable a default value for development purposes
		*!*	*
		*!*	IF TYPE('m.goApp') = 'O'
		*!*	   m.cProducer = m.goapp.cCompanyName
		*!*	   IF m.goApp.lDemo
		*!*	      m.cProducer = 'Demo Version of Software'
		*!*	      m.cGrpName  = m.cProducer
		*!*	   ENDIF
		*!*	ELSE
		*!*	   m.cProducer = 'Development Company, Inc.'
		*!*	ENDIF
		
		*!*	IF TYPE('m.cProcessor') <> 'C'
		*!*	   m.cProcessor = ''
		*!*	ENDIF
		
		
		*!*	lcTitle1    = THISFORM.ctitle1
		*!*	lcTitle2    = THISFORM.ctitle2
		*!*	lcSortOrder = THISFORM.cSortOrder
		*!*	lcSelect    = THISFORM.cSelectCriteria
		
		*!*	*
		*!*	*  Set defaults for titles and criteria if not in correct format
		*!*	*
		*!*	IF TYPE('lcTitle1') <> 'C'
		*!*	   lcTitle1 = ''
		*!*	ENDIF
		*!*	IF TYPE('lcTitle2') <> 'C'
		*!*	   lcTitle2 = ''
		*!*	ENDIF
		*!*	IF TYPE('lcSortOrder') <> 'C'
		*!*	   lcSortOrder = ''
		*!*	ENDIF
		*!*	IF TYPE('lcSelect') <> 'C'
		*!*	   lcSelect = ''
		*!*	ENDIF
		
		*!*	SELECT (lcAlias)
		
		
		*!*	*
		*!*	*  Send the report to the proper location based upon the button pressed.
		*!*	*
		*!*	DO CASE
		*!*	   CASE m.cButton = 'P'
		*!*	      REPORT FORM (THIS.cReportName) TO PRINTER PROMPT NOCONSOLE NOEJECT
		
		*!*	   CASE m.cButton = 'S'
		*!*	      IF THISFORM.swrptcriteriabuttons1.cmdPreview.CAPTION = 'File'
		*!*	         DO FORM utfileout WITH thisform.cReportName, thisform.caption, lcTitle2, lcSortOrder, lcSelect, 'GLMAST'
		*!*	      ELSE
		*!*	         LOCAL lcPreviewWindowName
		*!*	         lcPreviewWindowName=SYS(2015)
		*!*	         DEFINE WINDOW (lcPreviewWindowName) ;
		*!*	             FROM 0,0 TO SROWS(),SCOLS() ;
		*!*	             TITLE "Report Preview" ;
		*!*	             SYSTEM CLOSE FLOAT GROW MINIMIZE ZOOM
		*!*	         ZOOM WINDOW (lcPreviewWindowName) MAX
		
		*!*	         REPORT FORM (THIS.cReportName) PREVIEW WINDOW (lcPreviewWindowName)
		*!*	         RELEASE WINDOW (lcPreviewWindowName)
		*!*	         IF THISFORM.oMessage.Confirm('Should the report be sent to the printer now?')
		*!*	            REPORT FORM (THIS.cReportName) TO PRINTER PROMPT NOCONSOLE NOEJECT
		*!*	         ENDIF
		*!*	      ENDIF
		*!*	ENDCASE
		
		
	ENDPROC

	PROCEDURE chkSelected.Click
		IF this.Value
		   DO FORM commonsource\selected-ids WITH 'COA' LINKED 
		   lnCount = RECCOUNT('selected')
		   thisform.lblselected.Caption = TRANSFORM(lnCount) + ' Accounts Selected'
		   thisform.lblselected.Visible = .T.
		   thisform.lblbegID.Visible = .F.
		   thisform.lblendID.Visible = .F.
		   thisform.swrptlook1.Visible = .F.
		ELSE
		   thisform.lblselected.Visible = .F.
		   thisform.lblbegID.Visible = .T.
		   thisform.lblendID.Visible = .T.
		   thisform.swrptlook1.Visible = .T.
		ENDIF 
	ENDPROC

	PROCEDURE chkSelectedWells.Click
		IF this.Value
		   DO FORM commonsource\selected-ids WITH 'WELL','selectedwells' LINKED 
		   lnCount = RECCOUNT('selectedwells')
		   thisform.lblselectedWell.Caption = TRANSFORM(lnCount) + ' Wells Selected'
		   thisform.lblselectedWell.Visible = .T.
		   thisform.lblbegWell.Visible = .F.
		   thisform.lblendWell.Visible = .F.
		   thisform.swrptlook2.Visible = .F.
		ELSE
		   thisform.lblselectedWell.Visible = .F.
		   thisform.lblbegWell.Visible = .T.
		   thisform.lblendWell.Visible = .T.
		   thisform.swrptlook2.Visible = .T.
		ENDIF 
	ENDPROC

	PROCEDURE optSelect.Option1.Click
		thisform.lblFromYear.caption = 'Fiscal Year:'
		thisform.lblFromPeriod.caption = 'Fiscal Period:'
		thisform.txtYear2.visible = .F.
		thisform.txtPeriod2.visible = .F.
		thisform.lblToYear.visible = .F.
		thisform.lblToPeriod.visible = .F.
		thisform.lblFromYear.visible = .T.
		thisform.lblFromPeriod.visible = .T.
		thisform.txtPeriod.visible = .T.
		
	ENDPROC

	PROCEDURE optSelect.Option2.Click
		thisform.lblFromYear.caption = 'Fiscal Year:'
		thisform.lblFromYear.visible = .T.
		thisform.lblFromPeriod.visible = .F.
		thisform.txtPeriod.visible = .F.
		thisform.txtYear2.visible = .F.
		thisform.txtPeriod2.visible = .F.
		thisform.lblToYear.visible = .F.
		thisform.lblToPeriod.visible = .F.
		thisform.lblFromPeriod.visible = .F.
		thisform.txtPeriod.visible = .F.
	ENDPROC

	PROCEDURE optSelect.Option3.Click
		thisform.lblFromYear.caption = 'From Fiscal Year:'
		thisform.lblFromPeriod.caption = 'From Fiscal Period:'
		thisform.lblToYear.caption = 'To Fiscal Year:'
		thisform.lblToPeriod.caption = 'To Fiscal Period:'
		thisform.txtPeriod.visible = .T.
		thisform.lblFromPeriod.visible = .T.
		thisform.txtYear2.visible = .T.
		thisform.txtPeriod2.visible = .T.
		thisform.lblToYear.visible = .T.
		thisform.lblToPeriod.visible = .T.
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\CUSTOM\picklist WITH 'coa', lcList, THISFORM.swrptlook1.txtBegID.VALUE, 2
		
		IF llOK
		   THISFORM.swrptlook1.txtBegName.VALUE = coa.cacctdesc
		   THISFORM.swrptlook1.txtBegID.VALUE = coa.cacctno
		   THISFORM.REFRESH()
		ENDIF
		
		
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\CUSTOM\picklist WITH 'coa', lcList, THISFORM.swrptlook1.txtEndID.VALUE, 2
		
		IF llOK
		   THISFORM.swrptlook1.txtEndName.VALUE = coa.cacctdesc
		   THISFORM.swrptlook1.txtEndID.VALUE = coa.cacctno
		   THISFORM.REFRESH()
		ENDIF
		
		
		
	ENDPROC

	PROCEDURE Swrptlook2.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cwellid,cwellname,cgroup,cwellstat'
		DO FORM ..\custom\picklist WITH 'Wells', lcList, thisform.swrptlook2.txtBegId.value, 4
		
		IF llOK
		   thisform.swrptlook2.txtBegId.value = cwellid
		   thisform.swrptlook2.txtBegName.value = cwellname
		   thisform.swrptlook2.txtBegId.SetFocus()
		   thisform.swrptlook2.txtBegId.refresh()
		   thisform.swrptlook2.txtBegName.refresh()
		ENDIF   
	ENDPROC

	PROCEDURE Swrptlook2.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cwellid,cwellname,cgroup,cwellstat'
		DO FORM ..\custom\picklist WITH 'Wells', lcList, thisform.swrptlook2.txtEndId.value, 4
		
		IF llOK
		   thisform.swrptlook2.txtEndId.value = cwellid
		   thisform.swrptlook2.txtEndName.value = cwellname
		   thisform.swrptlook2.txtEndId.SetFocus()
		   thisform.swrptlook2.txtEndId.refresh()
		   thisform.swrptlook2.txtEndName.refresh()
		ENDIF   
	ENDPROC

	PROCEDURE Swrptlook2.txtBegID.GotFocus
		ON KEY LABEL F2 _screen.activeform.swrptlook2.swlookupbutton1.Click()
		
	ENDPROC

	PROCEDURE Swrptlook2.txtEndID.GotFocus
		ON KEY LABEL F2 _screen.activeform.swrptlook2.swlookupbutton2.Click()
		
	ENDPROC

ENDDEFINE
