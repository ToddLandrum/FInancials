*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="dmexpcatqb.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor7" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 619
	InitialSelectedAlias = "expcat"
	Left = 18
	Name = "Dataenvironment"
	Top = 394
	Width = 1016

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "expcat", ;
		CursorSource = "expcat", ;
		Database = ..\database\appdata.dbc, ;
		Filter = "", ;
		Height = 90, ;
		Name = "Cursor1", ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "expense", ;
		CursorSource = "expense", ;
		Database = ..\database\appdata.dbc, ;
		Height = 90, ;
		Left = 570, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "glopt", ;
		CursorSource = "glopt", ;
		Database = ..\database\appdata.dbc, ;
		Height = 90, ;
		Left = 128, ;
		Name = "Cursor3", ;
		Top = 6, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "expcat1", ;
		CursorSource = "expcat", ;
		Database = ..\database\appdata.dbc, ;
		Height = 90, ;
		Left = 244, ;
		Name = "Cursor4", ;
		Top = 7, ;
		Width = 154
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "taxcodes", ;
		CursorSource = "taxcodes", ;
		Database = ..\database\appdata.dbc, ;
		Height = 90, ;
		Left = 13, ;
		Name = "Cursor5", ;
		Top = 132, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "appurchd", ;
		CursorSource = "appurchd", ;
		Database = ..\database\appdata.dbc, ;
		Height = 90, ;
		Left = 710, ;
		Name = "Cursor6", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor7' AS cursor WITH ;
		Alias = "afeopt", ;
		CursorSource = "afeopt", ;
		Database = ..\database\appdata.dbc, ;
		Height = 90, ;
		Left = 850, ;
		Name = "Cursor7", ;
		Top = 20, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formdmexpcat AS frmdatamanagerformcustom OF "..\custom\cforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="shpAccounts" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCateg" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCateg" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtDescrip" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDescrip" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkLafetype" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblTaxcode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboExpClass" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboTaxCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblOwnerAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblVendorAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Qbaccount1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Qbaccount2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCcatcode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkJIBOnly" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCcatcode" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: resetaccounts		&& Resets the visibility of the account dropdowns based on the value of lAFEType.
		*p: coldcatcode		&& Category code before it was changed.
		*p: crevclear		&& Revenue Distribution Clearing Account
		*p: csaveclass
		*p: lallocexp
		*p: ljibonly
	*</DefinedPropArrayMethod>

	Caption = "Expense Codes"
	clistexpression = expcat.ccatcode
	cnavworkarea = Expcat
	coldcatcode = 		&& Category code before it was changed.
	cworkarea = Expcat
	DoCreate = .T.
	Height = 280
	HelpContextID = 67
	lallocexp = .F.
	lexpliciteditmode = .F.
	ljibonly = .F.
	Name = "FormDmexpcat"
	Width = 491
	_memberdata = <VFPData>
		<memberdata name="resetaccounts" display="ResetAccounts"/>
		</VFPData>
	CMDATAMANAGER.Name = "CMDATAMANAGER"
	CMDATAMANAGER.TabIndex = 1
	CMDATAMANAGER.ZOrderSet = 0
	cmlookupmanager.Name = "cmlookupmanager"
	Mwresize1.lblHighLight.Name = "lblHighLight"
	Mwresize1.lblShading.Name = "lblShading"
	Mwresize1.Name = "Mwresize1"

	ADD OBJECT 'cboExpClass' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		ControlSource = "expcat.cexpclass", ;
		FontName = "Courier New", ;
		Height = 20, ;
		Left = 100, ;
		Name = "cboExpClass", ;
		TabIndex = 10, ;
		Top = 115, ;
		Width = 121
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboTaxCode' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		ControlSource = "expcat.ctaxcode", ;
		FontName = "Courier New", ;
		Height = 20, ;
		Left = 288, ;
		Name = "cboTaxCode", ;
		RowSource = "", ;
		RowSourceType = 0, ;
		TabIndex = 11, ;
		Top = 115, ;
		Width = 192, ;
		ZOrderSet = 21
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'chkJIBOnly' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "JIB Only", ;
		ControlSource = "expcat.ljibonly", ;
		Height = 16, ;
		Left = 384, ;
		Name = "chkJIBOnly", ;
		TabIndex = 3, ;
		Top = 43, ;
		Width = 57
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkLafetype' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "AFE Code", ;
		ControlSource = "expcat.lafetype", ;
		Height = 16, ;
		Left = 384, ;
		Name = "chkLafetype", ;
		TabIndex = 2, ;
		Top = 12, ;
		Width = 66
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'lblCateg' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Name", ;
		Height = 16, ;
		Left = 38, ;
		Name = "lblCateg", ;
		TabIndex = 7, ;
		Top = 54, ;
		Width = 29, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblCcatcode' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Code", ;
		Height = 16, ;
		Left = 38, ;
		Name = "lblCcatcode", ;
		TabIndex = 5, ;
		Top = 17, ;
		Width = 27, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblDescrip' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Description", ;
		Height = 16, ;
		Left = 38, ;
		Name = "lblDescrip", ;
		TabIndex = 9, ;
		Top = 85, ;
		Width = 56, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "DOI Class", ;
		Height = 16, ;
		Left = 38, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 13, ;
		Top = 118
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblOwnerAcct' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		BackStyle = 1, ;
		Caption = "Post Operator's Share Of This Expense To QB Account", ;
		FontBold = .T., ;
		FontSize = 9, ;
		Height = 17, ;
		Left = 18, ;
		Name = "lblOwnerAcct", ;
		TabIndex = 14, ;
		Top = 151, ;
		Width = 311, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblTaxcode' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Section", ;
		Height = 16, ;
		Left = 245, ;
		Name = "lblTaxcode", ;
		TabIndex = 12, ;
		Top = 117, ;
		Width = 38, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblVendorAcct' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		BackStyle = 1, ;
		Caption = "Post Operator's Income As Vendor For This Expense To QB Account", ;
		FontBold = .T., ;
		FontSize = 9, ;
		Height = 17, ;
		Left = 18, ;
		Name = "lblVendorAcct", ;
		TabIndex = 15, ;
		Top = 207, ;
		Width = 386, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Qbaccount1' AS qbaccount WITH ;
		ControlSource = "expcat.cownacctlistid", ;
		Left = 36, ;
		Name = "Qbaccount1", ;
		TabIndex = 16, ;
		Top = 180
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Qbaccount2' AS qbaccount WITH ;
		ControlSource = "expcat.cvendacctlistid", ;
		Left = 36, ;
		Name = "Qbaccount2", ;
		TabIndex = 17, ;
		Top = 228
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'shpAccounts' AS shpshapecustom WITH ;
		Height = 50, ;
		Left = 11, ;
		Name = "shpAccounts", ;
		Top = 214, ;
		Width = 469, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Shpshapecustom1' AS shpshapecustom WITH ;
		Height = 58, ;
		Left = 11, ;
		Name = "Shpshapecustom1", ;
		Top = 158, ;
		Width = 469, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'txtCateg' AS txttextboxcustom WITH ;
		ControlSource = "expcat.ccateg", ;
		Height = 20, ;
		Left = 100, ;
		lrequired = .T., ;
		MaxLength = 25, ;
		Name = "txtCateg", ;
		TabIndex = 6, ;
		Top = 52, ;
		Width = 183, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCcatcode' AS txttextboxcustom WITH ;
		ControlSource = "expcat.ccatcode", ;
		Format = "!", ;
		Height = 20, ;
		InputMask = "", ;
		Left = 100, ;
		lrequired = .T., ;
		MaxLength = 4, ;
		Name = "txtCcatcode", ;
		TabIndex = 4, ;
		Top = 15, ;
		Width = 48, ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtDescrip' AS txttextboxcustom WITH ;
		ControlSource = "expcat.cdescrip", ;
		Height = 20, ;
		Left = 100, ;
		lrequired = .T., ;
		MaxLength = 40, ;
		Name = "txtDescrip", ;
		TabIndex = 8, ;
		Top = 83, ;
		Width = 312, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE Activate
		IF DODEFAULT()
		   IF NOT m.goapp.lafeopt
		      THISFORM.chklafetype.VISIBLE = .F.
		   ENDIF
		   SWSELECT('afeopt')
		   GO TOP
		   THISFORM.lAllocExp = afeopt.lAllocExp
		   
		   thisform.ResetAccounts()
		ENDIF
		
	ENDPROC

	PROCEDURE Init
		DODEFAULT()
		LOCAL lnSelect
		
		SELECT expcat
		SET ORDER TO ccatcode
		
		SELECT glopt
		GO TOP
		THISFORM.cRevClear = cExpClear
		
		thisform.refresh()
		
	ENDPROC

	PROCEDURE list
		LPARAMETERS cworkarea
		LOCAL lcList, lnRecNo
		PRIV llOK
		
		llOK = .F.
		IF THIS.flushcontrolbuffer() AND THIS.beforenav('Expcat')
		    SELECT cCatCode,cCateg,cExpClass,IIF(lAFEType,'A','') AS cAFEType, IIF(lJIBOnly,'J','') AS cJIBOnly  ;
		        FROM expcat INTO CURSOR exptmp READWRITE
		
		    SELECT exptmp
		    INDEX ON cCatCode           TAG cCatCode
		    INDEX ON UPPER(cCateg)      TAG cCateg
		    INDEX ON cExpClass+cCatCode TAG cExpClass
		    INDEX ON cAFEType           TAG cAFEType
		    INDEX ON cJIBOnly           TAG cJIBOnly
		
		    lcList = 'ccatcode\Code,ccateg\Category,cexpclass\Cls,cAFEType\AFE,cJIBOnly\JIB'
		
		    DO FORM '..\custom\picklist' WITH 'exptmp', lcList, THISFORM.txtcCatCode.VALUE, 5, .T., .T.
		ENDIF
		
		IF llOK AND USED('exptmp')
		   SELECT expcat
		   SET ORDER to ccatcode
		   SEEK(exptmp.ccatcode)
		   thisform.cboExpClass.Requery()
		ENDIF
		
		THISFORM.REFRESH()
		
		
	ENDPROC

	PROCEDURE Load
		IF DODEFAULT()
		   *  Get the cursor of QuickBooks Accounts
		   m.goApp.oQB.QBAccounts('',.F.,.T.,thisform.datasessionid)
		   SWSELECT('afeopt')
		   GO top
		   thisform.lAllocExp = afeopt.lAllocExp
		ENDIF   
	ENDPROC

	PROCEDURE resetaccounts		&& Resets the visibility of the account dropdowns based on the value of lAFEType.
		* Don't change to the posting account if they're allocating AFE expenses - BH 12/28/06
		IF expcat.lafetype = .T. AND NOT THISFORM.lallocexp  
		   THISFORM.lblOwnerAcct.CAPTION = 'QuickBooks Posting Account'
		   THISFORM.qbaccount1.VISIBLE = .T.
		   THISFORM.qbaccount2.VISIBLE = .F.
		   THISFORM.lblvendorAcct.VISIBLE = .F.
		ELSE
		   THISFORM.lblOwnerAcct.CAPTION = "Post Operator's Share Of This Expense To QB Account"
		   THISFORM.qbaccount1.VISIBLE = .T.
		   THISFORM.qbaccount2.VISIBLE = .T.
		   THISFORM.lblvendorAcct.VISIBLE = .T.
		ENDIF
		
	ENDPROC

	PROCEDURE cboExpClass.Init
		DODEFAULT()
		
		this.requery()
		
		
	ENDPROC

	PROCEDURE cboExpClass.Requery
		THIS.CLEAR()
		IF INLIST(ALLTRIM(expcat.ccatcode), 'GATH', 'COMP')
		   THIS.ADDLISTITEM('Net Gas Int', 1, 1)
		   THIS.ADDLISTITEM('G', 1, 2)
		   THIS.ADDLISTITEM('Working Int', 2, 1)
		   THIS.ADDLISTITEM('0', 2, 2)
		   THIS.ADDLISTITEM('Class 1', 3, 1)
		   THIS.ADDLISTITEM('1', 3, 2)
		   THIS.ADDLISTITEM('Class 2', 4, 1)
		   THIS.ADDLISTITEM('2', 4, 2)
		   THIS.ADDLISTITEM('Class 3', 5, 1)
		   THIS.ADDLISTITEM('3', 5, 2)
		   THIS.ADDLISTITEM('Class 4', 6, 1)
		   THIS.ADDLISTITEM('4', 6, 2)
		   THIS.ADDLISTITEM('Class 5', 7, 1)
		   THIS.ADDLISTITEM('5', 7, 2)
		   THIS.ADDLISTITEM('Before Case Pt', 8, 1)
		   THIS.ADDLISTITEM('B', 8, 2)
		   THIS.ADDLISTITEM('After Case Pt', 9, 1)
		   THIS.ADDLISTITEM('A', 9, 2)
		   IF m.goapp.lPluggingModule
		      THIS.ADDLISTITEM('Plugging', 9, 1)
		      THIS.ADDLISTITEM('P', 9, 2)
		   ENDIF    
		ELSE
		   THIS.ADDLISTITEM('Working Int', 1, 1)
		   THIS.ADDLISTITEM('0', 1, 2)
		   THIS.ADDLISTITEM('Class 1', 2, 1)
		   THIS.ADDLISTITEM('1', 2, 2)
		   THIS.ADDLISTITEM('Class 2', 3, 1)
		   THIS.ADDLISTITEM('2', 3, 2)
		   THIS.ADDLISTITEM('Class 3', 4, 1)
		   THIS.ADDLISTITEM('3', 4, 2)
		   THIS.ADDLISTITEM('Class 4', 5, 1)
		   THIS.ADDLISTITEM('4', 5, 2)
		   THIS.ADDLISTITEM('Class 5', 6, 1)
		   THIS.ADDLISTITEM('5', 6, 2)
		   THIS.ADDLISTITEM('Before Case Pt', 7, 1)
		   THIS.ADDLISTITEM('B', 7, 2)
		   THIS.ADDLISTITEM('After Case Pt', 8, 1)
		   THIS.ADDLISTITEM('A', 8, 2)
		   IF m.goapp.lPluggingModule
		      THIS.ADDLISTITEM('Plugging', 9, 1)
		      THIS.ADDLISTITEM('P', 9, 2)
		   ENDIF    
		ENDIF
	ENDPROC

	PROCEDURE cboTaxCode.Init
		dodefault()
		
		SELECT cdesc, ctaxcode FROM taxcodes INTO ARRAY laTaxCodes ORDER BY ctaxcode
		
		IF _tally > 0
		   FOR lnX = 1 TO _tally
		       this.addlistitem(laTaxCodes[lnX,1],lnX,1)
		       this.addlistitem(laTaxCodes[lnX,2],lnX,2)
		   ENDFOR    
		ENDIF
		
		
	ENDPROC

	PROCEDURE chkJIBOnly.Valid
		IF this.Value <> thisform.lJIBonly
		   SELECT expense.ccatcode FROM expense ;
		     WHERE expense.ccatcode = thisform.txtCcatcode.Value ;
		       and expense.ccatcode in (SELECT ccatcode FROM expcat WHERE ljibonly) ;
		       AND (expense.nrunnorev <> 0 OR expense.nrunnojib <> 0) ;
		     into cursor temp
		   IF _tally > 0
		      MESSAGEBOX('The JIB only flag cannot be changed for this category because the ' + ;
		                 'category has already been used and processed in a run.',16,'JIB Only Flag')
		      this.Value = not this.value           
		      RETURN 0
		   ENDIF 
		ENDIF    
		
		DODEFAULT() 
	ENDPROC

	PROCEDURE chkJIBOnly.When
		thisform.ljibonly = this.Value 
		RETURN DODEFAULT()
	ENDPROC

	PROCEDURE chkLafetype.Click
		IF THIS.VALUE = .T. AND NOT thisform.lallocexp  &&  Don't change to the posting account if they're allocating AFE expenses - BH 12/28/06
		   THISFORM.lblOwnerAcct.CAPTION = 'G/L Posting Account'
		   thisform.qbaccount1.Visible = .t.
		   thisform.qbaccount2.Visible = .f.
		   thisform.lblvendorAcct.Visible = .f.
		ELSE
		   THISFORM.lblOwnerAcct.CAPTION = "Post Operator's Share Of This Expense To QB Account"
		   THISFORM.qbaccount1.Visible = .t.
		   THISFORM.qbaccount2.Visible = .t.
		   THISFORM.lblVendorAcct.VISIBLE = .T.
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE CMDATAMANAGER.afternav
		LPARAMETERS cworkarea
		
		IF m.cworkarea = 'Expcat'
		   THISFORM.csaveclass = expcat.cexpclass
		
		   * Reset the visibility of the account dropdowns
		   * based on the lAFEType field.
		   thisform.ResetAccounts()
		   
		   thisform.cboExpClass.Requery()
		
		ENDIF
		
		DODEFAULT(cworkarea)
		
	ENDPROC

	PROCEDURE CMDATAMANAGER.afternew
		LPARAMETERS cworkarea
		
		IF m.cWorkArea = 'Expcat'
		   lcBatch = THISFORM.oRegistry.IncrementCounter('%Shared.Counters.Expense Category')
		   set dele off
		   SELECT expcat1
		   SET ORDER TO cidexpc
		   DO WHILE SEEK(lcBatch)
		      lcBatch = THISFORM.oRegistry.IncrementCounter('%Shared.Counters.Expense Category')
		   ENDDO
		   set dele on
		   SELECT expcat
		   SET ORDER TO ccatcode
		   REPLACE cidexpc  WITH lcBatch,  ;
		      ctaxcode WITH 'OE', ;
		      cexpclass WITH '0'
		   THISFORM.setnextcontrol(THISFORM.txtcCatCode)
		   thisform.refresh()
		ENDIF
		
		DODEFAULT(cworkarea)
		
	ENDPROC

	PROCEDURE CMDATAMANAGER.beforedelete
		LPARAMETERS cworkarea
		LOCAL llFound, lcBatch
		
		llFound = .F.
		
		swSELECT('expense')
		LOCATE FOR cCatCode = expcat.cCatCode AND NOT DELETED()
		IF FOUND()
		   llFound = .T.
		ELSE
		   swSELECT('appurchd')
		   LOCATE FOR cCatCode = expcat.cCatCode AND NOT DELETED()
		   IF FOUND()
		      llFound = .T.
		   ELSE
		      swselect('expsusp')
		      LOCATE FOR cCatCode = expcat.cCatCode AND NOT DELETED()   
		      IF FOUND()
		         llFound = .T.
		      ENDIF    
		   ENDIF
		ENDIF
		
		IF llFound
		   THISFORM.oMessage.Warning('There have been expenses entered using this expense category.  It cannot be deleted.')
		   RETURN .F.
		ELSE
		   lcBatch = THISFORM.oRegistry.IncrementCounter('%Shared.Counters.Batch')
		   *  To avoid uniqueness errors on deleted records, re-assign ccatcode with a unique value.
		   swSELECT('expcat')
		   replace ccatcode WITH RIGHT(ALLTRIM(lcBatch),4)
		   =TABLEUPDATE(.t.)
		ENDIF
		
		thisform.omessage.warning('Deleting an expense category will not delete the corresponding item from QuickBooks.')
		
		DODEFAULT(cworkarea)
		
	ENDPROC

	PROCEDURE CMDATAMANAGER.beforeupdate
		LPARAMETERS cworkarealist
		
		IF THISFORM.csaveclass <> expcat.cexpclass AND NOT thisform.isnew()
		   SELE expense
		   SCAN FOR cyear='FIXD' AND ccatcode = expcat.ccatcode
		      REPL cexpclass WITH expcat.cexpclass
		   ENDSCAN
		ENDIF
		
		IF thisform.txtcCatCode.Value = 'COMP' OR ;
		   thisform.txtcCatCode.Value = 'GATH'
		   MESSAGEBOX('The codes "COMP" and "GATH" are system codes for Compression and Gathering. ' + ;
		              'If you want to use this code for either of these then everything is good. ' + ;
		              'If you are wanting to use the code for some other type of expense give it ' + ;
		              'an expense code other than "COMP" or "GATH".',64,'Compression/Gathering Code')
		ENDIF 
	ENDPROC

	PROCEDURE txtCateg.LostFocus
		IF EMPTY(thisform.txtDescrip.value)
		   thisform.cmdatamanager.replace('Expcat','cdescrip',this.value)
		   thisform.txtDescrip.refresh()
		ENDIF   
		
		dodefault()
	ENDPROC

	PROCEDURE txtCcatcode.Valid
		LOCAL lcCatCode
		
		lcCatCode = THIS.VALUE
		
		IF NOT EMPTY(lcCatCode) AND lcCatCode <> expcat.ccatcode
		   SELECT expcat1
		   SET ORDER TO ccatcode
		   IF SEEK(lcCatCode)
		      IF THISFORM.omessage.CONFIRM('There is already an expense category with this code.  Would you like to view this record?')
		         THISFORM.cmdatamanager.revertall()
		         SELECT expcat
		         SET ORDER TO ccatcode
		         SEEK(lcCatCode)
		         THISFORM.REFRESH()
		      ELSE
		         THIS.VALUE = ''
		         RETURN 0
		      ENDIF
		   ENDIF
		   SELECT expcat
		ENDIF
		
		IF THIS.VALUE = 'MKTG'  &&  Disable the class and tax code fields
		
		   THISFORM.omessage.Warning('The MKTG code is a special code used by the system for entering expenses that will be deducted prior to calculating Gas Taxes.  Be aware that expenses using the MKTG code will be charged to owners at their Gas Revenue interest.')
		ELSE
		   THISFORM.cboExpClass.SET('enabled',.T.)
		   THISFORM.cbotaxCode.SET('enabled',.T.)
		   thisform.cboExpClass.Requery()
		ENDIF
		
		DODEFAULT()
		
		
		
		
		
	ENDPROC

	PROCEDURE txtCcatcode.When
		IF DODEFAULT()
		   thisform.coldcatcode = expcat.ccatcode
		ENDIF 
	ENDPROC

ENDDEFINE
