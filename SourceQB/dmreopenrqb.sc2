*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="dmreopenrqb.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor10" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor11" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor12" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor13" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor17" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor14" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor15" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor16" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor18" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor19" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 808
	Left = 23
	Name = "Dataenvironment"
	Top = 59
	Width = 1252

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "checks", ;
		BufferModeOverride = 5, ;
		CursorSource = "checks", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor10' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor10", ;
		Top = 380, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor11' AS cursor WITH ;
		Alias = "invhdr", ;
		BufferModeOverride = 5, ;
		CursorSource = "invhdr", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor11", ;
		Top = 380, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor12' AS cursor WITH ;
		Alias = "invdet", ;
		BufferModeOverride = 5, ;
		CursorSource = "invdet", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor12", ;
		Top = 380, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor13' AS cursor WITH ;
		Alias = "options", ;
		CursorSource = "options", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 438, ;
		Name = "Cursor13", ;
		Top = 305, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor14' AS cursor WITH ;
		Alias = "qbpost", ;
		CursorSource = "qbpost", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 441, ;
		Name = "Cursor14", ;
		Top = 20, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor15' AS cursor WITH ;
		Alias = "suspense", ;
		CursorSource = "suspense", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 428, ;
		Name = "Cursor15", ;
		Top = 160, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor16' AS cursor WITH ;
		Alias = "stmtnote", ;
		BufferModeOverride = 5, ;
		CursorSource = "stmtnote", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 179, ;
		Name = "Cursor16", ;
		Top = 520, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor17' AS cursor WITH ;
		Alias = "roundtmp", ;
		CursorSource = "roundtmp", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor17", ;
		Top = 500, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor18' AS cursor WITH ;
		Alias = "ownpcts", ;
		BufferModeOverride = 5, ;
		CursorSource = "ownpcts", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 443, ;
		Name = "Cursor18", ;
		Top = 448, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor19' AS cursor WITH ;
		Alias = "plugwellbal", ;
		BufferModeOverride = 5, ;
		CursorSource = "plugwellbal", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 633, ;
		Name = "Cursor19", ;
		Top = 302, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "disbhist", ;
		BufferModeOverride = 5, ;
		CursorSource = "disbhist", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "expense", ;
		BufferModeOverride = 5, ;
		CursorSource = "expense", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "glmaster", ;
		BufferModeOverride = 5, ;
		CursorSource = "glmaster", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor4", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "income", ;
		BufferModeOverride = 5, ;
		CursorSource = "income", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor5", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "groups", ;
		CursorSource = "groups", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor6", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor7' AS cursor WITH ;
		Alias = "susaudit", ;
		BufferModeOverride = 5, ;
		CursorSource = "susaudit", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor7", ;
		Top = 261, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor8' AS cursor WITH ;
		Alias = "sysctl", ;
		BufferModeOverride = 5, ;
		CursorSource = "sysctl", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor8", ;
		Top = 259, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor9' AS cursor WITH ;
		Alias = "wellhist", ;
		BufferModeOverride = 5, ;
		CursorSource = "wellhist", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor9", ;
		Top = 260, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formdmreopenr AS frmformcustom OF "..\custom\cforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="cmdReopen" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdClose" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Runcombo1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: reopen		&& Re-Opens the closed revenue period.
		*m: reopenj		&& reopen the jib period
		*p: cgroup
		*p: cperiod
		*p: cyear
		*p: lcloserun
	*</DefinedPropArrayMethod>

	Caption = "Open A Closed Revenue Run"
	DataSession = 2
	DoCreate = .T.
	Height = 154
	HelpContextID = 131
	Name = "FormDmreopenr"
	oregistry = .NULL.
	Width = 375
	Mwresize1.lblHighLight.Name = "lblHighLight"
	Mwresize1.lblShading.Name = "lblShading"
	Mwresize1.Left = 360
	Mwresize1.Name = "Mwresize1"
	Mwresize1.Top = 132

	ADD OBJECT 'cmdClose' AS cmdcommandbuttoncustom WITH ;
		Caption = "\<Cancel", ;
		Height = 36, ;
		Left = 195, ;
		Name = "cmdClose", ;
		TabIndex = 3, ;
		Top = 96, ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdReopen' AS cmdcommandbuttoncustom WITH ;
		Caption = "\<Re-Open", ;
		Height = 36, ;
		Left = 108, ;
		Name = "cmdReopen", ;
		TabIndex = 2, ;
		Top = 96, ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Run No", ;
		Left = 32, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 4, ;
		Top = 50
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Runcombo1' AS runcombo WITH ;
		ColumnWidths = "230,0,0", ;
		cshowwhat = R, ;
		Height = 20, ;
		Left = 80, ;
		lshownew = .F., ;
		Name = "Runcombo1", ;
		TabIndex = 1, ;
		Top = 48, ;
		Width = 257
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="combobox" />
	
	PROCEDURE Error
		LPARAMETERS nerror,cmethod,nline
		LOCAL lnLevel
		
		=aerror(gaerror)
		
		lnLevel = TXNLEVEL()
		
		IF lnLevel > 0
		   FOR lnX = 1 TO lnLevel
		     ROLLBACK
		   ENDFOR
		ENDIF
		
		DODEFAULT(nerror,cmethod,nline)     
	ENDPROC

	PROCEDURE Init
		IF DODEFAULT()
		   *
		   *  See if there are any closed rev periods
		   *
		   SELECT sysctl
		   LOCATE FOR cTypeClose = 'R'
		
		   IF NOT FOUND()
		      THISFORM.oMessage.DISPLAY('There are no closed revenue runs to open.')
		      RETURN .F.
		   ENDIF
		
		   THISFORM.runcombo1.LISTITEMID = 1
		ENDIF
		
	ENDPROC

	PROCEDURE reopen		&& Re-Opens the closed revenue period.
		LOCAL lcsyskey, lcDMBatch, lcDMBatchJ, lcYear, lcPeriod, lcGroup, lcIDChec, llVoidCheck
		LOCAL llSepClose, lnCheck, lnJournal, lcOldRunNo, lcOldRunYear, lnDataSession, llQuiet
		LOCAL laTxnid[1], lcRunYear, lcTxnID, lcTxnIDs, llReturn, lnCount, lnReturn, lnRunNo, lnX, loDelResp
		LOCAL loError, loJournalDel, loResponse, loTxnVoid, oDist, lcSysCtl
		
		llReturn = .T.
		
		TRY
		   lcYear      = THISFORM.runcombo1.LISTITEM[thisform.runcombo1.listitemid, 2]
		   lnRunNo     = INT(VAL(THISFORM.runcombo1.LISTITEM[thisform.runcombo1.listitemid, 3]))
		   lcGroup     = THISFORM.runcombo1.LISTITEM[thisform.runcombo1.listitemid, 4]
		   lcDMBatch   = THISFORM.runcombo1.LISTITEM[thisform.runcombo1.listitemid, 5]
		   lcRunYear   = lcYear
		   llQuiet     = .T.
		   llVoidCheck = .F.
		
		   swselect('sysctl')
		   LOCATE FOR nrunno = lnRunNo AND cRunYear = lcRunYear AND cGroup = lcGroup AND cTypeClose = 'R'
		   IF FOUND()
		      lcSysctl = cidsysctl
		   ELSE
		      * Shouldn't ever get here
		      lcSysctl = '**'
		   ENDIF
		   
		   oDist = CREATEOBJECT('distproc', ' ', ' ', ;
		        '01', ;
		        lcRunYear, ;
		        '00', 'W', DATE(), .F., lnRunNo)
		
		 
		* Get the current datasession id and pass it to the reopen routine so
		* that it can make sure it's in the same data session
		   lnDataSession = SET('datasession')
		   lnReturn      = oDist.ReOpen_Rev_Run(lcRunYear, lnRunNo, lcGroup, lcDMBatch, lnDataSession, .T.)
		 
		   IF lnReturn = 2
		      llVoidCheck = .T.
		   ENDIF
		
		   IF lnReturn <> 0
		*  Remove the QuickBooks Transactions
		      llReturn = m.goApp.oQB.RemoveRevRun(lcRunYear, lnRunno, lcGroup, lcSysCtl, llVoidCheck)
		   ENDIF 
		   
		   IF llReturn AND lnReturn <> 0
		      MESSAGEBOX('Revenue run: ' + lcRunYear + '/' + ALLT(STR(lnRunNo)) + '/' + lcGroup + ' is now open.', 64, 'Revenue Run Reopened')
		   ELSE
		      MESSAGEBOX('There was a problem reopening Revenue run: ' + lcRunYear + '/' + ALLT(STR(lnRunNo)) + '/' + lcGroup + ' is not opened.', 64, 'Revenue Run Open Problem')
		   ENDIF
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'Reopen', loError.LINENO, 'DMReopenR', loError.ERRORNO, loError.MESSAGE, '', loError
		   MESSAGEBOX('Unable to open the revenue run at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		THISFORM.RELEASE()
		
		RETURN llReturn
		 
	ENDPROC

	PROCEDURE reopenj		&& reopen the jib period
		LOCAL lcsyskey, lcDMBatch, lcYear, lcPeriod, lcGroup, lcIDChec
		
		lcYear    = THISFORM.runcombo1.listitem[thisform.runcombo1.listitemid,2]
		lnRunNo   = INT(VAL(THISFORM.runcombo1.listitem[thisform.runcombo1.listitemid,3]))
		lcDMBatch = THISFORM.runcombo1.listitem[thisform.runcombo1.listitemid,5]
		
		*
		*
		*  Remove records from the well history table
		*
		WAIT WIND NOWAIT 'Removing well history records...'
		SELECT wellhist
		DELETE FOR nRunNo = lnRunNo AND cRunYear = lcYear AND cRecType = 'J'
		
		*
		*  Remove records from the owner history table
		*
		WAIT WIND NOWAIT 'Removing owner history records...'
		SELECT disbhist
		DELETE FOR nRunNo = lnRunNo AND cRunYear = lcYear AND cRecType = 'J'
		
		*
		*  Remove journal entries from the glmaster table
		*
		WAIT WIND NOWAIT 'Removing journal entries....'
		SELECT glmaster
		DELETE FOR cDMBatch = lcDMBatch
		
		*
		*  Remove invoices from the invhdr and invdet files
		*
		WAIT WIND NOWAIT 'Removing joint interest billing statements....'
		SELECT invhdr
		DELETE FOR cDMBatch == lcDMBatch
		  
		*
		*  Reset the flag in the expense table
		*
		WAIT WIND NOWAIT 'Resetting closed flag in the well expense records...'
		SELECT expense
		SCAN FOR nRunNorev = lnRunNo AND cRunYearRev = lcYear
		   SELECT expense
		   REPL lClosed WITH .F.
		ENDSCAN      
		
		*
		*  Remove the closed record from the sysctl table
		*
		SELECT sysctl
		DELETE FOR nRunNo = lnRunNo AND cYear = lcYear AND lDisbman AND cTypeClose = 'J'
		
		BEGIN TRANSACTION
		SELE checks
		=TABLEUPDATE(.T.)
		SELE glmaster
		=TABLEUPDATE(.T.)
		SELE susaudit
		=TABLEUPDATE(.T.)
		SELE expense
		=TABLEUPDATE(.T.)
		SELE invhdr
		=TABLEUPDATE(.T.)
		SELE income
		=TABLEUPDATE(.T.)
		SELE wellhist
		=TABLEUPDATE(.T.)
		SELE sysctl
		=TABLEUPDATE(.T.)
		SELE disbhist
		=TABLEUPDATE(.T.)
		SELE wellhist
		=TABLEUPDATE(.T.)
		END TRANSACTION
		
		thisform.oMessage.Display('JIB Run: ' + lcYear+'/'+ALLT(STR(lnRunNo))+ ' is now open.')
		
		
		
	ENDPROC

	PROCEDURE cmdClose.Click
		thisform.release()
	ENDPROC

	PROCEDURE cmdReopen.Click
		thisform.reopen()
	ENDPROC

ENDDEFINE
