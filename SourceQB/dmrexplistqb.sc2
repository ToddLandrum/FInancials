*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="dmrexplistqb.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 200
	Left = 34
	Name = "Dataenvironment"
	Top = 469
	Width = 520

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "expcat", ;
		CursorSource = "expcat", ;
		Database = ..\datafiles\glmdata\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formdmrexplist AS frmrptcriteria OF "appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblLastMeter" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblFirstMeter" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklAFE" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkIncludeQBPost" UniqueID="" Timestamp="" />

	Caption = "Expense Category Listing"
	DoCreate = .T.
	Height = 239
	HelpContextID = 174
	Name = "FormDmrexpList"
	Width = 356
	Swrptcriteriabuttons1.CHKSENDFILE.Alignment = 0
	Swrptcriteriabuttons1.CHKSENDFILE.Name = "CHKSENDFILE"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.CMDPREVIEW.Name = "CMDPREVIEW"
	Swrptcriteriabuttons1.CMDPRINT.Name = "CMDPRINT"
	Swrptcriteriabuttons1.Left = 60
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 6
	Swrptcriteriabuttons1.Top = 177
	Swrptcriteriabuttons1.ZOrderSet = 1

	ADD OBJECT 'chkIncludeQBPost' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Include QuickBooks Posting Accounts", ;
		Left = 88, ;
		Name = "chkIncludeQBPost", ;
		TabIndex = 5, ;
		Top = 144, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\..\ampro_rv\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklAFE' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Only Include AFE Categories", ;
		Left = 88, ;
		Name = "chklAFE", ;
		TabIndex = 4, ;
		Top = 117, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'LblFirstMeter' AS lbllabelcustom WITH ;
		Caption = "First Category:", ;
		Height = 16, ;
		Left = 9, ;
		Name = "LblFirstMeter", ;
		TabIndex = 2, ;
		TabStop = .F., ;
		Top = 15, ;
		Width = 73, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblLastMeter' AS lbllabelcustom WITH ;
		Caption = "Last Category:", ;
		Height = 16, ;
		Left = 9, ;
		Name = "LblLastMeter", ;
		TabIndex = 3, ;
		TabStop = .F., ;
		Top = 66, ;
		Width = 73, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		Left = 89, ;
		Name = "Swrptlook1", ;
		TabIndex = 1, ;
		Top = 12, ;
		ZOrderSet = 0, ;
		Swlookupbutton1.Left = 44, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton1.Top = 0, ;
		Swlookupbutton2.Left = 44, ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		Swlookupbutton2.Top = 52, ;
		TxtBegID.clistexpression = expcat.ccatcode, ;
		TxtBegID.clistworkarea = expcat, ;
		TxtBegID.Height = 20, ;
		TxtBegID.InputMask = "XXXX", ;
		TxtBegID.Left = 0, ;
		TxtBegID.Name = "TxtBegID", ;
		TxtBegID.Top = 0, ;
		TxtBegID.Width = 38, ;
		TxtBegName.Name = "TxtBegName", ;
		TxtEndID.clistexpression = expcat.ccatcode, ;
		TxtEndID.clistworkarea = expcat, ;
		TxtEndID.Height = 20, ;
		TxtEndID.InputMask = "XXXX", ;
		TxtEndID.Left = 0, ;
		TxtEndID.Name = "TxtEndID", ;
		TxtEndID.Top = 51, ;
		TxtEndID.Width = 38, ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />
	
	PROCEDURE builddata
		*
		*   Builds the cursor needed by the report by using
		*   the criteria given in the form
		*
		LOCAL llIncludeQBPost, llReturn, loError
		llReturn = .T.
		
		TRY
		    llIncludeQBPost = THISFORM.chkIncludeQBPost.VALUE
		
		    IF USED('explist')
		        USE IN explist
		    ENDIF
		
		    swselect('taxcodes')
		    COUNT FOR NOT DELETED() TO lnCount
		    IF lnCount = 0
		       m.ctaxcode = 'IC'
		       m.cdesc    = 'Intangible Completion'
		       INSERT INTO taxcodes FROM memvar
		       m.ctaxcode = 'ID'
		       m.cdesc    = 'Intangible Drilling'
		       INSERT INTO taxcodes FROM memvar
		       m.ctaxcode = 'LC'
		       m.cdesc    = 'Leasehold Costs'
		       INSERT INTO taxcodes FROM memvar
		       m.ctaxcode = 'OE'
		       m.cdesc    = 'Lease Operating Expenses'
		       INSERT INTO taxcodes FROM memvar
		       m.ctaxcode = 'TC'
		       m.cdesc    = 'Tangible Completion'
		       INSERT INTO taxcodes FROM memvar
		       m.ctaxcode = 'TD'
		       m.cdesc    = 'Tangible Drilling'
		       INSERT INTO taxcodes FROM memvar
		    ENDIF 
		    
			SELECT  expcat.*, SPACE(60) AS cvendacct, SPACE(60) AS cownacct, taxcodes.cdesc AS ctaxcodedesc  ;
				FROM expcat LEFT OUTER JOIN taxcodes ON taxcodes.ctaxcode = expcat.ctaxcode  ;
				WHERE BETWEEN(expcat.ccatcode, THISFORM.swrptlook1.txtBegID.VALUE, THISFORM.swrptlook1.txtEndID.VALUE)  ;
					AND IIF(THISFORM.chklAFE.VALUE, lAFEType = .T., .T.)  ;
				INTO CURSOR explist READWRITE ;
				ORDER BY ccatcode
		
		    IF llIncludeQBPost
		        THIS.cReportName = 'dmexpcat1'
		        SELECT explist
		        SCAN
		            IF NOT EMPTY(explist.cvendacctlistid) OR NOT EMPTY(explist.cownacctlistid)
		                IF m.goapp.oqb.lqbactive
		                    IF NOT EMPTY(explist.cvendacctlistid)
		                        SELECT accounts
		                        LOCATE FOR clistid == explist.cvendacctlistid
		                        IF FOUND()
		                            SELECT explist
		                            REPLACE cvendacct WITH accounts.cAcctDesc
		                        ENDIF
		                    ENDIF
		                    IF NOT EMPTY(explist.cownacctlistid)
		                        SELECT accounts
		                        LOCATE FOR clistid == explist.cownacctlistid
		                        IF FOUND()
		                            SELECT explist
		                            REPLACE cownacct WITH accounts.cAcctDesc
		                        ENDIF
		                    ENDIF
		                ELSE
		                    REPLACE cvendacct WITH 'Not Connected To QuickBooks'
		                    REPLACE cownacct WITH 'Not Connected To QuickBooks'
		                ENDIF
		            ELSE
		                IF NOT m.goapp.oqb.lqbactive
		                    REPLACE cvendacct WITH 'Not Connected To QuickBooks'
		                    REPLACE cownacct WITH 'Not Connected To QuickBooks'
		                ENDIF
		            ENDIF
		        ENDSCAN
		    ELSE
		        THIS.cReportName = 'dmexpcat'
		    ENDIF
		
		* Remove Nulls
		   SELECT explist
		   SCAN FOR ISNULL(ctaxcodedesc)
		      REPLACE ctaxcodedesc WITH 'Unknown'
		   ENDSCAN 
		
		    THISFORM.cTitle1 = ''
		    THISFORM.cTitle2 = ''
		    THISFORM.cSelectCriteria = 'Expense Category ID: ' + ALLTRIM(THISFORM.swrptlook1.txtBegID.VALUE) +  ;
		        ' - ' + ALLTRIM(THISFORM.swrptlook1.txtEndID.VALUE)
		    THIS.cTitle1     = 'Expense Categories'
		    THIS.cSortOrder  = 'Expense Category ID'
		
		    SELECT explist
		    IF RECC() > 0
		        llReturn = .T.
		    ELSE
		        llReturn = .F.
		    ENDIF
		CATCH TO loError
		    llReturn = .F.
		    DO errorlog WITH 'BuildData', loError.LINENO, 'Dmrexplist', loError.ERRORNO, loError.MESSAGE, '', loError
		    MESSAGEBOX('Unable to process the report at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		          'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
	ENDPROC

	PROCEDURE Init
		SELECT expcat
		SET ORDER TO ccatcode
		GO TOP
		
		THISFORM.swrptlook1.txtBegName.VALUE = ccateg
		THISFORM.swrptlook1.txtBegID.VALUE = ccatcode
		GO BOTTOM
		
		THISFORM.swrptlook1.txtEndName.VALUE = ccateg
		THISFORM.swrptlook1.txtEndID.VALUE = ccatcode
		
		SELECT expcat
		GO TOP
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE Load
		IF DODEFAULT()
		   m.goApp.oQB.QBAccounts('',.F.,.T.,THISFORM.DATASESSIONID)
		ENDIF 
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'ccatcode,ccateg'
		
		DO FORM ..\custom\picklist WITH 'Expcat', lcList, thisform.swrptlook1.txtbegid.value, 2
		
		IF llOK
		   thisform.swrptlook1.txtBegId.value = ccatcode
		   thisform.swrptlook1.txtBegName.value = ccateg
		   thisform.swrptlook1.txtBegId.refresh()
		   thisform.swrptlook1.txtBegName.refresh()
		   
		ENDIF   
		
		thisform.setnextcontrol(thisform.swrptlook1.txtBegId)
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.When
		RETURN MDOWN()
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'ccatcode,ccateg'
		
		DO FORM ..\custom\picklist WITH 'Expcat', lcList, thisform.swrptlook1.txtendid.value, 2
		
		IF llOK
		   thisform.swrptlook1.txtEndId.value = ccatcode
		   thisform.swrptlook1.txtEndName.value = ccateg
		   thisform.swrptlook1.txtEndId.refresh()
		   thisform.swrptlook1.txtEndName.refresh()
		ENDIF   
		
		thisform.setnextcontrol(thisform.swrptlook1.txtEndId)
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.When
		RETURN MDOWN()
	ENDPROC

ENDDEFINE
