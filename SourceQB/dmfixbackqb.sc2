*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="dmfixbackqb.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor11" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor10" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 459
	Left = 40
	Name = "Dataenvironment"
	Top = 235
	Width = 625

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "apopt", ;
		CursorSource = "apopt", ;
		Database = ..\datafiles\gcwwat45data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor10' AS cursor WITH ;
		Alias = "qbpost", ;
		CursorSource = "qbpost", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 461, ;
		Name = "Cursor10", ;
		Top = 230, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor11' AS cursor WITH ;
		Alias = "vendor", ;
		CursorSource = "vendor", ;
		Database = ..\datafiles\gcwwat45data\appdata.dbc, ;
		Height = 90, ;
		Left = 285, ;
		Name = "Cursor11", ;
		Top = 268, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "coa", ;
		CursorSource = "coa", ;
		Database = ..\datafiles\gcwwat45data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "coabal", ;
		CursorSource = "coabal", ;
		Database = ..\datafiles\gcwwat45data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "expense", ;
		CursorSource = "expense", ;
		Database = ..\datafiles\gcwwat45data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor4", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "glmaster", ;
		CursorSource = "glmaster", ;
		Database = ..\datafiles\gcwwat45data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor5", ;
		Order = "glbatch", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "glopt", ;
		CursorSource = "glopt", ;
		Database = ..\datafiles\gcwwat45data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor6", ;
		Top = 138, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor7' AS cursor WITH ;
		Alias = "options", ;
		CursorSource = "options", ;
		Database = ..\datafiles\gcwwat45data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor7", ;
		Top = 261, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor8' AS cursor WITH ;
		Alias = "sysctl", ;
		CursorSource = "sysctl", ;
		Database = ..\datafiles\gcwwat45data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor8", ;
		Order = "yrprdgrp", ;
		Top = 260, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor9' AS cursor WITH ;
		Alias = "expcat", ;
		CursorSource = "expcat", ;
		Database = ..\datafiles\gcwwat45data\appdata.dbc, ;
		Height = 90, ;
		Left = 458, ;
		Name = "Cursor9", ;
		Top = 16, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formdmfixback AS frmformcustom OF "..\custom\cforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="cmdProcess" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdExit" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboProcess" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Glmaint" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swgroup1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: process		&& Releases the fixed expenses
	*</DefinedPropArrayMethod>

	Caption = "Back Out Fixed Expenses"
	DataSession = 2
	DoCreate = .T.
	Height = 215
	HelpContextID = 134
	Name = "FormDmfixback"
	Visible = .T.
	Width = 382
	MWRESIZE1.LBLHIGHLIGHT.Name = "LBLHIGHLIGHT"
	MWRESIZE1.LBLSHADING.Name = "LBLSHADING"
	MWRESIZE1.Name = "MWRESIZE1"

	ADD OBJECT 'cboProcess' AS cbocomboboxcustom WITH ;
		Height = 20, ;
		Left = 96, ;
		Name = "cboProcess", ;
		TabIndex = 6, ;
		Top = 95, ;
		Width = 144
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'cmdExit' AS cmdcommandbuttoncustom WITH ;
		Caption = "E\<xit", ;
		Height = 36, ;
		Left = 203, ;
		Name = "cmdExit", ;
		TabIndex = 9, ;
		Top = 168, ;
		Width = 59
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdProcess' AS cmdcommandbuttoncustom WITH ;
		Caption = "\<Process", ;
		Default = .T., ;
		Height = 36, ;
		Left = 125, ;
		Name = "cmdProcess", ;
		TabIndex = 7, ;
		Top = 168, ;
		Width = 59
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Glmaint' AS glmaint WITH ;
		Height = 15, ;
		Left = 266, ;
		Name = "Glmaint", ;
		Top = 112, ;
		Width = 16
		*< END OBJECT: ClassLib="..\custom\swgl.vcx" BaseClass="custom" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Group", ;
		Left = 50, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 2, ;
		Top = 22
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "Process", ;
		Left = 50, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 3, ;
		Top = 97
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Swgroup1' AS swgroup WITH ;
		BoundColumn = 2, ;
		Left = 98, ;
		lexcludeall = .F., ;
		Name = "Swgroup1", ;
		TabIndex = 1, ;
		Top = 20
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="combobox" />
	
	PROCEDURE Error
		LPARAMETERS nerror,cmethod,nline
		
		LOCAL lnTxnLevel  
		
		=aerror(gaerrors)
		lnTxnLevel = txnlevel()
		
		IF lnTxnLevel > 0
		   ROLLBACK
		ENDIF
		
		thisform.oMessage.Severe('An error occurred while backing out fixed expenses')
		
		thisform.release()
	ENDPROC

	PROCEDURE process		&& Releases the fixed expenses
		LOCAL lcGroup, llAllWells, lcYear, lnRunNo, llSepClose, lnFixedExp
		LOCAL lnFixed, lnTotal, lcExpClear, lcAPAcct, oProgress
		
		SET DELETED ON
		
		* Set the parameter to pass to dmselwell to tell it
		* that we want a list of wells that have fixed expenses
		STORE 2 TO lnFixedExp
		
		*  Get the registry object
		THISFORM.oRegistry = FindGlobalObject('cmRegistry')
		
		*  Get the A/P account
		SWSELECT('apopt')
		lcAPAcct = cAPAcct
		
		*  Get the separate closing for JIB setting
		SWSELECT('options')
		llSepClose = lSepClose
		lcDMExp    = cFixedAcct
		
		IF EMPTY(lcDMExp)
		    lcDMExp = lcAPAcct
		ENDIF
		
		*  Get the expense clearing account
		SWSELECT('glopt')
		llSepAccts = lSepAccounts
		IF llSepAccts
		    lcExpClear = cExpClear
		ELSE
		    lcExpClear = cRevClear
		ENDIF
		
		IF m.goApp.oQB.lQBActive
		    m.goApp.oQB.oQBSM.ClearErrorRecovery()
		* get a message set request object (version 1.1 xml)
		    loRequest = m.goApp.oQB.oQBRequest
		* set the on error attribute for the request
		    loRequest.ATTRIBUTES.OnError = 1
		    loRequest.ClearRequests()
		ELSE
		    THISFORM.oMessage.Warning('You must be connected to QuickBooks before any fixed expenses can be removed.')
		    RETURN
		ENDIF
		
		llAllWells = .F.
		
		tcGroup = THISFORM.swGroup1.VALUE
		
		IF THISFORM.cboProcess.VALUE = 'All Wells'
		    llAllWells = .T.
		ELSE
		    llAllWells = .F.
		ENDIF
		
		*  If all wells are to be processed, select them into wellsel
		IF llAllWells
			SELECT  cWellID, ' ' AS temp ;
				FROM wells  ;
				WHERE IIF(tcGroup <> '**', cGroup = tcGroup, .T.) ;
					AND cWellID IN (SELECT  cWellID ;
										FROM expense ;
										WHERE nrunnorev = 0 ;
											AND nrunnojib = 0 ;
											AND lfixed) ;
				INTO CURSOR wellsel ;
				ORDER BY cWellID
		ELSE
		    DO FORM ..\commonsource\dmselwells WITH tcGroup, lnFixedExp
		ENDIF
		
		*
		*  There were no wells selected
		*
		SELECT wellsel
		IF RECC() = 0
		    THISFORM.oMessage.Warning('There are no fixed expenses found for the selected wells.')
		    RETURN
		ENDIF
		
		lnFixed  = 0
		llClosed = .F.
		
		SELECT wellsel
		SCAN
		    m.cWellID = cWellID
		    SELECT expense
		    SCAN FOR cWellID = m.cWellID ;
		            AND nrunnorev = 0 ;
		            AND nrunnojib = 0 ;
		            AND lfixed = .T.  ;
		            AND cYear <> 'FIXD'
		        lnFixed = lnFixed + 1
		    ENDSCAN
		ENDSCAN
		
		IF lnFixed = 0
		    THISFORM.oMessage.Warning('There are no fixed expenses found for the selected wells.')
		    RETURN
		ENDIF
		
		oProgress = THISFORM.oMessage.ProgressBarEx('Backing Out Fixed Expenses...', '')
		
		SELECT wellsel
		lnMax   = RECC()
		lnCount = 1
		oProgress.SetProgressRange(0, lnMax)
		
		SELE wellsel  &&  Scan selected wells to remove their expenses
		SCAN
		    SCATTER MEMVAR
		    oProgress.SetProgressMessage(' Well: ' + m.cWellID)
		    oProgress.UpdateProgress(lnCount)
		    lnCount = lnCount + 1
		    SELECT expense
		    SCAN FOR cWellID = m.cWellID ;
		            AND nrunnorev = 0 ;
		            AND nrunnojib = 0 ;
		            AND lfixed = .T. ;
		            AND cYear <> 'FIXD'
		        m.cBatch  = cBatch
		        m.cidexpe = cidexpe
		        DELETE NEXT 1
		*
		*  Remove the QuickBooks journal entries
		*
		        IF m.goApp.oQB.lQBActive
		            SELE qbpost
		            LOCATE FOR cidsysctl = m.cBatch
		            IF FOUND()
		                m.nType  = nType
		                lcTxnIDs = mtxnids
		                lnCount  = ALINES(laTxnid, lcTxnIDs)
		                IF lnCount > 0
		                    FOR lnX = 1 TO lnCount
		                        lcTxnID      = PADR(ALLT(laTxnid[lnX]), 36, ' ')
		                        llReturn = m.goApp.oQB.DeleteTxnID(lcTxnID, m.nType)
		                    ENDFOR
		                ENDIF
		            ENDIF
		            
		            SWSELECT('exptxnid')
		            LOCATE FOR cidexpe = m.cidexpe
		            IF FOUND()
		                llReturn = m.goApp.oQB.DeleteTxnID(exptxnid.ctxnid, 15)
		            ENDIF
		        ENDIF
		    ENDSCAN
		ENDSCAN
		
		oProgress.CloseProgress()
		
		THISFORM.oMessage.DISPLAY('Fixed Expenses Removed...')
		
		
	ENDPROC

	PROCEDURE cboProcess.Init
		this.addlistitem('All Wells',1)
		this.addlistitem('Selected Wells',2)
		this.listitemid = 1
		
		DODEFAULT()
	ENDPROC

	PROCEDURE cmdExit.Click
		thisform.release()
	ENDPROC

	PROCEDURE cmdProcess.Click
		thisform.process()
	ENDPROC

	PROCEDURE Swgroup1.Init
		DODEFAULT()
		
		this.listitemid = 1
	ENDPROC

ENDDEFINE
