*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="afeownrpt.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor10" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 853
	Left = 242
	Name = "Dataenvironment"
	Top = 129
	Width = 873

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "afehdr", ;
		CursorSource = "afehdr", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Order = "cafeno", ;
		Top = 20, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor10' AS cursor WITH ;
		Alias = "options", ;
		CursorSource = "options", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 430, ;
		Name = "Cursor10", ;
		Top = 140, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "afedet", ;
		BufferModeOverride = 5, ;
		CursorSource = "afedet", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "expcat", ;
		CursorSource = "expcat", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "taxcodes", ;
		CursorSource = "taxcodes", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor4", ;
		Top = 140, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor5", ;
		Top = 140, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "afeopt", ;
		CursorSource = "afeopt", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor6", ;
		Top = 140, ;
		Width = 101
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor7' AS cursor WITH ;
		Alias = "wellinv", ;
		CursorSource = "wellinv", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor7", ;
		Top = 260, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor8' AS cursor WITH ;
		Alias = "afeowner", ;
		CursorSource = "afeowner", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor8", ;
		Top = 260, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor9' AS cursor WITH ;
		Alias = "investor", ;
		CursorSource = "investor", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor9", ;
		Top = 260, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formaferpt AS frmrptcriteria OF "..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="chkCostPlus" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEndID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBegID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkCatDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcafeno" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboTaxCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLookUpAFE" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklActual" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSignature" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklInvoice" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkAFERemarks" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkExpCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSelected" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSelected" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: calcafe
	*</DefinedPropArrayMethod>

	Caption = "AFE Owner Presentation/Cash Call"
	DataSession = 2
	DoCreate = .T.
	Height = 494
	HelpContextID = 640
	lcloseonescape = .T.
	lconfirmclose = .F.
	Name = "formaferpt"
	Width = 490
	Swrptcriteriabuttons1.chkExport.Alignment = 0
	Swrptcriteriabuttons1.chkExport.Name = "chkExport"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.cmdPreview.Name = "cmdPreview"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 127
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 18
	Swrptcriteriabuttons1.Top = 418
	Swrptcriteriabuttons1.ZOrderSet = 0

	ADD OBJECT 'cboTaxCode' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		FontName = "Courier New", ;
		Height = 20, ;
		Left = 174, ;
		Name = "cboTaxCode", ;
		RowSource = "", ;
		RowSourceType = 0, ;
		TabIndex = 9, ;
		Top = 229, ;
		Width = 216, ;
		ZOrderSet = 21
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'chkAFERemarks' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Include AFE Remarks", ;
		Left = 277, ;
		Name = "chkAFERemarks", ;
		TabIndex = 16, ;
		Top = 311, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkCatDesc' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Use AFE Code Description Instead of Name", ;
		Left = 26, ;
		Name = "chkCatDesc", ;
		TabIndex = 11, ;
		Top = 288, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkCostPlus' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Include Cost Plus and Location Fees", ;
		Left = 26, ;
		Name = "chkCostPlus", ;
		TabIndex = 12, ;
		Top = 312, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkExpCode' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Include Expense Code On Report", ;
		Left = 277, ;
		Name = "chkExpCode", ;
		TabIndex = 17, ;
		Top = 336, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklActual' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Include Owner's Share of Actual Charges", ;
		Left = 26, ;
		Name = "chklActual", ;
		TabIndex = 13, ;
		Top = 336, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklInvoice' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Label Report as an Invoice to be Paid", ;
		Left = 277, ;
		Name = "chklInvoice", ;
		TabIndex = 15, ;
		Top = 288, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSelected' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Choose Selected Owners", ;
		Left = 176, ;
		Name = "chkSelected", ;
		TabIndex = 3, ;
		Top = 94, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSignature' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Include Signature Section", ;
		Left = 26, ;
		Name = "chkSignature", ;
		TabIndex = 14, ;
		Top = 360, ;
		Value = .T.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdLookUpAFE' AS swlookupbutton WITH ;
		Left = 262, ;
		Name = "cmdLookUpAFE", ;
		TabIndex = 2, ;
		Top = 36
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'lblBegID' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Beginning Owner ID:", ;
		Height = 16, ;
		Left = 64, ;
		Name = "lblBegID", ;
		TabIndex = 6, ;
		Top = 117, ;
		Width = 101, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblEndID' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Ending Owner ID.:", ;
		Height = 16, ;
		Left = 76, ;
		Name = "lblEndID", ;
		TabIndex = 7, ;
		Top = 168, ;
		Width = 89, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "AFE No:", ;
		Left = 124, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 4, ;
		Top = 38
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "AFE Section", ;
		Left = 104, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 10, ;
		Top = 231
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSelected' AS lbllabelcustom WITH ;
		Caption = "All Owners Selected", ;
		ForeColor = 0,0,255, ;
		Left = 194, ;
		Name = "lblSelected", ;
		TabIndex = 8, ;
		Top = 152, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		Left = 174, ;
		Name = "Swrptlook1", ;
		TabIndex = 5, ;
		Top = 116, ;
		ZOrderSet = 3, ;
		Swlookupbutton1.Left = 87, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton1.Top = 0, ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		TxtBegID.clistexpression = investor.cownerid, ;
		TxtBegID.clistworkarea = investor, ;
		TxtBegID.Name = "TxtBegID", ;
		TxtBegName.Name = "TxtBegName", ;
		TxtEndID.clistexpression = investor.cownerid, ;
		TxtEndID.clistworkarea = investor, ;
		TxtEndID.Name = "TxtEndID", ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />

	ADD OBJECT 'txtcafeno' AS txtquickfill WITH ;
		clistexpression = afehdr.cafeno, ;
		clistworkarea = afehdr, ;
		Format = "!", ;
		Height = 20, ;
		Left = 174, ;
		Name = "txtcafeno", ;
		TabIndex = 1, ;
		Top = 36, ;
		Width = 84
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="textbox" />
	
	PROCEDURE builddata
		LOCAL nReportBy, cproducer, csortby, lcstart, lcend, lcsafety
		LOCAL lActual, lInvoice, lRemarks, lcAFENo, lcBatch, lcTaxCode, lcWellID, llCatDesc, llExpCOde
		
		PRIVATE llCostPlus, llSignature, llInvoice, llActual
		
		llReturn = .T.
		
		TRY
		 
		   llOldCalc     = FILE(m.goapp.ccommonfolder+'afecalcold.txt')
		   lcAFENo       = THISFORM.txtcAFENo.VALUE
		   lcstart       = THISFORM.swrptlook1.txtBegID.VALUE
		   lcend         = THISFORM.swrptlook1.txtEndID.VALUE
		   llCatDesc     = THISFORM.chkcatdesc.VALUE
		   lcTaxCode     = THISFORM.cboTaxcode.LISTITEM[thisform.cbotaxcode.listitemid, 2]
		   m.lActual     = THISFORM.chklActual.VALUE
		   m.llCostPlus  = THISFORM.chkCostPlus.VALUE
		   m.llSignature = THISFORM.chksignature.VALUE
		   m.llInvoice   = THISFORM.chklInvoice.VALUE
		   m.lRemarks    = THISFORM.chkAFERemarks.VALUE
		   llExpCOde     = THISFORM.chkexpCode.VALUE
		   m.lInvoice    = llInvoice
		   llSelected  = THISFORM.chkselected.VALUE
		
		   IF NOT llSelected
		      SELECT cownerid AS cid FROM investor ;
		         INTO CURSOR SELECTED ;
		         WHERE BETWEEN(cownerid,lcstart,lcend) ;
		         ORDER BY cid
		   ENDIF
		
		   SELECT afehdr
		   SCAN FOR cAFENo = lcAFENo
		      lcWellID = afehdr.cwellid
		      lcBatch  = afehdr.cidafeh
		      IF llOldCalc
		         afecalcold(lcWellID, lcBatch)
		      ELSE
		         afecalc(lcWellID, lcBatch, lcAFENo)
		      ENDIF    
		      SELECT afedet
		      = TABLEUPDATE(.T.)
		   ENDSCAN
		
		   THISFORM.ctitle1         = ''
		   THISFORM.ctitle2         = ''
		   THISFORM.cselectcriteria = ''
		   THISFORM.csortorder      = ''
		
		   * Get the producer's address
		   m.caddr1 = m.goApp.caddress1
		   m.caddr2 = m.goApp.caddress2
		   m.caddr3 = m.goApp.caddress3
		
		   DO CASE
		      CASE NOT m.lActual
		         IF FILE(m.goApp.cRptsFolder + 'afeownrpt1.frx')
		            THISFORM.creportname = m.goApp.cRptsFolder + 'afeownrpt1.frx'
		         ELSE
		            THISFORM.creportname = 'afeownrpt'
		         ENDIF
		      CASE m.lActual
		         THISFORM.creportname = 'afeownrpta'
		   ENDCASE
		
		   SET SAFETY OFF
		
		   SELECT afeopt
		   GO TOP
		   SCATTER MEMVAR
		
		   IF NOT llCatDesc
		      SELE afehdr.cAFENo, ;
		         afehdr.cwellid, ;
		         wells.cwellname, ;
		         wells.ctownship, ;
		         wells.ccounty, ;
		         wells.cstate, ;
		         wells.ndepth, ;
		         expcat.ccateg AS ccateg, ;
		         expcat.ccatcode, ;
		         afedet.nactcost, ;
		         afedet.nestcost, ;
		         taxcodes.cdesc AS ctaxdesc, ;
		         expcat.ctaxcode, ;
		         M.nCostPlus AS nCostPlus, ;
		         M.nLocationFee AS nLocationFee, ;
		         afehdr.cidafeh, ;
		         afehdr.mRemarks, ;
		         expcat.cexpclass, ;
		         SPACE(10) AS cownerid, ;
		         SPACE(40) AS cownname ;
		         FROM afehdr, afedet, wells, expcat, taxcodes ;
		         WHERE afehdr.cAFENo = lcAFENo ;
		         AND afedet.cidafeh = afehdr.cidafeh ;
		         AND expcat.ccatcode = afedet.ccatcode;
		         AND IIF(lcTaxCode <> '**', expcat.ctaxcode = lcTaxCode, .T.) ;
		         AND taxcodes.ctaxcode = expcat.ctaxcode ;
		         AND wells.cwellid = afehdr.cwellid ;
		         AND ! DELETED() ;
		         ORDER BY afehdr.cAFENo, expcat.ccatcode, expcat.ctaxcode ;
		         INTO CURSOR temp
		   ELSE
		      SELE afehdr.cAFENo, ;
		         afehdr.cwellid, ;
		         wells.cwellname, ;
		         wells.ctownship, ;
		         wells.ccounty, ;
		         wells.cstate, ;
		         wells.ndepth, ;
		         expcat.cdescrip AS ccateg, ;
		         expcat.ccatcode, ;
		         afedet.nactcost, ;
		         afedet.nestcost, ;
		         taxcodes.cdesc AS ctaxdesc, ;
		         expcat.ctaxcode, ;
		         M.nCostPlus AS nCostPlus, ;
		         M.nLocationFee AS nLocationFee, ;
		         afehdr.cidafeh, ;
		         afehdr.mRemarks, ;
		         expcat.cexpclass, ;
		         SPACE(10) AS cownerid, ;
		         SPACE(40) AS cownname ;
		         FROM afehdr, afedet, wells, expcat, taxcodes ;
		         WHERE afehdr.cAFENo   = lcAFENo ;
		         AND afedet.cidafeh    = afehdr.cidafeh ;
		         AND expcat.ccatcode   = afedet.ccatcode;
		         AND IIF(lcTaxCode <> '**', expcat.ctaxcode = lcTaxCode, .T.) ;
		         AND taxcodes.ctaxcode = expcat.ctaxcode ;
		         AND wells.cwellid     = afehdr.cwellid ;
		         AND ! DELETED() ;
		         ORDER BY afehdr.cAFENo, expcat.ccatcode, expcat.ctaxcode ;
		         INTO CURSOR temp
		   ENDIF
		
		   SELECT  wellinv.cownerid, ;
		      wellinv.nworkint, ;
		      wellinv.nintclass1, ;
		      wellinv.nintclass2, ;
		      wellinv.nintclass3, ;
		      wellinv.nintclass4, ;
		      wellinv.nintclass5, ;
		      wellinv.nbcpint, ;
		      wellinv.nacpint, ;
		      investor.cownname, ;
		      investor.cownname1, ;
		      investor.caddress1a, ;
		      investor.caddress1b, ;
		      investor.ccity1, ;
		      investor.cstate1, ;
		      investor.czip1 ;
		      FROM wellinv, investor ;
		      WHERE wellinv.cwellid = temp.cwellid ;
		      AND wellinv.cownerid = investor.cownerid ;
		      AND wellinv.cownerid IN (SELECT cid FROM SELECTED) ;
		      AND wellinv.ctypeinv = 'W' ;
		      INTO CURSOR tempdoi ;
		      ORDER BY wellinv.cownerid
		
		   IF _TALLY = 0
		      THISFORM.omessage.warning('No owners have been defined for this AFE section. No report is available.')
		      llReturn = .F.
		      EXIT
		   ENDIF
		
		   CREATE CURSOR tempown ;
		      (cAFENo    C(10), ;
		      cwellid   C(10), ;
		      cwellname C(30), ;
		      ctownship C(30), ;
		      ccounty   C(30), ;
		      cstate    C(2), ;
		      caddr1      C(30),   ;
		      caddr2      C(30),   ;
		      caddr3      C(30),   ;
		      ndepth    N(9), ;
		      ccateg    C(40), ;
		      ctaxdesc  C(30), ;
		      cownerid  C(10), ;
		      cownname  C(40), ;
		      cownname1   C(60),   ;
		      caddress1   C(30),   ;
		      caddress2   C(30),   ;
		      ccityState  C(30),   ;
		      nworkint  N(11, 7), ;
		      ctaxcode  C(2), ;
		      ccatcode  C(4), ;
		      nactcost  N(12, 2), ;
		      nactual   N(12, 2), ;
		      nestcost  N(12, 2), ;
		      nCostPlus N(5, 2), ;
		      nLocationFee N(12, 2), ;
		      lInvoice  L,  ;
		      lRemarks  L, ;
		      mRemarks  M, ;
		      nshare    N(12, 2), ;
		      llCostPlus L, ;
		      llActual   L, ;
		      llSignature L)
		   INDEX ON cAFENo + cownerid + ctaxcode TAG afetag
		
		   SELECT temp
		   SCAN
		      SCATTER MEMVAR MEMO
		      lcCateg = m.ccateg
		      SELE tempdoi
		      SCAN
		         SCATTER MEMVAR
		         IF NOT EMPTY(m.caddress1a)
		            m.caddress1 = m.caddress1a
		            IF NOT EMPTY(m.caddress1b)
		               m.caddress2  = m.caddress1b
		               m.ccityState = ALLTRIM(m.ccity1) + ' ' + m.cstate1 + '  ' + m.czip1
		               m.czipcode   = m.czip1
		            ELSE
		               m.caddress2  = ALLTRIM(m.ccity1) + ' ' + m.cstate1 + '  ' + m.czip1
		               m.ccityState = ''
		               m.czipcode   = m.czip1
		            ENDIF
		         ELSE
		            IF NOT EMPTY(m.caddress1b)
		               m.caddress1  = m.caddress1b
		               m.caddress2  = ALLTRIM(m.ccity1) + ' ' + m.cstate1 + '  ' + m.czip1
		               m.ccityState = ''
		               m.czipcode   = m.czip1
		            ELSE  &&  Blank out address for people with no address, so it doesn't just carry forward the same address from the last owner who had an address filled in
		               m.caddress1  = ''
		               m.caddress2  = ''
		               m.ccityState = ''
		               m.czipcode   = m.czip1
		            ENDIF
		         ENDIF
		
		         DO CASE
		            CASE m.cexpclass = '0'
		               m.nshare  = ROUND(m.nestcost * (m.nworkint / 100), 2)
		               m.nactual = ROUND(m.nactcost * (m.nworkint / 100), 2)
		            CASE m.cexpclass = '1'
		               m.nshare   = ROUND(m.nestcost * (m.nintclass1 / 100), 2)
		               m.nactual  = ROUND(m.nactcost * (m.nintclass1 / 100), 2)
		               m.nworkint = m.nintclass1
		            CASE m.cexpclass = '2'
		               m.nshare   = ROUND(m.nestcost * (m.nintclass2 / 100), 2)
		               m.nactual  = ROUND(m.nactcost * (m.nintclass2 / 100), 2)
		               m.nworkint = m.nintclass2
		            CASE m.cexpclass = '3'
		               m.nshare   = ROUND(m.nestcost * (m.nintclass3 / 100), 2)
		               m.nactual  = ROUND(m.nactcost * (m.nintclass3 / 100), 2)
		               m.nworkint = m.nintclass3
		            CASE m.cexpclass = '4'
		               m.nshare   = ROUND(m.nestcost * (m.nintclass4 / 100), 2)
		               m.nactual  = ROUND(m.nactcost * (m.nintclass4 / 100), 2)
		               m.nworkint = m.nintclass4
		            CASE m.cexpclass = '5'
		               m.nshare   = ROUND(m.nestcost * (m.nintclass5 / 100), 2)
		               m.nactual  = ROUND(m.nactcost * (m.nintclass5 / 100), 2)
		               m.nworkint = m.nintclass5
		            CASE m.cexpclass = 'A'
		               m.nshare   = ROUND(m.nestcost * (m.nacpint / 100), 2)
		               m.nactual  = ROUND(m.nactcost * (m.nacpint / 100), 2)
		               m.nworkint = m.nacpint
		            CASE m.cexpclass = 'B'
		               m.nshare   = ROUND(m.nestcost * (m.nbcpint / 100), 2)
		               m.nactual  = ROUND(m.nactcost * (m.nbcpint / 100), 2)
		               m.nworkint = m.nbcpint
		            OTHERWISE
		               m.nshare  = ROUND(m.nestcost * (m.nworkint / 100), 2)
		               m.nactual = ROUND(m.nactcost * (m.nworkint / 100), 2)
		         ENDCASE
		         lcCateg = m.ccateg
		         IF llExpCOde
		            m.ccateg = m.ccatcode + '-' + m.ccateg
		         ENDIF
		         INSERT INTO tempown FROM MEMVAR
		         m.ccateg = lcCateg
		      ENDSCAN
		   ENDSCAN
		
		   SELE tempown
		   IF RECC() <> 0
		      llReturn = .T.
		   ELSE
		      llReturn = .F.
		   ENDIF
		
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'BuildData', loError.LINENO, 'AFE Owner Presentation', loError.ERRORNO, loError.MESSAGE, '', loError
		   MESSAGEBOX('Unable to process the report at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		      'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
		
	ENDPROC

	PROCEDURE calcafe
	ENDPROC

	PROCEDURE Init
		DODEFAULT()
		
		SELECT investor
		SET ORDER TO cownerid
		GO TOP
		THISFORM.swrptlook1.txtBegID.VALUE   = cownerid
		THISFORM.swrptlook1.txtBegName.VALUE = csortfield
		GO BOTTOM
		THISFORM.swrptlook1.txtEndID.VALUE     = cownerid
		THISFORM.swrptlook1.txtEndName.VALUE = csortfield
		
		SELECT afehdr
		SET ORDER to cafeno
		GO TOP 
		thisform.txtcafeno.set('value',afehdr.cAFENo)
		
		THISFORM.chkCostPlus.VALUE = .F.
		
		SELECT options
		GO top
		IF lAcctDesc  &&  If the option is marked to use the category description on other reports, mark this option, too, by default
		   thisform.chkCatDesc.set('value',.t.)
		endif   
		
		* If we're in demo mode, tell the user that this is an optional module
		IF m.goapp.ldemo
		   THISFORM.omessage.warning('The AFE module is an optional module that can be purchased separately.' + ;
		      ' It is included in the demo for evaluation purposes.')
		ENDIF
		
		
		
		
		
		
		
	ENDPROC

	PROCEDURE cboTaxCode.Init
		dodefault()
		
		SELECT cdesc, ctaxcode FROM taxcodes INTO ARRAY laTaxCodes ORDER BY ctaxcode
		
		IF _tally > 0
		   this.addlistitem('All Sections',1,1)
		   this.addlistitem('**',1,2)
		   FOR lnX = 1 TO _tally
		       this.addlistitem(laTaxCodes[lnX,1],lnX+1,1)
		       this.addlistitem(laTaxCodes[lnX,2],lnX+1,2)
		   ENDFOR    
		ENDIF
		
		this.listitemid = 1
	ENDPROC

	PROCEDURE chkSelected.Click
		IF this.Value
		   DO FORM commonsource\selected-ids WITH 'OWNER' LINKED 
		   lnCount = RECCOUNT('selected')
		   thisform.lblselected.Caption = TRANSFORM(lnCount) + ' Owners Selected'
		   thisform.lblselected.Visible = .T.
		   thisform.lblbegID.Visible = .F.
		   thisform.lblendID.Visible = .F.
		   thisform.swrptlook1.Visible = .F.
		ELSE
		   thisform.lblselected.Visible = .F.
		   thisform.lblbegID.Visible = .T.
		   thisform.lblendID.Visible = .T.
		   thisform.swrptlook1.Visible = .T.
		ENDIF 
	ENDPROC

	PROCEDURE cmdLookUpAFE.Click
		LOCAL lcList
		PRIV llOK
		
		IF USED('looktemp')
		   USE IN looktemp
		ENDIF
		IF USED('looktemp1')
		   USE IN looktemp1
		ENDIF
		
		SELECT cAFENo,afehdr.cWellID,cWellName FROM afehdr,wells INTO CURSOR looktemp1 WHERE afehdr.cWellID = wells.cWellID
		
		SELECT looktemp1
		USE DBF('looktemp1') AGAIN IN 0 ALIAS looktemp
		SELECT looktemp
		INDEX ON cAFENo TAG cAFENo
		INDEX ON cWellID TAG cWellID
		INDEX ON cWellName TAG cWellName
		
		llOK = .T.
		
		
		lcList = 'cAFeNo\AFE No.,cWellID\Well ID,cWellName\WellName'
		
		DO FORM ..\CUSTOM\PickList WITH 'looktemp', lcList, THISFORM.txtcAFENo.VALUE, 3, .T.,.T.
		
		IF llOK
		   THISFORM.txtcAFENo.SET('value',looktemp.cAFENo)
		   THISFORM.txtcAFENo.VALID()
		ENDIF
		
		THISFORM.setnextcontrol(THISFORM.txtcAFENo)
		
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .T.
		
		
		   lcList = 'cOwnerID,cOwnName'
		
		   DO FORM ..\CUSTOM\PickList WITH 'Investor', lcList, thisform.swrptlook1.txtbegid.value, 2
		
		   IF llOK
		      THISFORM.swrptlook1.txtBegID.VALUE = investor.cownerid
		      THISFORM.swrptlook1.txtBegName.VALUE = investor.cownname
		      THISFORM.swrptlook1.txtBegID.REFRESH()
		      THISFORM.swrptlook1.txtBegName.REFRESH()
		   ENDIF
		
		THISFORM.setnextcontrol(THIS.PARENT.TxtBegID)
		
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .T.
		
		
		   lcList = 'cOwnerID,cOwnName'
		
		   DO FORM ..\CUSTOM\PickList WITH 'Investor', lcList, thisform.swrptlook1.txtEndid.value, 2
		
		   IF llOK
		      THISFORM.swrptlook1.txtEndID.VALUE = investor.cownerid
		      THISFORM.swrptlook1.txtEndName.VALUE = investor.cownname
		      THISFORM.swrptlook1.txtEndID.REFRESH()
		      THISFORM.swrptlook1.txtEndName.REFRESH()
		   ENDIF
		
		THISFORM.setnextcontrol(THIS.PARENT.TxtEndID)
		
		
	ENDPROC

	PROCEDURE txtcafeno.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.cmdLookUpAFE.CLICK()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtcafeno.LostFocus
		ON KEY LABEL F2 *
		
	ENDPROC

ENDDEFINE
