*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="dmdirectdep.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor10" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor11" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor12" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor13" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor14" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor15" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor16" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor19" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor20" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor21" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor17" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 761
	Left = -1
	Name = "Dataenvironment"
	Top = -2
	Width = 1016

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "groups", ;
		CursorSource = "groups", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 11, ;
		Name = "Cursor1", ;
		Top = 7, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor10' AS cursor WITH ;
		Alias = "sevtax", ;
		CursorSource = "sevtax", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor10", ;
		Top = 380, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor11' AS cursor WITH ;
		Alias = "susaudit", ;
		CursorSource = "susaudit", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor11", ;
		Top = 380, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor12' AS cursor WITH ;
		Alias = "sysctl", ;
		CursorSource = "sysctl", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor12", ;
		Top = 380, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor13' AS cursor WITH ;
		Alias = "vendor", ;
		CursorSource = "vendor", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor13", ;
		Top = 500, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor14' AS cursor WITH ;
		Alias = "wellhist", ;
		CursorSource = "wellhist", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor14", ;
		Top = 500, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor15' AS cursor WITH ;
		Alias = "wellinv", ;
		CursorSource = "wellinv", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor15", ;
		Top = 500, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor16' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\newdbc\appdata.dbc, ;
		Filter = "lcompressor = .f.", ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor16", ;
		Top = 620, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor17' AS cursor WITH ;
		Alias = "owntots", ;
		CursorSource = "owntots", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 423, ;
		Name = "Cursor17", ;
		Top = 133, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor19' AS cursor WITH ;
		Alias = "appurchd", ;
		CursorSource = "appurchd", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor19", ;
		Top = 138, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "investor", ;
		CursorSource = "investor", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 149, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor20' AS cursor WITH ;
		Alias = "roundtmp", ;
		CursorSource = "roundtmp", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 416, ;
		Name = "Cursor20", ;
		Top = 259, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor21' AS cursor WITH ;
		Alias = "revcat", ;
		CursorSource = "revcat", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor21", ;
		Top = 622, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "disbhist", ;
		CursorSource = "disbhist", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "expense", ;
		CursorSource = "expense", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor4", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "expcat", ;
		CursorSource = "expcat", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor5", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "options", ;
		BufferModeOverride = 3, ;
		CursorSource = "options", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 429, ;
		Name = "Cursor6", ;
		Top = 379, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor7' AS cursor WITH ;
		Alias = "income", ;
		CursorSource = "income", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor7", ;
		Top = 260, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor8' AS cursor WITH ;
		Alias = "programs", ;
		CursorSource = "programs", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor8", ;
		Top = 260, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor9' AS cursor WITH ;
		Alias = "revsrc", ;
		CursorSource = "revsrc", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 291, ;
		Name = "Cursor9", ;
		Top = 259, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formdmdirectdep AS frmrptcriteria OF "..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Runcombo1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkTestFile" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSelected" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSelected" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: backtaxwith		&& Process backup and tax withholding
		*m: buildstmt
		*m: calccompress		&& Process Compression/Gathering Charges
		*m: calcexpense		&& Does expense calculations
		*m: calcincome		&& Does income calculations
		*m: calctaxes		&& Does tax calculations
		*m: deficits_own		&& Process deficits when netting all wells together for an owner.
		*m: deficits_well		&& Process well deficits when not netting wells together.
		*m: flatowner		&& Processes revenue for flat owners.
		*m: getprevmins		&& Get previous minimums
		*m: getrange		&& Gets the oil and gas period ranges.
		*m: intonhold		&& Process released interest on holds.
		*m: netbalance		&& Print net balance this period.
		*m: netwelltotalnosplit		&& Prints the well net total line if production periods are not split into their own sections.
		*m: netwelltotalsplit		&& Processes the net well total
		*m: ownerstmt
		*m: prevmins		&& Brings in Previous Minimums
		*m: pulltype		&& Remove owner types not being reported.
		*m: rounding		&& Reports rounding
		*m: stmtnotes		&& Brings in any statement notes.
		*p: cdmbatch		&& DM Batch Code
		*p: cgroup
		*p: cowner1
		*p: cowner2
		*p: cownerid		&& Current Owner we're working with
		*p: cperiod
		*p: cprogcode
		*p: crunyear
		*p: ctypeint
		*p: ctypeinv
		*p: cwell1
		*p: cwell2
		*p: cwellid
		*p: cyear
		*p: dacctdate
		*p: gastax1
		*p: gastax2
		*p: gastax3
		*p: gastax4
		*p: lallminsreleased
		*p: lbelowminimum
		*p: lcanceled
		*p: lclosed
		*p: lcloserun
		*p: lexemptroyalty
		*p: lnetwells		&& .T. = net wells together in this group
		*p: lowneronhold
		*p: lownertaxexempt		&& Owner is tax exempt
		*p: lroyaltyowner		&& Owner is a royalty owner
		*p: lsplitperiods
		*p: nbackupwith		&& Backup Withholding
		*p: nbalance
		*p: ncompress
		*p: ngasamount
		*p: ngasrevenue
		*p: ngastax1
		*p: ngastax2
		*p: ngastax3
		*p: ngastax4
		*p: ngather
		*p: noilamount
		*p: noilrevenue
		*p: noiltax1
		*p: noiltax2
		*p: noiltax3
		*p: noiltax4
		*p: notheramount
		*p: nothtax1
		*p: nothtax2
		*p: nothtax3
		*p: nothtax4
		*p: nownertotal
		*p: nrunno
		*p: ntaxwith		&& Tax Withholding
		*p: ntotalbbl
		*p: ntotalmcf
		*p: ntotalother
		*p: ntotinc		&& Total Income Variable
		*p: ntotnet
		*p: nwellnet
		*p: nwelltot
		*p: nworkint
		*p: odist		&& DistProc object
		*p: oiltax1
		*p: oiltax2
		*p: oiltax3
		*p: oiltax4
		*p: oinvtmp		&& Invtmp object
		*p: ooptions
		*p: othtax1
		*p: othtax2
		*p: othtax3
		*p: othtax4
		*p: owellwork		&& Wellwork object
		*p: ownergroup
	*</DefinedPropArrayMethod>

	Caption = "Re-Create Direct Deposit ACH File"
	cowner2 = 
	cownerid = 		&& Current Owner we're working with
	cperiod = 
	creportname = 
	cselectcriteria = 
	csortorder = 
	ctitle2 = 
	ctypeint = 
	ctypeinv = 
	cwell1 = 
	cwell2 = 
	cwellid = 
	cyear = 
	dacctdate = {}
	DataSession = 2
	DoCreate = .T.
	Height = 368
	HelpContextID = 667
	Name = "FormDMDirectDep"
	Width = 513
	Swrptcriteriabuttons1.CHKEXPORT.Alignment = 0
	Swrptcriteriabuttons1.CHKEXPORT.Name = "CHKEXPORT"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.cmdPreview.Caption = "\<Create"
	Swrptcriteriabuttons1.cmdPreview.Name = "cmdPreview"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.cmdPrint.Visible = .F.
	Swrptcriteriabuttons1.Left = 144
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 4
	Swrptcriteriabuttons1.Top = 288
	Swrptcriteriabuttons1.ZOrderSet = 0

	ADD OBJECT 'chkSelected' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Choose Selected Owners", ;
		Left = 173, ;
		Name = "chkSelected", ;
		TabIndex = 7, ;
		Top = 115, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkTestFile' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Create an all zero pre-note file", ;
		Left = 168, ;
		Name = "chkTestFile", ;
		TabIndex = 1, ;
		Top = 24, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Run No", ;
		Left = 97, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 3, ;
		Top = 74
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSelected' AS lbllabelcustom WITH ;
		Caption = "All Owners Selected", ;
		ForeColor = 0,0,255, ;
		Left = 193, ;
		Name = "lblSelected", ;
		TabIndex = 32, ;
		Top = 176, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Runcombo1' AS runcombo WITH ;
		cshowwhat = R, ;
		Height = 20, ;
		Left = 144, ;
		lshownew = .F., ;
		Name = "Runcombo1", ;
		TabIndex = 2, ;
		Top = 72, ;
		Width = 257
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		Left = 170, ;
		Name = "Swrptlook1", ;
		TabIndex = 8, ;
		Top = 143, ;
		ZOrderSet = 4, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		txtBegID.clistexpression = investor.cownerid, ;
		txtBegID.clistworkarea = investor, ;
		txtBegID.Name = "txtBegID", ;
		TxtBegName.Name = "TxtBegName", ;
		txtEndID.clistexpression = investor.cownerid, ;
		txtEndID.clistworkarea = investor, ;
		txtEndID.Name = "txtEndID", ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />
	
	PROCEDURE backtaxwith		&& Process backup and tax withholding
	ENDPROC

	PROCEDURE builddata
		LOCAL tcOwner1, tcOwner2, tcYear, tcPeriod, tcWellID1, tcWellID2, ownstmt
		LOCAL oDist AS 'distproc'
		LOCAL ldDirectDate, llReturn, loError
		*:Global tcDMBatch, tcGroup, tdAcctDate, tnRunNo
		
		llReturn = .T.
		
		TRY
		    tcYear          = THISFORM.runcombo1.LISTITEM[thisform.runcombo1.listitemid, 2]
		    tnRunNo         = INT(VAL(THISFORM.runcombo1.LISTITEM[thisform.runcombo1.listitemid, 3]))
		    tcGroup         = THISFORM.runcombo1.LISTITEM[thisform.runcombo1.listitemid, 4]
		    tdAcctDate      = CTOD(THISFORM.runcombo1.LISTITEM[thisform.runcombo1.listitemid, 7])
		    tcDMBatch       = THISFORM.runcombo1.LISTITEM[thisform.runcombo1.listitemid, 5]
		    THISFORM.cgroup = tcGroup
		    tlTestFile      = THISFORM.chktestFile.VALUE
		    tlSelected      = thisform.chkselected.Value
		    tcOwner1        = thisform.swrptlook1.txtbegID.Value
		    tcOwner2        = thisform.swrptlook1.txtendID.value
		    
		    IF NOT tlSelected
		       SELECT cownerid as cid FROM investor ;
		         INTO CURSOR selected ;
		         WHERE BETWEEN(cownerid,tcOwner1,tcOwner2) ;
		         ORDER BY cid
		    ENDIF 
		
		    SELECT options
		    GO TOP
		    SCATTER NAME THIS.oOptions
		
		*
		*  Call distproc to create the (invtmp) and (wellwork) cursors
		*
		    oDist = CREATEOBJECT('distproc', tcOwner1, tcOwner2, ;
		          '01', ;
		          tcYear, ;
		          tcGroup, 'O', tdAcctDate, .F., tnRunNo)
		
		* 
		* Check for direct deposit entries and if get the effective date for the ach batch.
		*
		    IF m.goapp.ldirdmdep
		        IF NOT USED('investor')
		            USE investor IN 0
		        ENDIF
		        SELE investor
		        LOCATE FOR ldirectdep
		        IF FOUND()
		            DO FORM dmgetdddate TO ldDirectDate
		            IF EMPTY(ldDirectDate)
		               MESSAGEBOX('A valid direct deposit date must be specified. ' + ;
		                          'Please specify a valid date and try again.',16,'Invalid Date')
		               llReturn = .f.
		               exit
		            ENDIF            
		            oDist.dDirectDate = ldDirectDate
		            oDist.lReport     = .T.
		        ELSE
		            MESSAGEBOX('There are no owners setup for direct deposit. Nothing to do.', 16, 'Direct Deposit')
		            llReturn = .F.
		            EXIT
		        ENDIF
		    ELSE
		        MESSAGEBOX('The direct deposit module is not active. Please see SherWare sales about purchasing this module.', 16, 'Direct Deposit Module')
		        llReturn = .F.
		        EXIT
		    ENDIF
		
		    IF NOT tlTestFile
		        IF oDist.MAIN(.F., .F.)
		            WAIT WIND NOWAIT 'Building Report File....'
		            oDist.directdeposit(tlTestFile)
		            IF NOT USED('dirdep')
		                USE(m.goapp.cdatafilepath + 'dirdep.dbf') IN 0
		            ENDIF
		            SELE dirdep
		            LOCATE FOR nrunno = tnRunNo AND crunyear = tcYear
		            IF FOUND()
		                THISFORM.omessage.DISPLAY('Finished creating direct deposit file.' + CHR(13) + ;
		                      'Entries: ' + TRANSFORM(dirdep.ncount, "999,999") + ' Total: ' + ;
		                      TRANSFORM(dirdep.namount, "$$$,$$$,$$$.99"))
		            ELSE
		                thisform.oMessage.Display('There were no direct deposit checks this run.')          
		            ENDIF
		            llReturn = .T.
		        ELSE
		            MESSAGEBOX('Unable to create the direct deposit file for this run.', 16, 'Direct Deposit')
		        ENDIF
		    ELSE
		        WAIT WIND NOWAIT 'Building Report File....'
		        llReturn = oDist.directdeposit(tlTestFile)
		        IF llReturn
		           MESSAGEBOX('Test file: ' + CHR(10) + ;
		                      ALLTRIM(m.goapp.cdatafilepath)+'ACH\DP_TEST_FILE.TXT' + CHR(10) + ;
		                      'was created.',0,'Direct Deposit Test File')
		        ELSE
		           MESSAGEBOX('Unable to create the direct deposit test file. Check the system log for more information.',0,'Direct Deposit Test File')
		        ENDIF 
		    ENDIF
		CATCH TO loError
		    llReturn = .F.
		    DO errorlog WITH 'BuildData', loError.LINENO, 'DirectDep', loError.ERRORNO, loError.MESSAGE, '', loError
		    MESSAGEBOX('Unable to process the direct deposit file at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		          'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
		
		
		
		
	ENDPROC

	PROCEDURE buildstmt
	ENDPROC

	PROCEDURE calccompress		&& Process Compression/Gathering Charges
	ENDPROC

	PROCEDURE calcexpense		&& Does expense calculations
	ENDPROC

	PROCEDURE calcincome		&& Does income calculations
	ENDPROC

	PROCEDURE calctaxes		&& Does tax calculations
	ENDPROC

	PROCEDURE deficits_own		&& Process deficits when netting all wells together for an owner.
	ENDPROC

	PROCEDURE deficits_well		&& Process well deficits when not netting wells together.
	ENDPROC

	PROCEDURE flatowner		&& Processes revenue for flat owners.
	ENDPROC

	PROCEDURE getprevmins		&& Get previous minimums
	ENDPROC

	PROCEDURE getrange		&& Gets the oil and gas period ranges.
	ENDPROC

	PROCEDURE intonhold		&& Process released interest on holds.
	ENDPROC

	PROCEDURE netbalance		&& Print net balance this period.
	ENDPROC

	PROCEDURE netwelltotalnosplit		&& Prints the well net total line if production periods are not split into their own sections.
	ENDPROC

	PROCEDURE netwelltotalsplit		&& Processes the net well total
	ENDPROC

	PROCEDURE ownerstmt
	ENDPROC

	PROCEDURE prevmins		&& Brings in Previous Minimums
	ENDPROC

	PROCEDURE pulltype		&& Remove owner types not being reported.
	ENDPROC

	PROCEDURE report
		lpara lcbutton
		* Do Nothing
	ENDPROC

	PROCEDURE rounding		&& Reports rounding
	ENDPROC

	PROCEDURE stmtnotes		&& Brings in any statement notes.
	ENDPROC

	PROCEDURE chkSelected.Click
		IF this.Value
		   DO FORM commonsource\selected-ids WITH 'OWNER' LINKED 
		   lnCount = RECCOUNT('selected')
		   thisform.lblselected.Caption = TRANSFORM(lnCount) + ' Owners Selected'
		   thisform.lblselected.Visible = .T.
		   thisform.lblbegID.Visible = .F.
		   thisform.lblendID.Visible = .F.
		   thisform.swrptlook1.Visible = .F.
		ELSE
		   thisform.lblselected.Visible = .F.
		   thisform.lblbegID.Visible = .T.
		   thisform.lblendID.Visible = .T.
		   thisform.swrptlook1.Visible = .T.
		ENDIF 
	ENDPROC

	PROCEDURE chkTestFile.Click
		IF this.Value
		   thisform.runCOMBO1.enabled = .f.
		ELSE
		   thisform.runCOMBO1.enabled = .t.
		ENDIF    
		
	ENDPROC

	PROCEDURE Runcombo1.Init
		IF DODEFAULT()
		   this.listitemid = 1
		ENDIF   
	ENDPROC

	PROCEDURE Swrptlook1.Init
		swselect('investor')
		SET ORDER to cownerid
		GO top
		thisform.swrptlook1.txtbegID.set('value',investor.cownerid)
		thisform.swrptlook1.txtbegName.set('value',investor.csortfield)
		GO bott
		thisform.swrptlook1.txtendID.set('value',investor.cownerid)
		thisform.swrptlook1.txtendName.set('value',investor.csortfield)
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cownerid,csortfield'
		
		DO FORM ..\custom\picklist WITH 'Investor', lcList, thisform.swrptlook1.txtbegid.value, 2
		
		IF llOK
		   thisform.swrptlook1.txtBegId.value = cOwnerID
		   thisform.swrptlook1.txtBegName.value = cSortField
		   thisform.swrptlook1.txtBegId.refresh()
		   thisform.swrptlook1.txtBegName.refresh()
		ENDIF   
		
		thisform.setnextcontrol(thisform.swrptlook1.txtBegId)
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cownerid,csortfield'
		
		DO FORM ..\custom\picklist WITH 'Investor', lcList, thisform.swrptlook1.txtendid.value, 2
		
		IF llOK
		   thisform.swrptlook1.txtEndId.value = cOwnerID
		   thisform.swrptlook1.txtEndName.value = cSortField
		   thisform.swrptlook1.txtEndId.refresh()
		   thisform.swrptlook1.txtEndName.refresh()
		ENDIF   
		
		thisform.setnextcontrol(thisform.swrptlook1.txtEndId)
		
	ENDPROC

ENDDEFINE
