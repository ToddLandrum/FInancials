*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="bmrprodmove.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 200
	Left = 40
	Name = "Dataenvironment"
	Top = 235
	Width = 520

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "items", ;
		CursorSource = "items", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "disposal", ;
		CursorSource = "disposal", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "invdet", ;
		CursorSource = "invdet", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "invhdr", ;
		CursorSource = "invhdr", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor4", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "leases", ;
		CursorSource = "leases", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor5", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "custs", ;
		CursorSource = "custs", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor6", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formbmrworkord AS frmrptcriteria OF "..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="opgReportBy" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkDisposal" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtddate1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtddate2" UniqueID="" Timestamp="" />

	Caption = "Product Movement Reports"
	DoCreate = .T.
	Height = 410
	HelpContextID = 652
	Name = "FormBmrworkord"
	Width = 388
	Swrptcriteriabuttons1.CHKEXPORT.Alignment = 0
	Swrptcriteriabuttons1.CHKEXPORT.Name = "CHKEXPORT"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.cmdPreview.Name = "cmdPreview"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 72
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 11
	Swrptcriteriabuttons1.Top = 312

	ADD OBJECT 'chkDisposal' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Only Show Disposal Site", ;
		Left = 120, ;
		Name = "chkDisposal", ;
		TabIndex = 8, ;
		Top = 261
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Report By", ;
		Left = 49, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 2, ;
		Top = 29
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "Date Range", ;
		Left = 41, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 3, ;
		Top = 101
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom3' AS lbllabelcustom WITH ;
		Caption = "-", ;
		FontBold = .T., ;
		Height = 16, ;
		Left = 223, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 5, ;
		Top = 102, ;
		Width = 6
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom6' AS lbllabelcustom WITH ;
		Caption = "Beginning Item", ;
		Left = 28, ;
		Name = "Lbllabelcustom6", ;
		TabIndex = 9, ;
		Top = 144
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom7' AS lbllabelcustom WITH ;
		Caption = "Ending Item", ;
		Left = 43, ;
		Name = "Lbllabelcustom7", ;
		TabIndex = 10, ;
		Top = 195
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'opgReportBy' AS opgoptiongroupcustom WITH ;
		BorderStyle = 0, ;
		ButtonCount = 2, ;
		Height = 48, ;
		Left = 108, ;
		Name = "opgReportBy", ;
		TabIndex = 1, ;
		Top = 24, ;
		Width = 168, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "Detail", ;
		Option1.FontSize = 8, ;
		Option1.Height = 16, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Top = 5, ;
		Option1.Width = 44, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "Summary", ;
		Option2.FontSize = 8, ;
		Option2.Height = 16, ;
		Option2.Left = 5, ;
		Option2.Name = "Option2", ;
		Option2.Top = 24, ;
		Option2.Width = 63
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		Left = 120, ;
		Name = "Swrptlook1", ;
		TabIndex = 7, ;
		Top = 142, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		txtBegID.clistexpression = citemid, ;
		txtBegID.clistworkarea = items, ;
		txtBegID.Name = "txtBegID", ;
		TxtBegName.Name = "TxtBegName", ;
		txtEndID.clistexpression = citemid, ;
		txtEndID.clistworkarea = items, ;
		txtEndID.Name = "txtEndID", ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />

	ADD OBJECT 'txtddate1' AS dpk WITH ;
		ControlSource = "", ;
		Height = 20, ;
		Left = 120, ;
		Name = "txtddate1", ;
		TabIndex = 6, ;
		Top = 100, ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtddate2' AS dpk WITH ;
		ControlSource = "", ;
		Height = 20, ;
		Left = 236, ;
		Name = "txtddate2", ;
		TabIndex = 7, ;
		Top = 100, ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />
	
	PROCEDURE builddata
		lcTitle1 = DTOC(THISFORM.txtdDate1.VALUE) + ' - ' + DTOC(THISFORM.txtdDate2.VALUE)
		
		ldDate1  = THISFORM.txtdDate1.VALUE
		ldDate2  = THISFORM.txtdDate2.VALUE
		lcItem1  = THISFORM.swrptlook1.txtbegid.value
		lcItem2  = THISFORM.swrptlook1.txtendid.value
		llDetail = IIF(THISFORM.opgReportBy.VALUE=1,.T.,.F.)
		llDisposal = THISFORM.chkdisposal.VALUE
		
		CREATE CURSOR bmprods ;
		   (cItemID    C(10), ;
		   cItemDesc  C(30), ;
		   cCustID    C(10), ;
		   cCustName  C(30), ;
		   cOwnerID   C(10), ;
		   cIDLease   C(10),  ;
		   cWorkOrd C(10), ;
		   dDate      D,     ;
		   nQty       N(12,2), ;
		   nHaulRev   N(12,2), ;
		   nDispRev   N(12,2))
		
		IF NOT llDetail
		   IF NOT llDisposal
		      SELECT SUM(invdet.nQuantity)  AS nQty, ;
		         invdet.dWorkDate AS dDate, ;
		         invdet.cItemID, ;
		         items.cItemDesc, ;
		         invdet.cdisperm, ;
		         invhdr.cCustID, ;
		         SUM(IIF(NOT EMPTY(invdet.cdisperm),invdet.nextension,0)) AS nDispRev, ;
		         SUM(IIF(NOT EMPTY(invdet.cdisperm),0,invdet.nextension)) AS nHaulRev ;
		         FROM invdet, invhdr, items ;
		         WHERE invdet.cbatch = invhdr.cbatch ;
		         AND invdet.cItemID = items.cItemID ;
		         AND BETWEEN(items.cItemID,lcItem1, lcItem2) ;
		         AND items.ctype = 'B' ;
		         AND BETWEEN(invdet.dWorkDate,ldDate1,ldDate2) ;
		         INTO CURSOR tmp ;
		         ORDER BY invdet.cItemID ;
		         GROUP BY invdet.cItemID
		   ELSE
		      SELECT SUM(invdet.nQuantity)  AS nQty, ;
		         invdet.dWorkDate AS dDate, ;
		         items.cItemID, ;
		         invdet.cItemDesc, ;
		         invdet.cdisperm, ;
		         invhdr.cCustID, ;
		         SUM(IIF(NOT EMPTY(invdet.cdisperm),invdet.nextension,0)) AS nDispRev, ;
		         SUM(IIF(NOT EMPTY(invdet.cdisperm),0,invdet.nextension)) AS nHaulRev ;
		         FROM invdet, invhdr, items ;
		         WHERE invdet.cbatch = invhdr.cbatch ;
		         AND invdet.cItemID = items.cItemID ;
		         AND BETWEEN(items.cItemID,lcItem1, lcItem2) ;
		         AND items.ctype = 'B' ;
		         AND NOT EMPTY(invdet.cdisperm) ;
		         AND BETWEEN(invdet.dWorkDate,ldDate1,ldDate2) ;
		         INTO CURSOR tmp ;
		         ORDER BY invdet.cItemID ;
		         GROUP BY invdet.cItemID
		   ENDIF
		   IF _TALLY > 0
		      SELECT bmprods
		      APPEND FROM DBF('tmp')
		      THISFORM.creportname = 'bmprod1.frx'
		   ELSE
		      RETURN .F.
		   ENDIF
		ELSE
		   IF NOT llDisposal
		      SELECT SUM(invdet.nQuantity)  AS nQty, ;
		         invdet.dWorkDate AS dDate, ;
		         invdet.cItemID, ;
		         items.cItemDesc, ;
		         invdet.cWorkOrder AS cworkord, ;
		         invdet.cdisperm, ;
		         invhdr.cCustID, ;
		         invdet.cunitno AS cIDLease, ;
		         SUM(IIF(NOT EMPTY(invdet.cdisperm),invdet.nextension,0)) AS nDispRev, ;
		         SUM(IIF(NOT EMPTY(invdet.cdisperm),0,invdet.nextension)) AS nHaulRev ;
		         FROM invdet, invhdr, items ;
		         WHERE invdet.cbatch = invhdr.cbatch ;
		         AND invdet.cItemID = items.cItemID ;
		         AND BETWEEN(items.cItemID,lcItem1, lcItem2) ;
		         AND items.ctype = 'B' ;
		         AND BETWEEN(invdet.dWorkDate,ldDate1,ldDate2) ;
		         INTO CURSOR tmp ;
		         ORDER BY invdet.cItemID, invhdr.cCustID, invdet.cworkorder ;
		         GROUP BY invdet.cItemID, invhdr.cCustID, invdet.cworkorder
		   ELSE
		      SELECT SUM(invdet.nQuantity)  AS nQty, ;
		         invdet.dWorkDate AS dDate, ;
		         invdet.cItemID, ;
		         items.cItemDesc, ;
		         invdet.cdisperm, ;
		         invhdr.cCustID, ;
		         invdet.cunitno AS cIDLease, ;
		         invdet.cWorkOrder AS cworkord, ;
		         SUM(IIF(NOT EMPTY(invdet.cdisperm),invdet.nextension,0)) AS nDispRev, ;
		         SUM(IIF(NOT EMPTY(invdet.cdisperm),0,invdet.nextension)) AS nHaulRev ;
		         FROM invdet, invhdr, items ;
		         WHERE invdet.cbatch = invhdr.cbatch ;
		         AND invdet.cItemID = items.cItemID ;
		         AND BETWEEN(items.cItemID,lcItem1, lcItem2) ;
		         AND items.ctype = 'B' ;
		         AND NOT EMPTY(invdet.cdisperm) ;
		         AND BETWEEN(invdet.dWorkDate,ldDate1,ldDate2) ;
		         INTO CURSOR tmp ;
		         ORDER BY invdet.cItemID, invhdr.cCustID, invdet.cworkorder ;
		         GROUP BY invdet.cItemID, invhdr.cCustID, invdet.cworkorder
		   ENDIF
		   IF _TALLY > 0
		      SELECT bmprods
		      APPEND FROM DBF('tmp')
		      SCAN
		         m.cIDLease = cIDLease
		         m.cCustID  = cCustID
		         SELECT leases
		         SET ORDER TO cwellid
		         IF SEEK(m.cIDLease)
		            m.cOwnerID = cCustID
		         ELSE
		            m.cOwnerID = ''
		         ENDIF
		         SELECT custs
		         SET ORDER TO cCustID
		         IF SEEK(m.cCustID)
		            m.cCustName = cCustName
		         ELSE
		            m.cCustName = cCustName
		         ENDIF
		         SELECT bmprods
		         REPL cOwnerID  WITH m.cOwnerID, ;
		            cCustName WITH m.cCustName
		      ENDSCAN
		      SELECT bmprods
		      INDEX ON cItemID+cCustID+cworkord TAG itemcust
		      THISFORM.creportname = 'bmprod2.frx'
		   ELSE
		      RETURN .F.
		   ENDIF
		ENDIF
		
		SELECT bmprods
		
		
		
	ENDPROC

	PROCEDURE Init
		IF DODEFAULT()
		 
		   SELECT items
		   SET ORDER TO citemid
		   GO TOP
		   thisform.swrptlook1.txtbegid.value = citemid
		   thisform.swrptlook1.txtbegname.value = citemdesc
		   GO BOTT
		   thisform.swrptlook1.txtendid.value = citemid
		   thisform.swrptlook1.txtendname.value = citemdesc
		   
		   thisform.txtdDate1.value = DATE() - 30
		   thisform.txtdDate2.value = DATE()
		   
		   thisform.chkdisposal.value = .f.   
		   thisform.opgReportBy.value = 1
		
		ENDIF   
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		
		lcList = 'cItemId,cType,cItemdesc'
		
		DO FORM picklist with 'Items', lcList, thisform.swrptlook1.txtbegid.value, 3
		
		if llok
		   thisform.swrptlook1.txtbegid.value = items.citemid
		   thisform.swrptlook1.txtbegname.value = items.citemdesc
		endif   
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		
		lcList = 'cItemId,cType,cItemdesc'
		
		DO FORM picklist with 'Items', lcList, thisform.swrptlook1.txtbegid.value, 3
		
		if llok
		   thisform.swrptlook1.txtendid.value = items.citemid
		   thisform.swrptlook1.txtendname.value = items.citemdesc
		endif   
	ENDPROC

	PROCEDURE Swrptlook1.txtBegID.InteractiveChange
		IF DODEFAULT()
		   thisform.swrptlook1.txtbegName.Value = items.citemdesc
		ENDIF 
		
	ENDPROC

	PROCEDURE Swrptlook1.txtEndID.InteractiveChange
		IF DODEFAULT()
		   thisform.swrptlook1.txtEndName.Value = items.citemdesc
		ENDIF 
		
	ENDPROC

ENDDEFINE
