*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="dmrk1rpt.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 433
	Left = 40
	Name = "Dataenvironment"
	Top = 235
	Width = 647

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "form1065", ;
		CursorSource = "form1065", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "programs", ;
		CursorSource = "programs", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "investor", ;
		CursorSource = "investor", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 101
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "k1deducts", ;
		CursorSource = "k1deducts", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 430, ;
		Name = "Cursor4", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "k1file", ;
		CursorSource = "k1file", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 459, ;
		Name = "Cursor5", ;
		Top = 180, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formrptk1 AS frmrptcriteria OF "..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcYear" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtIRSCenter" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkDepletion" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="ChkExpense" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: buildrange
		*m: checkformats		&& Check to see if the current year's report formats exist. If they don't, download them.
	*</DefinedPropArrayMethod>

	Caption = "Print K1 Forms"
	DoCreate = .T.
	Height = 423
	HelpContextID = 635
	Name = "FormRptK1"
	Width = 454
	_memberdata = <VFPData>
		<memberdata name="checkformats" display="CheckFormats"/>
		</VFPData>
	Swrptcriteriabuttons1.CHKEXPORT.Alignment = 0
	Swrptcriteriabuttons1.CHKEXPORT.Name = "CHKEXPORT"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.cmdPreview.Name = "cmdPreview"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 108
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 10
	Swrptcriteriabuttons1.Top = 330

	ADD OBJECT 'chkDepletion' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Print Depletion Report", ;
		Left = 96, ;
		Name = "chkDepletion", ;
		TabIndex = 8, ;
		Top = 276, ;
		Value = .T.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'ChkExpense' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Print Expense Attachment", ;
		Left = 252, ;
		Name = "ChkExpense", ;
		TabIndex = 9, ;
		Top = 276, ;
		Value = .T.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Year", ;
		FontBold = .F., ;
		Height = 16, ;
		Left = 132, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 1, ;
		Top = 70, ;
		Width = 26
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "Beginning Program", ;
		Left = 66, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 4, ;
		Top = 116
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom3' AS lbllabelcustom WITH ;
		Caption = "Ending Program", ;
		Left = 81, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 5, ;
		Top = 169
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom5' AS lbllabelcustom WITH ;
		Caption = "IRS Center", ;
		Left = 86, ;
		Name = "Lbllabelcustom5", ;
		TabIndex = 7, ;
		Top = 231
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		Left = 167, ;
		Name = "Swrptlook1", ;
		TabIndex = 3, ;
		Top = 113, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		txtBegID.clistexpression = programs.cprogcode, ;
		txtBegID.clistworkarea = programs, ;
		txtBegID.Name = "txtBegID", ;
		TxtBegName.Name = "TxtBegName", ;
		txtEndID.clistexpression = programs.cprogcode, ;
		txtEndID.clistworkarea = programs, ;
		txtEndID.Name = "txtEndID", ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />

	ADD OBJECT 'txtcYear' AS swyear WITH ;
		Left = 167, ;
		Name = "txtcYear", ;
		TabIndex = 2, ;
		Top = 68
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtIRSCenter' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 168, ;
		Name = "txtIRSCenter", ;
		TabIndex = 6, ;
		Top = 228, ;
		Width = 216
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE builddata
		LOCAL lcYear, lcProg1, lcProg2
		LOCAL lcIrsCenter, llReturn, lnCount, loError
		*:Global cIrsCenter, centity, cinvtaxid, cownadd1, cownadd2, cownadd3, cownname, cprogadd2
		*:Global cprogadd3
		
		llReturn = .T.
		
		TRY
		   lcYear      = THISFORM.txtcyear.VALUE
		   lcProg1     = THISFORM.swrptlook1.txtbegid.VALUE
		   lcProg2     = THISFORM.swrptlook1.txtendid.VALUE
		   lcIrsCenter = THISFORM.txtirscenter.VALUE
		
		   THISFORM.cReportName = m.goapp.cRptsFolder + '1065-k1\frmk11.frx'
		
		   m.cIrsCenter = lcIrsCenter
		
		   CREATE CURSOR tempK1 ;
		      (cprogcode   C(10), ;
		        cyear        C(4), ;
		        cprogname    C(30), ;
		        cprogadd1    C(30), ;
		        cprogadd2    C(30), ;
		        cprogadd3    C(30), ;
		        cownname     C(40), ;
		        cownerid     C(10), ;
		        cownadd1     C(30), ;
		        cownadd2     C(30), ;
		        cownadd3     C(30), ;
		        cinvtaxid    C(15), ;
		        cprogtaxid   C(15), ;
		        nPartType    N(1), ;
		        npctprofitbeg   N(11, 7), ;
		        npctlossbeg     N(11, 7), ;
		        npctcapbeg      N(11, 7), ;
		        npctprofitend   N(11, 7), ;
		        npctlossend     N(11, 7), ;
		        npctcapend     N(11, 7), ;
		        dbegindate   D, ;
		        cIrsCenter   C(20), ;
		        ngrossinc    N(12, 2), ;
		        ngrossexp    N(12, 2), ;
		        nordincome   N(12, 2), ;
		        ncapbal      N(12, 2), ;
		        npartdist    N(12, 2), ;
		        nbegcapital  N(12, 2), ;
		        ncapitalend  N(12, 2), ;
		        ncapcontrib  N(12, 2), ;
		        ncapincdec   N(12, 2), ;
		        ncapwithdrawls N(12, 2), ;
		        lgenpart     L, ;
		        lllcpart     L, ;
		        ldompart     L, ;
		        lforeignpart L, ;
		        lRoyalty     L, ;
		        centity      C(20), ;
		        ndepletion   N(12, 2), ;
		        nbox3_rents  N(12, 2) , ;
		        n59ededuct   N(12, 2))
		
		   WAIT WIND NOWAIT 'Processing Report Request...Please Wait'
		
		   SELECT  k1file.*, ;
		      programs.cprogname, ;
		      programs.cprogadd1, ;
		      programs.cprogadd2, ;
		      programs.cprogadd3, ;
		      programs.cprogtaxid, ;
		      programs.nprogtype AS nPartType ;
		      WHERE BETWEEN(k1file.cprogcode, lcProg1, lcProg2) ;
		      AND k1file.cyear = lcYear ;
		      AND k1file.cprogcode = programs.cprogcode ;
		      FROM k1file, programs ;
		      INTO CURSOR temp ;
		      ORDER BY k1file.cprogcode
		
		   IF _TALLY = 0
		      llReturn = .F.
		      EXIT
		   ENDIF
		
		   SELECT tempK1
		   APPEND FROM DBF('temp')
		   USE IN temp
		
		   SELECT tempK1
		   SCAN
		      SCATTER MEMVAR
		*      m.cprogtaxid = cmEncrypt(ALLTRIM(m.cprogtaxid), m.goapp.cEncryptionKey)
		      SELECT investor
		      SET ORDER TO cownerid
		      IF SEEK(m.cownerid)
		         m.cownname  = cownname
		         m.cinvtaxid = cmEncrypt(ALLTRIM(ctaxid), m.goapp.cEncryptionKey)
		         IF NOT investor.lchktosec
		            m.cownadd1  = caddress1a
		            IF EMPTY(caddress1b)
		               m.cownadd2 = ALLTRIM(ccity1) + ' ' + cstate1 + ' ' + czip1
		               m.cownadd3 = ' '
		            ELSE
		               m.cownadd2 = caddress1b
		               m.cownadd3 = ALLTRIM(ccity1) + ' ' + cstate1 + ' ' + czip1
		            ENDIF
		         ELSE
		            m.cownadd1  = caddress2a
		            IF EMPTY(caddress2b)
		               m.cownadd2 = ALLTRIM(ccity2) + ' ' + cstate2 + ' ' + czip2
		               m.cownadd3 = ' '
		            ELSE
		               m.cownadd2 = caddress2b
		               m.cownadd3 = ALLTRIM(ccity2) + ' ' + cstate2 + ' ' + czip2
		            ENDIF
		         ENDIF
		         IF 'genpart' $ LOWER(mnotes)
		            m.centity = 'General Partner'
		         ENDIF
		         IF 'llc' $ LOWER(mnotes)
		            m.centity = 'LLC'
		         ENDIF
		         SELECT tempK1
		         REPLACE cownname   WITH m.cownname, ;
		            cprogtaxid WITH m.cprogtaxid, ;
		            cownadd1   WITH m.cownadd1, ;
		            cownadd2   WITH m.cownadd2, ;
		            cownadd3   WITH m.cownadd3, ;
		            cinvtaxid  WITH m.cinvtaxid, ;
		            cIrsCenter WITH lcIrsCenter, ;
		            centity    WITH m.centity, ;
		            cyear      WITH THISFORM.txtcyear.VALUE
		      ENDIF
		      IF EMPTY(m.cprogadd2)
		         m.cprogadd2 = m.cprogadd3
		         m.cprogadd3 = ' '
		         SELECT tempK1
		         REPLACE cprogadd2 WITH m.cprogadd2, ;
		            cprogadd3 WITH m.cprogadd3
		      ENDIF
		   ENDSCAN
		
		   SELECT tempK1
		   COUNT FOR NOT DELETED() TO lnCount
		   IF lnCount > 0
		      llReturn = .T.
		   ELSE
		      llReturn = .F.
		   ENDIF
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'Builddata', loError.LINENO, 'Print K1s', loError.ERRORNO, loError.MESSAGE, '', loError
		   MESSAGEBOX('Unable to process the report at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
	ENDPROC

	PROCEDURE buildrange
		LOCAL lcYear
		
		lcYear = THISFORM.txtcYear.VALUE
		
		swselect('k1file')
		SET FILTER TO cyear = lcYear
		SET ORDER TO cProgcode
		GO TOP
		THISFORM.swrptlook1.txtbegid.VALUE   = cProgcode
		swselect('programs')
		SET ORDER to cprogcode
		IF SEEK(thisform.swrptlook1.txtbegID.Value)
		   THISFORM.swrptlook1.txtbegname.VALUE = cprogname
		ELSE
		   thisform.swrptlook1.txtbegname.Value = 'Unknown Program'   
		ENDIF    
		swselect('k1file')
		GO BOTT
		THISFORM.swrptlook1.txtendid.VALUE   = cProgcode
		swselect('programs')
		SET ORDER to cprogcode
		IF SEEK(thisform.swrptlook1.txtendID.Value)
		   THISFORM.swrptlook1.txtendname.VALUE = cprogname
		ELSE
		   thisform.swrptlook1.txtendname.Value = 'Unknown Program'   
		ENDIF    
		SET FILTER TO
		THISFORM.swrptlook1.txtbegid.refresh()
		THISFORM.swrptlook1.txtbegname.refresh()
		THISFORM.swrptlook1.txtendid.refresh()
		THISFORM.swrptlook1.txtendname.refresh()
		
	ENDPROC

	PROCEDURE checkformats		&& Check to see if the current year's report formats exist. If they don't, download them.
		LPARAMETERS tcYear
		
		lc1065p1 = m.goapp.cRptsFolder+'1065-k1\'+tcYear+'\f1065_Page_1_' + tcYear + '.jpg'
		lc1065p2 = m.goapp.cRptsFolder+'1065-k1\'+tcYear+'\f1065_Page_2_' + tcYear + '.jpg'
		lc1065p3 = m.goapp.cRptsFolder+'1065-k1\'+tcYear+'\f1065_Page_3_' + tcYear + '.jpg'
		lc1065p4 = m.goapp.cRptsFolder+'1065-k1\'+tcYear+'\f1065_Page_4_' + tcYear + '.jpg'
		lc1065p5 = m.goapp.cRptsFolder+'1065-k1\'+tcYear+'\f1065_Page_5_' + tcYear + '.jpg'
		lcK1p1   = m.goapp.cRptsFolder+'1065-k1\'+tcYear+'\f1065sk1_Page_1_' + tcYear + '.jpg'
		lcK1p2   = m.goapp.cRptsFolder+'1065-k1\'+tcYear+'\f1065sk1_Page_2_' + tcYear + '.jpg'
		
		
		DO CASE 
		   CASE NOT FILE(lc1065p1)
		      DO form1065_k1_upd WITH tcYear
		   CASE NOT FILE(lc1065p2)
		      DO form1065_k1_upd WITH tcYear
		   CASE NOT FILE(lc1065p3)
		      DO form1065_k1_upd WITH tcYear
		   CASE NOT FILE(lc1065p4)
		      DO form1065_k1_upd WITH tcYear
		   CASE NOT FILE(lc1065p5)
		      DO form1065_k1_upd WITH tcYear
		   CASE NOT FILE(lcK1p1)
		      DO form1065_k1_upd WITH tcYear
		   CASE NOT FILE(lcK1p2)
		      DO form1065_k1_upd WITH tcYear
		ENDCASE       
		                  
		        
	ENDPROC

	PROCEDURE Init
		IF DODEFAULT()
		   * If we're in demo mode, tell the user that this is an optional module
		   IF m.goapp.ldemo
		      thisform.omessage.warning('The 1065/K1 module is an optional module that can be purchased separately.' + ;
		                                ' It is included in the demo for evaluation purposes.')
		   ENDIF
		   *
		   *  Initialize the Year textbox
		   *
		   THISFORM.txtcYear.VALUE = STR(YEAR(DATE())-1,4)
		
		   thisform.buildrange() 
		
		   *
		   *  Find the Registry object
		   *
		   THIS.oRegistry = FindGlobalObject('cmRegistry')
		
		ENDIF
		
	ENDPROC

	PROCEDURE report
		LPARA cButton
		LOCAL lnResult, lcAlias, llError, lcYear, lcPage1, lcPage2
		LOCAL lcFileName, lcFileName2, lcProg1, lcProg2, lcSelect, lcSortOrder, lcTitle1, lcTitle2
		LOCAL llPrinted, llReturn, lnCount, lnProgs, loError
		
		PRIV lcTitle1, lcTitle2, lcSortOrder, lcSelect, glGrpName, m.cGrpName, llPrinted
		
		llReturn = .T.
		
		TRY
		   * Check for the parameter. If it's not a character we're being called by the toolbar print button
		   * Bail out if we got here by the toolbar button.
		   IF VARTYPE(cButton) <> 'C'
		      llReturn = .F.
		      EXIT
		   ENDIF
		
		   llError = .F.
		
		   TRY
		      IF NOT USED('stmtone1065')
		         USE (m.goapp.cdatafilepath + 'stmtone1065') IN 0
		      ENDIF
		   CATCH
		      llError = .T.
		   ENDTRY
		
		   IF llError
		      THISFORM.omessage.warning('Could not locate the Statement 1 file. Make sure the 1065/K1 files have been created and try again.')
		      llReturn = .F.
		      EXIT
		   ENDIF
		
		   lcYear  = THISFORM.txtcyear.VALUE
		   lcProg1 = THISFORM.swrptlook1.txtbegid.VALUE
		   lcProg2 = THISFORM.swrptlook1.txtendid.VALUE
		   
		   lcPath = SET('path')
		   IF NOT 'rpts\1065-k1\'+lcYear $ LOWER(lcPath)
		      SET PATH to FULLPATH('rpts\1065-k1\'+lcyear+'\') ADDITIVE 
		   ENDIF 
		   
		   *
		   *  Check to see if the requirements for calling this method are met.
		   *
		   ASSERT TYPE('this.cReportName') = 'C' MESSAGE 'You must set the cReportName property to use this class'
		   ASSERT INLIST(m.cButton, 'F', 'P', 'S')  MESSAGE 'The parm to the report method must be either "F" or "P"'
		
		   IF TYPE('this.ctitle1') <> 'C'
		      THIS.ctitle1 = ''
		   ENDIF
		   IF TYPE('this.ctitle2') <> 'C'
		      THIS.ctitle2 = ''
		   ENDIF
		
		   lcAlias = ALIAS()
		
		   llPrinted = .F.
		   llError   = .F.
		
		   *
		   *  Check on using group name in place of company name
		   *
		   IF NOT USED('options')
		      IF TYPE('m.goApp') = 'O'
		         USE (ALLTRIM(m.goapp.cdatafilepath) + 'options') IN 0
		      ENDIF
		   ENDIF
		   IF NOT USED('groups')
		      IF TYPE('m.goApp') = 'O'
		         USE (ALLTRIM(m.goapp.cdatafilepath) + 'groups') IN 0
		      ENDIF
		   ENDIF
		
		   * If the form doesn't have a swgroup control
		   * don't try to get the company name from the group
		   IF TYPE('thisform.swgroup1') <> 'O'
		      glGrpName = .F.
		   ELSE
		      SELECT options
		      GO TOP
		      glGrpName = lGrpName
		      IF glGrpName
		         SELECT groups
		         SET ORDER TO cgroup
		         * If the Runcombo dropdown exists, and the value isn't New Run, get the group from that
		         IF VARTYPE(THISFORM.RunCombo1) = 'O'  AND THISFORM.RunCombo1.VISIBLE AND THISFORM.RunCombo1.ENABLED
		            IF NOT 'NEW RUN' $ UPPER(THISFORM.RunCombo1.VALUE)
		               IF SEEK(THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID, 4))
		                  m.cGrpName = cDesc
		               ELSE
		                  m.cGrpName = ''
		               ENDIF
		            ELSE
		               IF SEEK(LEFT(THISFORM.swgroup1.VALUE, 2))
		                  m.cGrpName = cDesc
		               ELSE
		                  IF LEFT(THISFORM.swgroup1.VALUE, 2) = '**'
		                     m.cGrpName = 'All Companies'
		                  ELSE
		                     m.cGrpName = ''
		                  ENDIF
		               ENDIF
		            ENDIF
		         ELSE
		            IF SEEK(LEFT(THISFORM.swgroup1.VALUE, 2))
		               m.cGrpName = cDesc
		            ELSE
		               IF LEFT(THISFORM.swgroup1.VALUE, 2) = '**'
		                  m.cGrpName = 'All Companies'
		               ELSE
		                  m.cGrpName = ''
		               ENDIF
		            ENDIF
		         ENDIF
		      ELSE
		         m.cGrpName = ''
		      ENDIF
		   ENDIF
		
		   *
		   *  Make the cProducer variable a default value for development purposes
		   *
		   IF TYPE('m.goApp') = 'O'
		      m.cProducer = m.goapp.cCompanyName
		      IF m.goapp.lDemo
		         m.cProducer = 'Demo Version of Software'
		         m.cGrpName  = m.cProducer
		      ENDIF
		   ELSE
		      m.cProducer = 'Sample Development Company'
		   ENDIF
		
		   IF TYPE('m.cProcessor') <> 'C'
		      m.cProcessor = ''
		   ENDIF
		
		   IF EMPTY(m.cProducer) OR m.cProducer = "''"
		      m.cProducer = 'Sample Development Company'
		   ENDIF
		
		   lcTitle1    = THISFORM.ctitle1
		   lcTitle2    = THISFORM.ctitle2
		   lcSortOrder = THISFORM.cSortOrder
		   lcSelect    = THISFORM.cSelectCriteria
		
		   *
		   *  Set defaults for titles and criteria if not in correct format
		   *
		   IF TYPE('lcTitle1') <> 'C'
		      lcTitle1 = ''
		   ENDIF
		   IF TYPE('lcTitle2') <> 'C'
		      lcTitle2 = ''
		   ENDIF
		   IF TYPE('lcSortOrder') <> 'C'
		      lcSortOrder = ''
		   ENDIF
		   IF TYPE('lcSelect') <> 'C'
		      lcSelect = ''
		   ENDIF
		
		   SELECT (lcAlias)
		
		   * Disable F1 Help
		   ON KEY LABEL F1 *
		
		   * Disable the picklist key
		   ON KEY LABEL F2 *
		
		   * Get the unique program codes we're printing
		   SELECT cprogcode, cownerid FROM tempk1 INTO CURSOR tempprog  ;
		      WHERE BETWEEN(cprogcode, lcProg1, lcProg2) ;
		      ORDER BY cprogcode, cownerid GROUP BY cprogcode, cownerid
		   lnProgs = _TALLY
		   lnCount = 1
		
		
		   swselect('depltemp')
		
		   lcYear = ALLTRIM(THISFORM.txtcyear.VALUE)
		
		   IF lcYear < '2012'
		      lcPage1 = m.goapp.cRptsFolder+'1065-k1\'+lcYear+'\frmk11'
		      lcPage2 = m.goapp.cRptsFolder+'1065-k1\'+lcYear+'\frmk12'
		      lcDeplRpt = m.goapp.cRptsFolder+'1065-k1\'+lcYear+'\frmk1d'
		   ELSE
		      lcPage1 = m.goapp.cRptsFolder+'1065-k1\'+lcYear+'\frmk11_' + lcYear
		      lcPage2 = m.goapp.cRptsFolder+'1065-k1\'+lcYear+'\frmk12_' + lcYear
		      lcDeplRpt = m.goapp.cRptsFolder+'1065-k1\'+lcYear+'\frmk1d'
		   ENDIF
		
		   DO CASE
		
		      CASE m.cButton = 'P'
		         loReportListener              = NEWOBJECT('swReportListener', '..\custom\swReports.vcx')
		         loReportListener.LISTENERTYPE = 0
		         loReportListener.PRINTJOBNAME = 'Form K1'
		         CREATE CURSOR page2 (x   c(1))
		         m.x = '1'
		         INSERT INTO page2 FROM MEMVAR
		         TRY
		            *-- Run the report (with NOWAIT)
		            SELECT tempprog
		            SCAN
		               WAIT WINDOW NOWAIT 'Building K1 for program/owner: ' + ALLTRIM(tempprog.cprogcode) + '/' + tempprog.cownerid
		               lcFileName = 'K1_' + PADL(TRANSFORM(lnCount),5,'0')
		               SELECT * FROM tempk1 ;
		                  WHERE cprogcode = tempprog.cprogcode AND cownerid = tempprog.cownerid AND cYear == lcYear ;
		                  INTO CURSOR (lcFileName) READWRITE 
		               SCATTER MEMVAR
		               llPrinted = .F.
		               
		               IF THISFORM.chkDepletion.VALUE OR THISFORM.chkexpense.VALUE
		                  loReportListener.AddReport(lcPage1, 'to printer prompt nopageeject', , lcFileName)
		               ELSE
		                  IF lnCount = lnProgs
		                     loReportListener.AddReport(lcPage1, 'to printer prompt ', , lcFileName)
		                  ELSE
		                     loReportListener.AddReport(lcPage1, 'to printer prompt nopageeject', , lcFileName)
		                  ENDIF
		               ENDIF
		
		               IF THISFORM.chkDepletion.VALUE
		                  lcFileName2 = 'DEPL_' + PADL(TRANSFORM(lnCount),5,'0')
		                  SELECT * FROM depltemp ;
		                     WHERE cprogcode = tempprog.cprogcode AND cownerid = tempprog.cownerid AND cYear==lcYear ;
		                     INTO CURSOR (lcFileName2) READWRITE
		                  *REPLACE cinvtaxid WITH cmencrypt(ALLTRIM(cinvtaxid),m.goapp.cEncryptionKey) ALL
		                  IF _TALLY = 0
		                     lcownerid = m.cownerid
		                     SELECT depltemp
		                     SCATTER MEMVAR BLANK
		                     m.cownerid = lcownerid
		                     INSERT INTO (lcFileName2) FROM MEMVAR
		                  ENDIF
		                  IF lnCount = lnProgs
		                     IF NOT THISFORM.chkexpense.VALUE
		                        loReportListener.AddReport(lcDeplRpt, 'to printer prompt ', , lcFileName2)
		                     ELSE
		                        loReportListener.AddReport(lcDeplRpt, 'to printer prompt nopageeject', , lcFileName2)
		                     ENDIF
		                  ELSE
		                     loReportListener.AddReport(lcDeplRpt, 'to printer prompt nopageeject', , lcFileName2)
		                  ENDIF
		               ENDIF
		               IF THISFORM.chkexpense.VALUE
		                  lcFileName3 = 'EXP_' + PADL(TRANSFORM(lnCount),5,'0')
		                  SELECT nroydeducts FROM form1065 WHERE cprogcode = tempprog.cprogcode AND cYear = lcYear INTO CURSOR temp
		                  IF temp.nroydeducts # 0
		                     lcStmt1Title = 'Box 13D - Royalty Deductions'
		                  ELSE
		                     lcStmt1Title = 'Box 20 - Other Deductions'
		                  ENDIF
		                  SELECT k1deducts.*, ;
		                     investor.cownname, ;
		                     taxcodes.cDesc AS ctaxdesc ;
		                     FROM k1deducts ;
		                     JOIN taxcodes ON taxcodes.ctaxcode = k1deducts.ctaxcode ;
		                     JOIN investor ON investor.cownerid = k1deducts.cownerid ;
		                     INTO CURSOR (lcFileName3) READWRITE ;
		                     WHERE cprogcode = tempprog.cprogcode AND k1deducts.cYear = lcYear ;
		                     AND k1deducts.cownerid = tempprog.cownerid ;
		                     ORDER BY k1deducts.ctaxcode, k1deducts.ccateg
		                     
		                  IF _tally = 0
		                    SELECT k1deducts
		                    SCATTER MEMVAR 
		                    m.cownerid = tempprog.cownerid
		                    m.cyear    = lcyear
		                    INSERT INTO (lcFileName3) FROM MEMVAR 
		                 ENDIF 
		
		                  IF lnCount = lnProgs
		                     loReportListener.AddReport(m.goapp.cRptsFolder+'1065-k1\'+lcYear+'\frm1065s1','to printer prompt ',,lcFileName3)
		                  ELSE
		                     loReportListener.AddReport(m.goapp.cRptsFolder+'1065-k1\'+lcYear+'\frm1065s1','to printer prompt nopageeject',,lcFileName3)
		                  ENDIF
		               ENDIF
		               lnCount = lnCount + 1
		            ENDSCAN
		            WAIT WINDOW 'Rendering K1 Reports...Please wait' NOWAIT
		            loReportListener.RunReports()
		            WAIT CLEAR
		         CATCH TO loError
		            llError  = .T.
		            llReturn = .F.
		         ENDTRY
		
		         IF llError
		            IF loError.ERRORNO = 1958
		               MESSAGEBOX('There was an error loading the printer driver. ' + ;
		                  'Make sure you have a valid printer selected or ' + ;
		                  'setup as your default printer.', 16, 'Windows Printer Driver Error')
		            ELSE
		               MESSAGEBOX('Error sending the report to the printer.' + CHR(10) + ;
		                  'Error: ' + loError.MESSAGE, 16, 'Report Print Problem')
		            ENDIF
		            EXIT
		         ENDIF
		
		      CASE m.cButton = 'S'
		         LOCAL loPreviewContainer, loReportListener
		         SET REPORTBEHAVIOR 90
		
		         loReportListener              = NEWOBJECT('swReportListener', '..\custom\swReports.vcx')
		         loReportListener.LISTENERTYPE = 1
		         loReportListener.PRINTJOBNAME = 'Form K1'
		         CREATE CURSOR page2 (x   c(1))
		
		         m.x = '1'
		         INSERT INTO page2 FROM MEMVAR
		         lnGroups = 0
		         TRY
		
		            SELECT tempprog
		            SCAN
		               WAIT WINDOW NOWAIT 'Building K1 for program/owner: ' + ALLTRIM(tempprog.cprogcode) + '/' + tempprog.cownerid
		               lcFileName = 'K1_' + SYS(3)
		               SELECT * FROM tempk1 ;
		                  WHERE cprogcode = tempprog.cprogcode AND cownerid = tempprog.cownerid AND cYear == lcYear ;
		                  INTO CURSOR(lcFileName) READWRITE 
		               SCATTER MEMVAR
		               llPrinted = .F.
		               IF THISFORM.chkDepletion.VALUE OR THISFORM.chkexpense.VALUE
		                  loReportListener.AddReport(lcPage1, 'to printer prompt nopageeject', , lcFileName)
		               ELSE
		                  IF lnCount = lnProgs
		                     loReportListener.AddReport(lcPage1, 'to printer prompt ', , lcFileName)
		                  ELSE
		                     loReportListener.AddReport(lcPage1, 'to printer prompt nopageeject', , lcFileName)
		                  ENDIF
		               ENDIF
		
		               IF THISFORM.chkDepletion.VALUE
		                  lcFileName2 = 'DEPL_' + SYS(3)
		                  SELECT * FROM depltemp ;
		                     WHERE cprogcode = tempprog.cprogcode AND cownerid = tempprog.cownerid AND cYear == lcYear ;
		                     INTO CURSOR (lcFileName2) READWRITE
		                  *               REPLACE cinvtaxid WITH cmencrypt(ALLTRIM(cinvtaxid),m.goapp.cEncryptionKey) ALL
		                  IF _TALLY = 0
		                     SELECT depltemp
		                     lcownerid = m.cownerid
		                     SCATTER MEMVAR BLANK
		                     m.cownerid = lcownerid
		                     INSERT INTO (lcFileName2) FROM MEMVAR
		                  ENDIF
		                  IF lnCount = lnProgs
		                     IF NOT THISFORM.chkexpense.VALUE
		                        loReportListener.AddReport(lcDeplRpt, 'to printer prompt preview', , lcFileName2)
		                     ELSE
		                        loReportListener.AddReport(lcDeplRpt, 'to printer prompt preview nopageeject', , lcFileName2)
		                     ENDIF
		                  ELSE
		                     loReportListener.AddReport(lcDeplRpt, 'to printer prompt preview nopageeject', , lcFileName2)
		                  ENDIF
		               ENDIF
		               IF THISFORM.chkexpense.VALUE
		                  lcFileName3 = 'EXP_' + SYS(3)
		                  SELECT nroydeducts FROM form1065 WHERE cprogcode = tempprog.cprogcode AND cYear = lcYear INTO CURSOR temp
		                  IF temp.nroydeducts # 0
		                     lcStmt1Title = 'Box 13 - Royalty Deductions'
		                  ELSE
		                     lcStmt1Title = 'Box 20 - Other Deductions'
		                  ENDIF
		                  USE IN temp
		                  SELECT k1deducts.*, ;
		                     investor.cownname, ;
		                     taxcodes.cDesc AS ctaxdesc ;
		                     FROM k1deducts ;
		                     JOIN taxcodes ON taxcodes.ctaxcode = k1deducts.ctaxcode ;
		                     JOIN investor ON investor.cownerid = k1deducts.cownerid ;
		                     INTO CURSOR (lcFileName3) READWRITE ;
		                     WHERE k1deducts.cprogcode = tempprog.cprogcode AND k1deducts.cYear = lcYear ;
		                     AND k1deducts.cownerid = tempprog.cownerid ;
		                     ORDER BY k1deducts.ctaxcode, k1deducts.ccateg
		                 
		                 IF _tally = 0
		                    SELECT k1deducts
		                    SCATTER MEMVAR 
		                    m.cownerid = tempprog.cownerid
		                    m.cyear    = lcyear
		                    INSERT INTO (lcFileName3) FROM MEMVAR 
		                 ENDIF 
		
		                  IF lnCount = lnProgs
		                     loReportListener.AddReport(m.goapp.cRptsFolder+'1065-k1\'+lcYear+'\frm1065s1','to printer prompt preview ',,lcFileName3)
		                  ELSE
		                     loReportListener.AddReport(m.goapp.cRptsFolder+'1065-k1\'+lcYear+'\frm1065s1','to printer prompt preview nopageeject',,lcFileName3)
		                  ENDIF
		               ENDIF
		               lnGroups = lnGroups + 1
		               lnCount = lnCount + 1
		            ENDSCAN
		            WAIT WINDOW 'Rendering K1 Reports...Please wait' NOWAIT
		            loReportListener.RunReports()
		            WAIT CLEAR
		
		         CATCH TO loError
		            MESSAGEBOX("Error: " + loError.MESSAGE + CHR(10) + ;
		               "Line:  " + TRANSFORM(loError.LINENO) + CHR(10) + ;
		               "Error No" + TRANSFORM(loError.ERRORNO), 16, 'Print Error')
		            llError  = .T.
		            llReturn = .F.
		            EXIT
		         ENDTRY
		         IF llError
		            IF loError.ERRORNO = 1958
		               MESSAGEBOX('There was an error loading the printer driver. ' + ;
		                  'Make sure you have a valid printer selected or ' + ;
		                  'setup as your default printer.', 16, 'Windows Printer Driver Error')
		            ELSE
		               MESSAGEBOX('Error sending the report to the printer.' + CHR(10) + ;
		                  'Error: ' + loError.MESSAGE, 16, 'Report Print Problem')
		            ENDIF
		         ENDIF
		   ENDCASE
		
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'Report', loError.LINENO, 'Print K1s', loError.ERRORNO, loError.MESSAGE, '', loError
		   MESSAGEBOX('Unable to process the report at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		      'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		PRIV llOK
		LOCAL lcList
		
		llOK = .F.
		
		lcList = 'cprogcode,cprogname'
		
		DO FORM ..\custom\picklist WITH 'Programs',lcList,thisform.swrptlook1.txtbegid.value, 2
		
		IF llOK
		   thisform.swrptlook1.txtbegid.value = programs.cprogcode
		   thisform.swrptlook1.txtbegid.refresh()
		   thisform.swrptlook1.txtbegname.value = programs.cprogname
		   thisform.swrptlook1.txtbegname.refresh()
		ENDIF   
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		PRIV llOK
		LOCAL lcList
		
		llOK = .F.
		
		lcList = 'cprogcode,cprogname'
		
		DO FORM ..\custom\picklist WITH 'Programs',lcList,thisform.swrptlook1.txtendid.value, 2
		
		IF llOK
		   thisform.swrptlook1.txtendid.value = programs.cprogcode
		   thisform.swrptlook1.txtendid.refresh()
		   thisform.swrptlook1.txtendname.value = programs.cprogname
		   thisform.swrptlook1.txtendname.refresh()
		ENDIF   
	ENDPROC

	PROCEDURE Swrptlook1.txtBegID.InteractiveChange
		SELECT programs
		SET ORDER TO cprogcode
		IF SEEK(THIS.VALUE)
		   THIS.PARENT.txtBegName.SET('value',programs.cprogname)
		ELSE
		   THIS.PARENT.txtBegName.SET('value','')
		ENDIF
		DODEFAULT()
		
	ENDPROC

	PROCEDURE Swrptlook1.txtEndID.InteractiveChange
		SELECT programs
		SET ORDER TO cprogcode
		IF SEEK(THIS.VALUE)
		   THIS.PARENT.txtEndName.SET('value',programs.cprogname)
		ELSE
		   THIS.PARENT.txtEndName.SET('value','')
		ENDIF
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtcYear.Valid
		IF NOT BETWEEN(VAL(this.value),1900,2099)
		   WAIT WIND 'Invalid year, please re-enter...'
		   RETURN 0
		ENDIF
		
		thisform.buildrange()
	ENDPROC

ENDDEFINE
