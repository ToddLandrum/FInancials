*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="dmoh6file.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Relation1" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 297
	Left = 40
	Name = "Dataenvironment"
	Top = 235
	Width = 520

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "options", ;
		CursorSource = "options", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "form6", ;
		BufferModeOverride = 5, ;
		CursorSource = "form6", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "form6s", ;
		BufferModeOverride = 5, ;
		CursorSource = "form6s", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor4", ;
		Top = 140, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "disbhist", ;
		CursorSource = "disbhist", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor5", ;
		Top = 140, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "wellhist", ;
		CursorSource = "wellhist", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor6", ;
		Top = 140, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor7' AS cursor WITH ;
		Alias = "investor", ;
		CursorSource = "investor", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor7", ;
		Top = 260, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor8' AS cursor WITH ;
		Alias = "wellinv", ;
		CursorSource = "wellinv", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor8", ;
		Top = 260, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Relation1' AS relation WITH ;
		ChildAlias = "wellinv", ;
		ChildOrder = "cownerid", ;
		Name = "Relation1", ;
		ParentAlias = "investor", ;
		RelationalExpr = "cownerid"
		*< END OBJECT: BaseClass="relation" />

ENDDEFINE

DEFINE CLASS formdmoh6rpt AS frmformcustom OF "..\custom\cforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtBBLmore" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtMCFmore" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtBBLless" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtMCFless" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom10" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom11" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdBuild" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swyear1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="opgBasedOn" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: buildfile		&& Builds the Form 6 Records
	*</DefinedPropArrayMethod>

	Caption = "Create OH Form 6 File"
	DataSession = 2
	DoCreate = .T.
	Height = 268
	HelpContextID = 610
	Name = "FormDmoh6rpt"
	Width = 379
	Mwresize1.lblHighLight.Name = "lblHighLight"
	Mwresize1.lblShading.Name = "lblShading"
	Mwresize1.Name = "Mwresize1"

	ADD OBJECT 'cmdBuild' AS cmdcommandbuttoncustom WITH ;
		Caption = "\<Build", ;
		Default = .T., ;
		Height = 39, ;
		Left = 98, ;
		Name = "cmdBuild", ;
		TabIndex = 15, ;
		Top = 216, ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdCancel' AS cmdcommandbuttoncustom WITH ;
		Caption = "\<Cancel", ;
		Height = 39, ;
		Left = 206, ;
		Name = "cmdCancel", ;
		TabIndex = 16, ;
		Top = 216, ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Build Records For Year:", ;
		Height = 16, ;
		Left = 41, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 1, ;
		Top = 25, ;
		Width = 118
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom10' AS lbllabelcustom WITH ;
		Caption = "Less than 1 BBL", ;
		Height = 16, ;
		Left = 256, ;
		Name = "Lbllabelcustom10", ;
		TabIndex = 11, ;
		Top = 157, ;
		Width = 82
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom11' AS lbllabelcustom WITH ;
		Caption = "Less than 8 MCF", ;
		Height = 16, ;
		Left = 256, ;
		Name = "Lbllabelcustom11", ;
		TabIndex = 14, ;
		Top = 184, ;
		Width = 83
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "Build File Based On:", ;
		Left = 19, ;
		Name = "Lbllabelcustom2", ;
		Top = 64
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom4' AS lbllabelcustom WITH ;
		Caption = "Taxable Value Per BBL:", ;
		Height = 16, ;
		Left = 40, ;
		Name = "Lbllabelcustom4", ;
		TabIndex = 4, ;
		Top = 102, ;
		Width = 116
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom5' AS lbllabelcustom WITH ;
		Caption = "Taxable Value Per MCF:", ;
		Height = 16, ;
		Left = 40, ;
		Name = "Lbllabelcustom5", ;
		TabIndex = 7, ;
		Top = 128, ;
		Width = 117
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom6' AS lbllabelcustom WITH ;
		Caption = "Taxable Value Per BBL:", ;
		Height = 16, ;
		Left = 40, ;
		Name = "Lbllabelcustom6", ;
		TabIndex = 10, ;
		Top = 155, ;
		Width = 116
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom7' AS lbllabelcustom WITH ;
		Caption = "Taxable Value Per MCF:", ;
		Height = 16, ;
		Left = 40, ;
		Name = "Lbllabelcustom7", ;
		TabIndex = 13, ;
		Top = 182, ;
		Width = 117
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom8' AS lbllabelcustom WITH ;
		Caption = "1 BBL or more", ;
		Height = 16, ;
		Left = 256, ;
		Name = "Lbllabelcustom8", ;
		TabIndex = 5, ;
		Top = 104, ;
		Width = 71
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom9' AS lbllabelcustom WITH ;
		Caption = "8 MCF or more", ;
		Height = 16, ;
		Left = 256, ;
		Name = "Lbllabelcustom9", ;
		TabIndex = 8, ;
		Top = 130, ;
		Width = 72
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'opgBasedOn' AS opgoptiongroupcustom WITH ;
		AutoSize = .T., ;
		BorderStyle = 0, ;
		ButtonCount = 2, ;
		Height = 26, ;
		Left = 123, ;
		Name = "opgBasedOn", ;
		Top = 59, ;
		Value = 1, ;
		Width = 223, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "Production Year", ;
		Option1.FontSize = 8, ;
		Option1.Height = 16, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Top = 5, ;
		Option1.Value = 1, ;
		Option1.Width = 96, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "Accounting Year", ;
		Option2.FontSize = 8, ;
		Option2.Height = 16, ;
		Option2.Left = 118, ;
		Option2.Name = "Option2", ;
		Option2.Top = 5, ;
		Option2.Width = 100
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'Swyear1' AS swyear WITH ;
		Left = 168, ;
		Name = "Swyear1", ;
		TabIndex = 2, ;
		Top = 24
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtBBLless' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 168, ;
		Name = "txtBBLless", ;
		TabIndex = 9, ;
		Top = 154, ;
		Width = 72
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtBBLmore' AS txttextboxcustom WITH ;
		ControlSource = "", ;
		Height = 20, ;
		Left = 168, ;
		Name = "txtBBLmore", ;
		TabIndex = 3, ;
		Top = 100, ;
		Width = 72
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtMCFless' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 168, ;
		Name = "txtMCFless", ;
		TabIndex = 12, ;
		Top = 181, ;
		Width = 72
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtMCFmore' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 168, ;
		Name = "txtMCFmore", ;
		TabIndex = 6, ;
		Top = 127, ;
		Width = 72
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE buildfile		&& Builds the Form 6 Records
		LOCAL tnbbl1, tnbbl2, tnmcf1, tnmcf2, tcYear, ldDate, lnDays, llDays, lnRangeDays
		LOCAL m.cprodadd, m.cprodstate, lnCount, llLeapYr, m.lFlush
		
		SET DELETED ON
		
		m.cprodadd  = ALLTRIM(m.goapp.caddress1) + ' ' + ALLTRIM(m.goapp.ccity) + ', ' + m.goapp.cstate + ' ' + m.goapp.czip
		m.cprodstate = m.goapp.cstate
		
		tnbbl1 = THISFORM.txtbblmore.VALUE
		tnbbl2 = THISFORM.txtbblless.VALUE
		tnmcf1 = THISFORM.txtmcfmore.VALUE
		tnmcf2 = THISFORM.txtmcfless.VALUE
		tcyear = THISFORM.swyear1.VALUE
		
		lnCount = 0
		
		THISFORM.oregistry = findglobalobject('cmregistry')
		
		SELECT form6
		COUNT FOR NOT DELETED() TO lnCount
		
		IF lnCount > 0
		   IF NOT THISFORM.omessage.CONFIRM('Form 6 Data already exists. Do you want to overwrite it?')
		      WAIT WIND NOWAIT 'Form 6A file creation cancelled.'
		      RETURN
		   ELSE
		      DELETE FOR cYear = tcYear
		      SELECT form6s
		      DELETE FOR cYear = tcYear
		   ENDIF
		ENDIF
		
		SELECT wellhist.cwellid, ;
		   wells.cwellname, ;
		   tcYear AS cYear, ;
		   wells.ctownship, ;
		   wells.ccounty, ;
		   wells.cparcel, ;
		   wells.cpermit1, ;
		   wells.cpermit2, ;
		   wells.cpermit3, ;
		   wells.cpermit4, ;
		   wells.cpermit5, ;
		   wells.cpermit6, ;
		   wells.dproddate AS dproddate, ;
		   wells.nwellcount, ;
		   wells.lsecrec, ;
		   STR(wells.nacres) AS cacres, ;
		   SUM(wellhist.ndayson) AS ntotdays, ;
		   SUM(wellhist.ntotmcf) AS ntotmcf, ;
		   SUM(wellhist.ntotbbl) AS ntotbbl ;
		   FROM wellhist, wells ;
		   WHERE wellhist.cwellid = wells.cwellid ;
		   AND IIF(thisform.opgBasedOn.value = 1,hyear = tcYear,ALLTRIM(STR(YEAR(hdate))) = tcYear) ;
		   AND wells.cstate = 'OH' ;
		   AND wells.lthird_prty <> .T. ;
		   GROUP BY wellhist.cwellid ;
		   ORDER BY wellhist.cwellid ;
		   INTO CURSOR  welltmp
		
		SELECT form6
		FLUSH
		SELECT welltmp
		SCAN
		   SCATTER MEMVAR
		
		   m.cidform6 = THISFORM.oregistry.incrementcounter('%Shared.Counters.Form6')
		   SELECT form6
		   SET DELETED OFF
		   SET ORDER TO cidform6
		   DO WHILE SEEK(m.cidform6)
		      m.cidform6 = THISFORM.oregistry.incrementcounter('%Shared.Counters.Form6')
		   ENDDO
		   SET DELETED ON
		   
		   INSERT INTO form6 FROM MEMVAR
		ENDSCAN
		
		USE IN welltmp
		
		ldDate = DATE(VAL(tcYear),12,31)
		
		llLeapYr = swLeapYear(tcYear)
		llDays   = .F.
		
		IF llLeapYr
		   lnDays = 366
		   IF THISFORM.omessage.CONFIRM('Do you want to assume 366 days for every well in production as of the beginning of ' + tcYear+'?')
		      llDays = .t.
		   ENDIF 
		ELSE
		   lnDays = 365
		   IF THISFORM.omessage.CONFIRM('Do you want to assume 365 days for every well in production as of the beginning of ' + tcYear+'?')
		      llDays = .t. 
		   ENDIF 
		ENDIF    
		
		lnDays1 = lnDays  &&  Store it so we can always come back to it later
		
		SELECT form6
		SCAN
		   m.ntotdays   = ntotdays
		   m.nwellcount = nwellcount
		   lnDays = lnDays1
		   llLastYear = .f.
		   SCATTER MEMVAR
		   IF m.nwellcount = 0
		      m.nwellcount = 1
		      SELE form6
		      REPL nwellcount with 1
		   ENDIF
		   
		*
		*  If the total number of days of production is zero, assume the user
		*  forgot to keep up with it and put in a full year.
		*
		   IF m.ntotdays <= 0
		      m.ntotdays = lnDays
		   ENDIF
		   
		   *  If this is a leap year or last year was a leap year, then the range of days covering 2 years is 731; otherwise, it's just 730
		   IF llLeapYr OR swLeapYear(ALLTRIM(STR(VAL(tcYear)-1)))
		      lnRangeDays = 731
		   ELSE
		      lnRangeDays = 730
		   ENDIF 
		   
		   IF ldDate - dproddate <= lnRangeDays AND NOT EMPTY(dproddate)
		      * Well started production during the year, or within the previous year, so flush can be calculated for part of the production
		      m.lflush = .T.      
		      IF ldDate - dProdDate < lnDays  &&  If less than a full year, then it came online this year
		         lnDays = ldDate - dProdDate
		      ELSE
		         lnDays = lnRangeDays - (ldDate - dProdDate)  &&  It started last year, so take the max days on, and subtract off the total days on to get the amount that was on this year
		         llLastYear = .t.
		      ENDIF 
		   ELSE
		      m.lflush = .F.
		   ENDIF
		   
		   IF llDays OR m.lFlush
		      m.ntotdays = lnDays
		      SELE form6
		      IF llLastYear  &&  The well had flush, but it was started the previous year, so it was actually on for this entire year - use full number of days, and not partial amount calculated
		         m.nTotDays = lnDays1
		      ENDIF 
		      REPL nTotDays WITH m.nTotDays
		   ENDIF
		   IF m.lflush=.T.
		      IF ldDate - dproddate > 365  &&  Flush started last year, so just pro-rate the total units by the percentage of this year that it was on
		         m.nFlushBBL = m.nTotBBL * (lnDays/365)
		         m.nFlushMCF = m.nTotMCf * (lnDays/365)
		      ELSE
		         m.nflushbbl = m.ntotbbl
		         m.nflushmcf = m.ntotmcf
		      ENDIF 
		      m.nfdiscbbl = (m.nflushbbl*.425)
		      m.nfdiscmcf = (m.nflushmcf*.425)
		      m.nnetbbl = m.nTotBBL - m.nfdiscbbl
		      m.nnetmcf = m.nTotMCF - m.nfdiscmcf
		      m.lsecrec = .F.
		   ELSE
		      m.nfdiscbbl = 0
		      m.nfdiscmcf = 0
		      IF m.lSecRec = .T.
		         m.nbblsecrec = m.ntotbbl
		         m.nmcfsecrec = m.ntotmcf
		         m.nbblsecrecovdisc = m.ntotbbl * .5
		         m.nmcfsecrecovdisc = m.ntotmcf * .5
		         m.nnetbbl = m.nTotBBL - m.nbblsecrecovdisc
		         m.nnetmcf = m.nTotMCF - m.nmcfsecrecovdisc
		      ELSE    
		         m.nnetbbl = ntotbbl
		         m.nnetmcf = ntotmcf
		         m.nflushbbl = 0
		         m.nflushmcf = 0
		         m.nbblsecrec = 0
		         m.nmcfsecrec = 0
		         m.nbblsecrecovdisc = 0
		         m.nmcfsecrecovdisc = 0
		      ENDIF
		   ENDIF
		   m.ndailybbl = m.nnetbbl/m.ntotdays
		   m.ndailymcf = m.nnetmcf/m.ntotdays
		   IF m.ndailymcf/m.nwellcount < 8
		      m.ntaxmcf = tnmcf2
		   ELSE
		      m.ntaxmcf = tnmcf1
		   ENDIF
		   IF m.ndailybbl/m.nwellcount < 1
		      m.ntaxbbl = tnbbl2
		   ELSE
		      m.ntaxbbl = tnbbl1
		   ENDIF
		   m.ntaxvalbbl = m.ntaxbbl * m.ndailybbl
		   m.ntaxvalmcf = m.ntaxmcf * m.ndailymcf
		   REPLACE cprodadd   WITH m.cprodadd, ;
		      cprodadd1  WITH m.cprodadd1, ;
		      cprodstate WITH m.cprodstate, ;
		      lflush     WITH m.lflush, ;
		      nfdiscbbl  WITH m.nfdiscbbl, ;
		      nfdiscmcf  WITH m.nfdiscmcf, ;
		      nflushbbl  WITH m.nflushbbl, ;
		      nflushmcf  WITH m.nflushmcf, ;
		      ntaxbbl    WITH m.ntaxbbl, ;
		      ntaxmcf    WITH m.ntaxmcf, ;
		      ndailybbl  WITH m.ndailybbl, ;
		      ndailymcf  WITH m.ndailymcf, ;
		      ntaxvalbbl WITH m.ntaxvalbbl, ;
		      ntaxvalmcf WITH m.ntaxvalmcf, ;
		      nnetbbl    WITH m.nnetbbl, ;
		      nnetmcf    WITH m.nnetmcf, ;
		      nbblsecrec WITH m.nbblsecrec, ;
		      nmcfsecrec WITH m.nmcfsecrec, ;
		      lsecrec    WITH m.lSecRec
		ENDSCAN
		
		lnCount = 0
		SELECT form6
		COUNT FOR cYear = tcYear AND NOT DELETED() TO lnCount
		*
		*  Build the form6s file
		*
		IF lnCount > 0
		   SELECT form6
		   SCAN FOR cYear = tcYear
		      SCATTER MEMVAR
		      SELECT wellinv.cwellid, ;
		         wellinv.cownerid, ;
		         investor.cownname   AS cRoyName, ;
		         investor.cownname1  AS cRoyName1, ;
		         investor.caddress1a AS cRoyAddr1, ;
		         investor.caddress1b AS cRoyAddr2, ;
		         TRIM(investor.ccity1) + ' ' + investor.cstate1 + ' ' + investor.czip1 AS cRoyAddr3, ;
		         SUM(wellinv.nrevoil)     AS noilint, ;
		         SUM(wellinv.nrevgas)     AS ngasint ;
		         FROM wellinv, investor ;
		         WHERE wellinv.cwellid == m.cwellid ;
		         AND wellinv.cownerid = investor.cownerid ;
		         AND wellinv.ctypeinv <> 'W' ;
		         INTO CURSOR tmpinv ;
		         ORDER BY wellinv.cwellid, wellinv.cownerid  ;
		         GROUP BY wellinv.cwellid, wellinv.cownerid
		      IF _TALLY > 0
		         SELECT tmpinv
		         SCAN
		            SCATTER MEMVAR
		            m.cTypeInv = 'L'
		            m.noilval = m.ntaxbbl * (m.noilint/100) * m.ndailybbl
		            m.ngasval = m.ntaxmcf * (m.ngasint/100) * m.ndailymcf
		            m.ntotalval = m.ngasval + m.noilval
		            IF m.ntotalval <> 0
		               
		               m.cidstown = THISFORM.oregistry.incrementcounter('%Shared.Counters.form6s')
		               SELECT form6s
		               SET DELETED OFF
		               SET ORDER TO cidstown
		               DO WHILE SEEK(m.cidstown)
		                  m.cidstown = THISFORM.oregistry.incrementcounter('%Shared.Counters.form6s')
		               ENDDO
		               SET DELETED ON
		               
		               INSERT INTO form6s FROM MEMVAR
		            ENDIF
		         ENDSCAN
		      ENDIF
		      SELECT wellinv.cwellid, ;
		         SUM(wellinv.nrevoil) AS nwrkoil, ;
		         SUM(wellinv.nrevgas) AS nwrkgas ;
		         FROM wellinv ;
		         WHERE wellinv.cwellid == m.cwellid ;
		         AND wellinv.ctypeinv = 'W' ;
		         INTO CURSOR tmpinv ;
		         ORDER BY cwellid ;
		         GROUP BY cwellid
		      IF _TALLY > 0
		         SELECT tmpinv
		         SCAN
		            SCATTER MEMVAR
		            m.cTypeInv = 'W'
		            m.ntaxvalbbl = m.ndailybbl * (m.nwrkoil/100) * m.ntaxbbl
		            m.ntaxvalmcf = m.ndailymcf * (m.nwrkgas/100) * m.ntaxmcf
		            SELECT form6
		            REPL ntxvalbbls WITH m.ntaxvalbbl, ;
		               ntxvalmcfs WITH m.ntaxvalmcf, ;
		               nwrkoil    WITH m.nwrkoil,   ;
		               nwrkgas    WITH m.nwrkgas
		         ENDSCAN
		      ENDIF
		   ENDSCAN
		ENDIF
		
		SELECT form6
		=TABLEUPDATE(.t.)
		SELECT form6s
		=TABLEUPDATE(.t.)
		
		IF lnCount = 0
		   THISFORM.omessage.DISPLAY('No form 6a records found for this year.')
		ELSE
		   THISFORM.omessage.DISPLAY('Created ' + ALLTRIM(STR(lncount)) + ' Form 6 Records.')   
		ENDIF
		
		RETURN
		
		
	ENDPROC

	PROCEDURE Init
		IF DODEFAULT()
		   SELECT options
		   GO TOP
		   thisform.txtbblmore.value = options.nbblnonmarg
		   thisform.txtbblless.value = options.nbblmarg
		   thisform.txtmcfmore.value = options.nmcfnonmarg
		   thisform.txtmcfless.value = options.nmcfmarg
		ENDIF   
		
	ENDPROC

	PROCEDURE cmdBuild.Click
		thisform.buildfile()
	ENDPROC

	PROCEDURE cmdCancel.Click
		thisform.release()
	ENDPROC

	PROCEDURE txtBBLless.Valid
		SELECT options
		REPL nbblmarg WITH this.value
		TABLEUPDATE(.f.,.t.,'options')
	ENDPROC

	PROCEDURE txtBBLmore.Valid
		SELECT options
		REPL nbblnonmarg WITH this.value
		TABLEUPDATE(.f.,.t.,'options')
	ENDPROC

	PROCEDURE txtMCFless.Valid
		SELECT options
		REPL nmcfmarg WITH this.value
		TABLEUPDATE(.f.,.t.,'options')
	ENDPROC

	PROCEDURE txtMCFmore.Valid
		SELECT options
		REPL nmcfnonmarg WITH this.value
		TABLEUPDATE(.f.,.t.,'options')
	ENDPROC

ENDDEFINE
