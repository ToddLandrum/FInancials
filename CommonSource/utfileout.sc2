*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="utfileout.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "..\custom\pdf.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 200
	Left = 40
	Name = "Dataenvironment"
	Top = 235
	Width = 520

ENDDEFINE

DEFINE CLASS formutfileout AS frmformcustom OF "..\custom\cforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="opgOptions" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblFileType" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cntgetfile1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cntokcancelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkShowFile" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSendEmail" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: initpdf
		*m: pdfoutput
		*m: process
		*m: sendemail
		*p: activationcode
		*p: calias
		*p: cfilename
		*p: creportname
		*p: cselect
		*p: csortorder
		*p: ctitle1
		*p: ctitle2
		*p: licensedto
		*p: lownerstmt
		*p: lpdfexcelonly
		*p: lpdfinit
		*p: opdf
	*</DefinedPropArrayMethod>

	activationcode = .F.
	Caption = "Output Report To File"
	cfilename = .F.
	DoCreate = .T.
	Height = 250
	licensedto = .F.
	lownerstmt = .F.
	lpdfexcelonly = .F.
	lpdfinit = .F.
	Name = "FormUtfileout"
	opdf = .F.
	Width = 549

	ADD OBJECT 'chkSendEmail' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Send File Attached to Email", ;
		Left = 311, ;
		Name = "chkSendEmail", ;
		TabIndex = 5, ;
		Top = 168, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkShowFile' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Show File After Creating It", ;
		Left = 131, ;
		Name = "chkShowFile", ;
		TabIndex = 5, ;
		Top = 168, ;
		Value = .T.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Cntgetfile1' AS cntgetfile WITH ;
		cdefaultextension = PDF, ;
		cextensionlist = PDF,XLS,DBF,TXT, ;
		Height = 24, ;
		Left = 107, ;
		lfullpath = .T., ;
		lmustexist = .F., ;
		Name = "Cntgetfile1", ;
		TabIndex = 1, ;
		Top = 10, ;
		Width = 421, ;
		cmdPath.Left = 396, ;
		cmdPath.Name = "cmdPath", ;
		cmdPath.TabIndex = 2, ;
		cmdPath.TabStop = .F., ;
		cmdPath.Top = 0, ;
		edtPath.FontSize = 8, ;
		edtPath.Height = 20, ;
		edtPath.Left = 0, ;
		edtPath.Margin = 1, ;
		edtPath.Name = "edtPath", ;
		edtPath.TabIndex = 1, ;
		edtPath.Top = 0, ;
		edtPath.Width = 385
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="container" />

	ADD OBJECT 'Cntokcancelcustom1' AS cntokcancelcustom WITH ;
		Left = 203, ;
		Name = "Cntokcancelcustom1", ;
		TabIndex = 6, ;
		Top = 204, ;
		cmdcancel.Name = "cmdcancel", ;
		cmdok.Name = "cmdok"
		*< END OBJECT: ClassLib="..\custom\cbutton.vcx" BaseClass="container" />

	ADD OBJECT 'lblFileType' AS lbllabelcustom WITH ;
		Caption = "File Type", ;
		Left = 153, ;
		Name = "lblFileType", ;
		TabIndex = 4, ;
		Top = 54, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Output File Name", ;
		Left = 12, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 2, ;
		Top = 12
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'opgOptions' AS opgoptiongroupcustom WITH ;
		ButtonCount = 5, ;
		Height = 108, ;
		Left = 225, ;
		Name = "opgOptions", ;
		TabIndex = 3, ;
		Top = 48, ;
		Visible = .T., ;
		Width = 120, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "PDF", ;
		Option1.FontSize = 8, ;
		Option1.Height = 16, ;
		Option1.Left = 6, ;
		Option1.Name = "Option1", ;
		Option1.Top = 5, ;
		Option1.Width = 37, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "Microsoft Excel", ;
		Option2.FontSize = 8, ;
		Option2.Height = 16, ;
		Option2.Left = 6, ;
		Option2.Name = "Option2", ;
		Option2.TabIndex = 2, ;
		Option2.Top = 24, ;
		Option2.Width = 92, ;
		Option3.AutoSize = .T., ;
		Option3.Caption = "Delimited Text", ;
		Option3.FontSize = 8, ;
		Option3.Height = 16, ;
		Option3.Left = 6, ;
		Option3.Name = "Option3", ;
		Option3.TabIndex = 3, ;
		Option3.Top = 43, ;
		Option3.Width = 84, ;
		Option4.AutoSize = .T., ;
		Option4.Caption = "dBase DBF", ;
		Option4.FontSize = 8, ;
		Option4.Height = 16, ;
		Option4.Left = 6, ;
		Option4.Name = "Option4", ;
		Option4.Top = 62, ;
		Option4.Width = 72, ;
		Option5.Caption = "Text File", ;
		Option5.FontSize = 8, ;
		Option5.Height = 17, ;
		Option5.Left = 6, ;
		Option5.Name = "Option5", ;
		Option5.Top = 81, ;
		Option5.Width = 61
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="optiongroup" />
	
	PROCEDURE Init
		LPARA tcReportName, tcTitle1, tcTitle2, tcSortOrder, tcSelect, tcAlias, tlPDFExcelOnly
		
		IF TYPE('tcAlias') <> 'C'
		   thisform.cAlias = ''
		ELSE
		   thisform.calias = tcAlias   
		ENDIF   
		
		thisform.cReportName = tcReportName
		thisform.cTitle1     = tcTitle1
		thisform.cTitle2     = tcTitle2
		thisform.cSortOrder  = tcSortOrder
		thisform.cSelect     = tcSelect
		thisform.lPDFExcelOnly    = tlPDFExcelOnly
		thisform.opgOptions.value = 1
		IF thisform.lPDFExcelOnly
		   thisform.opgOptions.Option2.Enabled = .t.
		   thisform.opgOptions.Option3.Enabled = .f.
		   thisform.opgOptions.Option4.Enabled = .f.
		   thisform.opgOptions.Option5.Enabled = .f.
		   thisform.lblfileType.Visible = .t.
		ENDIF    
		
		thisform.cfilename   = CURDIR()+'datafiles\'+JUSTSTEM(tcReportName) + '.pdf'
		thisform.cnTGETFILE1.edtPath.Value = thisform.cfilename
		DODEFAULT()
	ENDPROC

	PROCEDURE initpdf
		
		LOCAL opdf AS "cdintfex.cdintfex"
		
		*if type('thisform.opdf') <> 'O'
		TRY
		   WAIT WIND NOWAIT 'Initializing PDF Printer...Please wait'
		   THIS.licensedto = 'SherWare, Inc.'
		   THIS.activationcode = "07EFCDAB010001009A527EE5406E35317BA203A53DB56A91B1D1E1753FD5B4CD327A255177FD182603E825A1E06106900874BCC3DC95B6504CCF9D7F2433A7"
		
		   THIS.opdf = CREATEOBJECT('cdintfex.cdintfex')
		
		   lnHandle = THIS.opdf.driverinit('SWI PDF Printer')
		
		   THIS.lpdfinit = .T.
		   WAIT CLEAR
		CATCH TO loError
		   MESSAGEBOX('Unable to print to the SherWare PDF printer.',48,'PDF Printer Error')
		FINALLY
		ENDTRY
		*endif
		
	ENDPROC

	PROCEDURE pdfoutput
		LOCAL ONET, lcPrinter, oPDF
		
		SET REPORTBEHAVIOR 80
		* Initialize the PDF Printer
		IF VARTYPE(oPDF) <> 'O'
		   oPDF = CREATEOBJECT('swPDF')
		ENDIF
		
		lcOutputFile = ALLTRIM(THISFORM.cntgetfile1.eDTPATH.VALUE)
		
		oPDF.oPDFPrinter.DefaultFileName = lcOutputFile
		
		IF oPDF.EnablePrinter()
		   TRY
		      REPORT FORM (THISFORM.cReportName) TO PRINTER NOCONSOLE
		   CATCH TO loError
		      MESSAGEBOX('There is a problem with the SherWare PDF Printer driver. ' + CHR(10) + ;
		         'Please try reinstalling the driver by running the INSTALL.EXE ' + CHR(10) + ;
		         'application found in the PDF subfolder.',16,'PDF Printer Driver Problem')
		
		   ENDTRY
		   oPDF.CleanUp()
		ENDIF
		
		
		
		
	ENDPROC

	PROCEDURE process
		PRIV lcTitle1, lcTitle2, lcSortOrder, lcSelect
		
		lcTitle1    = THISFORM.cTitle1
		lcTitle2    = THISFORM.cTitle2
		lcSortOrder = THISFORM.cSortOrder
		lcSelect    = THISFORM.cSelect
		
		* Check on the existence of the application object
		* if it doesn't exist, we're running in development
		* mode and need to initialize the company address info.
		IF TYPE('m.goApp') = 'O'
		   m.cProducer = m.goApp.ccompanyname
		   m.paddr1 = m.goApp.cAddress1
		   m.paddr2 = m.goApp.cAddress2
		   m.paddr3 = m.goApp.cAddress3
		   m.pcontact = m.goApp.cContact
		   m.pphone   = m.goApp.cPhoneNo
		ELSE
		   m.cProducer = 'SherWare, Inc.'
		   m.paddr1 = 'PO Box 223'
		   m.paddr2 = 'Wooster, OH  44691'
		   m.paddr3 = ''
		   m.ptax   = '99-9999999'
		   m.pcontact = 'Phil Sherwood'
		   m.pphone   = '3302623115'
		   m.pcity  = 'Wooster'
		   m.pState = 'OH'
		   m.pZip   = '44691'
		ENDIF
		
		IF TYPE('m.goApp') = 'O'
		   m.cProducer = m.goApp.ccompanyname
		   IF m.goApp.lDemo
		      m.cProducer = 'Demo Version of Software'
		      m.cGrpName  = m.cProducer
		   ENDIF
		ELSE
		   m.cProducer = 'Development Company, Inc.'
		ENDIF
		
		IF TYPE('m.cProcessor') <> 'C'
		   m.cProcessor = ''
		ENDIF
		
		glGrpName = .F.
		
		IF THISFORM.opgOptions.VALUE <> 1 AND thisform.opgoptions.Value <> 5
		   IF NOT EMPTY(THIS.calias)
		      SELECT (THIS.calias)
		   ENDIF
		ENDIF
		
		SET REPORTBEHAVIOR 90
		
		IF NOT EMPTY(THISFORM.cntgetfile1.edtPath.VALUE)
		
		   DO CASE
		      CASE THISFORM.opgOptions.VALUE = 1			&& PDF
		         THISFORM.pdfoutput()
		      CASE THISFORM.opgOptions.VALUE = 2          && Excel
		         COPY TO (THISFORM.cntgetfile1.edtPath.VALUE) XLS
		      CASE THISFORM.opgOptions.VALUE = 3          && Delimited
		         COPY TO (THISFORM.cntgetfile1.edtPath.VALUE) DELIMITED
		      CASE THISFORM.opgOptions.VALUE = 4          && DBF
		         COPY TO (THISFORM.cntgetfile1.edtPath.VALUE) FOX2X
		      CASE THISFORM.opgOptions.VALUE = 5          && Text File
		         REPORT FORM (THISFORM.cReportName) TO FILE (THISFORM.cntgetfile1.edtPath.VALUE) ASCII
		   ENDCASE
		
		   * Bring up the file after creation?
		   IF THISFORM.chkshowFile.VALUE
		      DECLARE INTEGER ShellExecute IN "Shell32.dll" ;
		         INTEGER HWND, ;
		         STRING lpVerb, ;
		         STRING lpFile, ;
		         STRING lpParameters, ;
		         STRING lpDirectory, ;
		         LONG nShowCmd
		
		      ? ShellExecute(0, "Open", THISFORM.cntgetfile1.edtPath.VALUE,"","", 1)
		   ENDIF
		   IF THISFORM.chksendEmail.VALUE
		      lcRecipient  = THISFORM.oMessage.gettext('Enter email address to send report to','Recipient Email Address')
		      IF ISNULL(lcRecipient) OR NOT '@' $ lcRecipient
		         MESSAGEBOX('You must provide an email address for the report to be send. Report Email Failed.',16,'No Email Address')
		         RETURN .F.
		      ENDIF
		      swEmailReport(lcRecipient,THISFORM.cTitle1,THISFORM.cntgetfile1.edtPath.VALUE)
		   ENDIF
		ELSE
		   THISFORM.oMessage.warning('The filename must be provided.')
		   THISFORM.setnextcontrol(THISFORM.cntgetfile1.edtPath)
		ENDIF
		
		
	ENDPROC

	PROCEDURE sendemail
	ENDPROC

	PROCEDURE Cntokcancelcustom1.cmdok.Click
		thisform.process()
		DODEFAULT()
	ENDPROC

	PROCEDURE opgOptions.Option1.When
		LOCAL lcPath
		
		lcPath = thisform.cntgetfile1.edtpath.value
		lcFile = JUSTSTEM(lcPath)
		lcPath = ADDBS(JUSTPATH(lcPath))
		thisform.cntgetfile1.cDefaultExtension = 'PDF'
		thisform.opgOptions.value = 1
		thisform.cntgetfile1.edtpath.value = lcPath + lcFile + '.PDF'
		thisform.cntgetfile1.edtpath.refresh()
	ENDPROC

	PROCEDURE opgOptions.Option2.When
		LOCAL lcPath
		
		lcPath = thisform.cntgetfile1.edtpath.value
		lcFile = JUSTSTEM(lcPath)
		lcPath = ADDBS(JUSTPATH(lcPath))
		thisform.cntgetfile1.cDefaultExtension = 'XLS'
		thisform.opgOptions.value = 2 
		thisform.cntgetfile1.edtpath.value = lcPath + lcFile + '.XLS'
		thisform.cntgetfile1.edtpath.refresh()
	ENDPROC

	PROCEDURE opgOptions.Option3.When
		LOCAL lcPath
		
		lcPath = thisform.cntgetfile1.edtpath.value
		lcFile = JUSTSTEM(lcPath)
		lcPath = ADDBS(JUSTPATH(lcPath))
		thisform.cntgetfile1.cDefaultExtension = 'TXT'
		thisform.opgOptions.value = 3
		thisform.cntgetfile1.edtpath.value = lcPath + lcFile + '.TXT'
		thisform.cntgetfile1.edtpath.refresh()
	ENDPROC

	PROCEDURE opgOptions.Option4.When
		LOCAL lcPath
		
		lcPath = thisform.cntgetfile1.edtpath.value
		lcFile = JUSTSTEM(lcPath)
		lcPath = ADDBS(JUSTPATH(lcPath))
		thisform.cntgetfile1.cDefaultExtension = 'DBF'
		thisform.opgOptions.value = 4
		thisform.cntgetfile1.edtpath.value = lcPath + lcFile + '.DBF'
		thisform.cntgetfile1.edtpath.refresh()
	ENDPROC

	PROCEDURE opgOptions.Option5.When
		LOCAL lcPath
		
		lcPath = thisform.cntgetfile1.edtpath.value
		lcFile = JUSTSTEM(lcPath)
		lcPath = ADDBS(JUSTPATH(lcPath))
		thisform.cntgetfile1.cDefaultExtension = 'Txt'
		thisform.opgOptions.value = 5
		thisform.cntgetfile1.edtpath.value = lcPath + lcFile + '.Txt'
		thisform.cntgetfile1.edtpath.refresh()
	ENDPROC

ENDDEFINE
