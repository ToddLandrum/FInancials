*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="dmrwiesum.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor10" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 367
	Left = 40
	Name = "Dataenvironment"
	Top = 235
	Width = 743

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "groups", ;
		CursorSource = "groups", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 9, ;
		Name = "Cursor1", ;
		Order = "cgroup", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor10' AS cursor WITH ;
		Alias = "ownpcts", ;
		CursorSource = "ownpcts", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 575, ;
		Name = "Cursor10", ;
		Top = 141, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Order = "cwellid", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "glopt", ;
		CursorSource = "glopt", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "disbhist", ;
		CursorSource = "disbhist", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 430, ;
		Name = "Cursor4", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "wellhist", ;
		CursorSource = "wellhist", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 89, ;
		Left = 570, ;
		Name = "Cursor5", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "sysctl", ;
		CursorSource = "sysctl", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor6", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor7' AS cursor WITH ;
		Alias = "options", ;
		CursorSource = "options", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor7", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor8' AS cursor WITH ;
		Alias = "expcat", ;
		CursorSource = "expcat", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor8", ;
		Top = 140, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor9' AS cursor WITH ;
		Alias = "aropt", ;
		CursorSource = "aropt", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 430, ;
		Name = "Cursor9", ;
		Top = 140, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formdmrwiesum AS frmrptcriteria OF "..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Runcombo1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swyear1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swperiod1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklNet" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblProdYear" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swgroup1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAcctDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEndID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblGroup" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblRunNo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBegID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAcctDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="opgReportBy" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDateRange" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swdate1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swdate2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblHyphen" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSlash" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSelected" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSelected" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: ctype
		*p: lcustrpt
		*p: odist		&& Distproc object pointer
	*</DefinedPropArrayMethod>

	Caption = "Well Revenue/Expense Summary"
	DataSession = 2
	DoCreate = .T.
	Height = 490
	HelpContextID = 198
	Name = "FormDmrwiesum"
	Width = 504
	Swrptcriteriabuttons1.chkExport.Alignment = 0
	Swrptcriteriabuttons1.chkExport.Name = "chkExport"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.cmdPreview.Name = "cmdPreview"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 134
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 19
	Swrptcriteriabuttons1.Top = 408
	Swrptcriteriabuttons1.ZOrderSet = 1

	ADD OBJECT 'chklNet' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Don't Include Directly Paid or Dummy Amounts", ;
		Left = 140, ;
		Name = "chklNet", ;
		TabIndex = 16, ;
		Top = 370, ;
		Value = .T., ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSelected' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Choose Selected Wells", ;
		Left = 171, ;
		Name = "chkSelected", ;
		TabIndex = 10, ;
		Top = 235, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'lblAcctDate' AS lbllabelcustom WITH ;
		Caption = "Accounting Date:", ;
		Left = 80, ;
		Name = "lblAcctDate", ;
		TabIndex = 20, ;
		Top = 195, ;
		Visible = .T., ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblBegID' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "First Well:", ;
		Height = 16, ;
		Left = 80, ;
		Name = "lblBegID", ;
		TabIndex = 12, ;
		Top = 265, ;
		Width = 49, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblDateRange' AS lbllabelcustom WITH ;
		Caption = "Date Range:", ;
		Left = 79, ;
		Name = "lblDateRange", ;
		TabIndex = 21, ;
		Top = 114, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblEndID' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Last Well:", ;
		Height = 16, ;
		Left = 80, ;
		Name = "lblEndID", ;
		TabIndex = 13, ;
		Top = 315, ;
		Width = 49, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblGroup' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Group:", ;
		Height = 16, ;
		Left = 80, ;
		Name = "LblGroup", ;
		TabIndex = 14, ;
		Top = 154, ;
		Visible = .T., ;
		Width = 35, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblHyphen' AS lbllabelcustom WITH ;
		Caption = "-", ;
		FontSize = 12, ;
		Left = 271, ;
		Name = "lblHyphen", ;
		TabIndex = 22, ;
		Top = 111, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Report By:", ;
		Left = 79, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 2, ;
		Top = 25
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblProdYear' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Period Range:", ;
		Height = 16, ;
		Left = 79, ;
		Name = "LblProdYear", ;
		TabIndex = 15, ;
		Top = 114, ;
		Visible = .F., ;
		Width = 69, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblRunNo' AS lbllabelcustom WITH ;
		Caption = "Run No", ;
		Left = 80, ;
		Name = "lblRunNo", ;
		TabIndex = 17, ;
		Top = 114, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSelected' AS lbllabelcustom WITH ;
		Caption = "All IDs Selected", ;
		ForeColor = 0,0,255, ;
		Left = 170, ;
		Name = "lblSelected", ;
		TabIndex = 18, ;
		Top = 300, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSlash' AS lbllabelcustom WITH ;
		Caption = "/", ;
		FontSize = 12, ;
		Left = 210, ;
		Name = "lblSlash", ;
		TabIndex = 23, ;
		Top = 112, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'opgReportBy' AS opgoptiongroupcustom WITH ;
		BorderStyle = 0, ;
		ButtonCount = 3, ;
		Height = 75, ;
		Left = 169, ;
		Name = "opgReportBy", ;
		TabIndex = 1, ;
		Top = 21, ;
		Width = 237, ;
		Option1.Caption = "Run No", ;
		Option1.FontSize = 8, ;
		Option1.Height = 17, ;
		Option1.Left = 1, ;
		Option1.Name = "Option1", ;
		Option1.Top = 3, ;
		Option1.Width = 61, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "Production Period", ;
		Option2.FontSize = 8, ;
		Option2.Height = 16, ;
		Option2.Left = 1, ;
		Option2.Name = "Option2", ;
		Option2.Top = 27, ;
		Option2.Width = 102, ;
		Option3.AutoSize = .T., ;
		Option3.Caption = "Accounting Date Range", ;
		Option3.FontSize = 8, ;
		Option3.Height = 16, ;
		Option3.Left = 1, ;
		Option3.Name = "Option3", ;
		Option3.Top = 51, ;
		Option3.Width = 132
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'Runcombo1' AS runcombo WITH ;
		cshowwhat = R, ;
		Height = 20, ;
		Left = 170, ;
		Name = "Runcombo1", ;
		TabIndex = 3, ;
		Top = 112, ;
		Width = 257, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Swdate1' AS dpk WITH ;
		Height = 20, ;
		Left = 169, ;
		Name = "Swdate1", ;
		TabIndex = 6, ;
		Top = 112, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />

	ADD OBJECT 'Swdate2' AS dpk WITH ;
		Height = 20, ;
		Left = 282, ;
		Name = "Swdate2", ;
		TabIndex = 7, ;
		Top = 112, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />

	ADD OBJECT 'Swgroup1' AS swgroup WITH ;
		Left = 170, ;
		lexcludeall = .T., ;
		Name = "Swgroup1", ;
		TabIndex = 8, ;
		Top = 152, ;
		Visible = .T., ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Swperiod1' AS swperiod WITH ;
		Left = 220, ;
		Name = "Swperiod1", ;
		TabIndex = 5, ;
		Top = 112, ;
		Visible = .F., ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		Left = 170, ;
		Name = "Swrptlook1", ;
		TabIndex = 11, ;
		Top = 262, ;
		ZOrderSet = 5, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		txtBegID.clistexpression = wells.cwellid, ;
		txtBegID.clistworkarea = wells, ;
		txtBegID.Name = "txtBegID", ;
		TxtBegName.Name = "TxtBegName", ;
		txtEndID.clistexpression = wells.cwellid, ;
		txtEndID.clistworkarea = wells, ;
		txtEndID.Name = "txtEndID", ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />

	ADD OBJECT 'Swyear1' AS swyear WITH ;
		Left = 169, ;
		Name = "Swyear1", ;
		TabIndex = 4, ;
		Top = 112, ;
		Visible = .F., ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAcctDate' AS dpk WITH ;
		ControlSource = "", ;
		Height = 20, ;
		Left = 170, ;
		Name = "txtAcctDate", ;
		TabIndex = 9, ;
		Top = 194, ;
		Visible = .T., ;
		Width = 75, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />
	
	PROCEDURE builddata
		LOCAL m.ntotale, m.ntotali, oWellInv
		LOCAL m.ntotals, m.ntotaln, m.ntotalf, llDirRoy, llDirWork, llNetRpt
		
		WAIT WIND NOWAIT 'Processing Report Request...Please Wait'
		lnstart = SECONDS()
		swlogging('Well Rev/Exp Summary', .T., lnstart)
		tcWellID1  = THISFORM.swrptlook1.txtBegID.VALUE
		tcWellID2  = THISFORM.swrptlook1.txtEndID.VALUE
		llSelected = THISFORM.chkselected.VALUE
		
		IF NOT llSelected
		   SELECT cwellid AS cid FROM wells WHERE BETWEEN(cwellid,tcWellID1,tcWellID2) INTO CURSOR SELECTED ORDER BY cwellid
		ELSE
		   SELECT SELECTED
		   GO TOP
		   tcWellID1 = cid
		   GO BOTT
		   tcWellID2 = cid
		ENDIF
		
		oWellInv = CREATEOBJECT('swbizobj_wellinv')
		
		DO CASE
		   CASE THISFORM.opgreportby.VALUE = 2
		      tcyear       = THISFORM.swyear1.VALUE
		      tcperiod     = THISFORM.swperiod1.VALUE
		      tcgroup      = LEFT(THISFORM.swgroup1.VALUE,2)
		      tnrunno      = 0
		      THISFORM.cTitle2  = 'For Period: ' + tcperiod + '/'+ tcyear + ' Group: ' + tcgroup
		      tdDate1      = {01/01/1960}
		      tddate2      = {12/31/2999}
		      lcscan       = 'cyear+cperiod = tcyear+tcperiod'
		
		   CASE THISFORM.opgreportby.VALUE = 3
		      tcyear       = '1980'
		      tcperiod     = '01'
		      tcgroup      = LEFT(THISFORM.swgroup1.VALUE,2)
		      tnrunno      = 0
		      tdDate1      = THISFORM.swdate1.VALUE
		      tddate2      = THISFORM.swdate2.VALUE
		      THISFORM.cTitle2  = 'For Date Range: ' + DTOC(tdDate1) + '-' + DTOC(tddate2) + ' Group: ' + tcgroup
		      lcscan       = 'between(dexpdate,tddate1,tddate2)'
		
		   OTHERWISE
		      tcyear       = THISFORM.runcombo1.LISTITEM[thisform.runcombo1.listitemid,2]
		      tnrunno      = INT(VAL(THISFORM.runcombo1.LISTITEM[thisform.runcombo1.listitemid,3]))
		      tcgroup      = THISFORM.runcombo1.LISTITEM[thisform.runcombo1.listitemid,4]
		      tcdmbatch    = THISFORM.runcombo1.LISTITEM[thisform.runcombo1.listitemid,5]
		      tcperiod     = '01'
		      tcyear1      = tcyear
		      tdDate1      = {01/01/1960}
		      tddate2      = {12/31/2999}
		      IF tnrunno = 0
		         tcgroup = LEFT(THISFORM.swgroup1.VALUE,2)
		      ENDIF
		      IF tnrunno  = 0
		         tcgroup  = LEFT(THISFORM.swgroup1.VALUE,2)
		         tdDate1  = THISFORM.txtacctdate.VALUE
		         THISFORM.cTitle2  = 'For Run: *New Run*  Group: ' + tcgroup
		         lcscan       = "nrunnorev = 0 and cYear <> 'FIXD' and dExpDate <= THISFORM.txtacctdate.VALUE"
		      ELSE
		         tcgroup     = THISFORM.runcombo1.LISTITEM[thisform.runcombo1.listitemid,4]
		         tdDate1  = CTOD(THISFORM.runcombo1.LISTITEM[thisform.runcombo1.listitemid,7])
		         THISFORM.cTitle2  = 'For Run: ' + PADL(ALLT(STR(tnrunno)),3,'0') + '/'+ tcyear + ' Group: ' + tcgroup
		         lcscan       = 'nrunnorev = tnrunno and crunyearrev = tcyear'
		      ENDIF
		ENDCASE
		
		IF EMPTY(tcyear)
		   tcyear = STR(YEAR(DATE()),4)
		ENDIF
		
		llNetRpt    = THISFORM.chklNet.VALUE
		
		IF THISFORM.cType = 'R'
		   THISFORM.cTitle1  = 'Well Revenue/Expense Summary'
		ELSE
		   THISFORM.cTitle1  = 'Well JIB Expense Summary'
		ENDIF
		
		THISFORM.cSelectCriteria = 'Wells: ' + ALLTRIM(tcWellID1) + ' - ' + ALLTRIM(tcWellID2)
		THISFORM.cSortOrder = 'Well ID'
		
		IF llNetRpt
		   THISFORM.cSelectCriteria = ALLT(THISFORM.cSelectCriteria) + ' (No Directly Paid or "Dummy" Amts)'
		ENDIF
		
		*
		*  Call distproc to create the (invtmp) and (wellwork) cursors
		*
		IF THISFORM.cType = 'R'
		   THISFORM.oDist = CREATEOBJECT('distproc',tcWellID1, tcWellID2, ;
		      tcperiod, tcyear, tcgroup, 'W', tdDate1, .T.,tnrunno)
		ELSE
		   THISFORM.oDist = CREATEOBJECT('jibproc',tcWellID1, tcWellID2, ;
		      '01', tcyear, tcgroup, 'W', tdDate1, .T.,tnrunno)
		ENDIF
		
		CREATE CURSOR wellsumtemp ;
		   (cwellid     C(10), ;
		   cwellname   C(30), ;
		   cDeck       C(10), ;
		   cType       C(1), ;
		   hyear       C(4), ;
		   hperiod     C(2), ;
		   hdate       d, ;
		   ngrossoil   N(12,2), ;
		   ngrossgas   N(12,2), ;
		   nothinc     N(12,2), ;
		   ntotinc     N(12,2), ;
		   nMiscInc1   N(12,2),  ;
		   nMiscInc2   N(12,2),  ;
		   nTrpInc     N(12,2),  ;
		   ntotale     N(12,2), ;
		   nexpcl1     N(12,2), ;
		   nexpcl2     N(12,2), ;
		   nexpcl3     N(12,2), ;
		   nexpcl4     N(12,2), ;
		   nexpcl5     N(12,2), ;
		   nexpcla     N(12,2), ;
		   nexpclb     N(12,2), ;
		   ntotexp     N(12,2), ;
		   ntotmcf     N(12,5), ;
		   ntotbbl     N(12,5), ;
		   ntotprod    N(12,5), ;
		   ntotsev     N(12,2), ;
		   ntotbbltx   N(12,2), ;
		   ntotmcftx   N(12,2), ;
		   ntotothtx   N(12,2), ;
		   ntotcomp    N(12,2), ;
		   ntotGath    N(12,2), ;
		   nmktgexp    N(12,2), ;
		   ldiroilpurch l, ;
		   ldirgaspurch l, ;
		   nnet        N(12,2))
		
		**-  Check the options to see whether to net out
		**-  direct paid owner's taxes
		SELECT options
		GO TOP
		llDirRoy   = ldirroy
		llDirWork  = ldirwork
		
		DO CASE
		   CASE THISFORM.opgreportby.VALUE = 1
		      *
		      * Report by Run Number
		      *
		      IF THISFORM.oDist.MAIN()
		         IF THISFORM.cType = 'J'
		            IF USED('wellwork')
		               USE IN wellwork
		            ENDIF
		            IF USED('invtmp')
		               USE IN invtmp
		            ENDIF
		            USE DBF('jibwell') AGAIN IN 0 ALIAS wellwork
		            USE DBF('jibowner') AGAIN IN 0 ALIAS invtmp
		         ENDIF
		
		
		
		         SELECT wellwork.cwellid, wells.cwellname, ;
		            cDeck, hyear, hperiod, ;
		            SUM(ngrossgas+ngrossoil+nTrpInc+nMiscInc1+nMiscInc2+nothinc) AS ntotinc,   ;
		            wells.ldiroilpurch, wells.ldirgaspurch, 'R' AS cType, ;
		            SUM(ngrossoil) AS ngrossoil, SUM(ngrossgas) AS ngrossgas, SUM(nothinc) AS nothinc, SUM(nMiscInc1) AS nMiscInc1,  ;
		            SUM(nMiscInc2) AS nMiscInc2, SUM(nTrpInc) AS nTrpInc,  ;
		            SUM(ntotale) AS ntotale, ;
		            SUM(nexpcl1) AS nexpcl1, ;
		            SUM(nexpcl2) AS nexpcl2, ;
		            SUM(nexpcl3) AS nexpcl3, ;
		            SUM(nexpcl4) AS nexpcl4, ;
		            SUM(nexpcl5) AS nexpcl5, ;
		            SUM(nexpcla) AS nexpcla, ;
		            SUM(nexpclb) AS nexpclb, ;
		            SUM(ntotmcf) AS ntotmcf, ;
		            SUM(ntotbbl) AS ntotbbl, ;
		            SUM(ntotprod) AS ntotprod, ;
		            SUM(ntotmktg) AS nmktgexp, ;
		            SUM(wellwork.ngather) AS ntotGath, ;
		            SUM(wellwork.ncompress) AS ntotcomp, ;
		            SUM(ntotbbltx1+ntotbbltx2+ntotbbltx3+ntotbbltx4+ntotbbltxr+ntotbbltxw) AS ntotbbltx,   ;
		            SUM(ntotmcftx1+ntotmcftx2+ntotmcftx3+ntotmcftx4+ntotmcftxr+ntotmcftxw) AS ntotmcftx,   ;
		            SUM(ntotothtx1+ntotothtx2+ntotothtx3+ntotothtx4) AS ntotothtx   ;
		            FROM wellwork, wells ;
		            WHERE wellwork.cwellid IN (SELECT cid FROM SELECTED) ;
		            AND wellwork.cwellid = wells.cwellid  ;
		            AND IIF(tcgroup <> '**', wells.cGroup = tcgroup, .T.)  ;
		            AND INLIST(wells.cwellstat,'A','V','F') ;
		            INTO CURSOR welltmp ;
		            GROUP BY wellwork.cwellid, cDeck, hyear, hperiod ;
		            ORDER BY wellwork.cwellid, cDeck, hyear, hperiod
		      ELSE
		         WAIT CLEAR
		         RETURN .F.
		      ENDIF
		
		   CASE THISFORM.opgreportby.VALUE = 2
		      SELECT wellhist.cwellid, wells.cwellname, SUM(ngrossgas+ngrossoil+nTrpInc+nMiscInc1+nMiscInc2+nothinc) AS ntotinc,   ;
		      cDeck, hyear, hperiod, ;
		         wells.ldiroilpurch, wells.ldirgaspurch, 'R' AS cType, ;
		         SUM(ngrossoil) AS ngrossoil, SUM(ngrossgas) AS ngrossgas, SUM(nothinc) AS nothinc, SUM(nMiscInc1) AS nMiscInc1,  ;
		         SUM(nMiscInc2) AS nMiscInc2, SUM(nTrpInc) AS nTrpInc,  ;
		         SUM(ntotale) AS ntotale, ;
		         SUM(nexpcl1) AS nexpcl1, ;
		         SUM(nexpcl2) AS nexpcl2, ;
		         SUM(nexpcl3) AS nexpcl3, ;
		         SUM(nexpcl4) AS nexpcl4, ;
		         SUM(nexpcl5) AS nexpcl5, ;
		         SUM(nexpcla) AS nexpcla, ;
		         SUM(nexpclb) AS nexpclb, ;
		         SUM(ntotmcf) AS ntotmcf, ;
		         SUM(ntotbbl) AS ntotbbl, ;
		         SUM(ntotprod) AS ntotprod, ;
		         SUM(ntotmktg) AS nmktgexp, ;
		         SUM(wellhist.ngather) AS ntotGath, ;
		         SUM(wellhist.ncompress) AS ntotcomp, ;
		         SUM(ntotbbltx1+ntotbbltx2+ntotbbltx3+ntotbbltx4+ntotbbltxr+ntotbbltxw) AS ntotbbltx,   ;
		         SUM(ntotmcftx1+ntotmcftx2+ntotmcftx3+ntotmcftx4+ntotmcftxr+ntotmcftxw) AS ntotmcftx,   ;
		         SUM(ntotothtx1+ntotothtx2+ntotothtx3+ntotothtx4) AS ntotothtx   ;
		         FROM wellhist, wells ;
		         WHERE hyear = tcyear AND hperiod = tcperiod AND wellhist.cGroup = tcgroup ;
		         AND wellhist.cwellid IN (SELECT cid FROM SELECTED) ;
		         AND wellhist.cwellid = wells.cwellid  ;
		         AND INLIST(wells.cwellstat,'A','V','F') ;
		         INTO CURSOR welltmp ;
		         GROUP BY wellhist.cwellid, wellhist.cdeck, wellhist.hyear, wellhist.hperiod ;
		         ORDER BY wellhist.cwellid, wellhist.cdeck, wellhist.hyear, wellhist.hperiod
		
		   CASE THISFORM.opgreportby.VALUE = 3
		      SELECT wellhist.cwellid, wells.cwellname, SUM(ngrossgas+ngrossoil+nTrpInc+nMiscInc1+nMiscInc2+nothinc) AS ntotinc,   ;
		      cDeck, hyear, hperiod, ;
		         wells.ldiroilpurch, wells.ldirgaspurch, 'R' AS cType, ;
		         SUM(ngrossoil) AS ngrossoil, SUM(ngrossgas) AS ngrossgas, SUM(nothinc) AS nothinc, SUM(nMiscInc1) AS nMiscInc1,  ;
		         SUM(nMiscInc2) AS nMiscInc2, SUM(nTrpInc) AS nTrpInc,  ;
		         SUM(ntotale) AS ntotale, ;
		         SUM(nexpcl1) AS nexpcl1, ;
		         SUM(nexpcl2) AS nexpcl2, ;
		         SUM(nexpcl3) AS nexpcl3, ;
		         SUM(nexpcl4) AS nexpcl4, ;
		         SUM(nexpcl5) AS nexpcl5, ;
		         SUM(nexpcla) AS nexpcla, ;
		         SUM(nexpclb) AS nexpclb, ;
		         SUM(ntotmcf) AS ntotmcf, ;
		         SUM(ntotbbl) AS ntotbbl, ;
		         SUM(ntotprod) AS ntotprod, ;
		         SUM(ntotmktg) AS nmktgexp, ;
		         SUM(wellhist.ngather) AS ntotGath, ;
		         SUM(wellhist.ncompress) AS ntotcomp, ;
		         SUM(ntotbbltx1+ntotbbltx2+ntotbbltx3+ntotbbltx4+ntotbbltxr+ntotbbltxw) AS ntotbbltx,   ;
		         SUM(ntotmcftx1+ntotmcftx2+ntotmcftx3+ntotmcftx4+ntotmcftxr+ntotmcftxw) AS ntotmcftx,   ;
		         SUM(ntotothtx1+ntotothtx2+ntotothtx3+ntotothtx4) AS ntotothtx   ;
		         FROM wellhist, wells ;
		         WHERE BETWEEN(wellhist.hdate,tdDate1,tddate2) AND wellhist.cGroup = tcgroup ;
		         AND wellhist.cwellid IN (SELECT cid FROM SELECTED) ;
		         AND wellhist.cwellid = wells.cwellid  ;
		         AND INLIST(wells.cwellstat,'A','V','F') ;
		         INTO CURSOR welltmp ;
		         GROUP BY wellhist.cwellid, wellhist.cdeck, wellhist.hyear, wellhist.hperiod ;
		         ORDER BY wellhist.cwellid, wellhist.cdeck, wellhist.hyear, wellhist.hperiod
		ENDCASE
		
		SELECT wellsumtemp
		APPEND FROM DBF('welltmp')
		SELECT welltmp
		USE
		SELECT wellsumtemp
		lnMax = RECCOUNT()
		lnCount = 1
		oprogress = THISFORM.omessage.progressbarex('Building Report Data...')
		oprogress.setprogressrange(0,lnMax)
		
		SELECT wellsumtemp
		GO TOP
		SCAN
		   SCATTER MEMVAR
		   oprogress.setprogressmessage('Well: ' + m.cwellname)
		   oprogress.updateprogress(lnCount)
		   lnCount = lnCount + 1
		   m.nadjust   = 0
		   
		   IF EMPTY(m.cDeck)
		      m.cDeck = oWellInv.DOIDeckNameLookup(m.hyear, m.hperiod, m.cwellid)
		   ENDIF 
		   IF llNetRpt
		      *  Report only net amounts.
		      m.ntotinc = 0
		      IF THISFORM.cType = 'R'
		         * Get the total of one man item oil & gas so we can subtract it off before we net.
		         lnOneManOil = 0
		         SELECT SUM(ntotalinc) AS nOneManOil ;
		            FROM income ;
		            WHERE cwellid = m.cwellid AND IIF(tnrunno=0,nRunNo=0,nRunNo = tnrunno AND cRunYear = tcyear) ;
		            AND NOT EMPTY(cownerid) AND csource='BBL' INTO CURSOR temp
		         IF _TALLY > 0
		            lnOneManOil = nOneManOil
		         ENDIF
		         lnOneManGas = 0
		         SELECT SUM(ntotalinc) AS nOneManGas ;
		            FROM income ;
		            WHERE cwellid = m.cwellid AND IIF(tnrunno=0,nRunNo=0,nRunNo = tnrunno AND cRunYear = tcyear) ;
		            AND NOT EMPTY(cownerid) AND csource='MCF' INTO CURSOR temp
		         IF _TALLY > 0
		            lnOneManGas = nOneManGas
		         ENDIF
		
		         * Get the net oil & gas after subtracting any one man items, then add one man items back
		         lnNetGas  = swNetRevenue(m.cwellid, (m.ngrossgas-lnOneManGas), 'G',.F.,.T.,.F.,.F.,.F.,.F.,.F.,m.cDeck) + lnOneManGas
		         lnNetOil  = swNetRevenue(m.cwellid, (m.ngrossoil-lnOneManOil), 'O',.F.,.T.,.F.,.F.,.F.,.F.,.F.,m.cDeck) + lnOneManOil
		
		         * We're going to have to decide in the future what to do about one man items
		         * in these fields.  We don't currently have a net and gross field for each.
		         lnNetMisc1 = swNetRevenue(m.cwellid, m.nMiscInc1, '1',.F.,.T.,.F.,.F.,.F.,.F.,.F.,m.cDeck)
		         lnNetMisc2 = swNetRevenue(m.cwellid, m.nMiscInc2, '2',.F.,.T.,.F.,.F.,.F.,.F.,.F.,m.cDeck)
		         lnNetTrp   = swNetRevenue(m.cwellid, m.nTrpInc,   'T',.F.,.T.,.F.,.F.,.F.,.F.,.F.,m.cDeck)
		         lnNetOth   = swNetRevenue(m.cwellid, m.nothinc,   'P',.F.,.T.,.F.,.F.,.F.,.F.,.F.,m.cDeck)
		
		         m.ntotinc = lnNetGas + lnNetOil+lnNetMisc1+lnNetMisc2+lnNetTrp+lnNetOth
		         m.ngrossgas = lnNetGas
		         m.ngrossoil = lnNetOil
		         m.ntotbbl = swNetRevenue(m.cwellid, m.ntotbbl, 'O',.F.,.T.,.F.,.F.,.F.,.F.,.F.,m.cDeck)
		         m.ntotmcf = swNetRevenue(m.cwellid, m.ntotmcf, 'G',.F.,.T.,.F.,.F.,.F.,.F.,.F.,m.cDeck)
		
		         m.ntotprod = swNetRevenue(m.cwellid, m.ntotprod, 'P',.F.,.T.,.F.,.F.,.F.,.F.,.F.,m.cDeck)
		         *
		         *  If the purchaser withholds the direct paid oil tax, exclude it,
		         *  otherwise show it.
		         *
		         lnNetOTax  = swNetRevenue(m.cwellid, m.ntotbbltx, 'O',.F.,.T.,.T.,.F.,.F.,.F.,.F.,m.cDeck)
		         lnNetGTax  = swNetRevenue(m.cwellid, m.ntotmcftx, 'G',.F.,.T.,.T.,.F.,.F.,.F.,.F.,m.cDeck)
		         lnNetPTax  = swNetRevenue(m.cwellid, m.ntotothtx, 'P',.F.,.T.,.F.,.F.,.F.,.F.,.F.,m.cDeck)
		         m.ntotsev = lnNetOTax + lnNetGTax + lnNetPTax
		         SELE wellsumtemp
		         REPLACE ntotsev WITH m.ntotsev
		      ELSE
		         STORE 0 TO lnNetGas, lnNetOil, lnNetOTax, lnNetGTax, lnNetPTax, m.ntotbbl, m.ntotmcf
		      ENDIF
		
		      swselect('investor')
		      SET ORDER TO cownerid
		      lnAmount = 0  &&  Scan for one man items, and remove them from the total before they get netted down
		      lnDummyAmt = 0
		      SELECT expense
		      SCAN FOR cwellid = m.cwellid ;
		           AND cYear <> 'FIXD' ;
		           AND cCatCode<> 'MKTG' ;
		           AND &lcscan ;
		           AND cYear = m.hyear ;
		           AND cPeriod = m.hPeriod
		         SCATTER MEMVAR
		         
		         IF EMPTY(m.cDeck)
		            m.cDeck = oWellInv.DOIDeckNameLookup(m.cyear, m.cperiod, m.cwellid)
		         ENDIF 
		         IF NOT EMPTY(m.cownerid)
		            SELECT investor
		            IF SEEK(m.cownerid) AND lDummy
		               LOOP  && Don't add dummy amounts
		            ENDIF
		         ELSE
		            IF NOT m.cCatCode = 'MKTG'
		               lnAmount = lnAmount + swNetExp(m.nAmount, m.cwellid, .T., m.cexpclass, 'B', .F., m.cownerid, m.cCatCode, m.cDeck)
		            ELSE
		               lnAmount = lnAmount + swNetRevenue(m.cwellid, m.nAmount, 'G', .F.,.T.,.F.,.F.,.F.,.F.,.F.,m.cDeck)
		            ENDIF
		         ENDIF
		      ENDSCAN
		
		      m.ntotexp  = lnAmount
		
		      IF THISFORM.lCustRpt
		         m.nnet = m.ntotinc - m.ntotexp - m.ntotGath - m.ntotcomp - m.ntotsev
		      ELSE
		         m.nnet = m.ntotinc - m.ntotexp - m.ntotGath - m.ntotcomp - m.ntotsev
		      ENDIF
		
		      SELECT wellsumtemp
		      REPL ntotinc WITH m.ntotinc, ;
		         ngrossgas WITH lnNetGas, ;
		         ngrossoil WITH lnNetOil, ;
		         ntotbbltx WITH lnNetOTax, ;
		         ntotmcftx WITH lnNetGTax, ;
		         ntotothtx WITH lnNetPTax, ;
		         ntotbbl   WITH m.ntotbbl, ;
		         ntotmcf   WITH m.ntotmcf, ;
		         ntotprod  WITH m.ntotprod,  ;
		         ntotexp   WITH m.ntotexp, ;
		         nnet      WITH m.nnet
		   ELSE
		      *  If directly paid owners are exempt from taxes, remove them
		      IF llDirWork OR llDirRoy
		         m.ntotbbltx = swNetRevenue(m.cwellid, m.ntotbbltx, 'O',,,,,,,,m.cDeck)
		         m.ntotmcftx = swNetRevenue(m.cwellid, m.ntotmcftx, 'G',,,,,,,,m.cDeck)
		      ENDIF
		      m.ntotsev = m.ntotbbltx + m.ntotmcftx + m.ntotothtx
		      m.ntotexp = m.ntotale+m.nexpcl1+m.nexpcl2+m.nexpcl3+m.nexpcl4+m.nexpcl5+m.nexpcla+m.nexpclb + m.nmktgexp
		      SELECT wellsumtemp
		      REPLACE ntotsev WITH m.ntotsev, ;
		         ntotexp WITH m.ntotexp
		      m.nnet = ntotinc - ntotexp - ntotGath - ntotcomp - ntotsev
		      REPLACE nnet WITH m.nnet
		   ENDIF
		ENDSCAN
		
		oprogress.CloseProgress()
		oprogress = .NULL.
		
		WAIT CLEAR
		
		SELECT wellsumtemp.cwellid, wellsumtemp.cwellname, ;
		   cDeck, hyear, hperiod, ;
		   SUM(ntotinc) as ntotinc,   ;
		   ldiroilpurch, ldirgaspurch,  cType, ;
		   SUM(ngrossoil) AS ngrossoil, SUM(ngrossgas) AS ngrossgas, SUM(nothinc) AS nothinc, SUM(nMiscInc1) AS nMiscInc1,  ;
		   SUM(nMiscInc2) AS nMiscInc2, SUM(nTrpInc) AS nTrpInc,  ;
		   SUM(ntotale) AS ntotale, ;
		   SUM(ntotexp) AS ntotexp, ;
		   SUM(nexpcl1) AS nexpcl1, ;
		   SUM(nexpcl2) AS nexpcl2, ;
		   SUM(nexpcl3) AS nexpcl3, ;
		   SUM(nexpcl4) AS nexpcl4, ;
		   SUM(nexpcl5) AS nexpcl5, ;
		   SUM(nexpcla) AS nexpcla, ;
		   SUM(nexpclb) AS nexpclb, ;
		   SUM(ntotmcf) AS ntotmcf, ;
		   SUM(ntotbbl) AS ntotbbl, ;
		   SUM(ntotprod) AS ntotprod, ;
		   SUM(nnet) AS nnet, ;
		   SUM(nmktgexp) AS nmktgexp, ;
		   SUM(ntotGath) AS ntotGath, ;
		   SUM(ntotcomp) AS ntotcomp, ;
		   SUM(ntotbbltx) AS ntotbbltx,   ;
		   SUM(ntotmcftx) AS ntotmcftx,   ;
		   SUM(ntotothtx) AS ntotothtx,   ;
		   SUM(ntotsev) AS ntotsev ;
		   FROM wellsumtemp;
		   INTO CURSOR wellsum READWRITE  ;
		   GROUP BY cwellid ;
		   ORDER BY cwellid
		* Remove any zero amount entries
		SELECT wellsum
		DELETE FOR ngrossoil = 0 AND ;
		   ngrossgas = 0 AND ;
		   nothinc   = 0 AND ;
		   ntotinc   = 0 AND ;
		   nMiscInc1 = 0 AND ;
		   nMiscInc2 = 0 AND ;
		   nTrpInc   = 0 AND ;
		   ntotale   = 0 AND ;
		   nexpcl1   = 0 AND ;
		   nexpcl2   = 0 AND ;
		   nexpcl3   = 0 AND ;
		   nexpcl4   = 0 AND ;
		   nexpcl5   = 0 AND ;
		   nexpcla   = 0 AND ;
		   nexpclb   = 0 AND ;
		   ntotexp   = 0 AND ;
		   ntotmcf   = 0 AND ;
		   ntotbbl   = 0 AND ;
		   ntotprod  = 0 AND ;
		   ntotsev   = 0 AND ;
		   nnet      = 0
		
		swlogging('Well Rev/Exp Summary', .F., lnstart, SECONDS())
		SELECT wellsum
		COUNT FOR NOT DELETED() TO lnRecs
		
		IF lnRecs > 0
		   RETURN .T.
		ELSE
		   RETURN .F.
		ENDIF
		
		
	ENDPROC

	PROCEDURE Init
		LPARA tcType
		
		IF DODEFAULT()
		
		   IF VARTYPE(tctype) = 'C'
		      IF tcType = 'J'
		         thisform.caption = 'Well JIB Expense Summary'
		         thisform.runcombo1.cshowwhat = 'J'
		      ENDIF
		   ELSE
		      tcType = 'R'   
		   ENDIF
		   
		   thisform.cType = tcType
		         
		   SELECT wells
		   SET ORDER TO cwellid
		   GO TOP
		   THISFORM.swrptlook1.txtbegname.VALUE = cwellname
		   THISFORM.swrptlook1.txtbegid.VALUE = cwellid
		   GO BOTTOM
		   THISFORM.swrptlook1.txtendname.VALUE = cwellname
		   THISFORM.swrptlook1.txtendid.VALUE = cwellid
		
		   SELECT wells
		   SET FILTER TO
		
		   IF tcType = 'R'
		      IF FILE(m.goapp.cRptsFolder+'dmrwiecust.frx')
		         thisform.creportname = m.goapp.cRptsFolder+'dmrwiecust.frx'
		         thisform.lCustRpt = .T.
		      else   
		         THISFORM.creportname = 'dmrwiesum'
		      endif
		   ELSE
		      IF FILE(m.goapp.cRptsFolder+'dmrwiecustj.frx')
		         thisform.creportname = m.goapp.cRptsFolder+'dmrwiecustj.frx'
		         thisform.lCustRpt = .T.
		      else   
		         THISFORM.creportname = 'dmrwiesumj'
		      endif
		   ENDIF   
		
		  
		   SELECT sysctl
		   SET ORDER TO yrprdkey
		   GO TOP
		   SCAN FOR ldisbman AND ctypeclose = 'R'
		      IF THISFORM.swgroup1.lexcludeall
		         lnlistcount = THISFORM.swgroup1.LISTCOUNT
		      ELSE
		         lnlistcount = THISFORM.swgroup1.LISTCOUNT + 1
		      ENDIF
		
		      FOR lnx = 1 TO lnlistcount
		         IF LEFT(THISFORM.swgroup1.LISTITEM[lnX],2) = cgroup
		            THISFORM.swgroup1.LISTITEMID = lnx
		            EXIT
		         ENDIF
		      ENDFOR
		      EXIT
		   ENDSCAN
		ENDIF
		
	ENDPROC

	PROCEDURE chkSelected.Click
		IF this.Value
		   DO FORM commonsource\selected-ids WITH 'WELL' LINKED 
		   lnCount = RECCOUNT('selected')
		   thisform.lblselected.Caption = TRANSFORM(lnCount) + ' Wells Selected'
		   thisform.lblselected.Visible = .T.
		   thisform.lblbegID.Visible = .F.
		   thisform.lblendID.Visible = .F.
		   thisform.swrptlook1.Visible = .F.
		ELSE
		   thisform.lblselected.Visible = .F.
		   thisform.lblbegID.Visible = .T.
		   thisform.lblendID.Visible = .T.
		   thisform.swrptlook1.Visible = .T.
		ENDIF 
	ENDPROC

	PROCEDURE opgReportBy.Init
		if dodefault()
		   this.value = 1
		endif   
	ENDPROC

	PROCEDURE opgReportBy.Valid
		DO CASE
		   CASE THIS.VALUE = 1                     &&  Runno
		      THISFORM.lblProdYear.VISIBLE  = .F.
		      THISFORM.swperiod1.VISIBLE    = .F.
		      THISFORM.swyear1.VISIBLE      = .F.
		      THISFORM.lblRunNo.VISIBLE     = .T.
		      THISFORM.runcombo1.VISIBLE    = .T.
		      THISFORM.swdate1.VISIBLE      = .F.
		      THISFORM.swdate2.VISIBLE      = .F.
		      THISFORM.lblDateRange.VISIBLE = .F.
		      if thisform.RunCombo1.listitemid = 1  &&  New Run, so show accounting date
		         THISFORM.lblacctdate.VISIBLE  = .T.
		         THISFORM.txtacctdate.VISIBLE  = .T.
		      else                                  &&  Closed run, so don't show accounting date
		         THISFORM.lblacctdate.VISIBLE  = .f.
		         THISFORM.txtacctdate.VISIBLE  = .f.
		      endif
		      THISFORM.lblSlash.VISIBLE     = .F.
		      THISFORM.lblHyphen.VISIBLE    = .F.
		      if thisform.RunCombo1.listitemid = 1  &&  New Run, so show group
		         thisform.swGroup1.visible = .t.
		      else                                  &&  Closed run, so don't show group
		         thisform.swGroup1.visible = .f.
		      endif
		   CASE THIS.VALUE = 2                     &&  Production Period Range
		      THISFORM.lblProdYear.VISIBLE  = .T.
		      THISFORM.swperiod1.VISIBLE    = .T.
		      THISFORM.swyear1.VISIBLE      = .T.
		      THISFORM.lblRunNo.VISIBLE     = .F.
		      THISFORM.runcombo1.VISIBLE    = .F.
		      THISFORM.swdate1.VISIBLE      = .F.
		      THISFORM.swdate2.VISIBLE      = .F.
		      THISFORM.lblDateRange.VISIBLE = .F.
		      THISFORM.lblacctdate.VISIBLE  = .F.
		      THISFORM.txtacctdate.VISIBLE  = .F.
		      THISFORM.lblSlash.VISIBLE     = .T.
		      THISFORM.lblHyphen.VISIBLE    = .F.
		      thisform.swGroup1.visible     = .t.
		   CASE THIS.VALUE = 3                     &&  Accounting Date Range
		      THISFORM.lblProdYear.VISIBLE  = .F.
		      THISFORM.swperiod1.VISIBLE    = .F.
		      THISFORM.swyear1.VISIBLE      = .F.
		      THISFORM.lblRunNo.VISIBLE     = .F.
		      THISFORM.runcombo1.VISIBLE    = .F.
		      THISFORM.swdate1.VISIBLE      = .T.
		      THISFORM.swdate2.VISIBLE      = .T.
		      THISFORM.lblDateRange.VISIBLE = .T.
		      THISFORM.lblacctdate.VISIBLE  = .F.
		      THISFORM.txtacctdate.VISIBLE  = .F.
		      THISFORM.lblSlash.VISIBLE     = .F.
		      THISFORM.lblHyphen.VISIBLE    = .T.
		      thisform.swGroup1.visible     = .t.
		   OTHERWISE                               &&  Reset to Runno
		      THIS.VALUE = 1
		      THISFORM.lblProdYear.VISIBLE  = .F.
		      THISFORM.swperiod1.VISIBLE    = .F.
		      THISFORM.swyear1.VISIBLE      = .F.
		      THISFORM.lblRunNo.VISIBLE     = .T.
		      THISFORM.runcombo1.VISIBLE    = .T.
		      THISFORM.swdate1.VISIBLE      = .F.
		      THISFORM.swdate2.VISIBLE      = .F.
		      THISFORM.lblDateRange.VISIBLE = .F.
		      THISFORM.lblacctdate.VISIBLE  = .T.
		      THISFORM.txtacctdate.VISIBLE  = .T.
		      THISFORM.lblSlash.VISIBLE     = .F.
		      THISFORM.lblHyphen.VISIBLE    = .F.
		ENDCASE
		
		
	ENDPROC

	PROCEDURE Runcombo1.Init
		IF DODEFAULT()
		   this.listitemid = 1
		ENDIF   
	ENDPROC

	PROCEDURE Runcombo1.Valid
		IF 'New' $ this.value
		   thisform.swgroup1.visible = .t.
		   thisform.lblgroup.visible = .t.
		   thisform.lblacctdate.visible = .t.
		   thisform.txtacctdate.visible = .t.
		ELSE   
		   thisform.swgroup1.visible = .f.
		   thisform.lblgroup.visible = .f.
		   thisform.lblacctdate.visible = .f.
		   thisform.txtacctdate.visible = .f.
		ENDIF   
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cwellid,cwellname,cgroup,cwellstat'
		DO FORM ..\custom\picklist WITH 'Wells', lcList, thisform.swrptlook1.txtbegid.value, 4
		
		IF llOK
		   thisform.swrptlook1.txtBegId.value = cwellid
		   thisform.swrptlook1.txtBegName.value = cwellname
		   thisform.swrptlook1.txtBegId.refresh()
		   thisform.swrptlook1.txtBegName.refresh()
		ENDIF   
		
		thisform.setnextcontrol(thisform.swrptlook1.txtBegId)
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cwellid,cwellname,cgroup,cwellstat'
		DO FORM ..\custom\picklist WITH 'Wells', lcList, thisform.swrptlook1.txtendid.value, 4
		
		IF llOK
		   thisform.swrptlook1.txtEndId.value = cwellid
		   thisform.swrptlook1.txtEndName.value = cwellname
		   thisform.swrptlook1.txtEndId.refresh()
		   thisform.swrptlook1.txtEndName.refresh()
		ENDIF   
		
		thisform.setnextcontrol(thisform.swrptlook1.txtEndId)
		
	ENDPROC

ENDDEFINE
