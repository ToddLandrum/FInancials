*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="dmselexpprd.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Relation1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 369
	Left = 40
	Name = "Dataenvironment"
	Top = 235
	Width = 657

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "expsusp", ;
		BufferModeOverride = 1, ;
		CursorSource = "expsusp", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Filter = "", ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Order = "cWellID", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "expense", ;
		CursorSource = "expense", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "options", ;
		CursorSource = "options", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor4", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "sysctl", ;
		CursorSource = "sysctl", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor5", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "expense1", ;
		CursorSource = "expense", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 476, ;
		Name = "Cursor6", ;
		Top = 18, ;
		Width = 97
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Relation1' AS relation WITH ;
		ChildAlias = "wells", ;
		ChildOrder = "cwellid", ;
		Name = "Relation1", ;
		ParentAlias = "expsusp", ;
		RelationalExpr = "cwellid"
		*< END OBJECT: BaseClass="relation" />

ENDDEFINE

DEFINE CLASS formdmselexp AS frmformcustom OF "..\custom\cforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="cmdAllocate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdMark" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdUnmark" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdDelete" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdExit" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column1.Chkcheckboxcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column2.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column3.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column3.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column4.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column4.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column5.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column5.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column6.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column6.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtnCount" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtnTotal" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: cgroup
		*p: cperiod
		*p: cyear
	*</DefinedPropArrayMethod>

	Caption = "Select Well ExpensesTo Allocate"
	DataSession = 2
	DoCreate = .T.
	Height = 399
	HelpContextID = 104
	Name = "FormDmselexp"
	Visible = .T.
	Width = 604
	Mwresize1.lblHighLight.Name = "lblHighLight"
	Mwresize1.lblShading.Name = "lblShading"
	Mwresize1.Name = "Mwresize1"

	ADD OBJECT 'cmdAllocate' AS cmdcommandbuttoncustom WITH ;
		Caption = "\<Allocate", ;
		Left = 180, ;
		Name = "cmdAllocate", ;
		TabIndex = 4, ;
		Top = 360
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdDelete' AS cmdcommandbuttoncustom WITH ;
		Caption = "\<Delete", ;
		Left = 432, ;
		Name = "cmdDelete", ;
		TabIndex = 7, ;
		Top = 360
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdExit' AS cmdcommandbuttoncustom WITH ;
		Caption = "E\<xit", ;
		Left = 516, ;
		Name = "cmdExit", ;
		TabIndex = 8, ;
		Top = 360
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdMark' AS cmdcommandbuttoncustom WITH ;
		Caption = "Mark All", ;
		Left = 264, ;
		Name = "cmdMark", ;
		TabIndex = 5, ;
		Top = 360
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdUnmark' AS cmdcommandbuttoncustom WITH ;
		Caption = "UnMark All", ;
		Left = 348, ;
		Name = "cmdUnmark", ;
		TabIndex = 6, ;
		Top = 360
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Grdgridcustom1' AS grdgridcustom WITH ;
		ColumnCount = 6, ;
		Height = 324, ;
		Left = 12, ;
		Name = "Grdgridcustom1", ;
		Panel = 1, ;
		RecordSource = "expsusp", ;
		TabIndex = 1, ;
		Top = 12, ;
		Width = 576, ;
		Column1.ControlSource = "expsusp.lallocated", ;
		Column1.Name = "Column1", ;
		Column1.Sparse = .F., ;
		Column1.Width = 30, ;
		Column2.ControlSource = "expsusp.cwellid", ;
		Column2.Name = "Column2", ;
		Column2.ReadOnly = .T., ;
		Column3.ControlSource = "wells.cwellname", ;
		Column3.Name = "Column3", ;
		Column3.ReadOnly = .T., ;
		Column3.Width = 137, ;
		Column4.ControlSource = "expsusp.ccateg", ;
		Column4.Name = "Column4", ;
		Column4.ReadOnly = .T., ;
		Column4.Width = 126, ;
		Column5.ControlSource = "expsusp.dexpdate", ;
		Column5.Name = "Column5", ;
		Column5.ReadOnly = .T., ;
		Column6.ControlSource = "expsusp.namount", ;
		Column6.Name = "Column6", ;
		Column6.ReadOnly = .T., ;
		Column6.Width = 98
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="grid" />

	ADD OBJECT 'Grdgridcustom1.Column1.Chkcheckboxcustom1' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "", ;
		ControlSource = "expsusp.lallocated", ;
		Left = 1, ;
		Name = "Chkcheckboxcustom1", ;
		Top = 23
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Grdgridcustom1.Column1.Header1' AS header WITH ;
		Caption = "Alloc", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grdgridcustom1.Column2.Header1' AS header WITH ;
		Alignment = 2, ;
		BackColor = 192,192,192, ;
		Caption = "Well ID", ;
		ForeColor = 255,0,0, ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grdgridcustom1.Column2.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ControlSource = "expsusp.cwellid", ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Grdgridcustom1.Column3.Header1' AS header WITH ;
		Caption = "Well Name", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grdgridcustom1.Column3.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ControlSource = "wells.cwellname", ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Grdgridcustom1.Column4.Header1' AS header WITH ;
		Caption = "Category", ;
		ForeColor = 255,0,0, ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grdgridcustom1.Column4.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ControlSource = "expsusp.ccateg", ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Grdgridcustom1.Column5.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "Date", ;
		ForeColor = 255,0,0, ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grdgridcustom1.Column5.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ControlSource = "expsusp.dexpdate", ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Grdgridcustom1.Column6.Header1' AS header WITH ;
		Caption = "Amount", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grdgridcustom1.Column6.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ControlSource = "expsusp.namount", ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Entries", ;
		Left = 123, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 3, ;
		Top = 351
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "Total", ;
		Left = 123, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 10, ;
		Top = 375
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'txtnCount' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		FontBold = .T., ;
		Height = 20, ;
		Left = 62, ;
		Name = "txtnCount", ;
		TabIndex = 2, ;
		Top = 348, ;
		Width = 53
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtnTotal' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		FontBold = .T., ;
		Height = 20, ;
		Left = 10, ;
		Name = "txtnTotal", ;
		TabIndex = 9, ;
		Top = 372, ;
		Width = 105
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE beforeclose
		LPARAMETERS nclosereason
		
		DO CASE
		   CASE nclosereason = CLOSE_BY_CANCEL
		      SELECT expsusp
		      REPL lAllocated WITH .F. ALL
		      RELE lcAllYear
		      RELE lcAllPrd
		      SET FILT TO 
		      RETURN .T.
		ENDCASE      
	ENDPROC

	PROCEDURE Init
		LPARA tcYear, tcPeriod
		PUBL lcAllYear, lcAllPrd
		
		lcAllYear = tcYear
		lcAllPrd  = tcPeriod
		
		SET DELETED ON
		
		IF TYPE('tcYear') <> 'C'
		   tcYear = '1999'
		ENDIF   
		IF TYPE('tcPeriod') <> 'C'
		   tcPeriod = '12'
		ENDIF   
		
		this.caption = '***Select Expenses To Allocate For Period: ' + tcYear+'/'+tcPeriod+'***'
		
		thisform.txtnCount.value = 0
		thisform.txtnTotal.value = 0
		
		thisform.cYear   = tcYear
		thisform.cPeriod = tcPeriod
		
		SELE expsusp
		SET FILT TO cYear = lcallyear AND cPeriod = lcallprd
		
		DODEFAULT()
		
		IF TYPE('thisform.oRegistry') <> 'O'
		   thisform.oRegistry = FindGlobalObject('cmRegistry')
		ENDIF   
	ENDPROC

	PROCEDURE cmdAllocate.Click
		LOCAL m.cYear, m.cPeriod, m.cGroup, oWellInv
		
		* Create the oWellInv object so we can lookup the DOI Deck if needed
		oWellInv = CREATEOBJECT('swbizobj_wellinv')
		
		m.cYear   = THISFORM.cYear
		m.cPeriod = THISFORM.cPeriod
		
		IF !THISFORM.oMessage.CONFIRM('OK to allocate the chosen expenses to period: ' + m.cYear+'/'+m.cPeriod+'?')
		   WAIT WIND 'Allocation of expenses cancelled...'
		   RETURN
		ENDIF
		
		lnCount = 0
		
		*
		*  Allocate the expenses to the correct period and well.
		*
		SELECT expsusp
		SCAN FOR lAllocated
		   SCATTER MEMVAR
		   m.cYear   = THISFORM.cYear
		   m.cPeriod = THISFORM.cPeriod
		   m.lAPTran = .T.
		   SELECT cwellid FROM wellinv WHERE cwellid = m.cwellid INTO ARRAY temp
		   IF _TALLY = 0
		      THISFORM.oMessage.Warning('Unable to allocate to well: ' + m.cwellid + ' This well has no owners')
		      LOOP
		   ENDIF
		   SELECT wells
		   SET ORDER TO cwellid
		   IF SEEK(m.cwellid)
		      m.cGroup = cGroup
		   ELSE
		      LOOP
		   ENDIF
		
		   SELE expense
		   LOCATE FOR cwellid = m.cwellid AND crefid = allt(m.crefid) and cvendorid = m.cvendorid and cbatch = m.cbatch and namount = m.namount
		   if found()
		      lnResult = MESSAGEBOX('The ' + trim(ccateg) + ' expense for well: ' + allt(cwellid) + ;
		                            ' appears to have been already allocated in period: ' + ;
		                              cyear+'/'+cperiod + ;
		                            '. Do you want to allocate it anyway?',3+48+256,'Allocation Conflict')
		      DO CASE
		         CASE lnResult = 2
		            thisform.omessage.warning('Allocation of expenses was cancelled.')
		            RETURN
		         CASE lnResult = 7
		            LOOP
		      endcase
		   ENDIF
		   
		   * Only fill in blank decks when sending straight to the income and expense tables
		   IF EMPTY(m.cDeck) 
		      m.cDeck = oWellInv.DOIDeckNameLookup(m.cyear, m.cperiod, m.cWellID)
		   ENDIF    
		        
		   RELEASE temp
		   SET DELETED OFF
		   m.cidexph = THISFORM.oRegistry.IncrementCounter('%Shared.Counters.Batch')
		   m.cidexpe = THISFORM.oRegistry.IncrementCounter('%Shared.Counters.Expense')
		   SELECT expense1
		   SET ORDER TO cidexpe
		   DO WHILE SEEK(m.cidexpe)
		      m.cidexpe = THISFORM.oRegistry.IncrementCounter('%Shared.Counters.Expense')
		   ENDDO   
		   m.cRunYearRev = ''
		   m.cRunYearJIB = ''
		   m.nRunNoRev = 0
		   m.nRunNoJIB = 0
		   m.cYear   = THISFORM.cYear
		   m.cPeriod = THISFORM.cPeriod
		   INSERT INTO expense FROM MEMVAR
		   SET DELETED ON
		   lnCount = lnCount + 1
		   SELECT expsusp
		   DELETE NEXT 1
		
		ENDSCAN
		
		SELECT expsusp
		SCAN FOR lAllocated
		   REPL lAllocated WITH .F.
		ENDSCAN   
		
		oWellInv = .Null.
		
		THISFORM.oMessage.DISPLAY('Allocated ' + ALLTRIM(STR(lnCount)) + ' Expense Entries')
		
		
	ENDPROC

	PROCEDURE cmdDelete.Click
		IF !thisform.oMessage.Confirm('OK to delete the chosen expenses?')
		   WAIT WIND 'Deletion of expenses cancelled...'
		   thisform.cmdExit.Click()
		ENDIF
		
		*
		*  Delete the expenses.
		*
		SELECT expsusp
		SCAN FOR lAllocated
		   DELETE NEXT 1
		ENDSCAN
		GO TOP
		
		thisform.txtnCount.value = 0
		thisform.txtnTotal.value = 0
		
		thisform.refresh()
		
		thisform.oMessage.Display('The Chosen Expenses Were Deleted...')
		
	ENDPROC

	PROCEDURE cmdExit.Click
		IF thisform.beforeclose(CLOSE_BY_CANCEL)
		   thisform.release()
		ENDIF   
	ENDPROC

	PROCEDURE cmdMark.Click
		thisform.txtnCount.value = 0
		thisform.txtnTotal.value = 0
		
		SELECT expsusp
		SCAN FOR lAllocated = .F.
		   REPL lAllocated WITH .T.
		   thisform.txtnCount.value = thisform.txtnCount.value + 1
		   thisform.txtnTotal.value = thisform.txtnTotal.value + nAmount
		ENDSCAN
		
		thisform.Refresh()
		
		   
	ENDPROC

	PROCEDURE cmdUnmark.Click
		thisform.txtnCount.value = 0
		thisform.txtnTotal.value = 0
		
		SELECT expsusp
		SCAN FOR lAllocated = .T.
		   REPL lAllocated WITH .F.
		ENDSCAN
		
		thisform.Refresh()
		
		   
	ENDPROC

	PROCEDURE Grdgridcustom1.Column1.Chkcheckboxcustom1.InteractiveChange
		IF this.value 
		   thisform.txtnCount.value = thisform.txtnCount.value + 1
		   thisform.txtnTotal.value = thisform.txtnTotal.value + Expsusp.nAmount
		ELSE
		      thisform.txtnCount.value = thisform.txtnCount.value - 1
		      thisform.txtnTotal.value = thisform.txtnTotal.value - Expsusp.nAmount
		ENDIF      
		
		thisform.txtnCount.refresh()
		thisform.txtnTotal.refresh()
	ENDPROC

	PROCEDURE Grdgridcustom1.Column2.Header1.Click
		SELECT expsusp
		SET ORDER TO cWellID
		GO TOP
		thisform.refresh()
	ENDPROC

	PROCEDURE Grdgridcustom1.Column2.Text1.When
		RETURN .F.
	ENDPROC

	PROCEDURE Grdgridcustom1.Column3.Text1.When
		RETURN .F.
	ENDPROC

	PROCEDURE Grdgridcustom1.Column4.Header1.Click
		SELECT expsusp
		SET ORDER TO categ
		GO TOP
		thisform.refresh()
	ENDPROC

	PROCEDURE Grdgridcustom1.Column4.Text1.When
		RETURN .F.
	ENDPROC

	PROCEDURE Grdgridcustom1.Column5.Header1.Click
		SELECT expsusp
		SET ORDER TO expdate
		GO TOP
		thisform.refresh()
	ENDPROC

	PROCEDURE Grdgridcustom1.Column5.Text1.When
		RETURN .F.
	ENDPROC

	PROCEDURE Grdgridcustom1.Column6.Text1.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtnCount.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtnTotal.When
		RETURN .F.
	ENDPROC

ENDDEFINE
