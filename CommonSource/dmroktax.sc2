*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="dmroktax.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	Height = 200
	Left = 40
	Name = "Dataenvironment"
	Top = 235
	Width = 520

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "wellhist", ;
		CursorSource = "wellhist", ;
		Database = ..\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formdmroktax AS frmdatamanagerformcustom OF "..\custom\cforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="txtYear" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtPeriod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtReportingNumber" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdBuild" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdExit" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: buildfile
		*m: fileio
		*m: loadcounty		&& Loads the county array
		*m: lookup
		*m: numfmt
		*a: acounty[1,1]		&& County Array
	*</DefinedPropArrayMethod>

	Caption = "Gross Production Reports"
	DataSession = 2
	DoCreate = .T.
	Height = 169
	HelpContextID = 238
	Name = "Formdmroktax"
	Width = 345
	cmdatamanager.Name = "cmdatamanager"
	cmdatamanager.TabIndex = 1
	cmdatamanager.ZOrderSet = 0
	cmlookupmanager.Name = "cmlookupmanager"

	ADD OBJECT 'cmdBuild' AS cmdcommandbuttoncustom WITH ;
		Caption = "\<Build File", ;
		Height = 43, ;
		Left = 67, ;
		Name = "cmdBuild", ;
		TabIndex = 12, ;
		Top = 111, ;
		Width = 85, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdExit' AS cmdcommandbuttoncustom WITH ;
		Caption = "Exit", ;
		Height = 43, ;
		Left = 199, ;
		Name = "cmdExit", ;
		TabIndex = 13, ;
		Top = 111, ;
		Width = 85, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Lbltextcustom1' AS lbltextcustom WITH ;
		Caption = "/", ;
		FontBold = .T., ;
		FontSize = 10, ;
		Left = 173, ;
		Name = "Lbltextcustom1", ;
		TabIndex = 7, ;
		Top = 26, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom2' AS lbltextcustom WITH ;
		Caption = "Period/Year:", ;
		Left = 56, ;
		Name = "Lbltextcustom2", ;
		TabIndex = 6, ;
		Top = 26, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom3' AS lbltextcustom WITH ;
		Caption = "Reporting Number:", ;
		Left = 27, ;
		Name = "Lbltextcustom3", ;
		TabIndex = 9, ;
		Top = 68, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'txtPeriod' AS txttextboxcustom WITH ;
		BackColor = 255,255,255, ;
		Height = 20, ;
		InputMask = "99", ;
		Left = 145, ;
		MaxLength = 2, ;
		Name = "txtPeriod", ;
		TabIndex = 4, ;
		Top = 24, ;
		Width = 24, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtReportingNumber' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 145, ;
		MaxLength = 5, ;
		Name = "txtReportingNumber", ;
		TabIndex = 8, ;
		Top = 66, ;
		Width = 48, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtYear' AS txttextboxcustom WITH ;
		Height = 20, ;
		InputMask = "9999", ;
		Left = 181, ;
		MaxLength = 4, ;
		Name = "txtYear", ;
		TabIndex = 5, ;
		Top = 24, ;
		Width = 36, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE buildfile
		LOCAL lcYear, lcPeriod, lcCompany, lnType, lcrlf, lcYear2, fh, lnError
		
		IF TYPE('m.goApp') = 'O'
		   lcFEI = m.goApp.ctaxid
		ELSE
		   lcFEI = '341234567'
		ENDIF
		
		IF EMPTY(alltrim(lcFEI)) or len(lcFEI) < 9
		   THISFORM.oMessage.Warning('A valid tax ID number must be specified on the company information screen.  Once changed, the company files must be reopened for the change to take effect.')
		   RETURN
		ENDIF
		   
		THIS.loadcounty()
		
		lcFEI      = THISFORM.numfmt(lcFEI,9)
		lcYear     = THISFORM.txtYear.VALUE
		lcYear2    = RIGHT(lcYear,2)
		lcPeriod   = THISFORM.txtPeriod.VALUE
		lcCompany  = THISFORM.txtReportingNumber.VALUE
		lcFiller10 = SPACE(8)
		lcReport   = '1'
		lcContract = '00'
		lcDispCode = '1'
		lcGasCode  = '2'
		lcGravCode = '000'
		lcNGPACode = '000'
		lcNGPASuff = '0'
		lcOilTierCode = '0'
		lcOilClass    = '0'
		lcAddValue = '00000000'
		lcTaxReimb = '00000000'
		lcExemptCode = '00'
		lcInterest = '0000000'
		lcExVol    = '0000000'
		lcExVal    = '00000000'
		lcFill27   = SPACE(25)
		lcrlf      = CHR(13)+CHR(10)
		
		*
		*  Build Gross.txt file
		*
		
		SELECT wells.cwellid AS cleaseno,  ;
		   left(cuser1,3)               AS ncounty,  ;
		   wells.ccounty                AS ccounty, ;
		   wells.cuser1                 AS cPUN,  ;
		   wells.cuser2                 AS cProd, ;
		   wells.cuser4                 AS cOper, ;
		   ROUND(wellhist.nTotMCF,0)    AS nGrossVol,  ;
		   wellhist.ngrossgas           AS nGrossVal, ;
		   '3'                          AS cDispCode, ;
		   wells.cuser6                 AS cBTU, ;
		   wellhist.ntotmcftx1          AS nGPTax, ;
		   wellhist.ntotmcftx2          AS nPETax ;
		   FROM wells, wellhist  ;
		   INTO CURSOR taxtmp  ;
		   WHERE NOT EMPTY(ccounty) AND NOT EMPTY(cuser1) ;
		   AND wells.cwellid = wellhist.cwellid  ;
		   AND wellhist.hyear = lcYear  ;
		   AND wellhist.hperiod = lcPeriod   ;
		   ORDER BY ccounty
		
		IF _TALLY = 0
		   THISFORM.omessage.warning('There were no history records to report production for the given month.')
		   RETURN
		ELSE
		   lnMax = _TALLY
		ENDIF
		
		lnCount = 1
		
		oProgress = THISFORM.omessage.progressbar('Creating Gross.txt files...')
		oProgress.setprogressrange(0,lnMax)
		
		m.oldcounty = ALLTRIM(taxtmp.ccounty)
		llCreated = .F.
		
		SELECT taxtmp
		SCAN
		   SCATTER MEMVAR
		   oProgress.updateprogress(lnCount)
		   lnCount = lnCount + 1
		   if not isdigit(m.nCounty)
		      thisform.oMessage.display('There is an invalid county for well ' + alltrim(m.cLeaseNo) + '.  No production records will be created.')
		      loop  
		   endif
		   m.nCounty = val(m.nCounty)
		   lcCounty = THIS.aCounty[m.ncounty,1]
		   m.nGrossVol = THIS.numfmt(PADL(ALLTRIM(STR(m.nGrossVol,11)),11,'0'),11)
		   m.nGrossVal = THIS.numfmt(PADL(ALLTRIM(STR(m.nGrossVal,12)),12,'0'),12)
		   m.nGPTax    = THIS.numfmt(PADL(ALLTRIM(STR(m.nGPTax,11)),12,'0'),11)
		   m.nPETax    = THIS.numfmt(PADL(ALLTRIM(STR(m.nPETax,9)),9,'0'),8)
		   m.cCounty   = PADL(ALLTRIM(m.cCounty),3,'0')
		   m.cOper     = PADL(ALLTRIM(m.cOper),5,'0')
		   m.cProd     = LEFT(m.cProd,1)
		   IF NOT ISDIGIT(m.cProd)
		      m.cProd = '4'
		   ENDIF   
		   m.cPUN      = THIS.numfmt(ALLTRIM(m.cPUN),14)
		   m.cBTU      = PADL(ALLTRIM(LEFT(m.cBTU,4)),4,'0')
		
		   IF taxtmp.ccounty = m.oldcounty  &&  If the county directory exists
		      IF DIRE(CURDIR() + 'OKTAX\' + ALLTRIM(taxtmp.ccounty) + '\')  &&  IF county directory exists
		         IF NOT llCreated
		            if file(CURDIR() + 'OKTAX\' + alltrim(taxtmp.ccounty) + '\GROSS.TXT')
		               erase CURDIR() + 'OKTAX\' + alltrim(taxtmp.ccounty) + '\GROSS.TXT'
		            endif
		            fh = FCREATE(CURDIR() + 'OKTAX\' + alltrim(taxtmp.ccounty) + '\GROSS.TXT')
		            llCreated = .T.
		         ENDIF
		         lnError = THISFORM.fileio(fh,lcCompany+lcFEI+'1'+lcCounty+m.cProd+lcPeriod+lcYear2+lcReport+lcContract+  ;
		            m.cPUN+SUBSTR(m.cOper,1,5)+m.nGrossVol+m.nGrossVal+ ;
		            m.cDispCode + m.cBTU + lcNGPACode + lcNGPASuff + lcGasCode + lcGravCode + lcOilTierCode + ;
		            lcOilClass + lcAddValue + lcTaxReimb + lcExemptCode + lcInterest + lcExVol + lcExVal + ;
		            m.nGrossVol + RIGHT(m.nGrossVal,11) + m.nGPTax + m.nPETax + lcFill27 + lcrlf)
		      ELSE  &&  If the county directory doesn't exist
		         MKDIR(CURDIR() + 'OKTAX\' + ALLTRIM(taxtmp.ccounty) + '\')
		         fh = FCREATE(CURDIR() + 'OKTAX\' + alltrim(taxtmp.ccounty) + '\GROSS.TXT')
		         lnError = THISFORM.fileio(fh,lcCompany+lcFEI+'1'+lcCounty+m.cProd+lcPeriod+lcYear2+lcReport+lcContract+  ;
		            m.cPUN+SUBSTR(m.cOper,1,5)+m.nGrossVol+m.nGrossVal+ ;
		            m.cDispCode + m.cBTU + lcNGPACode + lcNGPASuff + lcGasCode + lcGravCode + lcOilTierCode + ;
		            lcOilClass + lcAddValue + lcTaxReimb + lcExemptCode + lcInterest + lcExVol + lcExVal + ;
		            m.nGrossVol + RIGHT(m.nGrossVal,11) + m.nGPTax + m.nPETax + lcFill27 + lcrlf)
		          llCreated = .t.
		      ENDIF
		      IF lnError > 0
		         EXIT
		      ENDIF   
		   ELSE
		* Close current county file
		      =FFLUSH(fh)
		      =FCLOSE(fh)
		      llCreated = .F.
		      m.oldcounty = ALLTRIM(taxtmp.ccounty)
		      IF DIRE(CURDIR() + 'OKTAX\' + ALLTRIM(taxtmp.ccounty) + '\')  &&  IF county directory exists
		         IF NOT llCreated
		            if file(CURDIR() + 'OKTAX\' + alltrim(taxtmp.ccounty) + '\GROSS.TXT')
		               erase CURDIR() + 'OKTAX\' + alltrim(taxtmp.ccounty) + '\GROSS.TXT'
		            endif
		            fh = FCREATE(CURDIR() + 'OKTAX\' + alltrim(taxtmp.ccounty) + '\GROSS.TXT')
		            llCreated = .T.
		         ENDIF
		         THISFORM.fileio(fh,lcCompany+lcFEI+'1'+lcCounty+m.cProd+lcPeriod+lcYear2+lcReport+lcContract+  ;
		            m.cPUN+SUBSTR(m.cOper,1,5)+m.nGrossVol+m.nGrossVal+ ;
		            m.cDispCode + m.cBTU + lcNGPACode + lcNGPASuff + lcGasCode + lcGravCode + lcOilTierCode + ;
		            lcOilClass + lcAddValue + lcTaxReimb + lcExemptCode + lcInterest + lcExVol + lcExVal + ;
		            m.nGrossVol + RIGHT(m.nGrossVal,11) + m.nGPTax + m.nPETax + lcFill27 + lcrlf)
		      ELSE  &&  If the county directory doesn't exist
		         MKDIR(CURDIR() + 'OKTAX\' + ALLTRIM(taxtmp.ccounty) + '\')
		         fh = FCREATE(CURDIR() + 'OKTAX\' + alltrim(taxtmp.ccounty) + '\GPMETVOL.TXT')
		         THISFORM.fileio(fh,lcCompany+lcFEI+'1'+lcCounty+m.cProd+lcPeriod+lcYear2+lcReport+lcContract+  ;
		            m.cPUN+SUBSTR(m.cOper,1,5)+m.nGrossVol+m.nGrossVal+ ;
		            m.cDispCode + m.cBTU + lcNGPACode + lcNGPASuff + lcGasCode + lcGravCode + lcOilTierCode + ;
		            lcOilClass + lcAddValue + lcTaxReimb + lcExemptCode + lcInterest + lcExVol + lcExVal + ;
		            m.nGrossVol + RIGHT(m.nGrossVal,11) + m.nGPTax + m.nPETax + lcFill27 + lcrlf)
		      llCreated = .t.
		      ENDIF
		   ENDIF
		   IF lnError > 0
		      EXIT
		   ENDIF   
		ENDSCAN
		
		* Close current county file
		=FFLUSH(fh)
		=FCLOSE(fh)
		
		oProgress.closeprogress()
		
		THISFORM.omessage.DISPLAY('File creation completed.')
		
		WAIT CLEAR
		
		
	ENDPROC

	PROCEDURE fileio
		LPARA handle, bytes
		
		=FWRITE(handle,bytes)
		lnError = ferror()
		IF ferror() > 0
		   DO CASE
		      CASE ferror() = 4
		           m.msg = 'TOO MANY FILES OPEN (OUT OF HANDLES)'
		      CASE ferror() = 5
		           m.msg = 'FILE ACCESS DENIED'
		      CASE ferror() = 6
		           m.msg = 'INVALID FILE HANDLE GIVEN - CLOSE ACCT MGR AND TRY AGAIN'     
		      CASE ferror() = 8
		           m.msg = 'OUT OF MEMORY'
		      CASE ferror() = 29
		           m.msg = 'DISK FULL (OUT OF SPACE)'
		      CASE ferror() = 31
		           m.msg = 'GENERAL FAILURE'
		      OTHERWISE     
		           m.msg = 'UNKNOWN DISK FAILURE' + STR(ferror(),3)
		   ENDCASE                            
		   WAIT WIND 'FILE WRITE ERROR: ' + m.msg
		ENDIF  
		
		RETURN (lnError)
		
	ENDPROC

	PROCEDURE Init
		DODEFAULT()
		
		THISFORM.txtYear.VALUE = ALLTRIM(STR(YEAR(DATE())))
		THISFORM.txtPeriod.VALUE = padl(ALLTRIM(STR(MONTH(DATE()))),2,'0')
		
	ENDPROC

	PROCEDURE loadcounty		&& Loads the county array
		*
		*  Loads the county array
		*
		
		DIME this.aCounty[154,1]
		
		this.aCounty[1,1]    = 'ADAIR       '
		this.aCounty[2,1]    = 'UNKNOWN     '
		this.aCounty[3,1]    = 'ALFALFA     '
		this.aCounty[4,1]    = 'UNKNOWN     '
		this.aCounty[5,1]    = 'ATOKA       '
		this.aCounty[6,1]    = 'UNKNOWN     '
		this.aCounty[7,1]    = 'BEAVER      '
		this.aCounty[8,1]    = 'UNKNOWN     '
		this.aCounty[9,1]    = 'BECKHAM     '
		this.aCounty[10,1]   = 'UNKNOWN     '
		this.aCounty[11,1]   = 'BLAINE      '
		this.aCounty[12,1]   = 'UNKNOWN     '
		this.aCounty[13,1]   = 'BRYAN       '
		this.aCounty[14,1]   = 'UNKNOWN     '
		this.aCounty[15,1]   = 'CADDO       '
		this.aCounty[16,1]   = 'UNKNOWN     '
		this.aCounty[17,1]   = 'CANADIAN    '
		this.aCounty[18,1]   = 'UNKNOWN     '
		this.aCounty[19,1]   = 'CARTER      '
		this.aCounty[20,1]   = 'UNKNOWN     '
		this.aCounty[21,1]   = 'CHEROKEE    '
		this.aCounty[22,1]   = 'UNKNOWN     '
		this.aCounty[23,1]   = 'CHOCTAW     '
		this.aCounty[24,1]   = 'UNKNOWN     '
		this.aCounty[25,1]   = 'CIMARRON    '
		this.aCounty[26,1]   = 'UNKNOWN     '
		this.aCounty[27,1]   = 'CLEVELAND   '
		this.aCounty[28,1]   = 'UNKNOWN     '
		this.aCounty[29,1]   = 'COAL        '
		this.aCounty[30,1]   = 'UNKNOWN     '
		this.aCounty[31,1]   = 'COMANCHE    '
		this.aCounty[32,1]   = 'UNKNOWN     '
		this.aCounty[33,1]   = 'COTTON      '
		this.aCounty[34,1]   = 'UNKNOWN     '
		this.aCounty[35,1]   = 'CRAIG       '
		this.aCounty[36,1]   = 'UNKNOWN     '
		this.aCounty[37,1]   = 'CREEK       '
		this.aCounty[38,1]   = 'UNKNOWN     '
		this.aCounty[39,1]   = 'CUSTER      '
		this.aCounty[40,1]   = 'UNKNOWN     '
		this.aCounty[41,1]   = 'DELAWARE    '
		this.aCounty[42,1]   = 'UNKNOWN     '
		this.aCounty[43,1]   = 'DEWEY       '
		this.aCounty[44,1]   = 'UNKNOWN     '
		this.aCounty[45,1]   = 'ELLIS       '
		this.aCounty[46,1]   = 'UNKNOWN     '
		this.aCounty[47,1]   = 'GARFIELD    '
		this.aCounty[48,1]   = 'UNKNOWN     '
		this.aCounty[49,1]   = 'GARVIN      '
		this.aCounty[50,1]   = 'UNKNOWN     '
		this.aCounty[51,1]   = 'GRADY       '
		this.aCounty[52,1]   = 'UNKNOWN     '
		this.aCounty[53,1]   = 'GRANT       '
		this.aCounty[54,1]   = 'UNKNOWN     '
		this.aCounty[55,1]   = 'GREER       '
		this.aCounty[56,1]   = 'UNKNOWN     '
		this.aCounty[57,1]   = 'HARMON      '
		this.aCounty[58,1]   = 'UNKNOWN     '
		this.aCounty[59,1]   = 'HARPER      '
		this.aCounty[60,1]   = 'UNKNOWN     '
		this.aCounty[61,1]   = 'HASKELL     '
		this.aCounty[62,1]   = 'UNKNOWN     '
		this.aCounty[63,1]   = 'HUGHES      '
		this.aCounty[64,1]   = 'UNKNOWN     '
		this.aCounty[65,1]   = 'JACKSON     '
		this.aCounty[66,1]   = 'UNKNOWN     '
		this.aCounty[67,1]   = 'JEFFERSON   '
		this.aCounty[68,1]   = 'UNKNOWN     '
		this.aCounty[69,1]   = 'JOHNSON     '
		this.aCounty[70,1]   = 'UNKNOWN     '
		this.aCounty[71,1]   = 'KAY         '
		this.aCounty[72,1]   = 'UNKNOWN     ' 
		this.aCounty[73,1]   = 'KINGFISHER  '
		this.aCounty[74,1]   = 'UNKNOWN     '
		this.aCounty[75,1]   = 'KIOWA       '
		this.aCounty[76,1]   = 'UNKNOWN     '
		this.aCounty[77,1]   = 'LATIMER     '
		this.aCounty[78,1]   = 'UNKNOWN     '
		this.aCounty[79,1]   = 'LE FLORE    '
		this.aCounty[80,1]   = 'UNKNOWN     '
		this.aCounty[81,1]   = 'LINCOLN     '
		this.aCounty[82,1]   = 'UNKNOWN     '
		this.aCounty[83,1]   = 'LOGAN       '
		this.aCounty[84,1]   = 'UNKNOWN     '
		this.aCounty[85,1]   = 'LOVE        '
		this.aCounty[86,1]   = 'UNKNOWN     '
		this.aCounty[87,1]   = 'MCCLAIN     '
		this.aCounty[88,1]   = 'UNKNOWN     '
		this.aCounty[89,1]   = 'MCCURTAIN   '
		this.aCounty[90,1]   = 'UNKNOWN     '
		this.aCounty[91,1]   = 'MC INTOSH   '
		this.aCounty[92,1]   = 'UNKNOWN     '
		this.aCounty[93,1]   = 'MAJOR       '
		this.aCounty[94,1]   = 'UNKNOWN     '
		this.aCounty[95,1]   = 'MARSHALL    '
		this.aCounty[96,1]   = 'UNKNOWN     '
		this.aCounty[97,1]   = 'MAYES       '
		this.aCounty[98,1]   = 'UNKNOWN     '
		this.aCounty[99,1]   = 'MURRAY      '
		this.aCounty[100,1]  = 'UNKNOWN     '
		this.aCounty[101,1]  = 'MUSKOGEE    '
		this.aCounty[102,1]  = 'UNKNOWN     '
		this.aCounty[103,1]  = 'NOBLE       '
		this.aCounty[104,1]  = 'UNKNOWN     '
		this.aCounty[105,1]  = 'NOWATA      '
		this.aCounty[106,1]  = 'UNKNOWN     '
		this.aCounty[107,1]  = 'OKFUSKEE    '
		this.aCounty[108,1]  = 'UNKNOWN     '
		this.aCounty[109,1]  = 'OKLAHOMA    '
		this.aCounty[110,1]  = 'UNKNOWN     '
		this.aCounty[111,1]  = 'OKMULGEE    '
		this.aCounty[112,1]  = 'UNKNOWN     '
		this.aCounty[113,1]  = 'OSAGE       '
		this.aCounty[114,1]  = 'UNKNOWN     '
		this.aCounty[115,1]  = 'OTTAWA      '
		this.aCounty[116,1]  = 'UNKNOWN     '
		this.aCounty[117,1]  = 'PAWNEE      '
		this.aCounty[118,1]  = 'UNKNOWN     '
		this.aCounty[119,1]  = 'PAYNE       '
		this.aCounty[120,1]  = 'UNKNOWN     '
		this.aCounty[121,1]  = 'PITTSBURGH  '
		this.aCounty[122,1]  = 'UNKNOWN     '
		this.aCounty[123,1]  = 'PONTOTOC    '
		this.aCounty[124,1]  = 'UNKNOWN     '
		this.aCounty[125,1]  = 'POTTAWATOMI '
		this.aCounty[126,1]  = 'UNKNOWN     '
		this.aCounty[127,1]  = 'PUSHMATAHA  '
		this.aCounty[128,1]  = 'UNKNOWN     '
		this.aCounty[129,1]  = 'ROGER MILLS '
		this.aCounty[130,1]  = 'UNKNOWN     '
		this.aCounty[131,1]  = 'ROGERS      '
		this.aCounty[132,1]  = 'UNKNOWN     '
		this.aCounty[133,1]  = 'SEMINOLE    '
		this.aCounty[134,1]  = 'UNKNOWN     '
		this.aCounty[135,1]  = 'SEQUOYAH    '
		this.aCounty[136,1]  = 'UNKNOWN     '
		this.aCounty[137,1]  = 'STEPHENS    '
		this.aCounty[138,1]  = 'UNKNOWN     '
		this.aCounty[139,1]  = 'TEXAS       '
		this.aCounty[140,1]  = 'UNKNOWN     '
		this.aCounty[141,1]  = 'TILLMAN     '
		this.aCounty[142,1]  = 'UNKNOWN     '
		this.aCounty[143,1]  = 'TULSA       '
		this.aCounty[144,1]  = 'UNKNOWN     '
		this.aCounty[145,1]  = 'WAGONER     '
		this.aCounty[146,1]  = 'UNKNOWN     '
		this.aCounty[147,1]  = 'WASHINGTON  '
		this.aCounty[148,1]  = 'UNKNOWN     '
		this.aCounty[149,1]  = 'WASHITA     '
		this.aCounty[150,1]  = 'UNKNOWN     '
		this.aCounty[151,1]  = 'WOODS       '
		this.aCounty[152,1]  = 'UNKNOWN     '
		this.aCounty[153,1]  = 'WOODWARD    '
		this.aCounty[154,1]  = 'UNKNOWN     '
		
	ENDPROC

	PROCEDURE lookup
	ENDPROC

	PROCEDURE numfmt
		*
		*  numfmt - format a number to specified length removing extra chars
		*
		LPARA m.num, m.dlen
		
		IF TYPE('m.num') <> 'C'
		   m.num = STR(m.num,12,2)
		ENDIF
		   
		m.len = LEN(m.num)
		
		FOR zx = 1 TO m.len
		    IF zx > m.len
		       EXIT
		    ENDIF   
		    IF !ISDIGIT(SUBSTR(m.num,zx,1))
		       IF zx > 1
		          m.num = SUBSTR(m.num,1,zx-1) + SUBSTR(m.num,zx+1,m.len-zx+1)
		          m.len = m.len - 1
		       ELSE
		          m.num = SUBSTR(m.num,zx+1,m.len-zx+1)
		          m.len = m.len - 1
		       ENDIF
		    ENDIF
		ENDFOR
		
		m.len1 = LEN(ALLTRIM(m.num))
		
		IF m.len1 = m.dlen
		   RETURN (ALLTRIM(m.num))
		ENDIF
		
		IF m.len1 > m.dlen
		   RETURN (SUBSTR(m.num,1,m.dlen))
		ENDIF
		
		m.num = ALLTRIM(m.num)
		
		m.num = PADL(m.num,m.dlen,'0')   
		
		RETURN (m.num)
		                   
	ENDPROC

	PROCEDURE cmdBuild.Click
		IF NOT EMPTY(THISFORM.txtYear.VALUE) AND NOT EMPTY(THISFORM.txtPeriod.VALUE) AND NOT EMPTY(THISFORM.txtReportingNumber.VALUE)
		   THISFORM.buildfile()
		ELSE
		   THISFORM.oMessage.DISPLAY('A valid year, period, and reporting number must be specified.')
		   RETURN 0
		ENDIF
		
	ENDPROC

	PROCEDURE cmdExit.Click
		thisform.release()
	ENDPROC

	PROCEDURE txtPeriod.Valid
		IF NOT EMPTY(THIS.VALUE)
		   if val(this.value) > 12
		      return 0
		   endif
		   IF LEN(ALLTRIM(THIS.VALUE)) < 2
		      THIS.SET('value',PADL(ALLTRIM(THIS.VALUE),2,'0'))
		   ENDIF
		ENDIF
		
		
	ENDPROC

	PROCEDURE txtReportingNumber.Valid
		if len(alltrim(this.value)) <> 5 AND not empty(this.value)
		   wait wind nowait 'Please enter a valid 5 digit reporting number.'
		   return 0
		endif
		
		dodefault()
	ENDPROC

	PROCEDURE txtYear.Valid
		IF LEN(ALLTRIM(THIS.VALUE)) <> 4 AND NOT EMPTY(THIS.VALUE)
		   RETURN 0
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

ENDDEFINE
