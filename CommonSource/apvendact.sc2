*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="apvendact.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor9" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 362
	Left = 40
	Name = "Dataenvironment"
	Top = 235
	Width = 640

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "vendor", ;
		CursorSource = "vendor", ;
		Database = ..\newdbc\appdata.dbc, ;
		Filter = "NOT DELETED()", ;
		Height = 90, ;
		Left = 0, ;
		Name = "Cursor1", ;
		Top = 6, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "appurchh", ;
		CursorSource = "appurchh", ;
		Database = ..\newdbc\appdata.dbc, ;
		Filter = "NOT DELETED()", ;
		Height = 90, ;
		Left = 235, ;
		Name = "Cursor2", ;
		Top = 145, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "appurchd", ;
		CursorSource = "appurchd", ;
		Database = ..\newdbc\appdata.dbc, ;
		Filter = "NOT DELETED()", ;
		Height = 90, ;
		Left = 119, ;
		Name = "Cursor3", ;
		Top = 146, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "appmthdr", ;
		CursorSource = "appmthdr", ;
		Database = ..\newdbc\appdata.dbc, ;
		Filter = "NOT DELETED()", ;
		Height = 90, ;
		Left = 238, ;
		Name = "Cursor4", ;
		Top = 1, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "appmtdet", ;
		CursorSource = "appmtdet", ;
		Database = ..\newdbc\appdata.dbc, ;
		Filter = "NOT DELETED()", ;
		Height = 90, ;
		Left = 113, ;
		Name = "Cursor5", ;
		Top = 1, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "csdishdr", ;
		CursorSource = "csdishdr", ;
		Database = ..\newdbc\appdata.dbc, ;
		Filter = "NOT DELETED()", ;
		Height = 90, ;
		Left = 8, ;
		Name = "Cursor6", ;
		Top = 144, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor7' AS cursor WITH ;
		Alias = "csdisdet", ;
		CursorSource = "csdisdet", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 484, ;
		Name = "Cursor7", ;
		Top = 7, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor8' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\newdbc\appdata.dbc, ;
		Filter = "NOT DELETED()", ;
		Height = 90, ;
		Left = 361, ;
		Name = "Cursor8", ;
		Top = 6, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor9' AS cursor WITH ;
		Alias = "coa", ;
		CursorSource = "coa", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 349, ;
		Name = "Cursor9", ;
		Top = 148, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formapvendact AS frmrptcriteria OF "..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="opgReportBy" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkIncPmt" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSelected" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtdDate1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEndID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBegID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSelected" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtdDate2" UniqueID="" Timestamp="" />

	Caption = "Vendor Activity Report"
	DataSession = 2
	DoCreate = .T.
	Height = 496
	HelpContextID = 400
	Name = "FormApvendact"
	Width = 513
	Swrptcriteriabuttons1.chkExport.Alignment = 0
	Swrptcriteriabuttons1.chkExport.Name = "chkExport"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.cmdPreview.Name = "cmdPreview"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 144
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 12
	Swrptcriteriabuttons1.Top = 420
	Swrptcriteriabuttons1.ZOrderSet = 0

	ADD OBJECT 'chkIncPmt' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Include Payments", ;
		Height = 16, ;
		Left = 210, ;
		Name = "chkIncPmt", ;
		TabIndex = 11, ;
		Top = 348, ;
		Value = .T., ;
		Width = 102, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSelected' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Choose Selected Vendors", ;
		Height = 16, ;
		Left = 185, ;
		Name = "chkSelected", ;
		TabIndex = 3, ;
		Top = 128, ;
		Value = .F., ;
		Width = 145, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'lblBegID' AS lbllabelcustom WITH ;
		Caption = "Beginning ID:", ;
		Height = 16, ;
		Left = 106, ;
		Name = "lblBegID", ;
		TabIndex = 5, ;
		Top = 159, ;
		Width = 64, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblEndID' AS lbllabelcustom WITH ;
		Caption = "Ending ID:", ;
		Height = 16, ;
		Left = 121, ;
		Name = "lblEndID", ;
		TabIndex = 6, ;
		Top = 210, ;
		Width = 49, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Report By:", ;
		Height = 16, ;
		Left = 117, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 2, ;
		Top = 64, ;
		Width = 53, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom4' AS lbllabelcustom WITH ;
		Caption = "Date Range:", ;
		Height = 16, ;
		Left = 109, ;
		Name = "Lbllabelcustom4", ;
		TabIndex = 10, ;
		Top = 289, ;
		Width = 61, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom5' AS lbllabelcustom WITH ;
		Caption = "-", ;
		FontBold = .T., ;
		FontShadow = .F., ;
		FontSize = 10, ;
		Height = 18, ;
		Left = 278, ;
		Name = "Lbllabelcustom5", ;
		TabIndex = 9, ;
		Top = 288, ;
		Width = 6, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSelected' AS lbllabelcustom WITH ;
		Caption = "All IDs Selected", ;
		ForeColor = 0,0,255, ;
		Height = 16, ;
		Left = 184, ;
		Name = "lblSelected", ;
		TabIndex = 13, ;
		Top = 194, ;
		Visible = .F., ;
		Width = 77, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'opgReportBy' AS opgoptiongroupcustom WITH ;
		BorderStyle = 0, ;
		ButtonCount = 2, ;
		Height = 48, ;
		Left = 180, ;
		Name = "opgReportBy", ;
		TabIndex = 1, ;
		Top = 58, ;
		Width = 96, ;
		ZOrderSet = 1, ;
		Option1.Caption = "Invoice Date", ;
		Option1.FontSize = 8, ;
		Option1.Height = 17, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Top = 5, ;
		Option1.Width = 91, ;
		Option2.Caption = "Post Date", ;
		Option2.FontSize = 8, ;
		Option2.Height = 17, ;
		Option2.Left = 5, ;
		Option2.Name = "Option2", ;
		Option2.Top = 27, ;
		Option2.Width = 91
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		Left = 180, ;
		Name = "Swrptlook1", ;
		TabIndex = 4, ;
		Top = 156, ;
		ZOrderSet = 4, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		TxtBegID.clistexpression = vendor.cvendorid, ;
		TxtBegID.clistworkarea = vendor, ;
		TxtBegID.Name = "TxtBegID", ;
		TxtBegName.Name = "TxtBegName", ;
		TxtEndID.clistexpression = vendor.cvendorid, ;
		TxtEndID.clistworkarea = vendor, ;
		TxtEndID.Name = "TxtEndID", ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />

	ADD OBJECT 'txtdDate1' AS dpk WITH ;
		ControlSource = "", ;
		Height = 20, ;
		Left = 180, ;
		Name = "txtdDate1", ;
		TabIndex = 7, ;
		Top = 287, ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtdDate2' AS dpk WITH ;
		ControlSource = "", ;
		Height = 20, ;
		Left = 288, ;
		Name = "txtdDate2", ;
		TabIndex = 8, ;
		Top = 287, ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />
	
	PROCEDURE builddata
		
		IF USED('tempvend')
		   USE IN tempvend
		ENDIF
		
		CREATE CURSOR tempvend ;
		   (cVendorId     C(10), ;
		   cVendName     C(40), ;
		   cbatch        C(8), ;
		   dDate         D, ;
		   cSource       C(2), ;
		   cDesc         C(40), ;
		   cInvNum       C(15), ;
		   cCheckNo      C(10), ;
		   csortchk      c(10), ;
		   nAmount       N(12,2), ;
		   cUnitNo       C(40), ;
		   cacctno       C(6), ;
		   nDetAmt       N(12,2))
		   
		tcVendor1  = thisform.swrptlook1.txtBegID.VALUE 
		tcVendor2  = thisform.swrptlook1.txtEndID.VALUE   
		tlSelected = thisform.chkselected.Value
		tlPayments = thisform.chkIncPmt.Value 
		
		IF NOT tlSelected
		   SELECT cvendorid as cid FROM vendor ;
		     WHERE BETWEEN(cvendorid,tcVendor1,tcVendor2) ;
		     INTO CURSOR selected ;
		     ORDER BY cid
		ENDIF 
		
		WITH THISFORM
		
		   .cSelectCriteria = 'Dates: '  + DTOC(.txtdDate1.VALUE) + ' - ' + DTOC(.txtdDate2.VALUE)
		   .cSortOrder      = 'Vendor ID and Transaction Date'
		   STORE '' TO .cTitle1, .cTitle2
		
		   DO CASE
		      CASE .opgReportBy.VALUE = 1
		         SELECT appurchh.cVendorId, ;
		            appurchh.dinvdate AS dDate, ;
		            appurchh.cbatch, ;
		            'AP' AS cSource, ;
		            appurchh.cInvNum, ;
		            appurchh.ninvtot AS nAmount, ;
		            appurchd.citemdesc AS cDesc, ;
		            appurchd.cUnitNo, ;
		            appurchd.cacctno, ;
		            appurchd.nextension AS nDetAmt ;
		            FROM appurchh, appurchd ;
		            WHERE appurchh.cbatch = appurchd.cbatch ;
		            AND appurchh.cvendorid in (SELECT cid FROM selected) ;
		            AND BETWEEN(appurchh.dinvdate,.txtdDate1.VALUE,.txtdDate2.VALUE) ;
		            INTO CURSOR temp ;
		            ORDER BY appurchh.cVendorId, appurchh.dinvdate ;
		
		         IF _TALLY > 0
		            SELECT temp
		            SCAN
		               SCATTER MEMVAR
		               m.csortchk = DTOC(m.ddate)
		               INSERT INTO tempvend FROM MEMVAR
		            ENDSCAN
		         ENDIF
		
		
		         IF tlPayments
		            SELECT appmthdr.dpmtdate AS dDate, ;
		               appmthdr.cbatch, ;
		               appmtdet.cVendorId, ;
		               appmtdet.cInvNum, ;
		               appmtdet.cbilltoken, ;
		               appmtdet.cidchec, ;
		               SUM(appmtdet.namtpaid+appmtdet.ndisctaken) AS nDetAmt, ;
		               checks.cCheckNo, ;
		               checks.lprinted, ;
		               ' ' AS cUnitNo, ;
		               ' ' as cacctno, ;
		               'AP' AS cSource,  ;
		               'z-Payment' AS cDesc ;
		               FROM appmthdr, appmtdet, checks ;
		               WHERE appmthdr.cbatch = appmtdet.cbatch ;
		               AND appmtdet.cidchec  = checks.cidchec ;
		               AND checks.lvoid # .T. ;
		               AND appmtdet.cvendorid in (SELECT cid FROM selected) ;
		               AND BETWEEN(appmthdr.dpmtdate,.txtdDate1.VALUE,.txtdDate2.VALUE) ;
		               AND appmtdet.namtpaid <> 0 ;
		               INTO CURSOR temp ;
		               ORDER BY appmtdet.cVendorId, appmthdr.dpmtdate, appmtdet.cinvnum, appmtdet.cidchec ;
		               GROUP BY appmtdet.cVendorId, appmthdr.dpmtdate, appmtdet.cinvnum, appmtdet.cidchec
		
		            IF _TALLY > 0
		               SELECT temp
		               SCAN
		                  SCATTER MEMVAR
		                  IF m.lPrinted
		                     m.ccheckno = PADL(ALLTRIM(m.cCheckNo),10,' ')
		                  ELSE
		                     m.cCheckno = ' Unprinted'
		                  ENDIF    
		                  m.cSortChk = m.cCheckNo   
		                  INSERT INTO tempvend FROM MEMVAR
		                  
		                  SELECT tempvend
		                  SCAN FOR cbatch = m.cbilltoken
		                     REPLACE ccheckNo WITH m.cCheckno, ;
		                             csortchk WITH m.cCheckno
		                  ENDSCAN 
		               ENDSCAN
		            ENDIF
		         ENDIF
		
		         SELECT csdishdr.cid AS cVendorId, ;
		            csdishdr.cbatch, ;
		            csdishdr.dDate, ;
		            csdishdr.ncashamt AS nAmount, ;
		            csdishdr.cCheckNo, ;
		            csdishdr.cCheckNo as cSortChk, ;
		            csdisdet.cacctno, ;
		            csdishdr.cInvNum, ;
		            csdisdet.cDesc, ;
		            'CD' AS cSource, ;
		            csdisdet.cUnitNo, ;
		            csdisdet.nAmount AS nDetAmt ;
		            FROM csdishdr, csdisdet ;
		            WHERE csdishdr.cbatch = csdisdet.cbatch ;
		            AND csdishdr.cid in (SELECT cid FROM selected) ;
		            AND BETWEEN(csdishdr.dDate,.txtdDate1.VALUE,.txtdDate2.VALUE) ;
		            INTO CURSOR temp ;
		            ORDER BY csdishdr.cid, csdishdr.dDate
		
		         IF _TALLY > 0
		            SELECT temp
		            SCAN
		               SCATTER MEMVAR
		               m.ccheckno = PADL(ALLTRIM(m.cCheckNo),10,' ')
		               INSERT INTO tempvend FROM MEMVAR
		               m.ndetamt = m.ndetamt * -1
		               INSERT INTO tempvend FROM MEMVAR
		            ENDSCAN
		         ENDIF
		
		      CASE .opgReportBy.VALUE = 2
		
		         SELECT appurchh.cVendorId, ;
		            appurchh.dinvdate AS dDate, ;
		            appurchh.cbatch, ;
		            'AP' AS cSource, ;
		            appurchh.cInvNum, ;
		            appurchh.ninvtot AS nAmount, ;
		            appurchd.citemdesc AS cDesc, ;
		            appurchd.cUnitNo, ;
		            appurchd.cacctno, ;
		            appurchd.nextension AS nDetAmt ;
		            FROM appurchh, appurchd ;
		            WHERE appurchh.cbatch = appurchd.cbatch ;
		            AND appurchh.cvendorid in (SELECT cid FROM selected) ;
		            AND BETWEEN(appurchh.dpostdate,.txtdDate1.VALUE,.txtdDate2.VALUE) ;
		            INTO CURSOR temp ;
		            ORDER BY appurchh.cVendorId, appurchh.dinvdate ;
		
		         IF _TALLY > 0
		            SELECT temp
		            SCAN
		               SCATTER MEMVAR
		               m.csortchk = DTOC(m.ddate)
		               INSERT INTO tempvend FROM MEMVAR
		            ENDSCAN
		         ENDIF
		
		
		         IF tlPayments
		            SELECT appmthdr.dpmtdate AS dDate, ;
		               appmthdr.cbatch, ;
		               appmtdet.cVendorId, ;
		               appmtdet.cInvNum, ;
		               appmtdet.cbilltoken, ;
		               SUM(appmtdet.namtpaid+appmtdet.ndisctaken) AS nDetAmt, ;
		               checks.cCheckNo, ;
		               checks.lprinted, ;
		               ' ' AS cUnitNo, ;
		               ' ' as cacctno, ;
		               'AP' AS cSource,  ;
		               'z-Payment' AS cDesc ;
		               FROM appmthdr, appmtdet, checks ;
		               WHERE appmthdr.cbatch = appmtdet.cbatch ;
		               AND appmtdet.cidchec  = checks.cidchec ;
		               AND checks.lvoid # .T. ;
		               AND appmtdet.cvendorid in (SELECT cid FROM selected) ;
		               AND BETWEEN(appmthdr.dpmtdate,.txtdDate1.VALUE,.txtdDate2.VALUE) ;
		               AND appmtdet.namtpaid <> 0 ;
		               INTO CURSOR temp ;
		               ORDER BY appmtdet.cVendorId, appmthdr.dpmtdate, appmtdet.cinvnum ;
		               GROUP BY appmtdet.cVendorId, appmthdr.dpmtdate, appmtdet.cinvnum 
		
		
		            IF _TALLY > 0
		               SELECT temp
		               SCAN
		                  SCATTER MEMVAR
		                  IF m.lPrinted
		                     m.ccheckno = PADL(ALLTRIM(m.cCheckNo),10,' ')
		                  ELSE
		                     m.cCheckno = ' Unprinted'
		                  ENDIF    
		                  m.cSortChk    = m.cCheckNo
		                  INSERT INTO tempvend FROM MEMVAR
		                  
		                  SELECT tempvend
		                  SCAN FOR cbatch = m.cbilltoken
		                     REPLACE ccheckNo WITH m.cCheckno, ;
		                             csortchk WITH m.cCheckno
		                  ENDSCAN
		               ENDSCAN
		            ENDIF
		         ENDIF
		
		         SELECT csdishdr.cid AS cVendorId, ;
		            csdishdr.cbatch, ;
		            csdishdr.dDate, ;
		            csdishdr.ncashamt AS nAmount, ;
		            csdishdr.cCheckNo, ;
		            csdishdr.ccheckno as csortchk, ;
		            csdishdr.cInvNum, ;
		            csdisdet.cDesc, ;
		            000000000.00 as ndisctaken, ;
		            'CD' AS cSource, ;
		            csdisdet.cUnitNo, ;
		            csdisdet.cacctno, ;
		            csdisdet.nAmount AS nDetAmt ;
		            FROM csdishdr, csdisdet ;
		            WHERE csdishdr.cbatch = csdisdet.cbatch ;
		            AND csdishdr.cid in (SELECT cid FROM selected) ;
		            AND BETWEEN(csdishdr.dDate,.txtdDate1.VALUE,.txtdDate2.VALUE) ;
		            INTO CURSOR temp ;
		            ORDER BY csdishdr.cid, csdishdr.dDate
		
		         IF _TALLY > 0
		            SELECT temp
		            SCAN
		               SCATTER MEMVAR
		               INSERT INTO tempvend FROM MEMVAR
		               m.ndetamt = m.ndetamt * -1
		               INSERT INTO tempvend FROM MEMVAR
		             ENDSCAN
		         ENDIF
		
		   ENDCASE
		   
		   IF NOT tlPayments
		      SELECT tempvend
		      INDEX ON cVendorId+DTOS(dDate) TAG venddate
		   ELSE
		      SELECT tempvend
		      INDEX ON cVendorId+cInvNum+csortchk+cDesc+DTOS(dDate) TAG venddate
		   ENDIF    
		
		   SCAN
		      m.cVendorId = cVendorId
		      m.cDesc     = cDesc
		      m.nDetAmt   = nDetAmt
		      m.cUnitNo   = cUnitNo
		      m.cSource   = cSource
		      m.cAcctNo   = cAcctNo
		      SWSELECT('vendor')
		      SET ORDER TO cvendorid
		      IF SEEK(m.cVendorId)
		         m.cVendName = cVendName
		      ELSE
		         m.cVendName = ' '
		      ENDIF
		      IF NOT EMPTY(m.cUnitNo)
		         SWSELECT('wells')
		         SET ORDER TO cwellid
		         IF SEEK(TRIM(m.cUnitNo))
		            m.cUnitNo = ALLTRIM(m.cUnitNo)+'-'+TRIM(cwellname)
		         ENDIF
		      ELSE
		         IF NOT EMPTY(m.cacctno)
		            m.cUnitNo = m.cAcctNo
		            swselect('coa')
		            SET ORDER to acctno
		            IF SEEK(m.cacctno)
		               m.cUnitno = ALLTRIM(m.cunitno) + '-' + coa.cacctdesc
		            ENDIF 
		         ENDIF 
		      ENDIF
		      IF m.cDesc = 'z-Payment'
		         m.nDetAmt = m.nDetAmt * -1
		      ENDIF
		      SELECT tempvend
		      REPLACE cVendName WITH m.cVendName, ;
		         nDetAmt   WITH m.nDetAmt, ;
		         cUnitNo   WITH m.cUnitNo
		   ENDSCAN
		
		ENDWITH
		
		SELECT tempvend
		IF RECC() > 0
		   RETURN .T.
		ELSE
		   RETURN .F.
		ENDIF
		
	ENDPROC

	PROCEDURE Init
		DODEFAULT()
		SELECT vendor
		SET ORDER TO cvendorid
		GO TOP
		thisform.swrptlook1.txtBegID.value = cvendorid
		thisform.swrptlook1.txtBegName.value = cvendname
		GO BOTT
		thisform.swrptlook1.txtEndID.value = cvendorid
		thisform.swrptlook1.txtEndName.value = cvendname
		
		thisform.opgReportBy.value = 1
		
		thisform.txtdDate1.value = DATE(YEAR(DATE()),1,1)
		thisform.txtdDate2.value = DATE()
		
		thisform.cReportName = 'apvendact.frx'
		
		
	ENDPROC

	PROCEDURE chkSelected.Click
		IF this.Value
		   DO FORM commonsource\selected-ids WITH 'VENDOR' LINKED 
		   lnCount = RECCOUNT('selected')
		   thisform.lblselected.Caption = TRANSFORM(lnCount) + ' Vendors Selected'
		   thisform.lblselected.Visible = .T.
		   thisform.lblbegID.Visible = .F.
		   thisform.lblendID.Visible = .F.
		   thisform.swrptlook1.Visible = .F.
		ELSE
		   thisform.lblselected.Visible = .F.
		   thisform.lblbegID.Visible = .T.
		   thisform.lblendID.Visible = .T.
		   thisform.swrptlook1.Visible = .T.
		ENDIF 
	ENDPROC

	PROCEDURE Lbllabelcustom1.Init
		DODEFAULT()
		
		IF NOT m.goapp.lAMVersion  &&  Get rid of this option for DM-only
		   this.visible = .f.
		ENDIF
		
	ENDPROC

	PROCEDURE opgReportBy.Init
		DODEFAULT()
		
		IF NOT m.goapp.lAMVersion  &&  Get rid of this option for DM-only
		   this.visible = .f.
		ENDIF
		
	ENDPROC

	PROCEDURE opgReportBy.Option1.GotFocus
		THISFORM.opgReportBy.VALUE = 1
		
	ENDPROC

	PROCEDURE opgReportBy.Option2.GotFocus
		THISFORM.opgReportBy.VALUE = 2
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK   = .T.
		lcList = 'cvendorid,csortfield'
		
		DO FORM ..\CUSTOM\picklist WITH 'Vendor', lcList, thisform.swrptlook1.txtbegid.value, 2
		
		IF llOK
		   THISFORM.swrptlook1.txtBegID.VALUE   = Vendor.cVendorID
		   THISFORM.swrptlook1.txtBegName.VALUE = Vendor.cvendname
		   THISFORM.swrptlook1.txtBegID.REFRESH()
		   THISFORM.swrptlook1.txtBegName.REFRESH()
		   THISFORM.swrptlook1.txtBegID.SETFOCUS
		ENDIF
		
		THISFORM.setnextcontrol(THISFORM.swrptlook1.txtBegID)
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK   = .T.
		lcList = 'cvendorid,csortfield'
		
		DO FORM ..\CUSTOM\picklist WITH 'Vendor', lcList, thisform.swrptlook1.txtendid.value, 2
		
		IF llOK
		   THISFORM.swrptlook1.txtEndID.VALUE   = Vendor.cVendorID
		   THISFORM.swrptlook1.txtEndName.VALUE = Vendor.cVendName
		   THISFORM.swrptlook1.txtEndID.REFRESH()
		   THISFORM.swrptlook1.txtEndName.REFRESH()
		   THISFORM.swrptlook1.txtEndID.SETFOCUS
		ENDIF
		
		THISFORM.setnextcontrol(THISFORM.swrptlook1.txtEndID)
		
	ENDPROC

ENDDEFINE
