*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="importmapcopy.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 200
	Left = 1
	Name = "Dataenvironment"
	Top = 220
	Width = 520

ENDDEFINE

DEFINE CLASS frmimportmapcopy AS frmdatamanagerformcustom OF "..\custom\cforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="CMDCopy" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdExit" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboComp2" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: copyfiles
		*p: lerror
	*</DefinedPropArrayMethod>

	Caption = "Copy Import Definitions"
	DoCreate = .T.
	Height = 253
	HelpContextID = 137
	Name = "frmImportMapCopy"
	Width = 526
	_memberdata = <VFPData>
		<memberdata name="copyfiles" display="CopyFiles"/>
		</VFPData>
	cmdatamanager.Left = 20
	cmdatamanager.Name = "cmdatamanager"
	cmdatamanager.TabIndex = 1
	cmlookupmanager.Left = 37
	cmlookupmanager.Name = "cmlookupmanager"
	MWRESIZE1.lblHighLight.Name = "lblHighLight"
	MWRESIZE1.lblShading.Name = "lblShading"
	MWRESIZE1.Name = "MWRESIZE1"

	ADD OBJECT 'cboComp2' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		ColumnCount = 1, ;
		Height = 20, ;
		Left = 52, ;
		Name = "cboComp2", ;
		TabIndex = 7, ;
		Top = 132, ;
		Width = 420, ;
		ZOrderSet = 22
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'CMDCopy' AS cmdcommandbuttoncustom WITH ;
		Caption = "\<Copy", ;
		Height = 36, ;
		Left = 163, ;
		Name = "CMDCopy", ;
		TabIndex = 28, ;
		Top = 192, ;
		Width = 91
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdExit' AS cmdcommandbuttoncustom WITH ;
		Caption = "E\<xit", ;
		Height = 36, ;
		Left = 271, ;
		Name = "cmdExit", ;
		TabIndex = 29, ;
		Top = 192, ;
		Width = 91
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Label2' AS label WITH ;
		AutoSize = .T., ;
		Caption = "**  Please note that the files can only be copied if all other users have the software closed, and that this process will overwrite the existing files.  **", ;
		FontBold = .T., ;
		FontSize = 8, ;
		ForeColor = 255,0,0, ;
		Height = 30, ;
		Left = 28, ;
		Name = "Label2", ;
		TabIndex = 3, ;
		Top = 43, ;
		Width = 455, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Lbltextcustom2' AS lbltextcustom WITH ;
		Caption = "Company to Copy From:", ;
		FontBold = .T., ;
		Left = 52, ;
		Name = "Lbltextcustom2", ;
		TabIndex = 6, ;
		Top = 114
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />
	
	PROCEDURE copyfiles
		LOCAL laSessions[1], lcPath1, lcPath2, lcVersion1, lcVersion2, llReturn, lnSessions, lnX, loError
		LOCAL fh1, fh2, lnCount
		
		llReturn = .T.
		lnCount  = 0
		
		TRY
		   THISFORM.lError = .F.
		
		   SET SAFETY OFF
		
		   IF NOT USED('compmast')
		      USE (m.goApp.cCommonFolder + '\compmast') IN 0
		   ENDIF
		
		   SELECT compmast
		   LOCATE FOR UPPER(cidcomp) = UPPER(m.goApp.cidcomp)  &&  No need to match based on the dropdown list, since the value of that was set to this memvar when the screen opened
		   IF FOUND()
		      lcPath1    = ALLT(cDataPath)
		      lcVersion1 = cVersion
		   ELSE  &&  Should never get here
		      THISFORM.oMessage.warning("Bad error!  Cannot match up the 'Copy From' company with the compmast file.")
		   ENDIF
		   LOCATE FOR UPPER(cidcomp) = UPPER(THISFORM.cboComp2.VALUE)
		   IF FOUND()
		      lcPath2    = ALLT(cDataPath)
		      lcVersion2 = cVersion
		   ELSE  &&  Should never get here
		      THISFORM.oMessage.warning("Bad error!  Cannot match up the 'Copy To' company with the compmast file.")
		   ENDIF
		   IF lcVersion1 # lcVersion2
		      THISFORM.oMessage.warning('The two companies are not at the same version, or need to have their files updated.  Open each company to make sure the files get updated before copying.')
		      llReturn = .F.
		      EXIT
		   ENDIF
		
		   IF NOT THISFORM.oMessage.CONFIRM('Are you sure you want to copy the import mapping from the selected company? ' + ;
		           'This will merge the new mappings from the company being copied from.')
		      llReturn = .F.
		      EXIT
		   ENDIF
		
		   fh2 = FOPEN("&lcPath2" + 'importmap.dbf', 2)
		
		   IF fh2 = -1
		      THISFORM.oMessage.warning('The import map file could not be copied.  Make sure no other users ' + ;
		           'are in this company, or the company being copied from, and then try again')
		   ELSE
		      FCLOSE(fh2)
		      lnCount = 0
		      swselect('importmap')
		      swclose('frommap')
		      USE (lcPath2 + 'importmap') IN 0 AGAIN ALIAS frommap
		      SELECT frommap
		      SCAN
		         SCATTER MEMVAR memo 
		         RELEASE m.iimportmappk
		
		         SELECT importmap
		         LOCATE FOR cimportname == m.cimportname
		         IF NOT FOUND()
		            lnCount = lnCount + 1
		            INSERT INTO importmap FROM MEMVAR
		         ENDIF
		      ENDSCAN
		   ENDIF
		
		
		   IF NOT THISFORM.lError
		      THISFORM.oMessage.DISPLAY(TRANSFORM(lnCount) + ' import maps were copied successfully.')
		   ENDIF
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'CopyFiles', loError.LINENO, 'Copy Import Maps', loError.ERRORNO, loError.MESSAGE, '', loError
		   MESSAGEBOX('Unable to copy the files at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
		
	ENDPROC

	PROCEDURE Error
		LPARAMETERS nerror,cmethod,nline
		
		if nerror <> 1540 and nerror <> 3
		   dodefault(nerror,cmethod,nline)
		endif   
	ENDPROC

	PROCEDURE cboComp2.Init
		LOCAL lcidcomp
		
		lcidComp = UPPER(m.goapp.cidcomp)  &&  Memvar set during opencompany()
		
		IF NOT USED('compmast')
		   USE (m.goapp.cCommonFolder+'compmast') IN 0
		ENDIF 
		
		SELECT cProducer,cidcomp FROM compmast WHERE UPPER(cidComp) <> lcidComp INTO ARRAY laComp ORDER BY cProducer
		
		IF _TALLY > 0
		   FOR lnX = 1 TO ALEN(laComp,1)
		      THIS.ADDLISTITEM(laComp[lnX,1],lnX,1)
		      THIS.ADDLISTITEM(laComp[lnX,2],lnX,2)
		   ENDFOR
		ENDIF
		
		THIS.LISTITEMID = 1
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE CMDCopy.Click
		thisform.CopyFiles()
	ENDPROC

	PROCEDURE CMDCopy.Error
		LPARAMETERS nerror,cmethod,nline
		
		if nError = 3  &&  File in use error
		   thisform.oMessage.Warning('There has been a sharing violation, so not all files have been copied.  Make sure all users are out of both companies before copying.')
		   thisform.lError = .t.
		endif
	ENDPROC

	PROCEDURE cmdExit.Click
		thisform.release()
	ENDPROC

ENDDEFINE
