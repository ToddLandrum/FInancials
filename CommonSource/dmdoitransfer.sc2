*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="dmdoitransfer.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor10" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor11" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 640
	Left = 40
	Name = "Dataenvironment"
	Top = 235
	Width = 995

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 419, ;
		Name = "Cursor1", ;
		Top = 27, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor10' AS cursor WITH ;
		Alias = "ownpcts", ;
		BufferModeOverride = 5, ;
		CursorSource = "ownpcts", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 159, ;
		Name = "Cursor10", ;
		Top = 268, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor11' AS cursor WITH ;
		Alias = "checks", ;
		CursorSource = "checks", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 285, ;
		Name = "Cursor11", ;
		Top = 280, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "wellinv", ;
		BufferModeOverride = 5, ;
		CursorSource = "wellinv", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 609, ;
		Left = 151, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "wellinv1", ;
		CursorSource = "wellinv", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "investor", ;
		CursorSource = "investor", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor4", ;
		Top = 140, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "sysctl", ;
		CursorSource = "sysctl", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor5", ;
		Top = 20, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "disbhist", ;
		BufferModeOverride = 5, ;
		CursorSource = "disbhist", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor6", ;
		Top = 140, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor7' AS cursor WITH ;
		Alias = "suspense", ;
		BufferModeOverride = 5, ;
		CursorSource = "suspense", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 281, ;
		Name = "Cursor7", ;
		Top = 146, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor8' AS cursor WITH ;
		Alias = "suspense1", ;
		CursorSource = "suspense", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 415, ;
		Name = "Cursor8", ;
		Top = 145, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor9' AS cursor WITH ;
		Alias = "disbhist1", ;
		CursorSource = "disbhist", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor9", ;
		Top = 260, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formdmdoitransfer AS frmform OF "..\common\cmforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblTypeInv" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="shpWellBox" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLookOwner" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcOwnerID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcOwnName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblWell" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLookWell" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcWellID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcWellName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdExit" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklAllInterests" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklSpecificWell" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCopy" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdPreview" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Linlinecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtnTotal" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSuspHist" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkOwnHist" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Runcombo1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblHistory" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboTypeInv" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page1.Lbltextcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page1.cmdOwner1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page1.txtcOwnerID1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page1.txtcOwnerID2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page1.txtcOwnerID3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page1.txtcOwnName2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page1.txtcOwnName1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page1.txtcOwnName3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page1.txtcOwnerID4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page1.txtcOwnName4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page1.txtcOwnerID5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page1.txtcOwnName5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page1.cmdOwner2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page1.cmdOwner3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page1.txtnAmount1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page1.txtnAmount5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page1.txtnAmount4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page1.txtnAmount3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page1.txtnAmount2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page1.cmdOwner4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page1.cmdOwner5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page1.Lbltextcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page1.Lbltextcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page1.Lbltextcustom5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page1.Lbltextcustom6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page1.Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page1.Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page1.Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page1.Lbllabelcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page1.Lbllabelcustom5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page2.txtcOwnerID10" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page2.txtcOwnerID9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page2.txtcOwnerID8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page2.txtcOwnerID6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page2.txtcOwnerID7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page2.txtcOwnName6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page2.txtcOwnName10" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page2.txtcOwnName7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page2.txtcOwnName9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page2.txtcOwnName8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page2.cmdOwner6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page2.cmdOwner7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page2.cmdOwner8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page2.cmdOwner9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page2.txtnAmount10" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page2.txtnAmount9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page2.txtnAmount8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page2.txtnAmount7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page2.txtnAmount6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page2.cmdOwner10" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page2.Lbltextcustom7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page2.Lbltextcustom8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page2.Lbltextcustom9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page2.Lbltextcustom10" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page2.Lbltextcustom11" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page2.Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page2.Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page2.Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page2.Lbllabelcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page2.Lbllabelcustom5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page3.Lbltextcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page3.cmdOwner11" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page3.txtcOwnerID11" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page3.txtcOwnerID12" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page3.txtcOwnerID13" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page3.txtcOwnName12" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page3.txtcOwnName11" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page3.txtcOwnName13" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page3.txtcOwnerID14" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page3.txtcOwnName14" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page3.txtcOwnerID15" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page3.txtcOwnName15" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page3.cmdOwner12" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page3.cmdOwner13" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page3.txtnAmount11" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page3.txtnAmount15" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page3.txtnAmount14" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page3.txtnAmount13" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page3.txtnAmount12" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page3.cmdOwner14" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page3.cmdOwner15" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page3.Lbltextcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page3.Lbltextcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page3.Lbltextcustom5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page3.Lbltextcustom6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page3.Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page3.Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page3.Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page3.Lbllabelcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page3.Lbllabelcustom5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page4.txtcOwnerID20" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page4.txtcOwnerID19" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page4.txtcOwnerID18" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page4.txtcOwnerID16" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page4.txtcOwnerID17" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page4.txtcOwnName16" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page4.txtcOwnName20" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page4.txtcOwnName17" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page4.txtcOwnName19" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page4.txtcOwnName18" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page4.cmdOwner16" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page4.cmdOwner17" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page4.cmdOwner18" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page4.cmdOwner19" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page4.txtnAmount20" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page4.txtnAmount19" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page4.txtnAmount18" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page4.txtnAmount17" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page4.txtnAmount16" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page4.cmdOwner20" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page4.Lbltextcustom7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page4.Lbltextcustom8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page4.Lbltextcustom9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page4.Lbltextcustom10" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page4.Lbltextcustom11" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page4.Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page4.Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page4.Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page4.Lbllabelcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfOwners.Page4.Lbllabelcustom5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cmdcommandbuttoncustom1" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: calctotals
		*m: checkinterests
		*m: createlog		&& Creates log file of changes
		*m: splitemup
		*m: transhist		&& Transfers suspense and owner history
		*p: lanydoirecords
		*p: lanyhistrecords
		*p: lanysusprecords
		*p: lfirsttimeopen
		*p: lnotopening
		*p: lsusphist
		*p: lsuspopt		&& Have separate check boxes for owner and suspense history
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	Caption = "Transfer DOI Between Owners"
	DataSession = 2
	DoCreate = .T.
	Height = 463
	HelpContextID = 257
	Icon = ..\
	lanydoirecords = .F.
	lanyhistrecords = .F.
	lanysusprecords = .F.
	lfirsttimeopen = .F.
	lnotopening = .F.
	lsusphist = .F.
	lsuspopt = .F.		&& Have separate check boxes for owner and suspense history
	Name = "FormDMDOITransfer"
	Width = 481
	_memberdata = <VFPData>
		<memberdata name="lanydoirecords" display="lAnyDOIRecords"/>
		<memberdata name="lanyhistrecords" display="lAnyHistRecords"/>
		<memberdata name="lanysusprecords" display="lAnySuspRecords"/>
		</VFPData>		&& XML Metadata for customizable properties

	ADD OBJECT 'cboTypeInv' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		ColumnCount = 1, ;
		Height = 20, ;
		Left = 203, ;
		Name = "cboTypeInv", ;
		TabIndex = 11, ;
		Top = 88, ;
		Width = 210, ;
		ZOrderSet = 23
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'chklAllInterests' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Transfer All Interests", ;
		Left = 65, ;
		Name = "chklAllInterests", ;
		TabIndex = 5, ;
		Top = 52, ;
		Value = .T., ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklSpecificWell' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Transfer Interest in a Specific Well", ;
		Left = 233, ;
		Name = "chklSpecificWell", ;
		TabIndex = 6, ;
		Top = 52, ;
		Value = .F., ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkOwnHist' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Transfer Owner and Suspense History", ;
		Left = 64, ;
		Name = "chkOwnHist", ;
		TabIndex = 17, ;
		Top = 366, ;
		Value = .F., ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSuspHist' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Transfer Suspense History", ;
		Left = 64, ;
		Name = "chkSuspHist", ;
		TabIndex = 18, ;
		Top = 380, ;
		Value = .F., ;
		Visible = .F., ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Cmdcommandbuttoncustom1' AS cmdcommandbuttoncustom WITH ;
		Caption = "Clear", ;
		FontSize = 8, ;
		Height = 25, ;
		Left = 245, ;
		Name = "Cmdcommandbuttoncustom1", ;
		TabIndex = 23, ;
		Top = 432, ;
		Width = 75, ;
		WordWrap = .T., ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdCopy' AS cmdcommandbuttoncustom WITH ;
		Caption = "\<Transfer", ;
		Height = 25, ;
		Left = 152, ;
		Name = "cmdCopy", ;
		TabIndex = 22, ;
		Top = 432, ;
		Width = 75, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdExit' AS cmdcommandbuttoncustom WITH ;
		Caption = "E\<xit", ;
		Height = 25, ;
		Left = 338, ;
		Name = "cmdExit", ;
		TabIndex = 24, ;
		Top = 432, ;
		Width = 75, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdLookOwner' AS cmdcommandbuttoncustom WITH ;
		Caption = "Owner ID", ;
		Height = 20, ;
		Left = 37, ;
		Name = "cmdLookOwner", ;
		TabIndex = 2, ;
		TabStop = .F., ;
		Top = 19, ;
		Width = 60, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdLookWell' AS cmdcommandbuttoncustom WITH ;
		Caption = " Well ID", ;
		Height = 20, ;
		Left = 37, ;
		Name = "cmdLookWell", ;
		TabIndex = 8, ;
		TabStop = .F., ;
		Top = 88, ;
		Visible = .F., ;
		Width = 60, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdPreview' AS cmdcommandbuttoncustom WITH ;
		Caption = "\<Preview", ;
		Height = 25, ;
		Left = 59, ;
		Name = "cmdPreview", ;
		TabIndex = 21, ;
		Top = 432, ;
		Width = 75, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'lblHistory' AS lbllabelcustom WITH ;
		Caption = "Start transfer beginning with run:", ;
		Left = 25, ;
		Name = "lblHistory", ;
		TabIndex = 20, ;
		Top = 402, ;
		Visible = .F., ;
		ZOrderSet = 22
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		BackStyle = 1, ;
		Caption = "Original Owner", ;
		FontBold = .T., ;
		Left = 25, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 1, ;
		Top = 2, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Alignment = 0, ;
		AutoSize = .F., ;
		Caption = "Any rounding will be adjusted to the last owner in the list.  If an owner already has an interest of the same type in a well, the new interest will be added to their existing interest.", ;
		Height = 44, ;
		Left = 21, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 14, ;
		Top = 180, ;
		Width = 436, ;
		WordWrap = .T., ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom1' AS lbltextcustom WITH ;
		Alignment = 0, ;
		AutoSize = .F., ;
		Caption = "Enter up to 20 owners to divide the interest(s) among, along with the percentage of the original interest that this owner should receive.  The total MUST add up to 100%.", ;
		Height = 30, ;
		Left = 21, ;
		Name = "Lbltextcustom1", ;
		TabIndex = 13, ;
		Top = 152, ;
		Width = 440, ;
		WordWrap = .T., ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblTypeInv' AS lbllabelcustom WITH ;
		Caption = "Interest Types to Transfer", ;
		Left = 70, ;
		Name = "lblTypeInv", ;
		TabIndex = 12, ;
		Top = 92, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblWell' AS lbllabelcustom WITH ;
		BackStyle = 1, ;
		Caption = "Well To Transfer Interests From", ;
		FontBold = .T., ;
		Left = 25, ;
		Name = "lblWell", ;
		TabIndex = 7, ;
		Top = 72, ;
		Visible = .F., ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Linlinecustom1' AS linlinecustom WITH ;
		Height = 0, ;
		Left = 343, ;
		LineSlant = "/", ;
		Name = "Linlinecustom1", ;
		Top = 366, ;
		Width = 94, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="line" />

	ADD OBJECT 'pgfOwners' AS pgfpageframecustom WITH ;
		ErasePage = .T., ;
		Height = 147, ;
		Left = 13, ;
		Name = "pgfOwners", ;
		PageCount = 4, ;
		TabIndex = 15, ;
		Top = 216, ;
		Width = 456, ;
		ZOrderSet = 24, ;
		Page1.Caption = "Owners 1-5", ;
		Page1.FontBold = .T., ;
		Page1.FontSize = 8, ;
		Page1.Name = "Page1", ;
		Page2.Caption = "Owners 6-10", ;
		Page2.FontBold = .T., ;
		Page2.FontSize = 8, ;
		Page2.Name = "Page2", ;
		Page3.Caption = "Owners 11-15", ;
		Page3.FontBold = .T., ;
		Page3.FontSize = 8, ;
		Page3.Name = "Page3", ;
		Page4.Caption = "Owners 16-20", ;
		Page4.FontBold = .T., ;
		Page4.FontSize = 8, ;
		Page4.Name = "Page4"
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="pageframe" />

	ADD OBJECT 'pgfOwners.Page1.cmdOwner1' AS swlookupbutton WITH ;
		Left = 26, ;
		Name = "cmdOwner1", ;
		TabIndex = 1, ;
		Top = 8
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'pgfOwners.Page1.cmdOwner2' AS swlookupbutton WITH ;
		Left = 26, ;
		Name = "cmdOwner2", ;
		TabIndex = 7, ;
		Top = 29
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'pgfOwners.Page1.cmdOwner3' AS swlookupbutton WITH ;
		Left = 26, ;
		Name = "cmdOwner3", ;
		TabIndex = 13, ;
		Top = 50
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'pgfOwners.Page1.cmdOwner4' AS swlookupbutton WITH ;
		Left = 26, ;
		Name = "cmdOwner4", ;
		TabIndex = 19, ;
		Top = 71
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'pgfOwners.Page1.cmdOwner5' AS swlookupbutton WITH ;
		Left = 26, ;
		Name = "cmdOwner5", ;
		TabIndex = 25, ;
		Top = 92
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'pgfOwners.Page1.Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "1.", ;
		Left = 13, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 6, ;
		Top = 11
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page1.Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "2.", ;
		Left = 13, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 12, ;
		Top = 33
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page1.Lbllabelcustom3' AS lbllabelcustom WITH ;
		Caption = "3.", ;
		Left = 13, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 18, ;
		Top = 53
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page1.Lbllabelcustom4' AS lbllabelcustom WITH ;
		Caption = "4.", ;
		Left = 13, ;
		Name = "Lbllabelcustom4", ;
		TabIndex = 24, ;
		Top = 74
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page1.Lbllabelcustom5' AS lbllabelcustom WITH ;
		Caption = "5.", ;
		Left = 13, ;
		Name = "Lbllabelcustom5", ;
		TabIndex = 30, ;
		Top = 95
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page1.Lbltextcustom2' AS lbltextcustom WITH ;
		Caption = "%", ;
		Left = 427, ;
		Name = "Lbltextcustom2", ;
		TabIndex = 5, ;
		Top = 10
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page1.Lbltextcustom3' AS lbltextcustom WITH ;
		Caption = "%", ;
		Left = 427, ;
		Name = "Lbltextcustom3", ;
		TabIndex = 11, ;
		Top = 31
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page1.Lbltextcustom4' AS lbltextcustom WITH ;
		Caption = "%", ;
		Left = 427, ;
		Name = "Lbltextcustom4", ;
		TabIndex = 17, ;
		Top = 52
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page1.Lbltextcustom5' AS lbltextcustom WITH ;
		Caption = "%", ;
		Left = 427, ;
		Name = "Lbltextcustom5", ;
		TabIndex = 23, ;
		Top = 73
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page1.Lbltextcustom6' AS lbltextcustom WITH ;
		Caption = "%", ;
		Left = 427, ;
		Name = "Lbltextcustom6", ;
		TabIndex = 29, ;
		Top = 94
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page1.txtcOwnerID1' AS txtquickfill WITH ;
		clistexpression = cownerid, ;
		clistworkarea = investor, ;
		Height = 20, ;
		Left = 50, ;
		MaxLength = 10, ;
		Name = "txtcOwnerID1", ;
		TabIndex = 2, ;
		Top = 8, ;
		Width = 78, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page1.txtcOwnerID2' AS txtquickfill WITH ;
		clistexpression = cownerid, ;
		clistworkarea = investor, ;
		Height = 20, ;
		Left = 50, ;
		MaxLength = 10, ;
		Name = "txtcOwnerID2", ;
		TabIndex = 8, ;
		Top = 29, ;
		Width = 78, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page1.txtcOwnerID3' AS txtquickfill WITH ;
		clistexpression = cownerid, ;
		clistworkarea = investor, ;
		Height = 20, ;
		Left = 50, ;
		MaxLength = 10, ;
		Name = "txtcOwnerID3", ;
		TabIndex = 14, ;
		Top = 50, ;
		Width = 78, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page1.txtcOwnerID4' AS txtquickfill WITH ;
		clistexpression = cownerid, ;
		clistworkarea = investor, ;
		Height = 20, ;
		Left = 50, ;
		MaxLength = 10, ;
		Name = "txtcOwnerID4", ;
		TabIndex = 20, ;
		Top = 71, ;
		Width = 78, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page1.txtcOwnerID5' AS txtquickfill WITH ;
		clistexpression = cownerid, ;
		clistworkarea = investor, ;
		Height = 20, ;
		Left = 50, ;
		MaxLength = 10, ;
		Name = "txtcOwnerID5", ;
		TabIndex = 26, ;
		Top = 92, ;
		Width = 78, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page1.txtcOwnName1' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 134, ;
		Name = "txtcOwnName1", ;
		TabIndex = 3, ;
		Top = 8, ;
		Width = 191, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page1.txtcOwnName2' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 134, ;
		Name = "txtcOwnName2", ;
		TabIndex = 9, ;
		Top = 29, ;
		Width = 191, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page1.txtcOwnName3' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 134, ;
		Name = "txtcOwnName3", ;
		TabIndex = 15, ;
		Top = 50, ;
		Width = 191, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page1.txtcOwnName4' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 134, ;
		Name = "txtcOwnName4", ;
		TabIndex = 21, ;
		Top = 71, ;
		Width = 191, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page1.txtcOwnName5' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 134, ;
		Name = "txtcOwnName5", ;
		TabIndex = 27, ;
		Top = 92, ;
		Width = 191, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page1.txtnAmount1' AS txttextboxcustom WITH ;
		Alignment = 3, ;
		Height = 20, ;
		InputMask = "999.9999999", ;
		Left = 331, ;
		Name = "txtnAmount1", ;
		SelectOnEntry = .T., ;
		TabIndex = 4, ;
		Top = 8, ;
		Value = 0, ;
		Width = 93, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page1.txtnAmount2' AS txttextboxcustom WITH ;
		Alignment = 3, ;
		Height = 20, ;
		InputMask = "999.9999999", ;
		Left = 331, ;
		Name = "txtnAmount2", ;
		SelectOnEntry = .T., ;
		TabIndex = 10, ;
		Top = 29, ;
		Value = 0, ;
		Width = 93, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page1.txtnAmount3' AS txttextboxcustom WITH ;
		Alignment = 3, ;
		Height = 20, ;
		InputMask = "999.9999999", ;
		Left = 331, ;
		Name = "txtnAmount3", ;
		SelectOnEntry = .T., ;
		TabIndex = 16, ;
		Top = 50, ;
		Value = 0, ;
		Width = 93, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page1.txtnAmount4' AS txttextboxcustom WITH ;
		Alignment = 3, ;
		Height = 20, ;
		InputMask = "999.9999999", ;
		Left = 331, ;
		Name = "txtnAmount4", ;
		SelectOnEntry = .T., ;
		TabIndex = 22, ;
		Top = 71, ;
		Value = 0, ;
		Width = 93, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page1.txtnAmount5' AS txttextboxcustom WITH ;
		Alignment = 3, ;
		Height = 20, ;
		InputMask = "999.9999999", ;
		Left = 331, ;
		Name = "txtnAmount5", ;
		SelectOnEntry = .T., ;
		TabIndex = 28, ;
		Top = 92, ;
		Value = 0, ;
		Width = 93, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page2.cmdOwner10' AS swlookupbutton WITH ;
		Left = 26, ;
		Name = "cmdOwner10", ;
		TabIndex = 60, ;
		Top = 92
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'pgfOwners.Page2.cmdOwner6' AS swlookupbutton WITH ;
		Left = 26, ;
		Name = "cmdOwner6", ;
		TabIndex = 40, ;
		Top = 8
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'pgfOwners.Page2.cmdOwner7' AS swlookupbutton WITH ;
		Left = 26, ;
		Name = "cmdOwner7", ;
		TabIndex = 45, ;
		Top = 29
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'pgfOwners.Page2.cmdOwner8' AS swlookupbutton WITH ;
		Left = 26, ;
		Name = "cmdOwner8", ;
		TabIndex = 50, ;
		Top = 50
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'pgfOwners.Page2.cmdOwner9' AS swlookupbutton WITH ;
		Left = 26, ;
		Name = "cmdOwner9", ;
		TabIndex = 55, ;
		Top = 71
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'pgfOwners.Page2.Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "6.", ;
		Left = 14, ;
		Name = "Lbllabelcustom1", ;
		Top = 11
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page2.Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "7.", ;
		Left = 14, ;
		Name = "Lbllabelcustom2", ;
		Top = 33
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page2.Lbllabelcustom3' AS lbllabelcustom WITH ;
		Caption = "8.", ;
		Left = 14, ;
		Name = "Lbllabelcustom3", ;
		Top = 53
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page2.Lbllabelcustom4' AS lbllabelcustom WITH ;
		Caption = "9.", ;
		Left = 14, ;
		Name = "Lbllabelcustom4", ;
		Top = 74
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page2.Lbllabelcustom5' AS lbllabelcustom WITH ;
		Caption = "10.", ;
		Left = 8, ;
		Name = "Lbllabelcustom5", ;
		Top = 95
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page2.Lbltextcustom10' AS lbltextcustom WITH ;
		Caption = "%", ;
		Left = 427, ;
		Name = "Lbltextcustom10", ;
		TabIndex = 59, ;
		Top = 73
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page2.Lbltextcustom11' AS lbltextcustom WITH ;
		Caption = "%", ;
		Left = 427, ;
		Name = "Lbltextcustom11", ;
		TabIndex = 64, ;
		Top = 94
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page2.Lbltextcustom7' AS lbltextcustom WITH ;
		Caption = "%", ;
		Left = 427, ;
		Name = "Lbltextcustom7", ;
		TabIndex = 44, ;
		Top = 10
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page2.Lbltextcustom8' AS lbltextcustom WITH ;
		Caption = "%", ;
		Left = 427, ;
		Name = "Lbltextcustom8", ;
		TabIndex = 49, ;
		Top = 31
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page2.Lbltextcustom9' AS lbltextcustom WITH ;
		Caption = "%", ;
		Left = 427, ;
		Name = "Lbltextcustom9", ;
		TabIndex = 54, ;
		Top = 52
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page2.txtcOwnerID10' AS txtquickfill WITH ;
		clistexpression = cownerid, ;
		clistworkarea = investor, ;
		Height = 20, ;
		Left = 50, ;
		MaxLength = 10, ;
		Name = "txtcOwnerID10", ;
		TabIndex = 61, ;
		Top = 92, ;
		Width = 78, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page2.txtcOwnerID6' AS txtquickfill WITH ;
		clistexpression = cownerid, ;
		clistworkarea = investor, ;
		Height = 20, ;
		Left = 50, ;
		MaxLength = 10, ;
		Name = "txtcOwnerID6", ;
		TabIndex = 41, ;
		Top = 8, ;
		Width = 78, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page2.txtcOwnerID7' AS txtquickfill WITH ;
		clistexpression = cownerid, ;
		clistworkarea = investor, ;
		Height = 20, ;
		Left = 50, ;
		MaxLength = 10, ;
		Name = "txtcOwnerID7", ;
		TabIndex = 46, ;
		Top = 29, ;
		Width = 78, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page2.txtcOwnerID8' AS txtquickfill WITH ;
		clistexpression = cownerid, ;
		clistworkarea = investor, ;
		Height = 20, ;
		Left = 50, ;
		MaxLength = 10, ;
		Name = "txtcOwnerID8", ;
		TabIndex = 50, ;
		Top = 50, ;
		Width = 78, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page2.txtcOwnerID9' AS txtquickfill WITH ;
		clistexpression = cownerid, ;
		clistworkarea = investor, ;
		Height = 20, ;
		Left = 50, ;
		MaxLength = 10, ;
		Name = "txtcOwnerID9", ;
		TabIndex = 56, ;
		Top = 71, ;
		Width = 78, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page2.txtcOwnName10' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 134, ;
		Name = "txtcOwnName10", ;
		TabIndex = 62, ;
		Top = 92, ;
		Width = 191, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page2.txtcOwnName6' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 134, ;
		Name = "txtcOwnName6", ;
		TabIndex = 42, ;
		Top = 8, ;
		Width = 191, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page2.txtcOwnName7' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 134, ;
		Name = "txtcOwnName7", ;
		TabIndex = 47, ;
		Top = 29, ;
		Width = 191, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page2.txtcOwnName8' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 134, ;
		Name = "txtcOwnName8", ;
		TabIndex = 50, ;
		Top = 50, ;
		Width = 191, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page2.txtcOwnName9' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 134, ;
		Name = "txtcOwnName9", ;
		TabIndex = 57, ;
		Top = 71, ;
		Width = 191, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page2.txtnAmount10' AS txttextboxcustom WITH ;
		Alignment = 3, ;
		Height = 20, ;
		InputMask = "999.9999999", ;
		Left = 331, ;
		Name = "txtnAmount10", ;
		SelectOnEntry = .T., ;
		TabIndex = 63, ;
		Top = 92, ;
		Value = 0, ;
		Width = 93, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page2.txtnAmount6' AS txttextboxcustom WITH ;
		Alignment = 3, ;
		Height = 20, ;
		InputMask = "999.9999999", ;
		Left = 331, ;
		Name = "txtnAmount6", ;
		SelectOnEntry = .T., ;
		TabIndex = 43, ;
		Top = 8, ;
		Value = 0, ;
		Width = 93, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page2.txtnAmount7' AS txttextboxcustom WITH ;
		Alignment = 3, ;
		Height = 20, ;
		InputMask = "999.9999999", ;
		Left = 331, ;
		Name = "txtnAmount7", ;
		SelectOnEntry = .T., ;
		TabIndex = 48, ;
		Top = 29, ;
		Value = 0, ;
		Width = 93, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page2.txtnAmount8' AS txttextboxcustom WITH ;
		Alignment = 3, ;
		Height = 20, ;
		InputMask = "999.9999999", ;
		Left = 331, ;
		Name = "txtnAmount8", ;
		SelectOnEntry = .T., ;
		TabIndex = 53, ;
		Top = 50, ;
		Value = 0, ;
		Width = 93, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page2.txtnAmount9' AS txttextboxcustom WITH ;
		Alignment = 3, ;
		Height = 20, ;
		InputMask = "999.9999999", ;
		Left = 331, ;
		Name = "txtnAmount9", ;
		SelectOnEntry = .T., ;
		TabIndex = 58, ;
		Top = 71, ;
		Value = 0, ;
		Width = 93, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page3.cmdOwner11' AS swlookupbutton WITH ;
		Left = 26, ;
		Name = "cmdOwner11", ;
		TabIndex = 1, ;
		Top = 8
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'pgfOwners.Page3.cmdOwner12' AS swlookupbutton WITH ;
		Left = 26, ;
		Name = "cmdOwner12", ;
		TabIndex = 7, ;
		Top = 29
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'pgfOwners.Page3.cmdOwner13' AS swlookupbutton WITH ;
		Left = 26, ;
		Name = "cmdOwner13", ;
		TabIndex = 13, ;
		Top = 50
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'pgfOwners.Page3.cmdOwner14' AS swlookupbutton WITH ;
		Left = 26, ;
		Name = "cmdOwner14", ;
		TabIndex = 19, ;
		Top = 71
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'pgfOwners.Page3.cmdOwner15' AS swlookupbutton WITH ;
		Left = 26, ;
		Name = "cmdOwner15", ;
		TabIndex = 25, ;
		Top = 92
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'pgfOwners.Page3.Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "11.", ;
		Left = 8, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 6, ;
		Top = 11
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page3.Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "12.", ;
		Left = 8, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 12, ;
		Top = 33
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page3.Lbllabelcustom3' AS lbllabelcustom WITH ;
		Caption = "13.", ;
		Left = 8, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 18, ;
		Top = 53
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page3.Lbllabelcustom4' AS lbllabelcustom WITH ;
		Caption = "14.", ;
		Left = 8, ;
		Name = "Lbllabelcustom4", ;
		TabIndex = 24, ;
		Top = 74
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page3.Lbllabelcustom5' AS lbllabelcustom WITH ;
		Caption = "15.", ;
		Left = 8, ;
		Name = "Lbllabelcustom5", ;
		TabIndex = 30, ;
		Top = 95
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page3.Lbltextcustom2' AS lbltextcustom WITH ;
		Caption = "%", ;
		Left = 427, ;
		Name = "Lbltextcustom2", ;
		TabIndex = 5, ;
		Top = 10
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page3.Lbltextcustom3' AS lbltextcustom WITH ;
		Caption = "%", ;
		Left = 427, ;
		Name = "Lbltextcustom3", ;
		TabIndex = 11, ;
		Top = 31
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page3.Lbltextcustom4' AS lbltextcustom WITH ;
		Caption = "%", ;
		Left = 427, ;
		Name = "Lbltextcustom4", ;
		TabIndex = 17, ;
		Top = 52
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page3.Lbltextcustom5' AS lbltextcustom WITH ;
		Caption = "%", ;
		Left = 427, ;
		Name = "Lbltextcustom5", ;
		TabIndex = 23, ;
		Top = 73
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page3.Lbltextcustom6' AS lbltextcustom WITH ;
		Caption = "%", ;
		Left = 427, ;
		Name = "Lbltextcustom6", ;
		TabIndex = 29, ;
		Top = 94
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page3.txtcOwnerID11' AS txtquickfill WITH ;
		clistexpression = cownerid, ;
		clistworkarea = investor, ;
		Height = 20, ;
		Left = 50, ;
		MaxLength = 10, ;
		Name = "txtcOwnerID11", ;
		TabIndex = 2, ;
		Top = 8, ;
		Width = 78, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page3.txtcOwnerID12' AS txtquickfill WITH ;
		clistexpression = cownerid, ;
		clistworkarea = investor, ;
		Height = 20, ;
		Left = 50, ;
		MaxLength = 10, ;
		Name = "txtcOwnerID12", ;
		TabIndex = 8, ;
		Top = 29, ;
		Width = 78, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page3.txtcOwnerID13' AS txtquickfill WITH ;
		clistexpression = cownerid, ;
		clistworkarea = investor, ;
		Height = 20, ;
		Left = 50, ;
		MaxLength = 10, ;
		Name = "txtcOwnerID13", ;
		TabIndex = 14, ;
		Top = 50, ;
		Width = 78, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page3.txtcOwnerID14' AS txtquickfill WITH ;
		clistexpression = cownerid, ;
		clistworkarea = investor, ;
		Height = 20, ;
		Left = 50, ;
		MaxLength = 10, ;
		Name = "txtcOwnerID14", ;
		TabIndex = 20, ;
		Top = 71, ;
		Width = 78, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page3.txtcOwnerID15' AS txtquickfill WITH ;
		clistexpression = cownerid, ;
		clistworkarea = investor, ;
		Height = 20, ;
		Left = 50, ;
		MaxLength = 10, ;
		Name = "txtcOwnerID15", ;
		TabIndex = 26, ;
		Top = 92, ;
		Width = 78, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page3.txtcOwnName11' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 134, ;
		Name = "txtcOwnName11", ;
		TabIndex = 3, ;
		Top = 8, ;
		Width = 191, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page3.txtcOwnName12' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 134, ;
		Name = "txtcOwnName12", ;
		TabIndex = 9, ;
		Top = 29, ;
		Width = 191, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page3.txtcOwnName13' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 134, ;
		Name = "txtcOwnName13", ;
		TabIndex = 15, ;
		Top = 50, ;
		Width = 191, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page3.txtcOwnName14' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 134, ;
		Name = "txtcOwnName14", ;
		TabIndex = 21, ;
		Top = 71, ;
		Width = 191, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page3.txtcOwnName15' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 134, ;
		Name = "txtcOwnName15", ;
		TabIndex = 27, ;
		Top = 92, ;
		Width = 191, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page3.txtnAmount11' AS txttextboxcustom WITH ;
		Alignment = 3, ;
		Height = 20, ;
		InputMask = "999.9999999", ;
		Left = 331, ;
		Name = "txtnAmount11", ;
		SelectOnEntry = .T., ;
		TabIndex = 4, ;
		Top = 8, ;
		Value = 0, ;
		Width = 93, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page3.txtnAmount12' AS txttextboxcustom WITH ;
		Alignment = 3, ;
		Height = 20, ;
		InputMask = "999.9999999", ;
		Left = 331, ;
		Name = "txtnAmount12", ;
		SelectOnEntry = .T., ;
		TabIndex = 10, ;
		Top = 29, ;
		Value = 0, ;
		Width = 93, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page3.txtnAmount13' AS txttextboxcustom WITH ;
		Alignment = 3, ;
		Height = 20, ;
		InputMask = "999.9999999", ;
		Left = 331, ;
		Name = "txtnAmount13", ;
		SelectOnEntry = .T., ;
		TabIndex = 16, ;
		Top = 50, ;
		Value = 0, ;
		Width = 93, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page3.txtnAmount14' AS txttextboxcustom WITH ;
		Alignment = 3, ;
		Height = 20, ;
		InputMask = "999.9999999", ;
		Left = 331, ;
		Name = "txtnAmount14", ;
		SelectOnEntry = .T., ;
		TabIndex = 22, ;
		Top = 71, ;
		Value = 0, ;
		Width = 93, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page3.txtnAmount15' AS txttextboxcustom WITH ;
		Alignment = 3, ;
		Height = 20, ;
		InputMask = "999.9999999", ;
		Left = 331, ;
		Name = "txtnAmount15", ;
		SelectOnEntry = .T., ;
		TabIndex = 28, ;
		Top = 92, ;
		Value = 0, ;
		Width = 93, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page4.cmdOwner16' AS swlookupbutton WITH ;
		Left = 26, ;
		Name = "cmdOwner16", ;
		TabIndex = 40, ;
		Top = 8
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'pgfOwners.Page4.cmdOwner17' AS swlookupbutton WITH ;
		Left = 26, ;
		Name = "cmdOwner17", ;
		TabIndex = 45, ;
		Top = 29
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'pgfOwners.Page4.cmdOwner18' AS swlookupbutton WITH ;
		Left = 26, ;
		Name = "cmdOwner18", ;
		TabIndex = 50, ;
		Top = 50
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'pgfOwners.Page4.cmdOwner19' AS swlookupbutton WITH ;
		Left = 26, ;
		Name = "cmdOwner19", ;
		TabIndex = 55, ;
		Top = 71
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'pgfOwners.Page4.cmdOwner20' AS swlookupbutton WITH ;
		Left = 26, ;
		Name = "cmdOwner20", ;
		TabIndex = 60, ;
		Top = 92
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'pgfOwners.Page4.Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "16.", ;
		Left = 7, ;
		Name = "Lbllabelcustom1", ;
		Top = 11
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page4.Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "17.", ;
		Left = 7, ;
		Name = "Lbllabelcustom2", ;
		Top = 33
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page4.Lbllabelcustom3' AS lbllabelcustom WITH ;
		Caption = "18.", ;
		Left = 7, ;
		Name = "Lbllabelcustom3", ;
		Top = 53
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page4.Lbllabelcustom4' AS lbllabelcustom WITH ;
		Caption = "19.", ;
		Left = 7, ;
		Name = "Lbllabelcustom4", ;
		Top = 74
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page4.Lbllabelcustom5' AS lbllabelcustom WITH ;
		Caption = "20.", ;
		Left = 7, ;
		Name = "Lbllabelcustom5", ;
		Top = 95
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page4.Lbltextcustom10' AS lbltextcustom WITH ;
		Caption = "%", ;
		Left = 427, ;
		Name = "Lbltextcustom10", ;
		TabIndex = 59, ;
		Top = 73
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page4.Lbltextcustom11' AS lbltextcustom WITH ;
		Caption = "%", ;
		Left = 427, ;
		Name = "Lbltextcustom11", ;
		TabIndex = 64, ;
		Top = 94
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page4.Lbltextcustom7' AS lbltextcustom WITH ;
		Caption = "%", ;
		Left = 427, ;
		Name = "Lbltextcustom7", ;
		TabIndex = 44, ;
		Top = 10
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page4.Lbltextcustom8' AS lbltextcustom WITH ;
		Caption = "%", ;
		Left = 427, ;
		Name = "Lbltextcustom8", ;
		TabIndex = 49, ;
		Top = 31
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page4.Lbltextcustom9' AS lbltextcustom WITH ;
		Caption = "%", ;
		Left = 427, ;
		Name = "Lbltextcustom9", ;
		TabIndex = 54, ;
		Top = 52
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'pgfOwners.Page4.txtcOwnerID16' AS txtquickfill WITH ;
		clistexpression = cownerid, ;
		clistworkarea = investor, ;
		Height = 20, ;
		Left = 50, ;
		MaxLength = 10, ;
		Name = "txtcOwnerID16", ;
		TabIndex = 41, ;
		Top = 8, ;
		Width = 78, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page4.txtcOwnerID17' AS txtquickfill WITH ;
		clistexpression = cownerid, ;
		clistworkarea = investor, ;
		Height = 20, ;
		Left = 50, ;
		MaxLength = 10, ;
		Name = "txtcOwnerID17", ;
		TabIndex = 46, ;
		Top = 29, ;
		Width = 78, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page4.txtcOwnerID18' AS txtquickfill WITH ;
		clistexpression = cownerid, ;
		clistworkarea = investor, ;
		Height = 20, ;
		Left = 50, ;
		MaxLength = 10, ;
		Name = "txtcOwnerID18", ;
		TabIndex = 51, ;
		Top = 50, ;
		Width = 78, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page4.txtcOwnerID19' AS txtquickfill WITH ;
		clistexpression = cownerid, ;
		clistworkarea = investor, ;
		Height = 20, ;
		Left = 50, ;
		MaxLength = 10, ;
		Name = "txtcOwnerID19", ;
		TabIndex = 56, ;
		Top = 71, ;
		Width = 78, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page4.txtcOwnerID20' AS txtquickfill WITH ;
		clistexpression = cownerid, ;
		clistworkarea = investor, ;
		Height = 20, ;
		Left = 50, ;
		MaxLength = 10, ;
		Name = "txtcOwnerID20", ;
		TabIndex = 61, ;
		Top = 92, ;
		Width = 78, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page4.txtcOwnName16' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 134, ;
		Name = "txtcOwnName16", ;
		TabIndex = 42, ;
		Top = 8, ;
		Width = 191, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page4.txtcOwnName17' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 134, ;
		Name = "txtcOwnName17", ;
		TabIndex = 47, ;
		Top = 29, ;
		Width = 191, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page4.txtcOwnName18' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 134, ;
		Name = "txtcOwnName18", ;
		TabIndex = 52, ;
		Top = 50, ;
		Width = 191, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page4.txtcOwnName19' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 134, ;
		Name = "txtcOwnName19", ;
		TabIndex = 57, ;
		Top = 71, ;
		Width = 191, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page4.txtcOwnName20' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 134, ;
		Name = "txtcOwnName20", ;
		TabIndex = 62, ;
		Top = 92, ;
		Width = 191, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page4.txtnAmount16' AS txttextboxcustom WITH ;
		Alignment = 3, ;
		Height = 20, ;
		InputMask = "999.9999999", ;
		Left = 331, ;
		Name = "txtnAmount16", ;
		SelectOnEntry = .T., ;
		TabIndex = 43, ;
		Top = 8, ;
		Value = 0, ;
		Width = 93, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page4.txtnAmount17' AS txttextboxcustom WITH ;
		Alignment = 3, ;
		Height = 20, ;
		InputMask = "999.9999999", ;
		Left = 331, ;
		Name = "txtnAmount17", ;
		SelectOnEntry = .T., ;
		TabIndex = 48, ;
		Top = 29, ;
		Value = 0, ;
		Width = 93, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page4.txtnAmount18' AS txttextboxcustom WITH ;
		Alignment = 3, ;
		Height = 20, ;
		InputMask = "999.9999999", ;
		Left = 331, ;
		Name = "txtnAmount18", ;
		SelectOnEntry = .T., ;
		TabIndex = 53, ;
		Top = 50, ;
		Value = 0, ;
		Width = 93, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page4.txtnAmount19' AS txttextboxcustom WITH ;
		Alignment = 3, ;
		Height = 20, ;
		InputMask = "999.9999999", ;
		Left = 331, ;
		Name = "txtnAmount19", ;
		SelectOnEntry = .T., ;
		TabIndex = 58, ;
		Top = 71, ;
		Value = 0, ;
		Width = 93, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'pgfOwners.Page4.txtnAmount20' AS txttextboxcustom WITH ;
		Alignment = 3, ;
		Height = 20, ;
		InputMask = "999.9999999", ;
		Left = 331, ;
		Name = "txtnAmount20", ;
		SelectOnEntry = .T., ;
		TabIndex = 63, ;
		Top = 92, ;
		Value = 0, ;
		Width = 93, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'Runcombo1' AS runcombo WITH ;
		cshowwhat = R, ;
		Height = 20, ;
		Left = 193, ;
		lshownew = .F., ;
		Name = "Runcombo1", ;
		TabIndex = 19, ;
		Top = 400, ;
		Visible = .F., ;
		Width = 264, ;
		ZOrderSet = 21
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Shpshapecustom1' AS shpshapecustom WITH ;
		Height = 41, ;
		Left = 13, ;
		Name = "Shpshapecustom1", ;
		Top = 7, ;
		Width = 456, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'shpWellBox' AS shpshapecustom WITH ;
		Height = 41, ;
		Left = 13, ;
		Name = "shpWellBox", ;
		Top = 77, ;
		Visible = .F., ;
		Width = 456, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'txtcOwnerID' AS txtquickfill WITH ;
		clistexpression = cownerid, ;
		clistworkarea = investor, ;
		Height = 20, ;
		Left = 109, ;
		MaxLength = 10, ;
		Name = "txtcOwnerID", ;
		TabIndex = 3, ;
		Top = 19, ;
		Width = 78, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcOwnName' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 193, ;
		Name = "txtcOwnName", ;
		TabIndex = 4, ;
		Top = 19, ;
		Width = 252, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcWellID' AS txtquickfill WITH ;
		clistexpression = cwellid, ;
		clistworkarea = wells, ;
		Height = 20, ;
		Left = 109, ;
		MaxLength = 10, ;
		Name = "txtcWellID", ;
		TabIndex = 9, ;
		Top = 88, ;
		Visible = .F., ;
		Width = 78, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcWellName' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 193, ;
		Name = "txtcWellName", ;
		TabIndex = 10, ;
		Top = 88, ;
		Visible = .F., ;
		Width = 252, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtnTotal' AS txttextboxcustom WITH ;
		Alignment = 3, ;
		BackColor = 212,208,200, ;
		FontBold = .T., ;
		Height = 20, ;
		InputMask = "999.9999999", ;
		Left = 345, ;
		Name = "txtnTotal", ;
		SelectOnEntry = .T., ;
		TabIndex = 16, ;
		Top = 371, ;
		Value = 0, ;
		Width = 93, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE Activate
		ON KEY LABEL ESC _SCREEN.ACTIVEFORM.RELEASE()
		
		IF NOT this.lFirstTimeOpen &&  Only set the focus to the Owner ID field the first time
		   thisform.setnextcontrol(this.txtcOwnerID)
		   this.lFirstTimeOpen = .t.
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE calctotals
		LOCAL lntotal
		LOCAL llReturn, loError
		
		llReturn = .T.
		
		TRY
		    WITH THISFORM.pgfOwners  &&  Add up percentages, and update the summary box at the bottom of the screen
		
		        lntotal = .page1.txtnAmount1.VALUE + .page1.txtnAmount2.VALUE + .page1.txtnAmount3.VALUE + .page1.txtnAmount4.VALUE + .page1.txtnAmount5.VALUE +  ;
		            .page2.txtnAmount6.VALUE + .page2.txtnAmount7.VALUE + .page2.txtnAmount8.VALUE + .page2.txtnAmount9.VALUE + .page2.txtnAmount10.VALUE +  ;
		            .page3.txtnAmount11.VALUE + .page3.txtnAmount12.VALUE + .page3.txtnAmount13.VALUE + .page3.txtnAmount14.VALUE + .page3.txtnAmount15.VALUE +  ;
		            .page4.txtnAmount16.VALUE + .page4.txtnAmount17.VALUE + .page4.txtnAmount18.VALUE + .page4.txtnAmount19.VALUE + .page4.txtnAmount20.VALUE
		
		        THISFORM.txtnTotal.SET('value', lntotal)
		
		    ENDWITH
		CATCH TO loError
		    llReturn = .F.
		    DO errorlog WITH 'CalcTotals', loError.LINENO, 'DMDOITransfer', loError.ERRORNO, loError.MESSAGE, '', loError
		    MESSAGEBOX('Unable to process the transfer at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		          'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
	ENDPROC

	PROCEDURE checkinterests
		LOCAL lnProblem
		LOCAL llReturn, loError
		
		
		llReturn = .T.
		
		TRY
		*  Make sure there are no owners without percentages, percentages without owners, negative interests, or duplicate owners selected
		
		    IF EMPTY(THISFORM.txtcOwnerID.VALUE)
		        THISFORM.oMessage.Warning('You must select an original owner from which to transfer the interests.  Please correct before proceeding.')
		        llReturn = .F.
		        EXIT
		    ENDIF
		
		    IF THISFORM.chklSpecificWell.VALUE = .T. AND EMPTY(THISFORM.txtcWellID.VALUE)
		        THISFORM.oMessage.Warning('If choosing to transfer interests for a specific well, you must select a well from which to transfer the interests.  Please correct before proceeding.')
		        llReturn = .F.
		        EXIT
		    ENDIF
		
		    IF THISFORM.chklSpecificWell.VALUE = .T. AND THISFORM.chkownHist.VALUE = .F. &&  Make sure they have an interest in this well (only if they're NOT going to be dividing up suspense/owner history, too)
		        SELECT wellinv
		        LOCATE FOR cWellID == THISFORM.txtcWellID.VALUE AND cOwnerID == THISFORM.txtcOwnerID.VALUE
		        IF NOT FOUND()
		            THISFORM.oMessage.Warning('This owner has no interests in the selected well.  Please correct before proceeding.')
		            llReturn = .F.
		            EXIT
		        ENDIF
		    ENDIF
		
		    IF    (NOT EMPTY(THISFORM.pgfOwners.page1.txtcOwnerID1.VALUE)   AND THISFORM.pgfOwners.page1.txtnAmount1.VALUE   = 0) OR  ;
		            (NOT EMPTY(THISFORM.pgfOwners.page1.txtcOwnerID2.VALUE)   AND THISFORM.pgfOwners.page1.txtnAmount2.VALUE   = 0) OR  ;
		            (NOT EMPTY(THISFORM.pgfOwners.page1.txtcOwnerID3.VALUE)   AND THISFORM.pgfOwners.page1.txtnAmount3.VALUE   = 0) OR  ;
		            (NOT EMPTY(THISFORM.pgfOwners.page1.txtcOwnerID4.VALUE)   AND THISFORM.pgfOwners.page1.txtnAmount4.VALUE   = 0) OR  ;
		            (NOT EMPTY(THISFORM.pgfOwners.page1.txtcOwnerID5.VALUE)   AND THISFORM.pgfOwners.page1.txtnAmount5.VALUE   = 0) OR  ;
		            (NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID6.VALUE)   AND THISFORM.pgfOwners.page2.txtnAmount6.VALUE   = 0) OR  ;
		            (NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID7.VALUE)   AND THISFORM.pgfOwners.page2.txtnAmount7.VALUE   = 0) OR  ;
		            (NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID8.VALUE)   AND THISFORM.pgfOwners.page2.txtnAmount8.VALUE   = 0) OR  ;
		            (NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID9.VALUE)   AND THISFORM.pgfOwners.page2.txtnAmount9.VALUE   = 0) OR  ;
		            (NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE)  AND THISFORM.pgfOwners.page2.txtnAmount10.VALUE  = 0) OR  ;
		            (NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE)  AND THISFORM.pgfOwners.page3.txtnAmount11.VALUE  = 0) OR  ;
		            (NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE)  AND THISFORM.pgfOwners.page3.txtnAmount12.VALUE  = 0) OR  ;
		            (NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE)  AND THISFORM.pgfOwners.page3.txtnAmount13.VALUE  = 0) OR  ;
		            (NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE)  AND THISFORM.pgfOwners.page3.txtnAmount14.VALUE  = 0) OR  ;
		            (NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE)  AND THISFORM.pgfOwners.page3.txtnAmount15.VALUE  = 0) OR  ;
		            (NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE)  AND THISFORM.pgfOwners.page4.txtnAmount16.VALUE  = 0) OR  ;
		            (NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE)  AND THISFORM.pgfOwners.page4.txtnAmount17.VALUE  = 0) OR  ;
		            (NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE)  AND THISFORM.pgfOwners.page4.txtnAmount18.VALUE  = 0) OR  ;
		            (NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE)  AND THISFORM.pgfOwners.page4.txtnAmount19.VALUE  = 0) OR  ;
		            (NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE)  AND THISFORM.pgfOwners.page4.txtnAmount20.VALUE  = 0)
		
		        THISFORM.oMessage.Warning("There are owners who are chosen, but who don't have a percentage associated with them.  Please correct before proceeding.")
		        llReturn = .F.
		        EXIT
		    ENDIF
		
		    IF    (EMPTY(THISFORM.pgfOwners.page1.txtcOwnerID1.VALUE)  AND THISFORM.pgfOwners.page1.txtnAmount1.VALUE  <> 0) OR  ;
		            (EMPTY(THISFORM.pgfOwners.page1.txtcOwnerID2.VALUE)  AND THISFORM.pgfOwners.page1.txtnAmount2.VALUE  <> 0) OR  ;
		            (EMPTY(THISFORM.pgfOwners.page1.txtcOwnerID3.VALUE)  AND THISFORM.pgfOwners.page1.txtnAmount3.VALUE  <> 0) OR  ;
		            (EMPTY(THISFORM.pgfOwners.page1.txtcOwnerID4.VALUE)  AND THISFORM.pgfOwners.page1.txtnAmount4.VALUE  <> 0) OR  ;
		            (EMPTY(THISFORM.pgfOwners.page1.txtcOwnerID5.VALUE)  AND THISFORM.pgfOwners.page1.txtnAmount5.VALUE  <> 0) OR  ;
		            (EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID6.VALUE)  AND THISFORM.pgfOwners.page2.txtnAmount6.VALUE  <> 0) OR  ;
		            (EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID7.VALUE)  AND THISFORM.pgfOwners.page2.txtnAmount7.VALUE  <> 0) OR  ;
		            (EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID8.VALUE)  AND THISFORM.pgfOwners.page2.txtnAmount8.VALUE  <> 0) OR  ;
		            (EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID9.VALUE)  AND THISFORM.pgfOwners.page2.txtnAmount9.VALUE  <> 0) OR  ;
		            (EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE) AND THISFORM.pgfOwners.page2.txtnAmount10.VALUE <> 0) OR  ;
		            (EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE) AND THISFORM.pgfOwners.page3.txtnAmount11.VALUE <> 0) OR  ;
		            (EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE) AND THISFORM.pgfOwners.page3.txtnAmount12.VALUE <> 0) OR  ;
		            (EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE) AND THISFORM.pgfOwners.page3.txtnAmount13.VALUE <> 0) OR  ;
		            (EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE) AND THISFORM.pgfOwners.page3.txtnAmount14.VALUE <> 0) OR  ;
		            (EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE) AND THISFORM.pgfOwners.page3.txtnAmount15.VALUE <> 0) OR  ;
		            (EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE) AND THISFORM.pgfOwners.page4.txtnAmount16.VALUE <> 0) OR  ;
		            (EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE) AND THISFORM.pgfOwners.page4.txtnAmount17.VALUE <> 0) OR  ;
		            (EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE) AND THISFORM.pgfOwners.page4.txtnAmount18.VALUE <> 0) OR  ;
		            (EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE) AND THISFORM.pgfOwners.page4.txtnAmount19.VALUE <> 0) OR  ;
		            (EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE) AND THISFORM.pgfOwners.page4.txtnAmount20.VALUE <> 0)
		
		        THISFORM.oMessage.Warning("There is a percentage entered, but no owner is associated with it.  Please correct before proceeding.")
		        llReturn = .F.
		        EXIT
		    ENDIF
		
		    IF THISFORM.pgfOwners.page1.txtnAmount1.VALUE < 0 OR THISFORM.pgfOwners.page1.txtnAmount2.VALUE  < 0 OR THISFORM.pgfOwners.page1.txtnAmount3.VALUE  < 0  ;
		            OR THISFORM.pgfOwners.page1.txtnAmount4.VALUE  < 0 OR THISFORM.pgfOwners.page1.txtnAmount5.VALUE  < 0 OR THISFORM.pgfOwners.page2.txtnAmount6.VALUE  < 0  ;
		            OR THISFORM.pgfOwners.page2.txtnAmount7.VALUE  < 0 OR THISFORM.pgfOwners.page2.txtnAmount8.VALUE  < 0 OR THISFORM.pgfOwners.page2.txtnAmount9.VALUE  < 0  ;
		            OR THISFORM.pgfOwners.page2.txtnAmount10.VALUE  < 0 OR THISFORM.pgfOwners.page3.txtnAmount11.VALUE < 0 OR THISFORM.pgfOwners.page3.txtnAmount12.VALUE < 0 OR  ;
		            THISFORM.pgfOwners.page3.txtnAmount13.VALUE < 0 OR THISFORM.pgfOwners.page3.txtnAmount14.VALUE < 0 OR THISFORM.pgfOwners.page3.txtnAmount15.VALUE < 0 OR  ;
		            THISFORM.pgfOwners.page4.txtnAmount16.VALUE < 0 OR THISFORM.pgfOwners.page4.txtnAmount17.VALUE < 0 OR THISFORM.pgfOwners.page4.txtnAmount18.VALUE < 0 OR  ;
		            THISFORM.pgfOwners.page4.txtnAmount19.VALUE < 0 OR THISFORM.pgfOwners.page4.txtnAmount20.VALUE < 0
		        THISFORM.oMessage.Warning('You cannot enter a negative percentage.  Please correct before proceeding.')
		        llReturn = .F.
		        EXIT
		    ENDIF
		
		    lnProblem = .F.
		
		    DO CASE
		        CASE NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE) AND EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE)
		            lnProblem = .T.
		        CASE NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE) AND EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE)
		            lnProblem = .T.
		        CASE NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE) AND EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE)
		            lnProblem = .T.
		        CASE NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE) AND EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE)
		            lnProblem = .T.
		        CASE NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE) AND EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE)
		            lnProblem = .T.
		        CASE NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE) AND EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE)
		            lnProblem = .T.
		        CASE NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE) AND EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE)
		            lnProblem = .T.
		        CASE NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE) AND EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE)
		            lnProblem = .T.
		        CASE NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE) AND EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE)
		            lnProblem = .T.
		        CASE NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE) AND EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE)
		            lnProblem = .T.
		        CASE NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE) AND EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID9.VALUE)
		            lnProblem = .T.
		        CASE NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID9.VALUE) AND EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID8.VALUE)
		            lnProblem = .T.
		        CASE NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID8.VALUE) AND EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID7.VALUE)
		            lnProblem = .T.
		        CASE NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID7.VALUE) AND EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID6.VALUE)
		            lnProblem = .T.
		        CASE NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID6.VALUE) AND EMPTY(THISFORM.pgfOwners.page1.txtcOwnerID5.VALUE)
		            lnProblem = .T.
		        CASE NOT EMPTY(THISFORM.pgfOwners.page1.txtcOwnerID5.VALUE) AND EMPTY(THISFORM.pgfOwners.page1.txtcOwnerID4.VALUE)
		            lnProblem = .T.
		        CASE NOT EMPTY(THISFORM.pgfOwners.page1.txtcOwnerID4.VALUE) AND EMPTY(THISFORM.pgfOwners.page1.txtcOwnerID3.VALUE)
		            lnProblem = .T.
		        CASE NOT EMPTY(THISFORM.pgfOwners.page1.txtcOwnerID3.VALUE) AND EMPTY(THISFORM.pgfOwners.page1.txtcOwnerID2.VALUE)
		            lnProblem = .T.
		        CASE NOT EMPTY(THISFORM.pgfOwners.page1.txtcOwnerID2.VALUE) AND EMPTY(THISFORM.pgfOwners.page1.txtcOwnerID1.VALUE)
		            lnProblem = .T.
		    ENDCASE
		
		    IF lnProblem = .T.  &&  There was a gap in the list of owners
		        THISFORM.oMessage.Warning('There was an owner skipped when entering the list of owners among which to divide the interests.  Please correct before proceeding.')
		        llReturn = .F.
		        EXIT
		    ENDIF
		
		    DO CASE  &&  Check for the same owner entered twice
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID1.VALUE == THISFORM.pgfOwners.page1.txtcOwnerID2.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page1.txtcOwnerID2.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID1.VALUE == THISFORM.pgfOwners.page1.txtcOwnerID3.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page1.txtcOwnerID3.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID1.VALUE == THISFORM.pgfOwners.page1.txtcOwnerID4.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page1.txtcOwnerID4.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID1.VALUE == THISFORM.pgfOwners.page1.txtcOwnerID5.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page1.txtcOwnerID5.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID1.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID6.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID6.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID1.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID7.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID7.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID1.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID8.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID8.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID1.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID9.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID9.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID1.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID1.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID1.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID1.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID1.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID1.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID1.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID1.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID1.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID1.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID1.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID2.VALUE == THISFORM.pgfOwners.page1.txtcOwnerID3.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page1.txtcOwnerID3.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID2.VALUE == THISFORM.pgfOwners.page1.txtcOwnerID4.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page1.txtcOwnerID4.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID2.VALUE == THISFORM.pgfOwners.page1.txtcOwnerID5.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page1.txtcOwnerID5.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID2.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID6.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID6.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID2.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID7.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID7.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID2.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID8.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID8.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID2.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID9.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID9.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID2.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID2.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID2.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID2.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID2.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID2.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID2.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID2.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID2.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID2.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID2.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID3.VALUE == THISFORM.pgfOwners.page1.txtcOwnerID4.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page1.txtcOwnerID4.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID3.VALUE == THISFORM.pgfOwners.page1.txtcOwnerID5.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page1.txtcOwnerID5.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID3.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID6.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID6.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID3.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID7.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID7.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID3.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID8.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID8.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID3.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID9.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID9.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID3.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID3.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID3.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID3.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID3.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID3.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID3.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID3.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID3.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID3.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID3.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID4.VALUE == THISFORM.pgfOwners.page1.txtcOwnerID5.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page1.txtcOwnerID5.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID4.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID6.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID6.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID4.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID7.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID7.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID4.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID8.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID8.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID4.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID9.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID9.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID4.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID4.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID4.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID4.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID4.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID4.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID4.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID4.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID4.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID4.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID4.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID5.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID6.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID6.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID5.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID7.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID7.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID5.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID8.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID8.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID5.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID9.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID9.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID5.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID5.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID5.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID5.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID5.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID5.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID5.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID5.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID5.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID5.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page1.txtcOwnerID5.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID6.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID7.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID7.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID6.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID8.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID8.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID6.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID9.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID9.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID6.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID6.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID6.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID6.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID6.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID6.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID6.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID6.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID6.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID6.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID6.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID7.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID8.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID8.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID7.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID9.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID9.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID7.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID7.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID7.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID7.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID7.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID7.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID7.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID7.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID7.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID7.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID7.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID8.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID9.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID9.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID8.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID8.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID8.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID8.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID8.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID8.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID8.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID8.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID8.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID8.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID8.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID9.VALUE == THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID9.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID9.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID9.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID9.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID9.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID9.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID9.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID9.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID9.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID9.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE == THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE)
		            lnProblem = .T.
		        CASE THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE == THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE AND NOT EMPTY(THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE)
		            lnProblem = .T.
		    ENDCASE
		
		    IF lnProblem = .T.
		        THISFORM.oMessage.Warning('You cannot select the same owner twice.  Please correct before proceeding.')
		        llReturn = .F.
		    ENDIF
		CATCH TO loError
		    llReturn = .F.
		    DO errorlog WITH 'CheckInterests', loError.LINENO, 'DMDOITransfer', loError.ERRORNO, loError.MESSAGE, '', loError
		    MESSAGEBOX('Unable to process the transfer at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		          'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
	ENDPROC

	PROCEDURE createlog		&& Creates log file of changes
		LOCAL lcWellID
		LOCAL lAll, lAnyDOI, lAnyHist, lAnySusp, lHistory, lcGroup, lcOwnerID, lcOwnerID1, lcOwnerID10
		LOCAL lcOwnerID11, lcOwnerID12, lcOwnerID13, lcOwnerID14, lcOwnerID15, lcOwnerID16, lcOwnerID17
		LOCAL lcOwnerID18, lcOwnerID19, lcOwnerID2, lcOwnerID20, lcOwnerID3, lcOwnerID4, lcOwnerID5
		LOCAL lcOwnerID6, lcOwnerID7, lcOwnerID8, lcOwnerID9, lcRunYear, lcRunno, lcTypeInv, llReturn
		LOCAL lnAmount1, lnAmount10, lnAmount11, lnAmount12, lnAmount13, lnAmount14, lnAmount15, lnAmount16
		LOCAL lnAmount17, lnAmount18, lnAmount19, lnAmount2, lnAmount20, lnAmount3, lnAmount4, lnAmount5
		LOCAL lnAmount6, lnAmount7, lnAmount8, lnAmount9, lnRunno, loError
		LOCAL Interest1, Interest10, Interest11, Interest12, Interest13, Interest14, Interest15
		LOCAL Interest16, Interest17, Interest18, Interest19, Interest2, Interest20, Interest3, Interest4
		LOCAL Interest5, Interest6, Interest7, Interest8, Interest9, cOrigOwner, cOwnerID1, cOwnerID10
		LOCAL cOwnerID11, cOwnerID12, cOwnerID13, cOwnerID14, cOwnerID15, cOwnerID16, cOwnerID17
		LOCAL cOwnerID18, cOwnerID19, cOwnerID2, cOwnerID20, cOwnerID3, cOwnerID4, cOwnerID5, cOwnerID6
		LOCAL cOwnerID7, cOwnerID8, cOwnerID9, cRunNo, cTime, cTypeInv, cUser, cWellID, dDate
		
		llReturn = .T.
		
		TRY
		    lcOwnerID   = THISFORM.txtcOwnerID.VALUE  &&  Store all new owners and percentages, dividing by 100 to arrive at the decimal amounts
		    lcWellID    = THISFORM.txtcWellID.VALUE
		    lcOwnerID1  = THISFORM.pgfOwners.page1.txtcOwnerID1.VALUE
		    lcOwnerID2  = THISFORM.pgfOwners.page1.txtcOwnerID2.VALUE
		    lcOwnerID3  = THISFORM.pgfOwners.page1.txtcOwnerID3.VALUE
		    lcOwnerID4  = THISFORM.pgfOwners.page1.txtcOwnerID4.VALUE
		    lcOwnerID5  = THISFORM.pgfOwners.page1.txtcOwnerID5.VALUE
		    lcOwnerID6  = THISFORM.pgfOwners.page2.txtcOwnerID6.VALUE
		    lcOwnerID7  = THISFORM.pgfOwners.page2.txtcOwnerID7.VALUE
		    lcOwnerID8  = THISFORM.pgfOwners.page2.txtcOwnerID8.VALUE
		    lcOwnerID9  = THISFORM.pgfOwners.page2.txtcOwnerID9.VALUE
		    lcOwnerID10 = THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE
		    lcOwnerID11 = THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE
		    lcOwnerID12 = THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE
		    lcOwnerID13 = THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE
		    lcOwnerID14 = THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE
		    lcOwnerID15 = THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE
		    lcOwnerID16 = THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE
		    lcOwnerID17 = THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE
		    lcOwnerID18 = THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE
		    lcOwnerID19 = THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE
		    lcOwnerID20 = THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE
		    lcRunYear   = THISFORM.runCOMBO1.LISTITEM(THISFORM.runCOMBO1.LISTITEMID, 2)
		    lnRunno     = VAL(THISFORM.runCOMBO1.LISTITEM(THISFORM.runCOMBO1.LISTITEMID, 3))
		    lcRunno     = PADL(TRANSFORM(lnRunno), 3, '0')  &&  Character string for the group, padded with zeroes, so it will sort right
		    lcGroup     = THISFORM.runCOMBO1.LISTITEM(THISFORM.runCOMBO1.LISTITEMID, 4)
		    lcTypeInv   = THISFORM.cboTypeInv.VALUE
		    lnAmount1   = THISFORM.pgfOwners.page1.txtnAmount1.VALUE * .01
		    lnAmount2   = THISFORM.pgfOwners.page1.txtnAmount2.VALUE * .01
		    lnAmount3   = THISFORM.pgfOwners.page1.txtnAmount3.VALUE * .01
		    lnAmount4   = THISFORM.pgfOwners.page1.txtnAmount4.VALUE * .01
		    lnAmount5   = THISFORM.pgfOwners.page1.txtnAmount5.VALUE * .01
		    lnAmount6   = THISFORM.pgfOwners.page2.txtnAmount6.VALUE * .01
		    lnAmount7   = THISFORM.pgfOwners.page2.txtnAmount7.VALUE * .01
		    lnAmount8   = THISFORM.pgfOwners.page2.txtnAmount8.VALUE * .01
		    lnAmount9   = THISFORM.pgfOwners.page2.txtnAmount9.VALUE * .01
		    lnAmount10  = THISFORM.pgfOwners.page2.txtnAmount10.VALUE * .01
		    lnAmount11  = THISFORM.pgfOwners.page3.txtnAmount11.VALUE * .01
		    lnAmount12  = THISFORM.pgfOwners.page3.txtnAmount12.VALUE * .01
		    lnAmount13  = THISFORM.pgfOwners.page3.txtnAmount13.VALUE * .01
		    lnAmount14  = THISFORM.pgfOwners.page3.txtnAmount14.VALUE * .01
		    lnAmount15  = THISFORM.pgfOwners.page3.txtnAmount15.VALUE * .01
		    lnAmount16  = THISFORM.pgfOwners.page4.txtnAmount16.VALUE * .01
		    lnAmount17  = THISFORM.pgfOwners.page4.txtnAmount17.VALUE * .01
		    lnAmount18  = THISFORM.pgfOwners.page4.txtnAmount18.VALUE * .01
		    lnAmount19  = THISFORM.pgfOwners.page4.txtnAmount19.VALUE * .01
		    lnAmount20  = THISFORM.pgfOwners.page4.txtnAmount20.VALUE * .01
		
		    WAIT WINDOW NOWAIT 'Creating Log of Changes...'
		
		    CREATE CURSOR TransferLogTemp  ;
		        (dDate         d,      ;
		          cTime          c(8),   ;
		          cUser          c(20),  ;
		          cOrigOwner     c(10),  ;
		          lAll           L,      ;
		          cWellID        c(10),  ;
		          cTypeInv       c(1),   ;
		          cOwnerID1      c(10),  ;
		          Interest1      N(11, 7),  ;
		          cOwnerID2      c(10),  ;
		          Interest2      N(11, 7),  ;
		          cOwnerID3      c(10),  ;
		          Interest3      N(11, 7),  ;
		          cOwnerID4      c(10),  ;
		          Interest4      N(11, 7),  ;
		          cOwnerID5      c(10),  ;
		          Interest5      N(11, 7),  ;
		          cOwnerID6      c(10),  ;
		          Interest6      N(11, 7),  ;
		          cOwnerID7      c(10),  ;
		          Interest7      N(11, 7),  ;
		          cOwnerID8      c(10),  ;
		          Interest8      N(11, 7),  ;
		          cOwnerID9      c(10),  ;
		          Interest9      N(11, 7),  ;
		          cOwnerID10     c(10),  ;
		          Interest10     N(11, 7),  ;
		          cOwnerID11     c(10),  ;
		          Interest11     N(11, 7),  ;
		          cOwnerID12     c(10),  ;
		          Interest12     N(11, 7),  ;
		          cOwnerID13     c(10),  ;
		          Interest13     N(11, 7),  ;
		          cOwnerID14     c(10),  ;
		          Interest14     N(11, 7),  ;
		          cOwnerID15     c(10),  ;
		          Interest15     N(11, 7),  ;
		          cOwnerID16     c(10),  ;
		          Interest16     N(11, 7),  ;
		          cOwnerID17     c(10),  ;
		          Interest17     N(11, 7),  ;
		          cOwnerID18     c(10),  ;
		          Interest18     N(11, 7),  ;
		          cOwnerID19     c(10),  ;
		          Interest19     N(11, 7),  ;
		          cOwnerID20     c(10),  ;
		          Interest20     N(11, 7),  ;
		          lHistory       L,        ;
		          cRunNo         c(33),  ;
		          lAnyDOI        L,  ;
		          lAnyHist       L,  ;
		          lAnySusp       L)
		
		    m.dDate      = DATE()
		    m.cTime      = TIME()
		    m.cUser      = m.goapp.cUser
		    m.cOrigOwner = THISFORM.txtcOwnerID.VALUE
		    m.lAll       = THISFORM.chklAllInterests.VALUE
		    m.cWellID    = lcWellID
		    m.cTypeInv   = lcTypeInv
		    m.cOwnerID1  = lcOwnerID1
		    m.Interest1  = lnAmount1 * 100
		    m.cOwnerID2  = lcOwnerID2
		    m.Interest2  = lnAmount2 * 100
		    m.cOwnerID3  = lcOwnerID3
		    m.Interest3  = lnAmount3 * 100
		    m.cOwnerID4  = lcOwnerID4
		    m.Interest4  = lnAmount4 * 100
		    m.cOwnerID5  = lcOwnerID5
		    m.Interest5  = lnAmount5 * 100
		    m.cOwnerID6  = lcOwnerID6
		    m.Interest6  = lnAmount6 * 100
		    m.cOwnerID7  = lcOwnerID7
		    m.Interest7  = lnAmount7 * 100
		    m.cOwnerID8  = lcOwnerID8
		    m.Interest8  = lnAmount8 * 100
		    m.cOwnerID9  = lcOwnerID9
		    m.Interest9  = lnAmount9 * 100
		    m.cOwnerID10 = lcOwnerID10
		    m.Interest10 = lnAmount10 * 100
		    m.cOwnerID11 = lcOwnerID11
		    m.Interest11 = lnAmount11 * 100
		    m.cOwnerID12 = lcOwnerID12
		    m.Interest12 = lnAmount12 * 100
		    m.cOwnerID13 = lcOwnerID13
		    m.Interest13 = lnAmount13 * 100
		    m.cOwnerID14 = lcOwnerID14
		    m.Interest14 = lnAmount14 * 100
		    m.cOwnerID15 = lcOwnerID15
		    m.Interest15 = lnAmount15 * 100
		    m.cOwnerID16 = lcOwnerID16
		    m.Interest16 = lnAmount16 * 100
		    m.cOwnerID17 = lcOwnerID17
		    m.Interest17 = lnAmount17 * 100
		    m.cOwnerID18 = lcOwnerID18
		    m.Interest18 = lnAmount18 * 100
		    m.cOwnerID19 = lcOwnerID19
		    m.Interest19 = lnAmount19 * 100
		    m.cOwnerID20 = lcOwnerID20
		    m.Interest20 = lnAmount20 * 100
		    m.lHistory   = (THISFORM.chkOwnHist.VALUE OR THISFORM.chksuspHist.VALUE)
		    m.cRunNo     = THISFORM.runCOMBO1.LISTITEM(THISFORM.runCOMBO1.LISTITEMID, 1)
		    m.lAnyDOI    = THISFORM.lAnyDOIRecords
		    m.lAnyHist   = THISFORM.lAnyHistRecords
		    m.lAnySusp   = THISFORM.lAnySuspRecords
		
		    INSERT INTO TransferLogTemp FROM MEMVAR
		
		    IF NOT FILE(ALLT(m.goapp.cDataFilePath) + 'transferlog.dbf')
		        SELECT TransferLogTemp
		        COPY TO ALLT(m.goapp.cDataFilePath) + 'transferlog'
		    ELSE
		        IF NOT USED('transferlog')
		            USE ALLT(m.goapp.cDataFilePath) + 'transferlog' IN 0
		        ENDIF
		        SELECT transferlog
		        APPEND FROM DBF('transferlogtemp')
		        USE IN transferlog
		    ENDIF
		    USE IN TransferLogTemp
		CATCH TO loError
		    llReturn = .F.
		    DO errorlog WITH 'CreateLog', loError.LINENO, 'DMDOITransfer', loError.ERRORNO, loError.MESSAGE, '', loError
		    MESSAGEBOX('Unable to process the transfer at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		          'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
	ENDPROC

	PROCEDURE Deactivate
		ON KEY LABEL ESC 
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE Destroy
		DODEFAULT()
		
		IF USED('changes')
		   USE IN changes
		ENDIF
		
	ENDPROC

	PROCEDURE Init
		DODEFAULT()
		IF FILE('datafiles\doisusp.txt')
		   thisform.chksuspHist.Visible = .t.
		   thisform.lSuspHist = .t.
		ELSE
		   thisform.chksuspHist.Visible = .f.
		   thisform.lSuspHist = .F.
		ENDIF
		
		THISFORM.oRegistry = FindGlobalObject('cmRegistry')
		
	ENDPROC

	PROCEDURE splitemup
		PARA  tlPreview
		
		LOCAL lcOwnerID, lcWellID, lcOwnerID1, lcOwnerID2, lcOwnerID3, lcOwnerID4, lcOwnerID5
		LOCAL lcOwnerID6, lcOwnerID7, lcOwnerID8, lcOwnerID9, lcOwnerID10, lnCount
		LOCAL lcOwnerID11, lcOwnerID12, lcOwnerID13, lcOwnerID14, lcOwnerID15, lcOwnerID16,  lcOwnerID17, lcOwnerID18, lcOwnerID19, lcOwnerID20
		LOCAL lnAmount1, lnAmount2, lnAmount3, lnAmount4, lnAmount5, lnAmount6, lnAmount7, lnAmount8, lnAmount9, lnAmount10
		LOCAL lnAmount11, lnAmount12, lnAmount13, lnAmount14, lnAmount15, lnAmount16, lnAmount17, lnAmount18, lnAmount19, lnAmount20
		LOCAL lnRevOil, lnRevGas, lnRevOth, lnRevTrp, lnRevMisc1, lnRevMisc2, lnWorkInt, lnIntClass1, lnIntClass2
		LOCAL lnIntClass3, lnIntClass4, lnIntClass5, lnBCPInt, lnACPInt, lnAPOInt, lnRevTax1, lnRevTax2, lnRevTax3
		LOCAL lnRevTax4, lnRevTax5, lnRevTax6, lnRevTax7, lnRevTax8, lnRevTax9, lnRevTax10, lnRevTax11, lnRevTax12
		LOCAL lnRevOilR, lnRevGasR, lnRevOthR, lnRevTrpR, lnRevMisc1R, lnRevMisc2R, lnWorkIntR, lnIntClass1R, lnIntClass2R  &&  Running total variables
		LOCAL lnIntClass3R, lnIntClass4R, lnIntClass5R, lnBCPIntR, lnACPIntR, lnAPOIntR, lnRevTax1R, lnRevTax2R, lnRevTax3R
		LOCAL lnRevTax4R, lnRevTax5R, lnRevTax6R, lnRevTax7R, lnRevTax8R, lnRevTax9R, lnRevTax10R, lnRevTax11R, lnRevTax12R, lnFlatRate, lnFlatRateR
		LOCAL lnIncome, lnIncomeR, lnExpenses, lnExpensesR, lnTaxWith, lnTaxWithR, lnBackWith, lnBackWithR, lnAmount, lnAmountR
		LOCAL lnMktgExp, lnMktgExpR, lnSevTaxes, lnSevTaxesR, lnExpense, lnExpenseR, lnNetCheck, lnNetCheckR, lnTotalE1, lnTotalE1R
		LOCAL lnTotalE2, lnTotalE2R, lnTotalE3, lnTotalE3R, lnTotalE4, lnTotalE4R, lnTotalE5, lnTotalE5R, lnTotalEA, lnTotalEAR
		LOCAL lnTotalEB, lnTotalEBR, lnOilRev, lnOilRevR, lnGasRev, lnGasRevR, lnOthRev, lnOthRevR, lnTrpRev, lnTrpRevR
		LOCAL lnMiscRev1, lnMiscRev1R, lnMiscRev2, lnMiscRev2R, lnGather, lnGatherR, lnCompress, lnCompressR
		LOCAL lnOilTax1, lnOilTax1R, lnOilTax2, lnOilTax2R, lnOilTax3, lnOilTax3R, lnOilTax4, lnOilTax4R
		LOCAL lnGasTax1, lnGasTax1R, lnGasTax2, lnGasTax2R, lnGasTax3, lnGasTax3R, lnGasTax4, lnGasTax4R, llDiffState, llAll, llSpecific
		LOCAL lnOthTax1, lnOthTax1R, lnOthTax2, lnOthTax2R, lnOthTax3, lnOthTax3R, lnOthTax4, lnOthTax4R, lcTypeInv, llPreview, llIntegGL, llFoundCheck
		LOCAL lOnHold, lcCount, lcGroup, lcRunYear, lcRunno, lcScanFor, lcX, llAnyDOIRecords, llReturn
		LOCAL llSameOwner, lnNewPct, lnRecno, lnRunno, lnX, loError
		LOCAL cOwnName, cOwnState, cOwnerID, cRptGroup, cWellName, cidwinv, nACPInt, nAPOInt, nBCPInt
		LOCAL nFlatRate, nIntClass1, nIntClass2, nIntClass3, nIntClass4, nIntClass5, nRevGas, nRevMisc1
		LOCAL nRevMisc2, nRevOil, nRevOth, nRevTRP, nRevTax1, nRevTax10, nRevTax11, nRevTax12, nRevTax2
		LOCAL nRevTax3, nRevTax4, nRevTax5, nRevTax6, nRevTax7, nRevTax8, nRevTax9, nWorkInt, lnPlugPct, lnPlugPctR
		PRIV  llPreview
		
		#DEFINE BUFFERED   .T.
		
		llReturn = .T.
		
		TRY
		    STORE 0 TO lnRevOil, lnRevGas, lnRevOth, lnRevTrp, lnRevMisc1, lnRevMisc2, lnWorkInt, lnIntClass1, lnIntClass2,  ;
		        lnIntClass3, lnIntClass4, lnIntClass5, lnBCPInt, lnACPInt, lnAPOInt, lnRevTax1, lnRevTax2, lnRevTax3,  ;
		        lnRevTax4, lnRevTax5, lnRevTax6, lnRevTax7, lnRevTax8, lnRevTax9, lnRevTax10, lnRevTax11, lnRevTax12,  ;
		        lnRevOilR, lnRevGasR, lnRevOthR, lnRevTrpR, lnRevMisc1R, lnRevMisc2R, lnWorkIntR, lnIntClass1R, lnIntClass2R,  ;
		        lnIntClass3R, lnIntClass4R, lnIntClass5R, lnBCPIntR, lnACPIntR, lnAPOIntR, lnRevTax1R, lnRevTax2R, lnRevTax3R,  ;
		        lnRevTax4R, lnRevTax5R, lnRevTax6R, lnRevTax7R, lnRevTax8R, lnRevTax9R, lnRevTax10R, lnRevTax11R, lnRevTax12R, lnFlatRate, lnFlatRateR,  ;
		        lnIncome, lnIncomeR, lnExpenses, lnExpensesR, lnTaxWith, lnTaxWithR, lnBackWith, lnBackWithR, lnAmount, lnAmountR,  ;
		        lnMktgExp, lnMktgExpR, lnSevTaxes, lnSevTaxesR, lnExpense, lnExpenseR, lnNetCheck, lnNetCheckR, lnTotalE1, lnTotalE1R,  ;
		        lnTotalE2, lnTotalE2R, lnTotalE3, lnTotalE3R, lnTotalE4, lnTotalE4R, lnTotalE5, lnTotalE5R, lnTotalEA, lnTotalEAR,  ;
		        lnTotalEB, lnTotalEBR, lnOilRev, lnOilRevR, lnGasRev, lnGasRevR, lnOthRev, lnOthRevR, lnTrpRev, lnTrpRevR,  ;
		        lnMiscRev1, lnMiscRev1R, lnMiscRev2, lnMiscRev2R, lnGather, lnGatherR, lnCompress, lnCompressR, ;
		        lnOilTax1, lnOilTax1R, lnOilTax2, lnOilTax2R, lnOilTax3, lnOilTax3R, lnOilTax4, lnOilTax4R,  ;
		        lnGasTax1, lnGasTax1R, lnGasTax2, lnGasTax2R, lnGasTax3, lnGasTax3R, lnGasTax4, lnGasTax4R,  ;
		        lnOthTax1, lnOthTax1R, lnOthTax2, lnOthTax2R, lnOthTax3, lnOthTax3R, lnOthTax4, lnOthTax4R, lnPlugPct, lnPlugPctR
		
		    THISFORM.lAnyDOIRecords  = .F.
		    THISFORM.lAnyHistRecords = .F.
		    THISFORM.lAnySuspRecords = .F.
		
		    llPreview   = tlPreview
		    llDiffState = .F.
		    m.cOwnState = ''
		    llSpecific  = THISFORM.chklSpecificWell.VALUE
		
		**  Setting for whether to transfer all past runs
		    IF THISFORM.chkOwnHist.VALUE = .T. AND THISFORM.runCOMBO1.LISTITEM(THISFORM.runCOMBO1.LISTITEMID, 1) = '** All Past Data **'
		        llAll = .T.
		    ENDIF
		
		    WAIT WIND NOWAIT 'Transferring Data, please wait...'
		
		* Make sure the tables are opened properly
		    swselect('wellinv', BUFFERED)
		    swselect('disbhist', BUFFERED)
		    swselect('ownpcts', BUFFERED)
		    swselect('suspense', BUFFERED)
		    swselect('sysctl')
		    swselect('checks')
		    swselect('investor')
		    swselect('wells')
		
		    IF NOT USED('wellinv1')
		        USE wellinv AGAIN IN 0 ALIAS wellinv1
		    ENDIF
		
		    IF NOT USED('disbhist1')
		        USE disbhist AGAIN IN 0 ALIAS disbhist1
		    ENDIF
		
		    IF NOT USED('suspense1')
		        USE suspense AGAIN IN 0 ALIAS suspense1
		    ENDIF
		
		
		    lcOwnerID   = THISFORM.txtcOwnerID.VALUE  &&  Store all new owners and percentages, dividing by 100 to arrive at the decimal amounts
		    lcWellID    = THISFORM.txtcWellID.VALUE
		    lcOwnerID1  = THISFORM.pgfOwners.page1.txtcOwnerID1.VALUE
		    lcOwnerID2  = THISFORM.pgfOwners.page1.txtcOwnerID2.VALUE
		    lcOwnerID3  = THISFORM.pgfOwners.page1.txtcOwnerID3.VALUE
		    lcOwnerID4  = THISFORM.pgfOwners.page1.txtcOwnerID4.VALUE
		    lcOwnerID5  = THISFORM.pgfOwners.page1.txtcOwnerID5.VALUE
		    lcOwnerID6  = THISFORM.pgfOwners.page2.txtcOwnerID6.VALUE
		    lcOwnerID7  = THISFORM.pgfOwners.page2.txtcOwnerID7.VALUE
		    lcOwnerID8  = THISFORM.pgfOwners.page2.txtcOwnerID8.VALUE
		    lcOwnerID9  = THISFORM.pgfOwners.page2.txtcOwnerID9.VALUE
		    lcOwnerID10 = THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE
		    lcOwnerID11 = THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE
		    lcOwnerID12 = THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE
		    lcOwnerID13 = THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE
		    lcOwnerID14 = THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE
		    lcOwnerID15 = THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE
		    lcOwnerID16 = THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE
		    lcOwnerID17 = THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE
		    lcOwnerID18 = THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE
		    lcOwnerID19 = THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE
		    lcOwnerID20 = THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE
		
		    llSameOwner = .F.
		
		    IF lcOwnerID == lcOwnerID1
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID == lcOwnerID2
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID == lcOwnerID3
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID == lcOwnerID4
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID == lcOwnerID5
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID == lcOwnerID6
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID == lcOwnerID7
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID == lcOwnerID8
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID == lcOwnerID9
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID == lcOwnerID10
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID == lcOwnerID11
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID == lcOwnerID12
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID == lcOwnerID13
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID == lcOwnerID14
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID == lcOwnerID15
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID == lcOwnerID16
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID == lcOwnerID17
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID == lcOwnerID18
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID == lcOwnerID19
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID == lcOwnerID20
		        llSameOwner = .T.
		    ENDIF
		
		
		    lnAmount1  = THISFORM.pgfOwners.page1.txtnAmount1.VALUE * .01
		    lnAmount2  = THISFORM.pgfOwners.page1.txtnAmount2.VALUE * .01
		    lnAmount3  = THISFORM.pgfOwners.page1.txtnAmount3.VALUE * .01
		    lnAmount4  = THISFORM.pgfOwners.page1.txtnAmount4.VALUE * .01
		    lnAmount5  = THISFORM.pgfOwners.page1.txtnAmount5.VALUE * .01
		    lnAmount6  = THISFORM.pgfOwners.page2.txtnAmount6.VALUE * .01
		    lnAmount7  = THISFORM.pgfOwners.page2.txtnAmount7.VALUE * .01
		    lnAmount8  = THISFORM.pgfOwners.page2.txtnAmount8.VALUE * .01
		    lnAmount9  = THISFORM.pgfOwners.page2.txtnAmount9.VALUE * .01
		    lnAmount10 = THISFORM.pgfOwners.page2.txtnAmount10.VALUE * .01
		    lnAmount11 = THISFORM.pgfOwners.page3.txtnAmount11.VALUE * .01
		    lnAmount12 = THISFORM.pgfOwners.page3.txtnAmount12.VALUE * .01
		    lnAmount13 = THISFORM.pgfOwners.page3.txtnAmount13.VALUE * .01
		    lnAmount14 = THISFORM.pgfOwners.page3.txtnAmount14.VALUE * .01
		    lnAmount15 = THISFORM.pgfOwners.page3.txtnAmount15.VALUE * .01
		    lnAmount16 = THISFORM.pgfOwners.page4.txtnAmount16.VALUE * .01
		    lnAmount17 = THISFORM.pgfOwners.page4.txtnAmount17.VALUE * .01
		    lnAmount18 = THISFORM.pgfOwners.page4.txtnAmount18.VALUE * .01
		    lnAmount19 = THISFORM.pgfOwners.page4.txtnAmount19.VALUE * .01
		    lnAmount20 = THISFORM.pgfOwners.page4.txtnAmount20.VALUE * .01
		
		    lcRunYear = THISFORM.runCOMBO1.LISTITEM(THISFORM.runCOMBO1.LISTITEMID, 2)
		    lnRunno   = VAL(THISFORM.runCOMBO1.LISTITEM(THISFORM.runCOMBO1.LISTITEMID, 3))
		    lcRunno   = PADL(TRANSFORM(lnRunno), 3, '0')  &&  Character string for the group, padded with zeroes, so it will sort right
		    lcGroup   = THISFORM.runCOMBO1.LISTITEM(THISFORM.runCOMBO1.LISTITEMID, 4)
		    lcTypeInv = THISFORM.cboTypeInv.VALUE
		
		    IF THISFORM.chkOwnHist.VALUE  &&  If they're doing the history, check to see if any checks from those runs have been created, but not voided - BH 11/12/2008
		        swselect('sysctl')
		        SCAN FOR cRunYear + PADL(TRANSFORM(nRunNo), 3, '0') >= lcRunYear + lcRunno AND cTypeClose = 'R' AND NOT EMPTY(cDMBatch)
		            swselect('checks')
		            LOCATE FOR cid == lcOwnerID AND cBatch = sysctl.cDMBatch AND NOT lVoid  &&  Any non-voided checks for this run, for this owner
		            IF FOUND()
		*  Now that a check is found, let's see if they're doing all wells or just a single well.
		*  If it's a single well, check to see if there's disbhist records for that owner/well for this run.
		*  No disbhist means that they got a check for other wells, but not this one, so it's OK to do the transfer.
		                IF llSpecific AND NOT EMPTY(lcWellID)
		                    SELECT disbhist
		                    LOCATE FOR cOwnerID == lcOwnerID AND cRecType = 'R' AND cWellID = lcWellID AND cGroup = sysctl.cGroup  ;
		                        AND cRunYear + PADL(TRANSFORM(nRunNo), 3, '0') = sysctl.cRunYear + PADL(TRANSFORM(sysctl.nRunNo), 3, '0')
		                    IF FOUND()
		                        IF llPreview
		                            llFoundCheck = .F.
		                            THISFORM.oMessage.warning(IIF(NOT checks.lPrinted, 'An unprinted check ', 'Check #' + ;
		                                                      ALLTRIM(checks.ccheckno)) + ' with a date of ' + ALLTRIM(DTOC(checks.dCheckDate)) + ;
		                                                      ' must be voided before the history can be transferred. The report will show all ' + ;
		                                                      'of this history, but the check will need voided before the actual transfer can be done.')
		                        ELSE
		                            THISFORM.oMessage.warning(IIF(NOT checks.lPrinted, 'An unprinted check ', 'Check #' + ALLTRIM(checks.ccheckno)) + ;
		                                                      ' with a date of ' + ALLTRIM(DTOC(checks.dCheckDate)) + ' must be voided before the history ' + ;
		                                                      'can be transferred. You will have to either void this check or only transfer the history as ' + ;
		                                                      'of the next run after this check.')
		                            llFoundCheck = .T.
		                        ENDIF
		                        EXIT
		                    ENDIF
		                ELSE
		                    IF llPreview
		                        llFoundCheck = .F.
		                        THISFORM.oMessage.warning(IIF(NOT checks.lPrinted, 'An unprinted check ', 'Check #' + ALLTRIM(checks.ccheckno)) + ;
		                                                 ' with a date of ' + ALLTRIM(DTOC(checks.dCheckDate)) + ' must be voided before the history ' + ;
		                                                 'can be transferred.  The report will show all of this history, but the check will need ' + ;
		                                                 'voided before the actual transfer can be done.')
		                    ELSE
		                        THISFORM.oMessage.warning(IIF(NOT checks.lPrinted, 'An unprinted check ', 'Check #' + ALLTRIM(checks.ccheckno)) + ;
		                                                  ' with a date of ' + ALLTRIM(DTOC(checks.dCheckDate)) + ' must be voided before the ' + ;
		                                                  'history can be transferred. You will have to either void this check or only transfer ' + ;
		                                                  'the history as of the next run after this check.')
		                        llFoundCheck = .T.
		                    ENDIF
		                    EXIT
		                ENDIF
		            ENDIF
		        ENDSCAN
		        IF llFoundCheck
		            llReturn = .F.
		            EXIT 
		        ENDIF
		        
		        * Check to see if any owners being transfered to are posting owners
		        * Give warning about transferring suspense to the posting owner.
		        swselect('investor')
		        SET ORDER to cownerid 
		        llPosting = .F.
		        FOR x = 1 TO 20
		           lcNewOwner = 'lcOwnerID'+TRANSFORM(x)
		           IF NOT EMPTY(&lcNewOwner)
		              SELECT investor
		              IF SEEK(&lcNewOwner) AND lIntegGL
		                 llPosting = .T.
		              ENDIF
		           ENDIF
		        ENDFOR
		        IF llPosting AND (m.goApp.lAMVersion OR m.goApp.lQBVersion)
		           IF MESSAGEBOX("You are transferring possible suspense to an owner marked to post to the G/L." + CHR(10)+CHR(10) + ;
		                         "We suggest that if you want the suspense to show on the original owner's 1099 " + ;
		                         "that you use the Clear Owner Suspense Utility to clear that suspense for the " + ;
		                         "original owner before doing the transfer." + CHR(10)+CHR(10) + ;
		                         "If you want the suspense transferred to the posting owner we suggest that you " + ;
		                         "use the Clear Owner Suspense utility for the posting owner after the interest " + ;
		                         "is transferred. The reason for this is that posting owners don't process suspense " + ;
		                         "because a posting owner should never have suspense activity." + CHR(10)+CHR(10) + ;
		                         "Do you want to continue?",36,"Suspense Transferred to Posting Owner") = 7
		             llReturn = .f.
		             EXIT
		          ENDIF    
		       ENDIF 
		    ENDIF
		
		
		    CREATE CURSOR CHANGES  ;
		        (cRptGroup       c(1),  ;
		          cOwnerID      c(10),  ;
		          cOwnName      c(30),  ;
		          cWellID       c(10),  ;
		          cWellName     c(30),  ;
		          cTypeInv      c(10),  ;
		          nWorkInt      N(11, 7),  ;
		          nRevOil       N(11, 7),  ;
		          nRevGas       N(11, 7),  ;
		          nRevOth       N(11, 7),  ;
		          nRevTRP       N(11, 7),  ;
		          nRevMisc1     N(11, 7),  ;
		          nRevMisc2     N(11, 7),  ;
		          nIntClass1    N(11, 7),  ;
		          nIntClass2    N(11, 7),  ;
		          nIntClass3    N(11, 7),  ;
		          nIntClass4    N(11, 7),  ;
		          nIntClass5    N(11, 7),  ;
		          nBCPInt       N(11, 7),  ;
		          nACPInt       N(11, 7),  ;
		          nAPOInt       N(11, 7),  ;
		          nPlugPct      N(11, 7),  ;
		          nRevTax1      N(11, 7),  ;
		          nRevTax2      N(11, 7),  ;
		          nRevTax3      N(11, 7),  ;
		          nRevTax4      N(11, 7),  ;
		          nRevTax5      N(11, 7),  ;
		          nRevTax6      N(11, 7),  ;
		          nRevTax7      N(11, 7),  ;
		          nRevTax8      N(11, 7),  ;
		          nRevTax9      N(11, 7),  ;
		          nRevTax10     N(11, 7),  ;
		          nRevTax11     N(11, 7),  ;
		          nRevTax12     N(11, 7),  ;
		          nFlatRate     N(12, 2),  ;
		          nExpenses     N(12, 2),  ;
		          nIncome       N(12, 2),  ;
		          nTaxes        N(12, 2),  ;
		          nTaxWith      N(12, 2),  ;
		          nBackWith     N(12, 2),  ;
		          nAmount       N(12, 2),  ;
		          nPlugExp      N(12, 2), ;
		          cRunYear      c(4),  ;
		          cRunNo        c(3),  ;
		          dSuspDate     d,  ;
		          cSuspType     c(1),  ;
		          cAction       c(1),  ;
		          nOilRev       N(12, 2),  ;
		          nGasRev       N(12, 2),  ;
		          nOtherRevenue N(12, 2),  ;
		          nOilTax       N(12, 2),  ;
		          nGasTax       N(12, 2),  ;
		          nOthTax       N(12, 2),  ;
		          nNetCheck     N(12, 2),  ;
		          nGather       N(12, 2),  ;
		          nCompress     N(12, 2),  ;
		          hDate         d,  ;
		          hYear         c(4),  ;
		          hperiod       c(2))
		    INDEX ON cRptGroup + cOwnerID + cWellID + cTypeInv + cRunYear + cRunNo TAG cRptGroup
		
		* If we're transferring to the same owner, use recno to keep from looking at newly inserted records
		    IF llSameOwner
		        IF THISFORM.chklSpecificWell.VALUE = .T.  &&  Splitting Interests for a Specific Well
		            IF lcTypeInv = '*'
		                lcScanFor = 'cOwnerID == lcOwnerID AND cWellID == lcWellID and RECNO() > 0'
		            ELSE
		                lcScanFor = 'cOwnerID == lcOwnerID AND cWellID == lcWellID and cTypeInv = lcTypeInv and RECNO() > 0'
		            ENDIF
		        ELSE  &&  All interests for this owner
		            IF lcTypeInv = '*'
		                lcScanFor = 'cOwnerID == lcOwnerID and RECNO() > 0'
		            ELSE
		                lcScanFor = 'cOwnerID == lcOwnerID and cTypeInv = lcTypeInv and RECNO() > 0'
		            ENDIF
		        ENDIF
		    ELSE
		        IF THISFORM.chklSpecificWell.VALUE = .T.  &&  Splitting Interests for a Specific Well
		            IF lcTypeInv = '*'
		                lcScanFor = 'cOwnerID == lcOwnerID AND cWellID == lcWellID'
		            ELSE
		                lcScanFor = 'cOwnerID == lcOwnerID AND cWellID == lcWellID and cTypeInv = lcTypeInv'
		            ENDIF
		        ELSE  &&  All interests for this owner
		            IF lcTypeInv = '*'
		                lcScanFor = 'cOwnerID == lcOwnerID'
		            ELSE
		                lcScanFor = 'cOwnerID == lcOwnerID and cTypeInv = lcTypeInv'
		            ENDIF
		        ENDIF
		    ENDIF
		
		    llAnyDOIRecords = .F.  &&  Variable to see if they have any interests to be split, so it can tell them later - can't just loop out of everything, since they may have history that needs split, but don't have any interests any more
		
		    WAIT WINDOW NOWAIT 'Transferring DOI...'
		    swselect('wellinv')
		    SCAN FOR &lcScanFor  &&  Scan for this owner, and the right well, if they're doing it for a specific well
		        llAnyDOIRecords = .T.
		
		        SCATTER MEMVAR
		
		        STORE 0 TO lnRevOil, lnRevGas, lnRevOth, lnRevTrp, lnRevMisc1, lnRevMisc2, lnWorkInt, lnIntClass1, lnIntClass2,  ;
		            lnIntClass3, lnIntClass4, lnIntClass5, lnBCPInt, lnACPInt, lnAPOInt, lnRevTax1, lnRevTax2, lnRevTax3,  ;
		            lnRevTax4, lnRevTax5, lnRevTax6, lnRevTax7, lnRevTax8, lnRevTax9, lnRevTax10, lnRevTax11, lnRevTax12, lnPlugPct, lnPlugPctR, ;
		            lnRevOilR, lnRevGasR, lnRevOthR, lnRevTrpR, lnRevMisc1R, lnRevMisc2R, lnWorkIntR, lnIntClass1R, lnIntClass2R,  ;
		            lnIntClass3R, lnIntClass4R, lnIntClass5R, lnBCPIntR, lnACPIntR, lnAPOIntR, lnRevTax1R, lnRevTax2R, lnRevTax3R,  ;
		            lnRevTax4R, lnRevTax5R, lnRevTax6R, lnRevTax7R, lnRevTax8R, lnRevTax9R, lnRevTax10R, lnRevTax11R, lnRevTax12R, lnFlatRate, lnFlatRateR
		
		        m.cRptGroup = '1'  &&  Set group for reporting on later
		        swselect('investor')
		        SET ORDER TO cOwnerID
		        IF SEEK(m.cOwnerID)
		            m.cOwnName  = investor.cOwnName
		            m.cOwnState = cState1  &&  Store the current state, so we know if any of the "transfer to" owners are in different states, so we can warn about tax withholding issues
		            IF lIntegGL  &&  If any of the "transfer to" owners are set to post, we'll display a warning at the end that no posting will be done by this transfer, and they'll need to do it manually - BH 10/11/07
		                llIntegGL = .T.
		            ENDIF
		        ELSE
		            m.cOwnName = 'Unknown Investor'  &&  Should never get here
		        ENDIF
		        swselect('wells')
		        SET ORDER TO cWellID
		        IF SEEK(m.cWellID)
		            m.cWellName = wells.cWellName
		        ELSE
		            m.cWellName = 'Unknown Well'  &&  Should never get here
		        ENDIF
		
		        INSERT INTO CHANGES FROM MEMVAR
		
		        lnRevOil    = m.nRevOil  &&  Store original interests, so we can adjust the last owner to match up with the total
		        lnRevGas    = m.nRevGas  &&  Settings like JIB, IH, DP, IT, etc. should all remain the same, so no need to store them, except as a regular memvar
		        lnRevOth    = m.nRevOth
		        lnRevTrp    = m.nRevTRP
		        lnRevMisc1  = m.nRevMisc1
		        lnRevMisc2  = m.nRevMisc2
		        lnWorkInt   = m.nWorkInt
		        lnIntClass1 = m.nIntClass1
		        lnIntClass2 = m.nIntClass2
		        lnIntClass3 = m.nIntClass3
		        lnIntClass4 = m.nIntClass4
		        lnIntClass5 = m.nIntClass5
		        lnBCPInt    = m.nBCPInt
		        lnACPInt    = m.nACPInt
		        lnAPOInt    = m.nAPOInt
		        lnRevTax1   = m.nRevTax1
		        lnRevTax2   = m.nRevTax2
		        lnRevTax3   = m.nRevTax3
		        lnRevTax4   = m.nRevTax4
		        lnRevTax5   = m.nRevTax5
		        lnRevTax6   = m.nRevTax6
		        lnRevTax7   = m.nRevTax7
		        lnRevTax8   = m.nRevTax8
		        lnRevTax9   = m.nRevTax9
		        lnRevTax10  = m.nRevTax10
		        lnRevTax11  = m.nRevTax11
		        lnRevTax12  = m.nRevTax12
		        lnFlatRate  = m.nFlatRate
		        lnPlugPct   = m.nPlugPct
		
		        swselect('wellinv')
		        IF NOT llPreview  &&  Only delete/insert if not previewing
		            DELETE NEXT 1  &&  Get rid of original entry - we've got it stored as memvars, and will work back to the total interest for each type of revenue/expense
		        ENDIF
		
		        FOR lnX = 1 TO 20  &&  Figure out how many owners to divide it up among
		            lcX = ALLTRIM(STR(21 - lnX))
		            IF NOT EMPTY(lcOwnerID&lcX)
		                lnCount = 21 - lnX
		                EXIT
		            ENDIF
		        ENDFOR
		
		        FOR lnX = 1 TO lnCount  &&  Scroll through all owners that have been filled in, and divide the percentages
		            lcCount     = ALLT(STR(lnX))
		            m.cRptGroup = '2'  &&  Set group for reporting on later
		
		            m.cOwnerID = lcOwnerID&lcCount
		*  Get this owner's name for the changes cursor to report on later
		            swselect('investor')
		            SET ORDER TO cOwnerID
		            IF SEEK(m.cOwnerID)
		                m.cOwnName = investor.cOwnName
		                IF cState1 <> m.cOwnState  &&  State is different from original owner, so we'll display a warning about tax withholding issues
		                    llDiffState = .T.
		                ENDIF
		                IF lIntegGL  &&  If any of the "transfer to" owners are set to post, we'll display a warning at the end that no posting will be done by this transfer, and they'll need to do it manually - BH 10/11/07
		                    llIntegGL = .T.
		                ENDIF
		            ELSE
		                m.cOwnName = 'Unknown Investor'  &&  Should never get here
		            ENDIF
		
		            m.cidwinv = THISFORM.oRegistry.IncrementCounter('%Shared.Counters.DOIKey')  &&  Loop to find next available key.
		            SET DELETED OFF
		            SELECT wellinv1
		            SET ORDER TO cidwinv
		            DO WHILE SEEK(m.cidwinv)
		                m.cidwinv = THISFORM.oRegistry.IncrementCounter('%Shared.Counters.DOIKey')
		            ENDDO
		            SET DELETED ON
		
		            IF lnX < lnCount  &&  Not the last owner, so do the math for their share
		                lnNewPct     = lnAmount&lcCount
		                m.nRevOil    = swround(lnRevOil * lnNewPct, 7)
		                lnRevOilR    = lnRevOilR + m.nRevOil
		                m.nRevGas    = swround(lnRevGas * lnNewPct, 7)
		                lnRevGasR    = lnRevGasR + m.nRevGas
		                m.nRevOth    = swround(lnRevOth * lnNewPct, 7)
		                lnRevOthR    = lnRevOthR + m.nRevOth
		                m.nRevTRP    = swround(lnRevTrp * lnNewPct, 7)
		                lnRevTrpR    = lnRevTrpR + m.nRevTRP
		                m.nRevMisc1  = swround(lnRevMisc1 * lnNewPct, 7)
		                lnRevMisc1R  = lnRevMisc1R + m.nRevMisc1
		                m.nRevMisc2  = swround(lnRevMisc2 * lnNewPct, 7)
		                lnRevMisc2R  = lnRevMisc2R + m.nRevMisc2
		                m.nWorkInt   = swround(lnWorkInt * lnNewPct, 7)
		                lnWorkIntR   = lnWorkIntR + m.nWorkInt
		                m.nIntClass1 = swround(lnIntClass1 * lnNewPct, 7)
		                lnIntClass1R = lnIntClass1R + m.nIntClass1
		                m.nIntClass2 = swround(lnIntClass2 * lnNewPct, 7)
		                lnIntClass2R = lnIntClass2R + m.nIntClass2
		                m.nIntClass3 = swround(lnIntClass3 * lnNewPct, 7)
		                lnIntClass3R = lnIntClass3R + m.nIntClass3
		                m.nIntClass4 = swround(lnIntClass4 * lnNewPct, 7)
		                lnIntClass4R = lnIntClass4R + m.nIntClass4
		                m.nIntClass5 = swround(lnIntClass5 * lnNewPct, 7)
		                lnIntClass5R = lnIntClass5R + m.nIntClass5
		                m.nBCPInt    = swround(lnBCPInt * lnNewPct, 7)
		                lnBCPIntR    = lnBCPIntR + m.nBCPInt
		                m.nACPInt    = swround(lnACPInt * lnNewPct, 7)
		                lnACPIntR    = lnACPIntR + m.nACPInt
		                m.nAPOInt    = swround(lnAPOInt * lnNewPct, 7)
		                lnAPOIntR    = lnAPOIntR + m.nAPOInt
		                m.nPlugPct   = swround(lnPlugPct * lnNewPct, 7)
		                lnPlugPctR   = lnPlugPctR + m.nPlugPct                
		                m.nRevTax1   = swround(lnRevTax1 * lnNewPct, 7)
		                lnRevTax1R   = lnRevTax1R + m.nRevTax1
		                m.nRevTax2   = swround(lnRevTax2 * lnNewPct, 7)
		                lnRevTax2R   = lnRevTax2R + m.nRevTax2
		                m.nRevTax3   = swround(lnRevTax3 * lnNewPct, 7)
		                lnRevTax3R   = lnRevTax3R + m.nRevTax3
		                m.nRevTax4   = swround(lnRevTax4 * lnNewPct, 7)
		                lnRevTax4R   = lnRevTax4R + m.nRevTax4
		                m.nRevTax5   = swround(lnRevTax5 * lnNewPct, 7)
		                lnRevTax5R   = lnRevTax5R + m.nRevTax5
		                m.nRevTax6   = swround(lnRevTax6 * lnNewPct, 7)
		                lnRevTax6R   = lnRevTax6R + m.nRevTax6
		                m.nRevTax7   = swround(lnRevTax7 * lnNewPct, 7)
		                lnRevTax7R   = lnRevTax7R + m.nRevTax7
		                m.nRevTax8   = swround(lnRevTax8 * lnNewPct, 7)
		                lnRevTax8R   = lnRevTax8R + m.nRevTax8
		                m.nRevTax9   = swround(lnRevTax9 * lnNewPct, 7)
		                lnRevTax9R   = lnRevTax9R + m.nRevTax9
		                m.nRevTax10  = swround(lnRevTax10 * lnNewPct, 7)
		                lnRevTax10R  = lnRevTax10R + m.nRevTax10
		                m.nRevTax11  = swround(lnRevTax11 * lnNewPct, 7)
		                lnRevTax11R  = lnRevTax11R + m.nRevTax11
		                m.nRevTax12  = swround(lnRevTax12 * lnNewPct, 7)
		                lnRevTax12R  = lnRevTax12R + m.nRevTax12
		                m.nFlatRate  = swround(lnFlatRate * lnNewPct, 2)
		                lnFlatRateR  = lnFlatRateR + m.nFlatRate
		
		            ELSE  &&  Last owner, so don't do the math
		
		                m.cOwnerID   = lcOwnerID&lcCount
		                m.nRevOil    = lnRevOil - lnRevOilR
		                m.nRevGas    = lnRevGas - lnRevGasR
		                m.nRevOth    = lnRevOth - lnRevOthR
		                m.nRevTRP    = lnRevTrp - lnRevTrpR
		                m.nRevMisc1  = lnRevMisc1 - lnRevMisc1R
		                m.nRevMisc2  = lnRevMisc2 - lnRevMisc2R
		                m.nWorkInt   = lnWorkInt - lnWorkIntR
		                m.nIntClass1 = lnIntClass1 - lnIntClass1R
		                m.nIntClass2 = lnIntClass2 - lnIntClass2R
		                m.nIntClass3 = lnIntClass3 - lnIntClass3R
		                m.nIntClass4 = lnIntClass4 - lnIntClass4R
		                m.nIntClass5 = lnIntClass5 - lnIntClass5R
		                m.nBCPInt    = lnBCPInt - lnBCPIntR
		                m.nACPInt    = lnACPInt - lnACPIntR
		                m.nAPOInt    = lnAPOInt - lnAPOIntR
		                m.nPlugPct   = lnPlugPct - lnPlugPctR
		                m.nRevTax1   = lnRevTax1 - lnRevTax1R
		                m.nRevTax2   = lnRevTax2 - lnRevTax2R
		                m.nRevTax3   = lnRevTax3 - lnRevTax3R
		                m.nRevTax4   = lnRevTax4 - lnRevTax4R
		                m.nRevTax5   = lnRevTax5 - lnRevTax5R
		                m.nRevTax6   = lnRevTax6 - lnRevTax6R
		                m.nRevTax7   = lnRevTax7 - lnRevTax7R
		                m.nRevTax8   = lnRevTax8 - lnRevTax8R
		                m.nRevTax9   = lnRevTax9 - lnRevTax9R
		                m.nRevTax10  = lnRevTax10 - lnRevTax10R
		                m.nRevTax11  = lnRevTax11 - lnRevTax11R
		                m.nRevTax12  = lnRevTax12 - lnRevTax12R
		                m.nFlatRate  = lnFlatRate - lnFlatRateR
		
		            ENDIF
		
		*  If the owner being transferred to is set to post, don't make their interest be on hold.
		*  They can't do this on the DOI screen, so don't allow it here.
		            IF llIntegGL
		                m.lOnHold = .F.
		            ENDIF
		
		            INSERT INTO CHANGES FROM MEMVAR
		
		            IF NOT llPreview  &&  Only delete/insert if not previewing
		                swselect('wellinv')
		                lnRecno = RECNO()
		                LOCATE FOR cOwnerID == m.cOwnerID AND cWellID == m.cWellID AND cTypeInv = m.cTypeInv AND lFlat = m.lFlat AND NOT DELETED()
		                IF NOT FOUND()
		                    INSERT INTO wellinv FROM MEMVAR
		                ELSE
		                    REPLACE nRevOil WITH nRevOil + m.nRevOil, ;
		                           nRevGas WITH nRevGas + m.nRevGas, ;
		                           nRevOth WITH nRevOth + m.nRevOth,  ;
		                        nRevTRP WITH nRevTRP + m.nRevTRP, ;
		                        nRevMisc1 WITH nRevMisc1 + m.nRevMisc1, ;
		                        nRevMisc2 WITH nRevMisc2 + m.nRevMisc2,  ;
		                        nWorkInt WITH nWorkInt + m.nWorkInt, ;
		                        nIntClass1 WITH nIntClass1 + m.nIntClass1, ;
		                        nIntClass2 WITH nIntClass2 + m.nIntClass2,  ;
		                        nIntClass3 WITH nIntClass3 + m.nIntClass3, ;
		                        nIntClass4 WITH nIntClass4 + m.nIntClass4, ;
		                        nIntClass5 WITH nIntClass5 + m.nIntClass5,  ;
		                        nBCPInt WITH nBCPInt + m.nBCPInt, ;
		                        nACPInt WITH nACPInt + m.nACPInt, ;
		                        nAPOInt WITH nAPOInt + m.nAPOInt,  ;
		                        nPlugPct WITH nPlugPct + m.nPlugPct, ;
		                        nRevTax1 WITH nRevTax1 + m.nRevTax1, ;
		                        nRevTax2 WITH nRevTax2 + m.nRevTax2, ;
		                        nRevTax3 WITH nRevTax3 + m.nRevTax3,  ;
		                        nRevTax4 WITH nRevTax4 + m.nRevTax4, ;
		                        nRevTax5 WITH nRevTax5 + m.nRevTax5, ;
		                        nRevTax6 WITH nRevTax6 + m.nRevTax6,  ;
		                        nRevTax7 WITH nRevTax7 + m.nRevTax7, ;
		                        nRevTax8 WITH nRevTax8 + m.nRevTax8, ;
		                        nRevTax9 WITH nRevTax9 + m.nRevTax9,  ;
		                        nRevTax10 WITH nRevTax10 + m.nRevTax10, ;
		                        nRevTax11 WITH nRevTax11 + m.nRevTax11, ;
		                        nRevTax12 WITH nRevTax12 + m.nRevTax12,  ;
		                        nFlatRate WITH nFlatRate + m.nFlatRate
		                ENDIF
		                swselect('wellinv')
		                GOTO lnRecno
		            ENDIF
		        ENDFOR
		
		    ENDSCAN
		
		    THISFORM.lAnyDOIRecords = llAnyDOIRecords
		
		* Save DOI Changes
		    IF NOT llPreview
		        swselect('wellinv')
		        TABLEUPDATE(.T.)
		    ENDIF
		
		* Transfer suspense and owner history
		    llReturn = THISFORM.transhist(llPreview)
		    IF NOT llReturn
		        EXIT
		    ENDIF
		
		*  Create log of changes - BH 10-28-2008
		    IF NOT llPreview AND (THISFORM.lAnyDOIRecords OR THISFORM.lAnyHistRecords OR THISFORM.lAnySuspRecords)
		* Only do this if they're not previewing, and some records actually got transferred
		        llReturn = THISFORM.createlog()
		        IF NOT llReturn
		            EXIT
		        ENDIF
		    ENDIF
		
		    WAIT CLEAR
		
		
		    DO CASE  &&  Check what types of records got switched, and tell the user
		
		        CASE THISFORM.lAnyDOIRecords AND NOT THISFORM.lAnySuspRecords AND NOT THISFORM.lAnyHistRecords AND NOT llPreview  &&  DOI but no suspense history or owner history
		            THISFORM.oMessage.DISPLAY('The DOI for this owner have been transferred.  There were no suspense or owner history entries to transfer.')
		
		        CASE THISFORM.lAnyDOIRecords AND NOT THISFORM.lAnySuspRecords AND THISFORM.lAnyHistRecords AND NOT llPreview  &&  DOI and owner history but no suspense history
		            THISFORM.oMessage.DISPLAY('The DOI and owner history for this owner have been transferred.  There were no suspense entries to transfer.')
		
		        CASE THISFORM.lAnyDOIRecords AND THISFORM.lAnySuspRecords AND NOT THISFORM.lAnyHistRecords AND NOT llPreview  &&  DOI and suspense history but no owner history - shouldn't ever his this, but you never know...
		            THISFORM.oMessage.DISPLAY('The DOI and suspense for this owner have been transferred.  There were no owner history entries to transfer.')
		
		        CASE THISFORM.lAnyDOIRecords AND THISFORM.lAnySuspRecords  AND THISFORM.lAnyHistRecords AND NOT llPreview  &&  Suspense, DOI, and history
		            THISFORM.oMessage.DISPLAY('The DOI, suspense history, and owner history for this owner have been transferred successfully.')
		
		        CASE NOT THISFORM.lAnyDOIRecords AND THISFORM.lAnySuspRecords AND THISFORM.lAnyHistRecords AND NOT llPreview  &&  No DOI, but suspense and owner history
		            THISFORM.oMessage.DISPLAY('The owner and suspense history for this owner have been transferred.  There were no DOI entries to transfer.')
		
		        CASE NOT THISFORM.lAnyDOIRecords AND NOT THISFORM.lAnySuspRecords AND THISFORM.lAnyHistRecords AND NOT llPreview  &&  No DOI or suspense, but owner history
		            THISFORM.oMessage.DISPLAY('The owner history for this owner has been transferred.  There were no DOI or suspense histories to transfer.')
		
		        CASE NOT THISFORM.lAnyDOIRecords AND THISFORM.lAnySuspRecords AND NOT THISFORM.lAnyHistRecords AND NOT llPreview  &&  No DOI or owner history, but suspense history - shouldn't ever his this, but you never know...
		            THISFORM.oMessage.DISPLAY('The suspense history for this owner has been transferred.  There were no DOI or history entries to transfer.')
		
		        CASE NOT THISFORM.lAnyDOIRecords AND NOT THISFORM.lAnySuspRecords AND NOT THISFORM.lAnyHistRecords  &&  No records of any kind, so warn them
		            IF (THISFORM.chkOwnHist.VALUE = .T. OR THISFORM.chksuspHist.VALUE = .T.)
		                THISFORM.oMessage.warning('There were no DOI, owner history or suspense history records for this owner found to transfer.')
		            ELSE
		                THISFORM.oMessage.warning('There were no DOI records for this owner found to transfer.')
		            ENDIF
		
		    ENDCASE
		
		
		    IF THISFORM.lAnyDOIRecords AND llDiffState AND NOT llPreview  &&  DOI was transferred, and a different state was detected among the owners being transferred to, so give a warning
		        THISFORM.oMessage.warning("Any tax withholding settings in the DOI get transferred with the interests.  Please verify these settings on the DOI screen to ensure accurate processing.")
		    ENDIF
		
		    IF (THISFORM.lAnySuspRecords OR THISFORM.lAnyHistRecords) AND llIntegGL AND NOT llPreview AND (m.goapp.lAMVersion OR m.goapp.lQBVersion)  &&  Show warning if there was any history transferred to any owners who are set to post to the GL - Only show for AM and DMQB
		        THISFORM.oMessage.warning('At least one owner being transferred to is set to be posted to ' + IIF(m.goapp.lQBVersion, 'QuickBooks.', 'the general ledger.') + '  No posting is made by this transfer, so manual entries may be needed.')
		    ENDIF
		
		    SELECT CHANGES
		    IF RECC() > 0
		        TRY
		            REPORT FORM commonsource\dmrdoitransfer PREVIEW
		            IF THISFORM.oMessage.CONFIRM('Should the report be sent to the printer now?')
		                REPORT FORM commonsource\dmrdoitransfer TO PRINTER PROMPT NOCONSOLE NOEJECT
		            ENDIF
		        CATCH
		            THISFORM.oMessage.warning('The transfer was successful, but a printing error was returned from Windows when trying to print the transfer report. Please verify that the printer is powered on and has a valid driver installed.')
		        ENDTRY
		
		        IF NOT llPreview
		            THISFORM.txtcOwnerID.SET('value', '')  &&  Blank out owner ID and name, and re-set cursor back to the top, ready for another transfer
		            THISFORM.txtcOwnName.SET('value', '')
		            THISFORM.txtcWellID.SET('value', '')
		            THISFORM.txtcwellName.SET('value', '')
		            THISFORM.cboTypeInv.LISTITEMID = 1
		        ENDIF
		        THISFORM.setnextcontrol(THISFORM.txtcOwnerID)
		    ENDIF
		CATCH TO loError
		    llReturn = .F.
		    DO errorlog WITH 'SplitEmUp', loError.LINENO, 'DMDOITransfer', loError.ERRORNO, loError.MESSAGE, '', loError
		    MESSAGEBOX('Unable to process the transfer at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		          'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
		
	ENDPROC

	PROCEDURE transhist		&& Transfers suspense and owner history
		LPARAMETERS tlPreview
		
		LOCAL lcScanFor, lcScanForSusp, llAnyHistRecords, llAnySuspRecords, lnRecNo, lcDisb
		LOCAL lcRunYear, lnRunNo, lcRunNo, lcGroup, lcTypeInv, llAll
		LOCAL lcCount, lcRunYearOrig, lcX, lcidDisb, llFoundOwnPcts, llReturn, llSameOwner, llSuspHist
		LOCAL lnRunNoOrig, lnX, loError
		LOCAL cOwnName, cOwnerID, cRptGroup, cRunNo, cRunYear, cWellName, ciddisb, nACPInt, nBCPInt
		LOCAL nBackWith, nCompress, nExpense, nExpenses, nFlatRate, nGasRev, nGasTax, nGasTax1, nGasTax2
		LOCAL nGasTax3, nGasTax4, nGather, nIncome, nIntClass1, nIntClass2, nIntClass3, nIntClass4
		LOCAL nIntClass5, nMiscRev1, nMiscRev2, nMktgExp, nNetCheck, nOilRev, nOilTax, nOilTax1, nOilTax2
		LOCAL nOilTax3, nOilTax4, nOthRev, nOthTax, nOthTax1, nOthTax2, nOthTax3, nOthTax4, nOtherRevenue
		LOCAL nRevGas, nRevMisc1, nRevMisc2, nRevOil, nRevOth, nRevTRP, nRevTax1, nRevTax10, nRevTax11
		LOCAL nRevTax12, nRevTax2, nRevTax3, nRevTax4, nRevTax5, nRevTax6, nRevTax7, nRevTax8, nRevTax9
		LOCAL nSevTaxes, nTaxWith, nTotalE1, nTotalE2, nTotalE3, nTotalE4, nTotalE5, nTotalEA, nTotalEB
		LOCAL nTrpRev, nWorkInt
		LOCAL lcOwnerID, lcWellID, lcOwnerID1, lcOwnerID2, lcOwnerID3, lcOwnerID4, lcOwnerID5
		LOCAL lcOwnerID6, lcOwnerID7, lcOwnerID8, lcOwnerID9, lcOwnerID10, lnCount, lnPlugPct, lnPlugPctR, lnPlugExp
		LOCAL lcOwnerID11, lcOwnerID12, lcOwnerID13, lcOwnerID14, lcOwnerID15, lcOwnerID16,  lcOwnerID17, lcOwnerID18, lcOwnerID19, lcOwnerID20
		LOCAL lnAmount1, lnAmount2, lnAmount3, lnAmount4, lnAmount5, lnAmount6, lnAmount7, lnAmount8, lnAmount9, lnAmount10
		LOCAL lnAmount11, lnAmount12, lnAmount13, lnAmount14, lnAmount15, lnAmount16, lnAmount17, lnAmount18, lnAmount19, lnAmount20
		LOCAL lnRevOil, lnRevGas, lnRevOth, lnRevTrp, lnRevMisc1, lnRevMisc2, lnWorkInt, lnIntClass1, lnIntClass2
		LOCAL lnIntClass3, lnIntClass4, lnIntClass5, lnBCPInt, lnACPInt, lnAPOInt, lnRevTax1, lnRevTax2, lnRevTax3
		LOCAL lnRevTax4, lnRevTax5, lnRevTax6, lnRevTax7, lnRevTax8, lnRevTax9, lnRevTax10, lnRevTax11, lnRevTax12
		LOCAL lnRevOilR, lnRevGasR, lnRevOthR, lnRevTrpR, lnRevMisc1R, lnRevMisc2R, lnWorkIntR, lnIntClass1R, lnIntClass2R  &&  Running total variables
		LOCAL lnIntClass3R, lnIntClass4R, lnIntClass5R, lnBCPIntR, lnACPIntR, lnAPOIntR, lnRevTax1R, lnRevTax2R, lnRevTax3R
		LOCAL lnRevTax4R, lnRevTax5R, lnRevTax6R, lnRevTax7R, lnRevTax8R, lnRevTax9R, lnRevTax10R, lnRevTax11R, lnRevTax12R, lnFlatRate, lnFlatRateR
		LOCAL lnIncome, lnIncomeR, lnExpenses, lnExpensesR, lnTaxWith, lnTaxWithR, lnBackWith, lnBackWithR, lnAmount, lnAmountR
		LOCAL lnMktgExp, lnMktgExpR, lnSevTaxes, lnSevTaxesR, lnExpense, lnExpenseR, lnNetCheck, lnNetCheckR, lnTotalE1, lnTotalE1R
		LOCAL lnTotalE2, lnTotalE2R, lnTotalE3, lnTotalE3R, lnTotalE4, lnTotalE4R, lnTotalE5, lnTotalE5R, lnTotalEA, lnTotalEAR
		LOCAL lnTotalEB, lnTotalEBR, lnOilRev, lnOilRevR, lnGasRev, lnGasRevR, lnOthRev, lnOthRevR, lnTrpRev, lnTrpRevR
		LOCAL lnMiscRev1, lnMiscRev1R, lnMiscRev2, lnMiscRev2R, lnGather, lnGatherR, lnCompress, lnCompressR
		LOCAL lnOilTax1, lnOilTax1R, lnOilTax2, lnOilTax2R, lnOilTax3, lnOilTax3R, lnOilTax4, lnOilTax4R
		LOCAL lnGasTax1, lnGasTax1R, lnGasTax2, lnGasTax2R, lnGasTax3, lnGasTax3R, lnGasTax4, lnGasTax4R, llDiffState, llAll, llSpecific
		LOCAL lnOthTax1, lnOthTax1R, lnOthTax2, lnOthTax2R, lnOthTax3, lnOthTax3R, lnOthTax4, lnOthTax4R, lcTypeInv, llPreview, llIntegGL, llFoundCheck
		
		
		#DEFINE BUFFERED   .T.
		
		llReturn = .T.
		m.lTransfer = .T.
		
		TRY
		    STORE 0 TO lnRevOil, lnRevGas, lnRevOth, lnRevTrp, lnRevMisc1, lnRevMisc2, lnWorkInt, lnIntClass1, lnIntClass2, ;
		        lnIntClass3, lnIntClass4, lnIntClass5, lnBCPInt, lnACPInt, lnAPOInt, lnRevTax1, lnRevTax2, lnRevTax3, ;
		        lnRevTax4, lnRevTax5, lnRevTax6, lnRevTax7, lnRevTax8, lnRevTax9, lnRevTax10, lnRevTax11, lnRevTax12, lnPlugPct, lnPlugPctR, ;
		        lnRevOilR, lnRevGasR, lnRevOthR, lnRevTrpR, lnRevMisc1R, lnRevMisc2R, lnWorkIntR, lnIntClass1R, lnIntClass2R, lnPlugExp, ;
		        lnIntClass3R, lnIntClass4R, lnIntClass5R, lnBCPIntR, lnACPIntR, lnAPOIntR, lnRevTax1R, lnRevTax2R, lnRevTax3R, ;
		        lnRevTax4R, lnRevTax5R, lnRevTax6R, lnRevTax7R, lnRevTax8R, lnRevTax9R, lnRevTax10R, lnRevTax11R, lnRevTax12R, lnFlatRate, lnFlatRateR, ;
		        lnIncome, lnIncomeR, lnExpenses, lnExpensesR, lnTaxWith, lnTaxWithR, lnBackWith, lnBackWithR, lnAmount, lnAmountR, ;
		        lnMktgExp, lnMktgExpR, lnSevTaxes, lnSevTaxesR, lnExpense, lnExpenseR, lnNetCheck, lnNetCheckR, lnTotalE1, lnTotalE1R, ;
		        lnTotalE2, lnTotalE2R, lnTotalE3, lnTotalE3R, lnTotalE4, lnTotalE4R, lnTotalE5, lnTotalE5R, lnTotalEA, lnTotalEAR, ;
		        lnTotalEB, lnTotalEBR, lnOilRev, lnOilRevR, lnGasRev, lnGasRevR, lnOthRev, lnOthRevR, lnTrpRev, lnTrpRevR, ;
		        lnMiscRev1, lnMiscRev1R, lnMiscRev2, lnMiscRev2R, lnGather, lnGatherR, lnCompress, lnCompressR, ;
		        lnOilTax1, lnOilTax1R, lnOilTax2, lnOilTax2R, lnOilTax3, lnOilTax3R, lnOilTax4, lnOilTax4R, ;
		        lnGasTax1, lnGasTax1R, lnGasTax2, lnGasTax2R, lnGasTax3, lnGasTax3R, lnGasTax4, lnGasTax4R, ;
		        lnOthTax1, lnOthTax1R, lnOthTax2, lnOthTax2R, lnOthTax3, lnOthTax3R, lnOthTax4, lnOthTax4R
		
		    lcRunYear   = THISFORM.runCOMBO1.LISTITEM(THISFORM.runCOMBO1.LISTITEMID, 2)
		    lnRunNo     = VAL(THISFORM.runCOMBO1.LISTITEM(THISFORM.runCOMBO1.LISTITEMID, 3))
		    lcRunNo     = PADL(TRANSFORM(lnRunNo), 3, '0')  &&  Character string for the group, padded with zeroes, so it will sort right
		    lcGroup     = THISFORM.runCOMBO1.LISTITEM(THISFORM.runCOMBO1.LISTITEMID, 4)
		    lcTypeInv   = THISFORM.cboTypeInv.VALUE
		    llPreview   = tlPreview
		    lcOwnerID   = THISFORM.txtcOwnerID.VALUE  &&  Store all new owners and percentages, dividing by 100 to arrive at the decimal amounts
		    lcWellID    = THISFORM.txtcWellID.VALUE
		    lcOwnerID1  = THISFORM.pgfOwners.page1.txtcOwnerID1.VALUE
		    lcOwnerID2  = THISFORM.pgfOwners.page1.txtcOwnerID2.VALUE
		    lcOwnerID3  = THISFORM.pgfOwners.page1.txtcOwnerID3.VALUE
		    lcOwnerID4  = THISFORM.pgfOwners.page1.txtcOwnerID4.VALUE
		    lcOwnerID5  = THISFORM.pgfOwners.page1.txtcOwnerID5.VALUE
		    lcOwnerID6  = THISFORM.pgfOwners.page2.txtcOwnerID6.VALUE
		    lcOwnerID7  = THISFORM.pgfOwners.page2.txtcOwnerID7.VALUE
		    lcOwnerID8  = THISFORM.pgfOwners.page2.txtcOwnerID8.VALUE
		    lcOwnerID9  = THISFORM.pgfOwners.page2.txtcOwnerID9.VALUE
		    lcOwnerID10 = THISFORM.pgfOwners.page2.txtcOwnerID10.VALUE
		    lcOwnerID11 = THISFORM.pgfOwners.page3.txtcOwnerID11.VALUE
		    lcOwnerID12 = THISFORM.pgfOwners.page3.txtcOwnerID12.VALUE
		    lcOwnerID13 = THISFORM.pgfOwners.page3.txtcOwnerID13.VALUE
		    lcOwnerID14 = THISFORM.pgfOwners.page3.txtcOwnerID14.VALUE
		    lcOwnerID15 = THISFORM.pgfOwners.page3.txtcOwnerID15.VALUE
		    lcOwnerID16 = THISFORM.pgfOwners.page4.txtcOwnerID16.VALUE
		    lcOwnerID17 = THISFORM.pgfOwners.page4.txtcOwnerID17.VALUE
		    lcOwnerID18 = THISFORM.pgfOwners.page4.txtcOwnerID18.VALUE
		    lcOwnerID19 = THISFORM.pgfOwners.page4.txtcOwnerID19.VALUE
		    lcOwnerID20 = THISFORM.pgfOwners.page4.txtcOwnerID20.VALUE
		
		    llSameOwner = .F.
		
		    IF lcOwnerID = lcOwnerID1
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID = lcOwnerID2
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID = lcOwnerID3
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID = lcOwnerID4
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID = lcOwnerID5
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID = lcOwnerID6
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID = lcOwnerID7
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID = lcOwnerID8
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID = lcOwnerID9
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID = lcOwnerID10
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID = lcOwnerID11
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID = lcOwnerID12
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID = lcOwnerID13
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID = lcOwnerID14
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID = lcOwnerID15
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID = lcOwnerID16
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID = lcOwnerID17
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID = lcOwnerID18
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID = lcOwnerID19
		        llSameOwner = .T.
		    ENDIF
		    IF lcOwnerID = lcOwnerID20
		        llSameOwner = .T.
		    ENDIF
		
		    lnAmount1  = THISFORM.pgfOwners.page1.txtnAmount1.VALUE * .01
		    lnAmount2  = THISFORM.pgfOwners.page1.txtnAmount2.VALUE * .01
		    lnAmount3  = THISFORM.pgfOwners.page1.txtnAmount3.VALUE * .01
		    lnAmount4  = THISFORM.pgfOwners.page1.txtnAmount4.VALUE * .01
		    lnAmount5  = THISFORM.pgfOwners.page1.txtnAmount5.VALUE * .01
		    lnAmount6  = THISFORM.pgfOwners.page2.txtnAmount6.VALUE * .01
		    lnAmount7  = THISFORM.pgfOwners.page2.txtnAmount7.VALUE * .01
		    lnAmount8  = THISFORM.pgfOwners.page2.txtnAmount8.VALUE * .01
		    lnAmount9  = THISFORM.pgfOwners.page2.txtnAmount9.VALUE * .01
		    lnAmount10 = THISFORM.pgfOwners.page2.txtnAmount10.VALUE * .01
		    lnAmount11 = THISFORM.pgfOwners.page3.txtnAmount11.VALUE * .01
		    lnAmount12 = THISFORM.pgfOwners.page3.txtnAmount12.VALUE * .01
		    lnAmount13 = THISFORM.pgfOwners.page3.txtnAmount13.VALUE * .01
		    lnAmount14 = THISFORM.pgfOwners.page3.txtnAmount14.VALUE * .01
		    lnAmount15 = THISFORM.pgfOwners.page3.txtnAmount15.VALUE * .01
		    lnAmount16 = THISFORM.pgfOwners.page4.txtnAmount16.VALUE * .01
		    lnAmount17 = THISFORM.pgfOwners.page4.txtnAmount17.VALUE * .01
		    lnAmount18 = THISFORM.pgfOwners.page4.txtnAmount18.VALUE * .01
		    lnAmount19 = THISFORM.pgfOwners.page4.txtnAmount19.VALUE * .01
		    lnAmount20 = THISFORM.pgfOwners.page4.txtnAmount20.VALUE * .01
		
		    llAnyHistRecords = .F.  &&  Store whether any DISBHIST records get changed, so the user can be told at the end
		    llAnySuspRecords = .F.  &&  Store whether any suspense records get changed, so the user can be warned at the end
		
		    IF THISFORM.chkOwnHist.VALUE = .T. AND THISFORM.runCOMBO1.LISTITEM(THISFORM.runCOMBO1.LISTITEMID, 1) = '** All Past Data **'
		        llAll = .T.
		    ENDIF
		
		    IF THISFORM.chklSpecificWell.VALUE = .T.  &&  Splitting Interests for a Specific Well
		        IF lcTypeInv = '*'
		            lcScanFor     = "cOwnerID == lcOwnerID AND IIF(NOT llAll,cRunYear+padl(TRANSFORM(nRunno),3,'0') >= lcRunYear+lcRunno,.t.) and cWellID == lcWellID and RECNO() > 0"
		            lcScanForSusp = "cOwnerID == lcOwnerID AND IIF(NOT llAll,cRunYear_In+padl(TRANSFORM(nRunno_In),3,'0') >= lcRunYear+lcRunno,.t.) and cWellID == lcWellID and RECNO() > 0"
		        ELSE
		            lcScanFor     = "cOwnerID == lcOwnerID AND IIF(NOT llAll,cRunYear+padl(TRANSFORM(nRunno),3,'0') >= lcRunYear+lcRunno,.t.) and cWellID == lcWellID and cTypeInv = lcTypeInv and RECNO() > 0"
		            lcScanForSusp = "cOwnerID == lcOwnerID AND IIF(NOT llAll,cRunYear_In+padl(TRANSFORM(nRunno_In),3,'0') >= lcRunYear+lcRunno,.t.) and cWellID == lcWellID and cTypeInv = lcTypeInv and RECNO() > 0"
		        ENDIF
		    ELSE  &&  All interests for this owner
		        IF lcTypeInv = '*'
		            lcScanFor     = "cOwnerID == lcOwnerID AND IIF(NOT llAll,cRunYear+padl(TRANSFORM(nRunno),3,'0') >= lcRunYear+lcRunno,.t.) and RECNO() > 0"
		            lcScanForSusp = "cOwnerID == lcOwnerID AND IIF(NOT llAll,cRunYear_In+padl(TRANSFORM(nRunno_In),3,'0') >= lcRunYear+lcRunno,.t.) and RECNO() > 0"
		        ELSE
		            lcScanFor     = "cOwnerID == lcOwnerID AND IIF(NOT llAll,cRunYear+padl(TRANSFORM(nRunno),3,'0') >= lcRunYear+lcRunno,.t.) and cTypeInv = lcTypeInv and RECNO() > 0"
		            lcScanForSusp = "cOwnerID == lcOwnerID AND IIF(NOT llAll,cRunYear_In+padl(TRANSFORM(nRunno_In),3,'0') >= lcRunYear+lcRunno,.t.) and cTypeInv = lcTypeInv and RECNO() > 0"
		        ENDIF
		    ENDIF
		
		    IF THISFORM.lSuspHist = .T.
		        llSuspHist = THISFORM.chksuspHist.VALUE
		    ELSE
		        llSuspHist = THISFORM.chkOwnHist.VALUE
		    ENDIF
		
		    IF llSuspHist = .T.  &&  Transferring suspense history
		
		        WAIT WINDOW NOWAIT 'Transferring Suspense History...'
		* Transfer suspense history
		        swselect('suspense')
		        SCAN FOR &lcScanForSusp
		** Removed cRecType='R' from above scan so payments would be transfered also. - pws 8/13/13
		            llAnySuspRecords = .T.
		
		            lnRecNo  = RECNO()
		            lcidDisb = ciddisb  &&  Store this, so when it tries to add it to an existing record, it's not using the same one
		
		            SCATTER MEMVAR
		
		            STORE 0 TO lnRevOil, lnRevGas, lnRevOth, lnRevTrp, lnRevMisc1, lnRevMisc2, lnWorkInt, lnIntClass1, lnIntClass2, ;
		                lnIntClass3, lnIntClass4, lnIntClass5, lnBCPInt, lnACPInt, lnAPOInt, lnRevTax1, lnRevTax2, lnRevTax3, ;
		                lnRevTax4, lnRevTax5, lnRevTax6, lnRevTax7, lnRevTax8, lnRevTax9, lnRevTax10, lnRevTax11, lnRevTax12, ;
		                lnRevOilR, lnRevGasR, lnRevOthR, lnRevTrpR, lnRevMisc1R, lnRevMisc2R, lnWorkIntR, lnIntClass1R, lnIntClass2R, ;
		                lnIntClass3R, lnIntClass4R, lnIntClass5R, lnBCPIntR, lnACPIntR, lnAPOIntR, lnRevTax1R, lnRevTax2R, lnRevTax3R, ;
		                lnRevTax4R, lnRevTax5R, lnRevTax6R, lnRevTax7R, lnRevTax8R, lnRevTax9R, lnRevTax10R, lnRevTax11R, lnRevTax12R, lnFlatRate, lnFlatRateR, ;
		                lnIncome, lnIncomeR, lnExpenses, lnExpensesR, lnTaxWith, lnTaxWithR, lnBackWith, lnBackWithR, lnAmount, lnAmountR, ;
		                lnMktgExp, lnMktgExpR, lnSevTaxes, lnSevTaxesR, lnExpense, lnExpenseR, lnNetCheck, lnNetCheckR, lnTotalE1, lnTotalE1R, ;
		                lnTotalE2, lnTotalE2R, lnTotalE3, lnTotalE3R, lnTotalE4, lnTotalE4R, lnTotalE5, lnTotalE5R, lnTotalEA, lnTotalEAR, ;
		                lnTotalEB, lnTotalEBR, lnOilRev, lnOilRevR, lnGasRev, lnGasRevR, lnOthRev, lnOthRevR, lnTrpRev, lnTrpRevR, ;
		                lnMiscRev1, lnMiscRev1R, lnMiscRev2, lnMiscRev2R, lnGather, lnGatherR, lnCompress, lnCompressR, ;
		                lnOilTax1, lnOilTax1R, lnOilTax2, lnOilTax2R, lnOilTax3, lnOilTax3R, lnOilTax4, lnOilTax4R, ;
		                lnGasTax1, lnGasTax1R, lnGasTax2, lnGasTax2R, lnGasTax3, lnGasTax3R, lnGasTax4, lnGasTax4R, lnPlugPct, lnPlugPctR, ;
		                lnOthTax1, lnOthTax1R, lnOthTax2, lnOthTax2R, lnOthTax3, lnOthTax3R, lnOthTax4, lnOthTax4R, lnPlugExp, lnPlugExpR
		
		            m.cRptGroup = '3'  &&  Set group for reporting on later
		            m.cRunNo    = ALLT(STR(nRunNo))
		            
		            m.lTransfer = .T.  && Indicates that suspense was transferred
		
		            swselect('investor')    &&  Get owner name for reporting on later
		            SET ORDER TO cOwnerID
		            IF SEEK(m.cOwnerID)
		                m.cOwnName = investor.cOwnName
		            ELSE
		                m.cOwnName = 'Unknown Investor'  &&  Should never get here
		            ENDIF
		
		            swselect('wells')    &&  Get well name for reporting on later
		            SET ORDER TO cWellID
		            IF SEEK(m.cWellID)
		                m.cWellName = wells.cWellName
		            ELSE
		                m.cWellName = 'Unknown Well'  &&  Should never get here
		            ENDIF
		
		            m.nOtherRevenue = m.nMiscRev1 + m.nMiscRev2 + m.nTrpRev + m.nOthRev
		            m.nExpenses     = m.nExpense + m.nTotalE1 + m.nTotalE2 + m.nTotalE3 + m.nTotalE4 + m.nTotalE5 + m.nTotalEA + m.nTotalEB + m.nMktgExp + m.nPlugExp
		            m.nOilTax       = m.nOilTax1 + m.nOilTax2 + m.nOilTax3 + m.nOilTax4
		            m.nGasTax       = m.nGasTax1 + m.nGasTax2 + m.nGasTax3 + m.nGasTax4
		            m.nOthTax       = m.nOthTax1 + m.nOthTax2 + m.nOthTax3 + m.nOthTax4 + m.nBackWith + m.nTaxWith
		
		*  Since this is suspense, substitute the runno with runno_in, so the report looks better, and is more understandable.
		            lnRunNoOrig   = m.nRunNo
		            lcRunYearOrig = m.cRunYear
		            m.cRunNo      = ALLT(STR(m.nRunNo_In))
		            m.cRunYear    = m.cRunYear_In
		
		            INSERT INTO CHANGES FROM MEMVAR
		
		*  When done, switch them back to original values
		            m.cRunNo   = ALLT(STR(lnRunNoOrig))
		            m.cRunYear = lcRunYearOrig
		
		*  Store original values for fields that will be split, so we can adjust the last owner to match up with the total
		*  Settings like Run, Year, Period, cRunYear, etc. should all remain the same, so no need to store them, except as a regular memvar
		            lnIncome    = m.nIncome  
		            lnMktgExp   = m.nMktgExp  
		            lnSevTaxes  = m.nSevTaxes
		            lnExpense   = m.nExpense
		            lnNetCheck  = m.nNetCheck
		            lnTotalE1   = m.nTotalE1
		            lnTotalE2   = m.nTotalE2
		            lnTotalE3   = m.nTotalE3
		            lnTotalE4   = m.nTotalE4
		            lnTotalE5   = m.nTotalE5
		            lnTotalEA   = m.nTotalEA
		            lnTotalEB   = m.nTotalEB
		            lnRevOil    = m.nRevOil
		            lnRevGas    = m.nRevGas
		            lnRevOth    = m.nRevOth
		            lnRevTrp    = m.nRevTRP
		            lnWorkInt   = m.nWorkInt
		            lnIntClass1 = m.nIntClass1
		            lnIntClass2 = m.nIntClass2
		            lnIntClass3 = m.nIntClass3
		            lnIntClass4 = m.nIntClass4
		            lnIntClass5 = m.nIntClass5
		            lnACPInt    = m.nACPInt
		            lnBCPInt    = m.nBCPInt
		            lnPlugPct   = m.nPlugPct
		            lnFlatRate  = m.nFlatRate
		            lnOilRev    = m.nOilRev
		            lnGasRev    = m.nGasRev
		            lnOthRev    = m.nOthRev
		            lnTrpRev    = m.nTrpRev
		            lnRevMisc1  = m.nRevMisc1
		            lnRevMisc2  = m.nRevMisc2
		            lnMiscRev1  = m.nMiscRev1
		            lnMiscRev2  = m.nMiscRev2
		            lnGather    = m.nGather
		            lnCompress  = m.nCompress
		            lnRevTax1   = m.nRevTax1
		            lnRevTax2   = m.nRevTax2
		            lnRevTax3   = m.nRevTax3
		            lnRevTax4   = m.nRevTax4
		            lnRevTax5   = m.nRevTax5
		            lnRevTax6   = m.nRevTax6
		            lnRevTax7   = m.nRevTax7
		            lnRevTax8   = m.nRevTax8
		            lnRevTax9   = m.nRevTax9
		            lnRevTax10  = m.nRevTax10
		            lnRevTax11  = m.nRevTax11
		            lnRevTax12  = m.nRevTax12
		            lnOilTax1   = m.nOilTax1
		            lnOilTax2   = m.nOilTax2
		            lnOilTax3   = m.nOilTax3
		            lnOilTax4   = m.nOilTax4
		            lnGasTax1   = m.nGasTax1
		            lnGasTax2   = m.nGasTax2
		            lnGasTax3   = m.nGasTax3
		            lnGasTax4   = m.nGasTax4
		            lnOthTax1   = m.nOthTax1
		            lnOthTax2   = m.nOthTax2
		            lnOthTax3   = m.nOthTax3
		            lnOthTax4   = m.nOthTax4
		            lnTaxWith   = m.nTaxWith
		            lnBackWith  = m.nBackWith
		
		            swselect('suspense')
		            IF NOT llPreview  &&  Only delete/insert if not previewing
		                DELETE NEXT 1  &&  Get rid of original entry - we've got it stored as memvars, and will work back to the total interest for each type of revenue/expense
		            ENDIF
		
		            FOR lnX = 1 TO 20  &&  Figure out how many owners to divide it up among
		                lcX = ALLTRIM(STR(21 - lnX))
		                IF NOT EMPTY(lcOwnerID&lcX)
		                    lnCount = 21 - lnX
		                    EXIT
		                ENDIF
		            ENDFOR
		
		            FOR lnX = 1 TO lnCount  &&  Scroll through all owners that have been filled in, and divide the history entries
		                lcCount = ALLT(STR(lnX))
		
		                m.cOwnerID = lcOwnerID&lcCount
		
		* Get a temp susp cursor for new owner
		                SELECT * FROM suspense WHERE cOwnerID == m.cOwnerID INTO CURSOR tempsusp
		
		                swselect('investor')    &&  Get this owner's name for the changes cursor to report on later
		                SET ORDER TO cOwnerID
		                IF SEEK(m.cOwnerID)
		                    m.cOwnName = investor.cOwnName
		                ELSE
		                    m.cOwnName = 'Unknown Investor'  &&  Should never get here
		                ENDIF
		
		                m.ciddisb = THISFORM.oRegistry.IncrementCounter('%Shared.Counters.Owner History')
		                SELECT suspense1
		                SET ORDER TO ciddisb
		                SET DELE OFF
		                DO WHILE SEEK(m.ciddisb)
		                    m.ciddisb = THISFORM.oRegistry.IncrementCounter('%Shared.Counters.Owner History')
		                ENDDO
		                SET DELE ON
		
		                m.cRptGroup = '4'  &&  Set group for reporting on later
		
		                IF lnX < lnCount  &&  Not the last owner, so do the math for their share
		
		                    m.nIncome    = swround(lnIncome * lnAmount&lcCount, 2)
		                    lnIncomeR    = lnIncomeR + m.nIncome
		                    m.nMktgExp   = swround(lnMktgExp * lnAmount&lcCount, 2)
		                    lnMktgExpR   = lnMktgExpR + m.nMktgExp
		                    m.nSevTaxes  = swround(lnSevTaxes * lnAmount&lcCount, 2)
		                    lnSevTaxesR  = lnSevTaxesR + m.nSevTaxes
		                    m.nExpense   = swround(lnExpense * lnAmount&lcCount, 2)
		                    lnExpenseR   = lnExpenseR + m.nExpense
		                    m.nNetCheck  = swround(lnNetCheck * lnAmount&lcCount, 2)
		                    lnNetCheckR  = lnNetCheckR + m.nNetCheck
		                    m.nTotalE1   = swround(lnTotalE1 * lnAmount&lcCount, 2)
		                    lnTotalE1R   = lnTotalE1R + m.nTotalE1
		                    m.nTotalE2   = swround(lnTotalE2 * lnAmount&lcCount, 2)
		                    lnTotalE2R   = lnTotalE2R + m.nTotalE2
		                    m.nTotalE3   = swround(lnTotalE3 * lnAmount&lcCount, 2)
		                    lnTotalE3R   = lnTotalE3R + m.nTotalE3
		                    m.nTotalE4   = swround(lnTotalE4 * lnAmount&lcCount, 2)
		                    lnTotalE4R   = lnTotalE4R + m.nTotalE4
		                    m.nTotalE5   = swround(lnTotalE5 * lnAmount&lcCount, 2)
		                    lnTotalE5R   = lnTotalE5R + m.nTotalE5
		                    m.nTotalEA   = swround(lnTotalEA * lnAmount&lcCount, 2)
		                    lnTotalEAR   = lnTotalEAR + m.nTotalEA
		                    m.nTotalEB   = swround(lnTotalEB * lnAmount&lcCount, 2)
		                    lnTotalEBR   = lnTotalEBR + m.nTotalEB
		                    m.nPlugExp   = swround(lnPlugExp * lnAmount&lcCount, 2)
		                    lnPlugExpR   = lnPlugExpR + m.nPlugExp
		                    m.nPlugPct   = swround(lnPlugPct * lnAmount&lcCount, 7)
		                    lnPlugPctR   = lnPlugPctR + m.nPlugPct
		                    m.nRevOil    = swround(lnRevOil * lnAmount&lcCount, 7)
		                    lnRevOilR    = lnRevOilR + m.nRevOil
		                    m.nRevGas    = swround(lnRevGas * lnAmount&lcCount, 7)
		                    lnRevGasR    = lnRevGasR + m.nRevGas
		                    m.nRevOth    = swround(lnRevOth * lnAmount&lcCount, 7)
		                    lnRevOthR    = lnRevOthR + m.nRevOth
		                    m.nRevTRP    = swround(lnRevTrp * lnAmount&lcCount, 7)
		                    lnRevTrpR    = lnRevTrpR + m.nRevTRP
		                    m.nWorkInt   = swround(lnWorkInt * lnAmount&lcCount, 7)
		                    lnWorkIntR   = lnWorkIntR + m.nWorkInt
		                    m.nIntClass1 = swround(lnIntClass1 * lnAmount&lcCount, 7)
		                    lnIntClass1R = lnIntClass1R + m.nIntClass1
		                    m.nIntClass2 = swround(lnIntClass2 * lnAmount&lcCount, 7)
		                    lnIntClass2R = lnIntClass2R + m.nIntClass2
		                    m.nIntClass3 = swround(lnIntClass3 * lnAmount&lcCount, 7)
		                    lnIntClass3R = lnIntClass3R + m.nIntClass3
		                    m.nIntClass4 = swround(lnIntClass4 * lnAmount&lcCount, 7)
		                    lnIntClass4R = lnIntClass4R + m.nIntClass4
		                    m.nIntClass5 = swround(lnIntClass5 * lnAmount&lcCount, 7)
		                    lnIntClass5R = lnIntClass5R + m.nIntClass5
		                    m.nACPInt    = swround(lnACPInt * lnAmount&lcCount, 7)
		                    lnACPIntR    = lnACPIntR + m.nACPInt
		                    m.nBCPInt    = swround(lnBCPInt * lnAmount&lcCount, 7)
		                    lnBCPIntR    = lnBCPIntR + m.nBCPInt
		                    m.nFlatRate  = swround(lnFlatRate * lnAmount&lcCount, 2)
		                    lnFlatRateR  = lnFlatRateR + m.nFlatRate
		                    m.nOilRev    = swround(lnOilRev * lnAmount&lcCount, 2)
		                    lnOilRevR    = lnOilRevR + m.nOilRev
		                    m.nGasRev    = swround(lnGasRev * lnAmount&lcCount, 2)
		                    lnGasRevR    = lnGasRevR + m.nGasRev
		                    m.nOthRev    = swround(lnOthRev * lnAmount&lcCount, 2)
		                    lnOthRevR    = lnOthRevR + m.nOthRev
		                    m.nTrpRev    = swround(lnTrpRev * lnAmount&lcCount, 2)
		                    lnTrpRevR    = lnTrpRevR + m.nTrpRev
		                    m.nRevMisc1  = swround(lnRevMisc1 * lnAmount&lcCount, 7)
		                    lnRevMisc1R  = lnRevMisc1R + m.nRevMisc1
		                    m.nRevMisc2  = swround(lnRevMisc2 * lnAmount&lcCount, 7)
		                    lnRevMisc2R  = lnRevMisc2R + m.nRevMisc2
		                    m.nMiscRev1  = swround(lnMiscRev1 * lnAmount&lcCount, 2)
		                    lnMiscRev1R  = lnMiscRev1R + m.nMiscRev1
		                    m.nMiscRev2  = swround(lnMiscRev2 * lnAmount&lcCount, 2)
		                    lnMiscRev2R  = lnMiscRev2R + m.nMiscRev2
		                    m.nGather    = swround(lnGather * lnAmount&lcCount, 2)
		                    lnGatherR    = lnGatherR + m.nGather
		                    m.nCompress  = swround(lnCompress * lnAmount&lcCount, 2)
		                    lnCompressR  = lnCompressR + m.nCompress
		                    m.nRevTax1   = swround(lnRevTax1 * lnAmount&lcCount, 7)
		                    lnRevTax1R   = lnRevTax1R + m.nRevTax1
		                    m.nRevTax2   = swround(lnRevTax2 * lnAmount&lcCount, 7)
		                    lnRevTax2R   = lnRevTax2R + m.nRevTax2
		                    m.nRevTax3   = swround(lnRevTax3 * lnAmount&lcCount, 7)
		                    lnRevTax3R   = lnRevTax3R + m.nRevTax3
		                    m.nRevTax4   = swround(lnRevTax4 * lnAmount&lcCount, 7)
		                    lnRevTax4R   = lnRevTax4R + m.nRevTax4
		                    m.nRevTax5   = swround(lnRevTax5 * lnAmount&lcCount, 7)
		                    lnRevTax5R   = lnRevTax5R + m.nRevTax5
		                    m.nRevTax6   = swround(lnRevTax6 * lnAmount&lcCount, 7)
		                    lnRevTax6R   = lnRevTax6R + m.nRevTax6
		                    m.nRevTax7   = swround(lnRevTax7 * lnAmount&lcCount, 7)
		                    lnRevTax7R   = lnRevTax7R + m.nRevTax7
		                    m.nRevTax8   = swround(lnRevTax8 * lnAmount&lcCount, 7)
		                    lnRevTax8R   = lnRevTax8R + m.nRevTax8
		                    m.nRevTax9   = swround(lnRevTax9 * lnAmount&lcCount, 7)
		                    lnRevTax9R   = lnRevTax9R + m.nRevTax9
		                    m.nRevTax10  = swround(lnRevTax10 * lnAmount&lcCount, 7)
		                    lnRevTax10R  = lnRevTax10R + m.nRevTax10
		                    m.nRevTax11  = swround(lnRevTax11 * lnAmount&lcCount, 7)
		                    lnRevTax11R  = lnRevTax11R + m.nRevTax11
		                    m.nRevTax12  = swround(lnRevTax12 * lnAmount&lcCount, 7)
		                    lnRevTax12R  = lnRevTax12R + m.nRevTax12
		                    m.nOilTax1   = swround(lnOilTax1 * lnAmount&lcCount, 2)
		                    lnOilTax1R   = lnOilTax1R + m.nOilTax1
		                    m.nOilTax2   = swround(lnOilTax2 * lnAmount&lcCount, 2)
		                    lnOilTax2R   = lnOilTax2R + m.nOilTax2
		                    m.nOilTax3   = swround(lnOilTax3 * lnAmount&lcCount, 2)
		                    lnOilTax3R   = lnOilTax3R + m.nOilTax3
		                    m.nOilTax4   = swround(lnOilTax4 * lnAmount&lcCount, 2)
		                    lnOilTax4R   = lnOilTax4R + m.nOilTax4
		                    m.nGasTax1   = swround(lnGasTax1 * lnAmount&lcCount, 2)
		                    lnGasTax1R   = lnGasTax1R + m.nGasTax1
		                    m.nGasTax2   = swround(lnGasTax2 * lnAmount&lcCount, 2)
		                    lnGasTax2R   = lnGasTax2R + m.nGasTax2
		                    m.nGasTax3   = swround(lnGasTax3 * lnAmount&lcCount, 2)
		                    lnGasTax3R   = lnGasTax3R + m.nGasTax3
		                    m.nGasTax4   = swround(lnGasTax4 * lnAmount&lcCount, 2)
		                    lnGasTax4R   = lnGasTax4R + m.nGasTax4
		                    m.nOthTax1   = swround(lnOthTax1 * lnAmount&lcCount, 2)
		                    lnOthTax1R   = lnOthTax1R + m.nOthTax1
		                    m.nOthTax2   = swround(lnOthTax2 * lnAmount&lcCount, 2)
		                    lnOthTax2R   = lnOthTax2R + m.nOthTax2
		                    m.nOthTax3   = swround(lnOthTax3 * lnAmount&lcCount, 2)
		                    lnOthTax3R   = lnOthTax3R + m.nOthTax3
		                    m.nOthTax4   = swround(lnOthTax4 * lnAmount&lcCount, 2)
		                    lnOthTax4R   = lnOthTax4R + m.nOthTax4
		                    m.nTaxWith   = swround(lnTaxWith * lnAmount&lcCount, 2)
		                    lnTaxWithR   = lnTaxWithR + m.nTaxWith
		                    m.nBackWith  = swround(lnBackWith * lnAmount&lcCount, 2)
		                    lnBackWithR  = lnBackWithR + m.nBackWith
		
		                ELSE  &&  Last owner, so don't do the math
		
		                    m.nIncome    = lnIncome - lnIncomeR
		                    m.nMktgExp   = lnMktgExp - lnMktgExpR
		                    m.nSevTaxes  = lnSevTaxes - lnSevTaxesR
		                    m.nExpense   = lnExpense - lnExpenseR
		                    m.nNetCheck  = lnNetCheck - lnNetCheckR
		                    m.nTotalE1   = lnTotalE1 - lnTotalE1R
		                    m.nTotalE2   = lnTotalE2 - lnTotalE2R
		                    m.nTotalE3   = lnTotalE3 - lnTotalE3R
		                    m.nTotalE4   = lnTotalE4 - lnTotalE4R
		                    m.nTotalE5   = lnTotalE5 - lnTotalE5R
		                    m.nTotalEA   = lnTotalEA - lnTotalEAR
		                    m.nTotalEB   = lnTotalEB - lnTotalEBR
		                    m.nPlugExp   = lnPlugExp - lnPlugExpR
		                    m.nRevOil    = lnRevOil - lnRevOilR
		                    m.nRevGas    = lnRevGas - lnRevGasR
		                    m.nRevOth    = lnRevOth - lnRevOthR
		                    m.nRevTRP    = lnRevTrp - lnRevTrpR
		                    m.nWorkInt   = lnWorkInt - lnWorkIntR
		                    m.nIntClass1 = lnIntClass1 - lnIntClass1R
		                    m.nIntClass2 = lnIntClass2 - lnIntClass2R
		                    m.nIntClass3 = lnIntClass3 - lnIntClass3R
		                    m.nIntClass4 = lnIntClass4 - lnIntClass4R
		                    m.nIntClass5 = lnIntClass5 - lnIntClass5R
		                    m.nACPInt    = lnACPInt - lnACPIntR
		                    m.nBCPInt    = lnBCPInt - lnBCPIntR
		                    m.nFlatRate  = lnFlatRate - lnFlatRateR
		                    m.nOilRev    = lnOilRev - lnOilRevR
		                    m.nGasRev    = lnGasRev - lnGasRevR
		                    m.nOthRev    = lnOthRev - lnOthRevR
		                    m.nTrpRev    = lnTrpRev - lnTrpRevR
		                    m.nRevMisc1  = lnRevMisc1 - lnRevMisc1R
		                    m.nRevMisc2  = lnRevMisc2 - lnRevMisc2R
		                    m.nMiscRev1  = lnMiscRev1 - lnMiscRev1R
		                    m.nMiscRev2  = lnMiscRev2 - lnMiscRev2R
		                    m.nGather    = lnGather - lnGatherR
		                    m.nCompress  = lnCompress - lnCompressR
		                    m.nRevTax1   = lnRevTax1 - lnRevTax1R
		                    m.nRevTax2   = lnRevTax2 - lnRevTax2R
		                    m.nRevTax3   = lnRevTax3 - lnRevTax3R
		                    m.nRevTax4   = lnRevTax4 - lnRevTax4R
		                    m.nRevTax5   = lnRevTax5 - lnRevTax5R
		                    m.nRevTax6   = lnRevTax6 - lnRevTax6R
		                    m.nRevTax7   = lnRevTax7 - lnRevTax7R
		                    m.nRevTax8   = lnRevTax8 - lnRevTax8R
		                    m.nRevTax9   = lnRevTax9 - lnRevTax9R
		                    m.nRevTax10  = lnRevTax10 - lnRevTax10R
		                    m.nRevTax11  = lnRevTax11 - lnRevTax11R
		                    m.nRevTax12  = lnRevTax12 - lnRevTax12R
		                    m.nOilTax1   = lnOilTax1 - lnOilTax1R
		                    m.nOilTax2   = lnOilTax2 - lnOilTax2R
		                    m.nOilTax3   = lnOilTax3 - lnOilTax3R
		                    m.nOilTax4   = lnOilTax4 - lnOilTax4R
		                    m.nGasTax1   = lnGasTax1 - lnGasTax1R
		                    m.nGasTax2   = lnGasTax2 - lnGasTax2R
		                    m.nGasTax3   = lnGasTax3 - lnGasTax3R
		                    m.nGasTax4   = lnGasTax4 - lnGasTax4R
		                    m.nOthTax1   = lnOthTax1 - lnOthTax1R
		                    m.nOthTax2   = lnOthTax2 - lnOthTax2R
		                    m.nOthTax3   = lnOthTax3 - lnOthTax3R
		                    m.nOthTax4   = lnOthTax4 - lnOthTax4R
		                    m.nTaxWith   = lnTaxWith - lnTaxWithR
		                    m.nBackWith  = lnBackWith - lnBackWithR
		
		                ENDIF
		
		                m.nOtherRevenue = m.nMiscRev1 + m.nMiscRev2 + m.nTrpRev + m.nOthRev
		                m.nExpenses     = m.nExpense + m.nTotalE1 + m.nTotalE2 + m.nTotalE3 + m.nTotalE4 + m.nTotalE5 + m.nTotalEA + m.nTotalEB + m.nMktgExp + m.nPlugExp
		                m.nOilTax       = m.nOilTax1 + m.nOilTax2 + m.nOilTax3 + m.nOilTax4
		                m.nGasTax       = m.nGasTax1 + m.nGasTax2 + m.nGasTax3 + m.nGasTax4
		                m.nOthTax       = m.nOthTax1 + m.nOthTax2 + m.nOthTax3 + m.nOthTax4 + m.nBackWith + m.nTaxWith
		
		*  Since this is suspense, substitute the runno with runno_in, so the report looks better, and is more understandable.
		                m.cRunNo   = ALLT(STR(m.nRunNo_In))
		                m.cRunYear = m.cRunYear_In
		
		                INSERT INTO CHANGES FROM MEMVAR
		
		*  When done, switch them back to original values, stored previously
		                m.cRunNo   = ALLT(STR(lnRunNoOrig))
		                m.cRunYear = lcRunYearOrig
		
		                IF NOT llPreview  &&  Only delete/insert if not previewing
		                    SELECT tempsusp
		                    LOCATE FOR cOwnerID == m.cOwnerID AND cWellID == m.cWellID AND cTypeInv = m.cTypeInv AND ;
		                        hYear = m.hYear AND hperiod = m.hperiod AND nRunNo = m.nRunNo AND cRunYear = m.cRunYear AND ;
		                        nRunNo_In = m.nRunNo_In AND cRunYear_In = m.cRunYear_In AND lFlat = m.lFlat AND ciddisb <> lcidDisb
		                    IF FOUND()  &&  It found an existing record that matches exactly to the one that would be inserted, so add to it
		                        lcidDisb = tempsusp.ciddisb
		                        swselect('suspense')
		                        SET ORDER TO ciddisb
		                        IF SEEK(lcidDisb)
		                            REPLACE nIncome WITH nIncome + m.nIncome, ;
		                                   nMktgExp WITH nMktgExp + m.nMktgExp, ;
		                                   nSevTaxes WITH nSevTaxes + m.nSevTaxes, ;
		                                   nExpense WITH nExpense + m.nExpense, ;
		                                nNetCheck WITH nNetCheck + m.nNetCheck, ;
		                                nTotalE1 WITH nTotalE1 + m.nTotalE1, ;
		                                nTotalE2 WITH nTotalE2 + m.nTotalE2, ;
		                                nTotalE3 WITH nTotalE3 + m.nTotalE3, ;
		                                nTotalE4 WITH nTotalE4 + m.nTotalE4, ;
		                                nTotalE5 WITH nTotalE5 + m.nTotalE5, ;
		                                nTotalEA WITH nTotalEA + m.nTotalEA, ;
		                                nTotalEB WITH nTotalEB + m.nTotalEB, ;
		                                nPlugExp WITH nPlugExp + m.nPlugExp, ;
		                                nRevOil WITH nRevOil + m.nRevOil, ;
		                                nRevGas WITH nRevGas + m.nRevGas, ;
		                                nRevOth WITH nRevOth + m.nRevOth, ;
		                                nRevTRP WITH nRevTRP + m.nRevTRP, ;
		                                nWorkInt WITH nWorkInt + m.nWorkInt, ;
		                                nIntClass1 WITH nIntClass1 + m.nIntClass1, ;
		                                nIntClass2 WITH nIntClass2 + m.nIntClass2, ;
		                                nIntClass3 WITH nIntClass3 + m.nIntClass3, ;
		                                nIntClass4 WITH nIntClass4 + m.nIntClass4, ;
		                                nIntClass5 WITH nIntClass5 + m.nIntClass5, ;
		                                nPlugPct   WITH nPlugPct + m.nPlugPct, ;
		                                nACPInt WITH nACPInt + m.nACPInt, ;
		                                nBCPInt WITH nBCPInt + m.nBCPInt, ;
		                                nFlatRate WITH nFlatRate + m.nFlatRate, ;
		                                nOilRev WITH nOilRev + m.nOilRev, ;
		                                nGasRev WITH nGasRev + m.nGasRev, ;
		                                nOthRev WITH nOthRev + m.nOthRev, ;
		                                nTrpRev WITH nTrpRev + m.nTrpRev, ;
		                                nRevMisc1 WITH nRevMisc1 + m.nRevMisc1, ;
		                                nRevMisc2 WITH nRevMisc2 + m.nRevMisc2, ;
		                                nMiscRev1 WITH nMiscRev1 + m.nMiscRev1, ;
		                                nMiscRev2 WITH nMiscRev2 + m.nMiscRev2, ;
		                                nGather WITH nGather + m.nGather, ;
		                                nCompress WITH nCompress + m.nCompress, ;
		                                nRevTax1 WITH nRevTax1 + m.nRevTax1, ;
		                                nRevTax2 WITH nRevTax2 + m.nRevTax2, ;
		                                nRevTax3 WITH nRevTax3 + m.nRevTax3, ;
		                                nRevTax4 WITH nRevTax4 + m.nRevTax4, ;
		                                nRevTax5 WITH nRevTax5 + m.nRevTax5, ;
		                                nRevTax6 WITH nRevTax6 + m.nRevTax6, ;
		                                nRevTax7 WITH nRevTax7 + m.nRevTax7, ;
		                                nRevTax8 WITH nRevTax8 + m.nRevTax8, ;
		                                nRevTax9 WITH nRevTax9 + m.nRevTax9, ;
		                                nRevTax10 WITH nRevTax10 + m.nRevTax10, ;
		                                nRevTax11 WITH nRevTax11 + m.nRevTax11, ;
		                                nRevTax12 WITH nRevTax12 + m.nRevTax12, ;
		                                nOilTax1 WITH nOilTax1 + m.nOilTax1, ;
		                                nOilTax2 WITH nOilTax2 + m.nOilTax2, ;
		                                nOilTax3 WITH nOilTax3 + m.nOilTax3, ;
		                                nOilTax4 WITH nOilTax4 + m.nOilTax4, ;
		                                nGasTax1 WITH nGasTax1 + m.nGasTax1, ;
		                                nGasTax2 WITH nGasTax2 + m.nGasTax2, ;
		                                nGasTax3 WITH nGasTax3 + m.nGasTax3, ;
		                                nGasTax4 WITH nGasTax4 + m.nGasTax4, ;
		                                nOthTax1 WITH nOthTax1 + m.nOthTax1, ;
		                                nOthTax2 WITH nOthTax2 + m.nOthTax2, ;
		                                nOthTax3 WITH nOthTax3 + m.nOthTax3, ;
		                                nOthTax4 WITH nOthTax4 + m.nOthTax4, ;
		                                nTaxWith WITH nTaxWith + m.nTaxWith, ;
		                                nBackWith WITH nBackWith + m.nBackWith
		                        ELSE
		                            swselect('wellinv')
		                            LOCATE FOR cOwnerID == m.cOwnerID AND cWellID == m.cWellID AND cTypeInv = m.cTypeInv
		                            IF FOUND()
		                                m.cprogcode = cprogcode
		                            ENDIF
		                            INSERT INTO suspense FROM MEMVAR
		                        ENDIF
		                    ELSE  &&  No existing record, so add a new one
		                        swselect('wellinv')
		                        LOCATE FOR cOwnerID == m.cOwnerID AND cWellID == m.cWellID AND cTypeInv = m.cTypeInv
		                        IF FOUND()
		                            m.cprogcode = cprogcode
		                        ENDIF
		                        INSERT INTO suspense FROM MEMVAR
		                    ENDIF
		                ENDIF
		
		                swselect('suspense')
		                GOTO lnRecNo  &&  Go back to the original entry, so it will be sure and scan properly - otherwise, it just splits up the first record
		
		            ENDFOR
		
		        ENDSCAN
		    ENDIF
		
		    IF THISFORM.chkOwnHist.VALUE = .T.
		***********************************
		        WAIT WINDOW NOWAIT 'Transferring Owner History'
		        SELECT * FROM disbhist INTO CURSOR temphist WHERE &lcScanFor
		** Removed cRecType = 'R' from above SELECT so payments would be transfered too. - pws 8/13/13
		        SELECT temphist  && Transfer owner history
		        SCAN
		            llAnyHistRecords = .T.
		
		            lnRecNo  = RECNO()
		            lcidDisb = ciddisb  &&  Store this, so when it tries to add it to an existing record, it's not using the same one
		
		            SCATTER MEMVAR
		
		            swselect('ownpcts')    &&  Get the percentages
		            SET ORDER TO ciddisb
		            IF SEEK(m.ciddisb)
		                SCATTER MEMVAR
		                llFoundOwnPcts = .T.
		            ELSE
		                SCATTER MEMVAR BLANK
		                llFoundOwnPcts = .F.
		            ENDIF
		
		            STORE 0 TO lnRevOil, lnRevGas, lnRevOth, lnRevTrp, lnRevMisc1, lnRevMisc2, lnWorkInt, lnIntClass1, lnIntClass2, ;
		                lnIntClass3, lnIntClass4, lnIntClass5, lnBCPInt, lnACPInt, lnAPOInt, lnRevTax1, lnRevTax2, lnRevTax3, ;
		                lnRevTax4, lnRevTax5, lnRevTax6, lnRevTax7, lnRevTax8, lnRevTax9, lnRevTax10, lnRevTax11, lnRevTax12, ;
		                lnRevOilR, lnRevGasR, lnRevOthR, lnRevTrpR, lnRevMisc1R, lnRevMisc2R, lnWorkIntR, lnIntClass1R, lnIntClass2R, ;
		                lnIntClass3R, lnIntClass4R, lnIntClass5R, lnBCPIntR, lnACPIntR, lnAPOIntR, lnRevTax1R, lnRevTax2R, lnRevTax3R, ;
		                lnRevTax4R, lnRevTax5R, lnRevTax6R, lnRevTax7R, lnRevTax8R, lnRevTax9R, lnRevTax10R, lnRevTax11R, lnRevTax12R, lnFlatRate, lnFlatRateR, ;
		                lnIncome, lnIncomeR, lnExpenses, lnExpensesR, lnTaxWith, lnTaxWithR, lnBackWith, lnBackWithR, lnAmount, lnAmountR, ;
		                lnMktgExp, lnMktgExpR, lnSevTaxes, lnSevTaxesR, lnExpense, lnExpenseR, lnNetCheck, lnNetCheckR, lnTotalE1, lnTotalE1R, ;
		                lnTotalE2, lnTotalE2R, lnTotalE3, lnTotalE3R, lnTotalE4, lnTotalE4R, lnTotalE5, lnTotalE5R, lnTotalEA, lnTotalEAR, ;
		                lnTotalEB, lnTotalEBR, lnOilRev, lnOilRevR, lnGasRev, lnGasRevR, lnOthRev, lnOthRevR, lnTrpRev, lnTrpRevR, ;
		                lnMiscRev1, lnMiscRev1R, lnMiscRev2, lnMiscRev2R, lnGather, lnGatherR, lnCompress, lnCompressR, ;
		                lnOilTax1, lnOilTax1R, lnOilTax2, lnOilTax2R, lnOilTax3, lnOilTax3R, lnOilTax4, lnOilTax4R, ;
		                lnGasTax1, lnGasTax1R, lnGasTax2, lnGasTax2R, lnGasTax3, lnGasTax3R, lnGasTax4, lnGasTax4R, lnPlugExp, lnPlugExpR, ;
		                lnOthTax1, lnOthTax1R, lnOthTax2, lnOthTax2R, lnOthTax3, lnOthTax3R, lnOthTax4, lnOthTax4R, lnPctPct, lnPlugPctR
		
		            m.cRptGroup = '5'  &&  Set group for reporting on later
		            m.cRunNo    = TRANSFORM(nRunNo)
		            
		            m.lTransfer = .t. && Indicates History was transferred
		
		            swselect('investor')    &&  Get owner name for reporting on later
		            SET ORDER TO cOwnerID
		            IF SEEK(m.cOwnerID)
		                m.cOwnName = investor.cOwnName
		            ELSE
		                m.cOwnName = 'Unknown Investor'  &&  Should never get here
		            ENDIF
		
		            swselect('wells')    &&  Get well name for reporting on later
		            SET ORDER TO cWellID
		            IF SEEK(m.cWellID)
		                m.cWellName = wells.cWellName
		            ELSE
		                m.cWellName = 'Unknown Well'  &&  Should never get here
		            ENDIF
		
		            m.nOtherRevenue = m.nMiscRev1 + m.nMiscRev2 + m.nTrpRev + m.nOthRev
		            m.nExpenses     = m.nExpense + m.nTotalE1 + m.nTotalE2 + m.nTotalE3 + m.nTotalE4 + m.nTotalE5 + m.nTotalEA + m.nTotalEB + m.nMktgExp
		            m.nOilTax       = m.nOilTax1 + m.nOilTax2 + m.nOilTax3 + m.nOilTax4
		            m.nGasTax       = m.nGasTax1 + m.nGasTax2 + m.nGasTax3 + m.nGasTax4
		            m.nOthTax       = m.nOthTax1 + m.nOthTax2 + m.nOthTax3 + m.nOthTax4 + m.nBackWith + m.nTaxWith
		
		            INSERT INTO CHANGES FROM MEMVAR
		
		            lnIncome    = m.nIncome  &&  Store original values for fields that will be split, so we can adjust the last owner to match up with the total
		            lnMktgExp   = m.nMktgExp  &&  Settings like Run, Year, Period, cRunYear, etc. should all remain the same, so no need to store them, except as a regular memvar
		            lnSevTaxes  = m.nSevTaxes
		            lnExpense   = m.nExpense
		            lnNetCheck  = m.nNetCheck
		            lnTotalE1   = m.nTotalE1
		            lnTotalE2   = m.nTotalE2
		            lnTotalE3   = m.nTotalE3
		            lnTotalE4   = m.nTotalE4
		            lnTotalE5   = m.nTotalE5
		            lnTotalEA   = m.nTotalEA
		            lnTotalEB   = m.nTotalEB
		            lnPlugExp   = m.nPlugExp
		            lnRevOil    = m.nRevOil
		            lnRevGas    = m.nRevGas
		            lnRevOth    = m.nRevOth
		            lnRevTrp    = m.nRevTRP
		            lnWorkInt   = m.nWorkInt
		            lnIntClass1 = m.nIntClass1
		            lnIntClass2 = m.nIntClass2
		            lnIntClass3 = m.nIntClass3
		            lnIntClass4 = m.nIntClass4
		            lnIntClass5 = m.nIntClass5
		            lnACPInt    = m.nACPInt
		            lnBCPInt    = m.nBCPInt
		            lnPlugPct   = m.nPlugPct
		            lnFlatRate  = m.nFlatRate
		            lnOilRev    = m.nOilRev
		            lnGasRev    = m.nGasRev
		            lnOthRev    = m.nOthRev
		            lnTrpRev    = m.nTrpRev
		            lnRevMisc1  = m.nRevMisc1
		            lnRevMisc2  = m.nRevMisc2
		            lnMiscRev1  = m.nMiscRev1
		            lnMiscRev2  = m.nMiscRev2
		            lnGather    = m.nGather
		            lnCompress  = m.nCompress
		            lnRevTax1   = m.nRevTax1
		            lnRevTax2   = m.nRevTax2
		            lnRevTax3   = m.nRevTax3
		            lnRevTax4   = m.nRevTax4
		            lnRevTax5   = m.nRevTax5
		            lnRevTax6   = m.nRevTax6
		            lnRevTax7   = m.nRevTax7
		            lnRevTax8   = m.nRevTax8
		            lnRevTax9   = m.nRevTax9
		            lnRevTax10  = m.nRevTax10
		            lnRevTax11  = m.nRevTax11
		            lnRevTax12  = m.nRevTax12
		            lnOilTax1   = m.nOilTax1
		            lnOilTax2   = m.nOilTax2
		            lnOilTax3   = m.nOilTax3
		            lnOilTax4   = m.nOilTax4
		            lnGasTax1   = m.nGasTax1
		            lnGasTax2   = m.nGasTax2
		            lnGasTax3   = m.nGasTax3
		            lnGasTax4   = m.nGasTax4
		            lnOthTax1   = m.nOthTax1
		            lnOthTax2   = m.nOthTax2
		            lnOthTax3   = m.nOthTax3
		            lnOthTax4   = m.nOthTax4
		            lnTaxWith   = m.nTaxWith
		            lnBackWith  = m.nBackWith
		
		            IF NOT llPreview  &&  Only delete/insert if not previewing
		                swselect('disbhist')
		                SET ORDER TO ciddisb
		                IF SEEK(m.ciddisb)
		                    DELETE NEXT 1  &&  Get rid of original entry - we've got it stored as memvars, and will work back to the total interest for each type of revenue/expense
		                    IF llFoundOwnPcts  &&  We found a matching ownpcts record above, so delete it now
		                        swselect('ownpcts')
		                        DELETE NEXT 1
		                    ENDIF
		                ENDIF
		            ENDIF
		
		            FOR lnX = 1 TO 20  &&  Figure out how many owners to divide it up among
		                lcX = ALLTRIM(STR(21 - lnX))
		                IF NOT EMPTY(lcOwnerID&lcX)
		                    lnCount = 21 - lnX
		                    EXIT
		                ENDIF
		            ENDFOR
		
		            FOR lnX = 1 TO lnCount  &&  Scroll through all owners that have been filled in, and divide the history entries
		                lcCount = ALLT(STR(lnX))
		
		                m.cOwnerID = lcOwnerID&lcCount
		
		* Create a temp cursor of new owner's disbhist records
		                SELECT * FROM disbhist WHERE cOwnerID == m.cOwnerID AND cWellID == m.cWellID INTO CURSOR tempdisb
		
		                swselect('investor')    &&  Get this owner's name for the changes cursor to report on later
		                SET ORDER TO cOwnerID
		                IF SEEK(m.cOwnerID)
		                    m.cOwnName = investor.cOwnName
		                ELSE
		                    m.cOwnName = 'Unknown Investor'  &&  Should never get here
		                ENDIF
		
		                m.ciddisb = THISFORM.oRegistry.IncrementCounter('%Shared.Counters.Owner History')
		                SELECT disbhist1
		                SET ORDER TO ciddisb
		                SET DELE OFF
		                DO WHILE SEEK(m.ciddisb)
		                    m.ciddisb = THISFORM.oRegistry.IncrementCounter('%Shared.Counters.Owner History')
		                ENDDO
		                SET DELE ON
		
		                m.cRptGroup = '6'  &&  Set group for reporting on later
		
		                IF lnX < lnCount  &&  Not the last owner, so do the math for their share
		
		                    m.nIncome    = swround(lnIncome * lnAmount&lcCount, 2)
		                    lnIncomeR    = lnIncomeR + m.nIncome
		                    m.nMktgExp   = swround(lnMktgExp * lnAmount&lcCount, 2)
		                    lnMktgExpR   = lnMktgExpR + m.nMktgExp
		                    m.nSevTaxes  = swround(lnSevTaxes * lnAmount&lcCount, 2)
		                    lnSevTaxesR  = lnSevTaxesR + m.nSevTaxes
		                    m.nExpense   = swround(lnExpense * lnAmount&lcCount, 2)
		                    lnExpenseR   = lnExpenseR + m.nExpense
		                    m.nNetCheck  = swround(lnNetCheck * lnAmount&lcCount, 2)
		                    lnNetCheckR  = lnNetCheckR + m.nNetCheck
		                    m.nTotalE1   = swround(lnTotalE1 * lnAmount&lcCount, 2)
		                    lnTotalE1R   = lnTotalE1R + m.nTotalE1
		                    m.nTotalE2   = swround(lnTotalE2 * lnAmount&lcCount, 2)
		                    lnTotalE2R   = lnTotalE2R + m.nTotalE2
		                    m.nTotalE3   = swround(lnTotalE3 * lnAmount&lcCount, 2)
		                    lnTotalE3R   = lnTotalE3R + m.nTotalE3
		                    m.nTotalE4   = swround(lnTotalE4 * lnAmount&lcCount, 2)
		                    lnTotalE4R   = lnTotalE4R + m.nTotalE4
		                    m.nTotalE5   = swround(lnTotalE5 * lnAmount&lcCount, 2)
		                    lnTotalE5R   = lnTotalE5R + m.nTotalE5
		                    m.nTotalEA   = swround(lnTotalEA * lnAmount&lcCount, 2)
		                    lnTotalEAR   = lnTotalEAR + m.nTotalEA
		                    m.nTotalEB   = swround(lnTotalEB * lnAmount&lcCount, 2)
		                    lnTotalEBR   = lnTotalEBR + m.nTotalEB
		                    m.nPlugExp   = swround(lnPlugExp * lnAmount&lcCount, 2)
		                    lnPlugExpR   = lnPlugExpR + m.nPlugExp
		                    m.nRevOil    = swround(lnRevOil * lnAmount&lcCount, 7)
		                    lnRevOilR    = lnRevOilR + m.nRevOil
		                    m.nRevGas    = swround(lnRevGas * lnAmount&lcCount, 7)
		                    lnRevGasR    = lnRevGasR + m.nRevGas
		                    m.nRevOth    = swround(lnRevOth * lnAmount&lcCount, 7)
		                    lnRevOthR    = lnRevOthR + m.nRevOth
		                    m.nRevTRP    = swround(lnRevTrp * lnAmount&lcCount, 7)
		                    lnRevTrpR    = lnRevTrpR + m.nRevTRP
		                    m.nWorkInt   = swround(lnWorkInt * lnAmount&lcCount, 7)
		                    lnWorkIntR   = lnWorkIntR + m.nWorkInt
		                    m.nIntClass1 = swround(lnIntClass1 * lnAmount&lcCount, 7)
		                    lnIntClass1R = lnIntClass1R + m.nIntClass1
		                    m.nIntClass2 = swround(lnIntClass2 * lnAmount&lcCount, 7)
		                    lnIntClass2R = lnIntClass2R + m.nIntClass2
		                    m.nIntClass3 = swround(lnIntClass3 * lnAmount&lcCount, 7)
		                    lnIntClass3R = lnIntClass3R + m.nIntClass3
		                    m.nIntClass4 = swround(lnIntClass4 * lnAmount&lcCount, 7)
		                    lnIntClass4R = lnIntClass4R + m.nIntClass4
		                    m.nIntClass5 = swround(lnIntClass5 * lnAmount&lcCount, 7)
		                    lnIntClass5R = lnIntClass5R + m.nIntClass5
		                    m.nACPInt    = swround(lnACPInt * lnAmount&lcCount, 7)
		                    lnACPIntR    = lnACPIntR + m.nACPInt
		                    m.nPlugPct   = swround(lnPlugPct * lnAmount&lcCount, 7)
		                    lnPlugPctR   = lnPlugPctR + m.nPlugPct
		                    m.nBCPInt    = swround(lnBCPInt * lnAmount&lcCount, 7)
		                    lnBCPIntR    = lnBCPIntR + m.nBCPInt
		                    m.nFlatRate  = swround(lnFlatRate * lnAmount&lcCount, 2)
		                    lnFlatRateR  = lnFlatRateR + m.nFlatRate
		                    m.nOilRev    = swround(lnOilRev * lnAmount&lcCount, 2)
		                    lnOilRevR    = lnOilRevR + m.nOilRev
		                    m.nGasRev    = swround(lnGasRev * lnAmount&lcCount, 2)
		                    lnGasRevR    = lnGasRevR + m.nGasRev
		                    m.nOthRev    = swround(lnOthRev * lnAmount&lcCount, 2)
		                    lnOthRevR    = lnOthRevR + m.nOthRev
		                    m.nTrpRev    = swround(lnTrpRev * lnAmount&lcCount, 2)
		                    lnTrpRevR    = lnTrpRevR + m.nTrpRev
		                    m.nRevMisc1  = swround(lnRevMisc1 * lnAmount&lcCount, 7)
		                    lnRevMisc1R  = lnRevMisc1R + m.nRevMisc1
		                    m.nRevMisc2  = swround(lnRevMisc2 * lnAmount&lcCount, 7)
		                    lnRevMisc2R  = lnRevMisc2R + m.nRevMisc2
		                    m.nMiscRev1  = swround(lnMiscRev1 * lnAmount&lcCount, 2)
		                    lnMiscRev1R  = lnMiscRev1R + m.nMiscRev1
		                    m.nMiscRev2  = swround(lnMiscRev2 * lnAmount&lcCount, 2)
		                    lnMiscRev2R  = lnMiscRev2R + m.nMiscRev2
		                    m.nGather    = swround(lnGather * lnAmount&lcCount, 2)
		                    lnGatherR    = lnGatherR + m.nGather
		                    m.nCompress  = swround(lnCompress * lnAmount&lcCount, 2)
		                    lnCompressR  = lnCompressR + m.nCompress
		                    m.nRevTax1   = swround(lnRevTax1 * lnAmount&lcCount, 7)
		                    lnRevTax1R   = lnRevTax1R + m.nRevTax1
		                    m.nRevTax2   = swround(lnRevTax2 * lnAmount&lcCount, 7)
		                    lnRevTax2R   = lnRevTax2R + m.nRevTax2
		                    m.nRevTax3   = swround(lnRevTax3 * lnAmount&lcCount, 7)
		                    lnRevTax3R   = lnRevTax3R + m.nRevTax3
		                    m.nRevTax4   = swround(lnRevTax4 * lnAmount&lcCount, 7)
		                    lnRevTax4R   = lnRevTax4R + m.nRevTax4
		                    m.nRevTax5   = swround(lnRevTax5 * lnAmount&lcCount, 7)
		                    lnRevTax5R   = lnRevTax5R + m.nRevTax5
		                    m.nRevTax6   = swround(lnRevTax6 * lnAmount&lcCount, 7)
		                    lnRevTax6R   = lnRevTax6R + m.nRevTax6
		                    m.nRevTax7   = swround(lnRevTax7 * lnAmount&lcCount, 7)
		                    lnRevTax7R   = lnRevTax7R + m.nRevTax7
		                    m.nRevTax8   = swround(lnRevTax8 * lnAmount&lcCount, 7)
		                    lnRevTax8R   = lnRevTax8R + m.nRevTax8
		                    m.nRevTax9   = swround(lnRevTax9 * lnAmount&lcCount, 7)
		                    lnRevTax9R   = lnRevTax9R + m.nRevTax9
		                    m.nRevTax10  = swround(lnRevTax10 * lnAmount&lcCount, 7)
		                    lnRevTax10R  = lnRevTax10R + m.nRevTax10
		                    m.nRevTax11  = swround(lnRevTax11 * lnAmount&lcCount, 7)
		                    lnRevTax11R  = lnRevTax11R + m.nRevTax11
		                    m.nRevTax12  = swround(lnRevTax12 * lnAmount&lcCount, 7)
		                    lnRevTax12R  = lnRevTax12R + m.nRevTax12
		                    m.nOilTax1   = swround(lnOilTax1 * lnAmount&lcCount, 2)
		                    lnOilTax1R   = lnOilTax1R + m.nOilTax1
		                    m.nOilTax2   = swround(lnOilTax2 * lnAmount&lcCount, 2)
		                    lnOilTax2R   = lnOilTax2R + m.nOilTax2
		                    m.nOilTax3   = swround(lnOilTax3 * lnAmount&lcCount, 2)
		                    lnOilTax3R   = lnOilTax3R + m.nOilTax3
		                    m.nOilTax4   = swround(lnOilTax4 * lnAmount&lcCount, 2)
		                    lnOilTax4R   = lnOilTax4R + m.nOilTax4
		                    m.nGasTax1   = swround(lnGasTax1 * lnAmount&lcCount, 2)
		                    lnGasTax1R   = lnGasTax1R + m.nGasTax1
		                    m.nGasTax2   = swround(lnGasTax2 * lnAmount&lcCount, 2)
		                    lnGasTax2R   = lnGasTax2R + m.nGasTax2
		                    m.nGasTax3   = swround(lnGasTax3 * lnAmount&lcCount, 2)
		                    lnGasTax3R   = lnGasTax3R + m.nGasTax3
		                    m.nGasTax4   = swround(lnGasTax4 * lnAmount&lcCount, 2)
		                    lnGasTax4R   = lnGasTax4R + m.nGasTax4
		                    m.nOthTax1   = swround(lnOthTax1 * lnAmount&lcCount, 2)
		                    lnOthTax1R   = lnOthTax1R + m.nOthTax1
		                    m.nOthTax2   = swround(lnOthTax2 * lnAmount&lcCount, 2)
		                    lnOthTax2R   = lnOthTax2R + m.nOthTax2
		                    m.nOthTax3   = swround(lnOthTax3 * lnAmount&lcCount, 2)
		                    lnOthTax3R   = lnOthTax3R + m.nOthTax3
		                    m.nOthTax4   = swround(lnOthTax4 * lnAmount&lcCount, 2)
		                    lnOthTax4R   = lnOthTax4R + m.nOthTax4
		                    m.nTaxWith   = swround(lnTaxWith * lnAmount&lcCount, 2)
		                    lnTaxWithR   = lnTaxWithR + m.nTaxWith
		                    m.nBackWith  = swround(lnBackWith * lnAmount&lcCount, 2)
		                    lnBackWithR  = lnBackWithR + m.nBackWith
		
		                ELSE  &&  Last owner, so don't do the math
		
		                    m.nIncome    = lnIncome - lnIncomeR
		                    m.nMktgExp   = lnMktgExp - lnMktgExpR
		                    m.nSevTaxes  = lnSevTaxes - lnSevTaxesR
		                    m.nExpense   = lnExpense - lnExpenseR
		                    m.nNetCheck  = lnNetCheck - lnNetCheckR
		                    m.nTotalE1   = lnTotalE1 - lnTotalE1R
		                    m.nTotalE2   = lnTotalE2 - lnTotalE2R
		                    m.nTotalE3   = lnTotalE3 - lnTotalE3R
		                    m.nTotalE4   = lnTotalE4 - lnTotalE4R
		                    m.nTotalE5   = lnTotalE5 - lnTotalE5R
		                    m.nTotalEA   = lnTotalEA - lnTotalEAR
		                    m.nTotalEB   = lnTotalEB - lnTotalEBR
		                    m.nPlugExp   = lnPlugExp - lnPlugExpR
		                    m.nRevOil    = lnRevOil - lnRevOilR
		                    m.nRevGas    = lnRevGas - lnRevGasR
		                    m.nRevOth    = lnRevOth - lnRevOthR
		                    m.nRevTRP    = lnRevTrp - lnRevTrpR
		                    m.nWorkInt   = lnWorkInt - lnWorkIntR
		                    m.nIntClass1 = lnIntClass1 - lnIntClass1R
		                    m.nIntClass2 = lnIntClass2 - lnIntClass2R
		                    m.nIntClass3 = lnIntClass3 - lnIntClass3R
		                    m.nIntClass4 = lnIntClass4 - lnIntClass4R
		                    m.nIntClass5 = lnIntClass5 - lnIntClass5R
		                    m.nACPInt    = lnACPInt - lnACPIntR
		                    m.nBCPInt    = lnBCPInt - lnBCPIntR
		                    m.nPlugPct   = lnPlugPct - lnPlugPctR
		                    m.nFlatRate  = lnFlatRate - lnFlatRateR
		                    m.nOilRev    = lnOilRev - lnOilRevR
		                    m.nGasRev    = lnGasRev - lnGasRevR
		                    m.nOthRev    = lnOthRev - lnOthRevR
		                    m.nTrpRev    = lnTrpRev - lnTrpRevR
		                    m.nRevMisc1  = lnRevMisc1 - lnRevMisc1R
		                    m.nRevMisc2  = lnRevMisc2 - lnRevMisc2R
		                    m.nMiscRev1  = lnMiscRev1 - lnMiscRev1R
		                    m.nMiscRev2  = lnMiscRev2 - lnMiscRev2R
		                    m.nGather    = lnGather - lnGatherR
		                    m.nCompress  = lnCompress - lnCompressR
		                    m.nRevTax1   = lnRevTax1 - lnRevTax1R
		                    m.nRevTax2   = lnRevTax2 - lnRevTax2R
		                    m.nRevTax3   = lnRevTax3 - lnRevTax3R
		                    m.nRevTax4   = lnRevTax4 - lnRevTax4R
		                    m.nRevTax5   = lnRevTax5 - lnRevTax5R
		                    m.nRevTax6   = lnRevTax6 - lnRevTax6R
		                    m.nRevTax7   = lnRevTax7 - lnRevTax7R
		                    m.nRevTax8   = lnRevTax8 - lnRevTax8R
		                    m.nRevTax9   = lnRevTax9 - lnRevTax9R
		                    m.nRevTax10  = lnRevTax10 - lnRevTax10R
		                    m.nRevTax11  = lnRevTax11 - lnRevTax11R
		                    m.nRevTax12  = lnRevTax12 - lnRevTax12R
		                    m.nOilTax1   = lnOilTax1 - lnOilTax1R
		                    m.nOilTax2   = lnOilTax2 - lnOilTax2R
		                    m.nOilTax3   = lnOilTax3 - lnOilTax3R
		                    m.nOilTax4   = lnOilTax4 - lnOilTax4R
		                    m.nGasTax1   = lnGasTax1 - lnGasTax1R
		                    m.nGasTax2   = lnGasTax2 - lnGasTax2R
		                    m.nGasTax3   = lnGasTax3 - lnGasTax3R
		                    m.nGasTax4   = lnGasTax4 - lnGasTax4R
		                    m.nOthTax1   = lnOthTax1 - lnOthTax1R
		                    m.nOthTax2   = lnOthTax2 - lnOthTax2R
		                    m.nOthTax3   = lnOthTax3 - lnOthTax3R
		                    m.nOthTax4   = lnOthTax4 - lnOthTax4R
		                    m.nTaxWith   = lnTaxWith - lnTaxWithR
		                    m.nBackWith  = lnBackWith - lnBackWithR
		
		                ENDIF
		
		                m.nOtherRevenue = m.nMiscRev1 + m.nMiscRev2 + m.nTrpRev + m.nOthRev
		                m.nExpenses     = m.nExpense + m.nTotalE1 + m.nTotalE2 + m.nTotalE3 + m.nTotalE4 + m.nTotalE5 + m.nTotalEA + m.nTotalEB + m.nMktgExp + m.nPlugExp
		                m.nOilTax       = m.nOilTax1 + m.nOilTax2 + m.nOilTax3 + m.nOilTax4
		                m.nGasTax       = m.nGasTax1 + m.nGasTax2 + m.nGasTax3 + m.nGasTax4
		                m.nOthTax       = m.nOthTax1 + m.nOthTax2 + m.nOthTax3 + m.nOthTax4 + m.nBackWith + m.nTaxWith
		
		                INSERT INTO CHANGES FROM MEMVAR
		                IF NOT llPreview  &&  Only delete/insert if not previewing
		                    SELECT tempdisb
		                    LOCATE FOR cOwnerID == m.cOwnerID AND cWellID == m.cWellID AND cTypeInv = m.cTypeInv AND ;
		                        hYear = m.hYear AND hperiod = m.hperiod AND nRunNo = m.nRunNo AND cRunYear = m.cRunYear AND ;
		                        nRunNo_In = m.nRunNo_In AND cRunYear_In = m.cRunYear_In AND lFlat = m.lFlat AND ciddisb <> lcidDisb
		                    IF FOUND()  &&  It found an existing record that matches exactly to the one that would be inserted, so add to it
		                        lcidDisb = ciddisb
		                        swselect('disbhist')
		                        SET ORDER TO ciddisb
		                        IF SEEK(lcidDisb)
		                            REPLACE nIncome WITH nIncome + m.nIncome, ;
		                                   nMktgExp WITH nMktgExp + m.nMktgExp, ;
		                                nSevTaxes WITH nSevTaxes + m.nSevTaxes, ;
		                                nExpense WITH nExpense + m.nExpense, ;
		                                nNetCheck WITH nNetCheck + m.nNetCheck, ;
		                                nTotalE1 WITH nTotalE1 + m.nTotalE1, ;
		                                nTotalE2 WITH nTotalE2 + m.nTotalE2, ;
		                                nTotalE3 WITH nTotalE3 + m.nTotalE3, ;
		                                nTotalE4 WITH nTotalE4 + m.nTotalE4, ;
		                                nTotalE5 WITH nTotalE5 + m.nTotalE5, ;
		                                nTotalEA WITH nTotalEA + m.nTotalEA, ;
		                                nTotalEB WITH nTotalEB + m.nTotalEB, ;
		                                nPlugExp WITH nPlugExp + m.nPlugExp, ;
		                                nFlatRate WITH nFlatRate + m.nFlatRate, ;
		                                nOilRev WITH nOilRev + m.nOilRev, ;
		                                nGasRev WITH nGasRev + m.nGasRev, ;
		                                nOthRev WITH nOthRev + m.nOthRev, ;
		                                nTrpRev WITH nTrpRev + m.nTrpRev, ;
		                                nMiscRev1 WITH nMiscRev1 + m.nMiscRev1, ;
		                                nMiscRev2 WITH nMiscRev2 + m.nMiscRev2, ;
		                                nGather WITH nGather + m.nGather, ;
		                                nCompress WITH nCompress + m.nCompress, ;
		                                nOilTax1 WITH nOilTax1 + m.nOilTax1, ;
		                                nOilTax2 WITH nOilTax2 + m.nOilTax2, ;
		                                nOilTax3 WITH nOilTax3 + m.nOilTax3, ;
		                                nOilTax4 WITH nOilTax4 + m.nOilTax4, ;
		                                nGasTax1 WITH nGasTax1 + m.nGasTax1, ;
		                                nGasTax2 WITH nGasTax2 + m.nGasTax2, ;
		                                nGasTax3 WITH nGasTax3 + m.nGasTax3, ;
		                                nGasTax4 WITH nGasTax4 + m.nGasTax4, ;
		                                nOthTax1 WITH nOthTax1 + m.nOthTax1, ;
		                                nOthTax2 WITH nOthTax2 + m.nOthTax2, ;
		                                nOthTax3 WITH nOthTax3 + m.nOthTax3, ;
		                                nOthTax4 WITH nOthTax4 + m.nOthTax4, ;
		                                nTaxWith WITH nTaxWith + m.nTaxWith, ;
		                                nBackWith WITH nBackWith + m.nBackWith
		
		                            swselect('ownpcts')
		                            SET ORDER TO ciddisb
		                            IF SEEK(disbhist.ciddisb)  &&  If a matching ownpcts record was found
		
		                                swselect('ownpcts')
		                                REPLACE nRevOil WITH nRevOil + m.nRevOil, ;
		                                nRevGas WITH nRevGas + m.nRevGas, ;
		                                    nRevOth WITH nRevOth + m.nRevOth, ;
		                                    nRevTRP WITH nRevTRP + m.nRevTRP, ;
		                                    nWorkInt WITH nWorkInt + m.nWorkInt, ;
		                                    nIntClass1 WITH nIntClass1 + m.nIntClass1, ;
		                                    nIntClass2 WITH nIntClass2 + m.nIntClass2, ;
		                                    nIntClass3 WITH nIntClass3 + m.nIntClass3, ;
		                                    nIntClass4 WITH nIntClass4 + m.nIntClass4, ;
		                                    nIntClass5 WITH nIntClass5 + m.nIntClass5, ;
		                                    nACPInt WITH nACPInt + m.nACPInt, ;
		                                    nBCPInt WITH nBCPInt + m.nBCPInt, ;
		                                    nPlugPct WITH nPlugPct + m.nPlugPct, ;
		                                    nRevMisc1 WITH nRevMisc1 + m.nRevMisc1, ;
		                                    nRevMisc2 WITH nRevMisc2 + m.nRevMisc2, ;
		                                    nRevTax1 WITH nRevTax1 + m.nRevTax1, ;
		                                    nRevTax2 WITH nRevTax2 + m.nRevTax2, ;
		                                    nRevTax3 WITH nRevTax3 + m.nRevTax3, ;
		                                    nRevTax4 WITH nRevTax4 + m.nRevTax4, ;
		                                    nRevTax5 WITH nRevTax5 + m.nRevTax5, ;
		                                    nRevTax6 WITH nRevTax6 + m.nRevTax6, ;
		                                    nRevTax7 WITH nRevTax7 + m.nRevTax7, ;
		                                    nRevTax8 WITH nRevTax8 + m.nRevTax8, ;
		                                    nRevTax9 WITH nRevTax9 + m.nRevTax9, ;
		                                    nRevTax10 WITH nRevTax10 + m.nRevTax10, ;
		                                    nRevTax11 WITH nRevTax11 + m.nRevTax11, ;
		                                    nRevTax12 WITH nRevTax12 + m.nRevTax12
		
		                            ENDIF
		                        ENDIF
		                    ELSE
		                        swselect('wellinv')
		                        LOCATE FOR cOwnerID == m.cOwnerID AND cWellID == m.cWellID AND cTypeInv = m.cTypeInv
		                        IF FOUND()
		                            m.cprogcode = cprogcode
		                        ENDIF
		                        INSERT INTO disbhist FROM MEMVAR
		                        INSERT INTO ownpcts FROM MEMVAR
		                    ENDIF
		                ENDIF
		
		            ENDFOR
		
		        ENDSCAN
		    ENDIF
		
		    THISFORM.lAnyHistRecords = llAnyHistRecords
		    THISFORM.lAnySuspRecords = llAnySuspRecords
		
		
		* Save the updates
		    swselect('suspense')
		    = TABLEUPDATE(.T.)
		    swselect('disbhist')
		    = TABLEUPDATE(.T.)
		    swselect('ownpcts')
		    = TABLEUPDATE(.T., .T.)
		CATCH TO loError
		    llReturn = .F.
		    DO errorlog WITH 'TransHist', loError.LINENO, 'DMDOITransfer', loError.ERRORNO, loError.MESSAGE, '', loError
		    MESSAGEBOX('Unable to process the transfer at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		          'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
		
		
	ENDPROC

	PROCEDURE cboTypeInv.Init
		THIS.ADDLISTITEM('**  All Interest Types  **',1,1)
		THIS.ADDLISTITEM('*',1,2)
		THIS.ADDLISTITEM('Royalty Interest',2,1)
		THIS.ADDLISTITEM('L',2,2)
		THIS.ADDLISTITEM('Override Interest',3,1)
		THIS.ADDLISTITEM('O',3,2)
		THIS.ADDLISTITEM('Working Interest',4,1)
		THIS.ADDLISTITEM('W',4,2)
		
		THIS.LISTITEMID = 1
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE chklAllInterests.Click
		DODEFAULT()
		
		IF THIS.VALUE = .T.
		   THISFORM.chklSpecificWell.VALUE = .F.
		   THISFORM.lblWell.VISIBLE = .F.
		   THISFORM.shpWellBox.VISIBLE = .F.
		   THISFORM.cmdLookWell.VISIBLE = .F.
		   THISFORM.txtcWellID.VISIBLE = .F.
		   THISFORM.txtcWellName.VISIBLE = .F.
		   thisform.lblTypeInv.top = 92
		   thisform.cboTypeInv.top = 89
		ELSE
		   THISFORM.chklSpecificWell.VALUE = .T.
		   THISFORM.lblWell.VISIBLE = .T.
		   THISFORM.shpWellBox.VISIBLE = .T.
		   THISFORM.cmdLookWell.VISIBLE = .T.
		   THISFORM.txtcWellID.VISIBLE = .T.
		   THISFORM.txtcWellName.VISIBLE = .T.
		      thisform.lblTypeInv.top = 130
		   thisform.cboTypeInv.top = 127
		ENDIF
		
	ENDPROC

	PROCEDURE chklSpecificWell.Click
		DODEFAULT()
		
		IF THIS.VALUE = .T.
		   THISFORM.chklAllInterests.VALUE = .F.
		   THISFORM.lblWell.VISIBLE = .T.
		   THISFORM.shpWellBox.VISIBLE = .T.
		   THISFORM.cmdLookWell.VISIBLE = .T.
		   THISFORM.txtcWellID.VISIBLE = .T.
		   THISFORM.txtcWellName.VISIBLE = .T.
		   thisform.lblTypeInv.top = 130
		   thisform.cboTypeInv.top = 127
		ELSE
		   THISFORM.chklAllInterests.VALUE = .T.
		   THISFORM.lblWell.VISIBLE = .F.
		   THISFORM.shpWellBox.VISIBLE = .F.
		   THISFORM.cmdLookWell.VISIBLE = .F.
		   THISFORM.txtcWellID.VISIBLE = .F.
		   THISFORM.txtcWellName.VISIBLE = .F.
		   thisform.lblTypeInv.top = 92
		   thisform.cboTypeInv.top = 89
		ENDIF
		
	ENDPROC

	PROCEDURE chkOwnHist.Click
		DODEFAULT()
		
		IF THIS.VALUE = .T.
		
		   IF NOT m.goapp.lAMVersion AND NOT m.goapp.lQBVersion
		      swselect('investor')
		      LOCATE FOR cownerid == thisform.txtcOwnerID.Value
		      IF FOUND()
		         IF investor.linteggl
		            MESSAGEBOX('You cannot transfer history from an owner that has the option to not create a check marked in their owner record.',16,'Transfer History')
		            this.Value = .f.
		            RETURN
		         ENDIF
		      ENDIF
		   ENDIF 
		   THISFORM.lblHistory.VISIBLE = .T.
		   THISFORM.RunCombo1.VISIBLE = .T.
		ELSE
		*!*	   thisform.chksuspHist.Value = .f.
		   IF thisform.chkSuspHist.Value = .f.
		      THISFORM.lblHistory.VISIBLE = .F.
		      THISFORM.RunCombo1.VISIBLE = .F.
		   ENDIF    
		ENDIF
		
	ENDPROC

	PROCEDURE chkSuspHist.Click
		DODEFAULT()
		
		IF THIS.VALUE = .T.
		   THISFORM.lblHistory.VISIBLE = .T.
		   THISFORM.RunCombo1.VISIBLE = .T.
		ELSE
		   IF thisform.chkownHist.Value = .f.
		      THISFORM.lblHistory.VISIBLE = .F.
		      THISFORM.RunCombo1.VISIBLE = .F.
		   ENDIF    
		ENDIF
		
	ENDPROC

	PROCEDURE Cmdcommandbuttoncustom1.Click
		IF thisform.oMessage.confirm('This will clear all selected owners and their percentages. Continue?')
		   thisform.pgfOwners.page1.txtcOwnerID1.set('value','')
		   thisform.pgfOwners.page1.txtcOwnerID2.set('value','')
		   thisform.pgfOwners.page1.txtcOwnerID3.set('value','')
		   thisform.pgfOwners.page1.txtcOwnerID4.set('value','')
		   thisform.pgfOwners.page1.txtcOwnerID5.set('value','')
		   thisform.pgfOwners.page2.txtcOwnerID6.set('value','')
		   thisform.pgfOwners.page2.txtcOwnerID7.set('value','')
		   thisform.pgfOwners.page2.txtcOwnerID8.set('value','')
		   thisform.pgfOwners.page2.txtcOwnerID9.set('value','')
		   thisform.pgfOwners.page2.txtcOwnerID10.set('value','')
		   thisform.pgfOwners.page3.txtcOwnerID11.set('value','')
		   thisform.pgfOwners.page3.txtcOwnerID12.set('value','')
		   thisform.pgfOwners.page3.txtcOwnerID13.set('value','')
		   thisform.pgfOwners.page3.txtcOwnerID14.set('value','')
		   thisform.pgfOwners.page3.txtcOwnerID15.set('value','')
		   thisform.pgfOwners.page4.txtcOwnerID16.set('value','')
		   thisform.pgfOwners.page4.txtcOwnerID17.set('value','')
		   thisform.pgfOwners.page4.txtcOwnerID18.set('value','')
		   thisform.pgfOwners.page4.txtcOwnerID19.set('value','')
		   thisform.pgfOwners.page4.txtcOwnerID20.set('value','')
		   thisform.pgfOwners.page1.txtcownname1.set('value','')
		   thisform.pgfOwners.page1.txtcownname2.set('value','')
		   thisform.pgfOwners.page1.txtcownname3.set('value','')
		   thisform.pgfOwners.page1.txtcownname4.set('value','')
		   thisform.pgfOwners.page1.txtcownname5.set('value','')
		   thisform.pgfOwners.page2.txtcownname6.set('value','')
		   thisform.pgfOwners.page2.txtcownname7.set('value','')
		   thisform.pgfOwners.page2.txtcownname8.set('value','')
		   thisform.pgfOwners.page2.txtcownname9.set('value','')
		   thisform.pgfOwners.page2.txtcownname10.set('value','')
		   thisform.pgfOwners.page3.txtcownname11.set('value','')
		   thisform.pgfOwners.page3.txtcownname12.set('value','')
		   thisform.pgfOwners.page3.txtcownname13.set('value','')
		   thisform.pgfOwners.page3.txtcownname14.set('value','')
		   thisform.pgfOwners.page3.txtcownname15.set('value','')
		   thisform.pgfOwners.page4.txtcownname16.set('value','')
		   thisform.pgfOwners.page4.txtcownname17.set('value','')
		   thisform.pgfOwners.page4.txtcownname18.set('value','')
		   thisform.pgfOwners.page4.txtcownname19.set('value','')
		   thisform.pgfOwners.page4.txtcownname20.set('value','')
		   thisform.pgfOwners.page1.txtnAmount1.set('value',0)
		   thisform.pgfOwners.page1.txtnAmount2.set('value',0)
		   thisform.pgfOwners.page1.txtnAmount3.set('value',0)
		   thisform.pgfOwners.page1.txtnAmount4.set('value',0)
		   thisform.pgfOwners.page1.txtnAmount5.set('value',0)
		   thisform.pgfOwners.page2.txtnAmount6.set('value',0)
		   thisform.pgfOwners.page2.txtnAmount7.set('value',0)
		   thisform.pgfOwners.page2.txtnAmount8.set('value',0)
		   thisform.pgfOwners.page2.txtnAmount9.set('value',0)
		   thisform.pgfOwners.page2.txtnAmount10.set('value',0)
		   thisform.pgfOwners.page3.txtnAmount11.set('value',0)
		   thisform.pgfOwners.page3.txtnAmount12.set('value',0)
		   thisform.pgfOwners.page3.txtnAmount13.set('value',0)
		   thisform.pgfOwners.page3.txtnAmount14.set('value',0)
		   thisform.pgfOwners.page3.txtnAmount15.set('value',0)
		   thisform.pgfOwners.page4.txtnAmount16.set('value',0)
		   thisform.pgfOwners.page4.txtnAmount17.set('value',0)
		   thisform.pgfOwners.page4.txtnAmount18.set('value',0)
		   thisform.pgfOwners.page4.txtnAmount19.set('value',0)
		   thisform.pgfOwners.page4.txtnAmount20.set('value',0)
		   thisform.txtnTotal.set('value',0)
		   thisform.setnextcontrol(thisform.pgfOwners.page1.txtcOwnerID1)
		ENDIF
		
		DODEFAULT()
	ENDPROC

	PROCEDURE cmdCopy.Click
		LOCAL lcYear, lnRunNo, lcRunYear
		
		IF THISFORM.txtnTotal.VALUE <> 100
		   THISFORM.oMessage.Warning('The percentages divided among the owners MUST total 100% before you can proceed.')
		   RETURN .F.
		ENDIF
		
		IF NOT THISFORM.checkinterests()  &&  Make sure there aren't any percentages without owners, or vice versa
		   RETURN .F.
		ENDIF
		
		IF THISFORM.oMessage.CONFIRM('Are you sure you want to divide the interests for owner: ' + ALLT(THISFORM.txtcOwnerID.VALUE) +  ;
		      ' between the selected owner(s)?')
		
		   IF (THISFORM.chkOwnHist.VALUE = .T. OR thisform.chksuspHist.Value = .t.)  &&  Give additional warning if transferring history, too
		      THISFORM.oMessage.DISPLAY('Please be aware that if any of the owners being transferred to have existing interests, doing a transfer will affect past reports when re-printed, since any new interests/history will be added to the existing records.')
		
		      IF m.goapp.lAMVersion
		         *  Locate the sysctl record being chosen as the starting point.  Then see if there are any other closings done previously in the same year.
		         *  Once we know that, check to see if this year is archived, so we can warn them about it not splitting the past history correctly, since it will
		         *  all be in a single record.  Since this isn't the first closing for the year, it will be effectively splitting an entire year's worth of
		         *  history, whether they want it to or not.
		         lcRunYear = THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID,2)
		         lnRunNo   = VAL(THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID,3))
		
		         SELECT sysctl
		         LOCATE FOR cRunYear = lcRunYear AND nRunNo = lnRunNo AND cTypeClose = 'R'
		         IF FOUND()  &&  It better be...
		            lcYear = YEAR(dAcctDate)
		            LOCATE FOR YEAR(dAcctDate) = lcYear AND nRunNo < lnRunNo AND cRunYear = lcRunYear
		            IF FOUND()
		               *  Now that we know there were other closings done for the year prior to the one selected, check to see if there's any archived data for this year
		               IF FILE(ALLTRIM(m.goapp.cdatafilepath) + 'ARCHIVE\ARCDISBHIST' + ALLTRIM(STR(lcYear)) + '.dbf')
		                  IF MESSAGEBOX("The run that you've chosen to begin the transfer with falls within a year that has been archived. There are other closings " ;
		                        + "done first in this year, so it appears that you're trying to only transfer part of a year. Since the year has been archived, the "  ;
		                        + "owner history has been summed into a single record representing the entire year's worth of data. If you continue with the transfer, "  ;
		                        + "be aware that an entire year's worth of owner history will be transferred, even though you didn't select the first run of the year. " ;
		                        + "Would you like to continue with the transfer anyway?",4,'Transfer Confirmation') = 7
		                     RETURN .f.
		                  ENDIF
		               ENDIF
		            ENDIF
		         ENDIF
		      ENDIF
		   ENDIF
		
		   llReturn = THISFORM.SplitEmUp()
		ENDIF
		
	ENDPROC

	PROCEDURE cmdExit.Click
		thisform.release()
	ENDPROC

	PROCEDURE cmdLookOwner.Click
		LOCAL lcList
		PRIV llOK
		
		llOK   = .T.
		lcList = 'cOwnerID,cSortField'
		
		DO FORM ..\custom\picklist WITH 'investor', lcList, thisform.txtcownerid.value, 2
		
		IF llOK
		   thisform.txtcOwnerID.value = investor.cOwnerID
		   thisform.txtcOwnName.value = investor.cOwnName
		   thisform.refresh()
		ENDIF   
		
		THISFORM.setnextcontrol(thisform.txtcOwnerID)
	ENDPROC

	PROCEDURE cmdLookWell.Click
		LOCAL lcList
		PRIV llOK
		
		llOK   = .T.
		lcList = 'cWellID\Well ID,cWellName\WellName'
		
		IF USED('temp')
		   USE IN temp
		ENDIF
		IF USED('temp1')
		   USE IN temp1
		ENDIF
		
		SELECT wellinv.cWellID, wells.cWellName FROM wells, wellinv INTO CURSOR temp1  ;
		   WHERE wellinv.cOwnerID == THISFORM.txtcOwnerID.VALUE AND wells.cWellID == wellinv.cWellID GROUP BY wells.cWellID
		
		USE DBF('temp1') AGAIN IN 0 ALIAS temp
		SELECT temp
		INDEX ON cWellID TAG cWellID
		INDEX ON cWellName TAG cWellName
		
		DO FORM ..\CUSTOM\picklist WITH 'temp', lcList, THISFORM.txtcWellID.VALUE, 2, .T.,.T.
		
		IF llOK
		   THISFORM.txtcWellID.VALUE = temp.cWellID
		   THISFORM.txtcWellName.VALUE = temp.cWellName
		   THISFORM.REFRESH()
		ENDIF
		
		THISFORM.setnextcontrol(THISFORM.txtcWellID)
		
	ENDPROC

	PROCEDURE cmdPreview.Click
		IF THISFORM.txtnTotal.VALUE <> 100
		   THISFORM.oMessage.Warning('The percentages divided among the owners MUST total 100% before you can proceed.')
		   RETURN .F.
		ENDIF
		
		IF NOT THISFORM.checkinterests()  &&  Make sure there aren't any percentages without owners, or vice versa
		   RETURN .F.
		ENDIF
		
		thisform.oMessage.Display('A report will show how the interests/history would be divided IF you chose to transfer with the current settings.  No changes to existing data will be made.')
		
		llReturn = THISFORM.SplitEmUp(.t.)  &&  No need for warnings, since this is just going to preview and show the report
		
	ENDPROC

	PROCEDURE pgfOwners.Page1.Click
		DODEFAULT()
		
		THISFORM.setnextcontrol(THIS.txtcOwnerID1)
		THIS.txtcOwnerID1.SETFOCUS()
		
	ENDPROC

	PROCEDURE pgfOwners.Page1.cmdOwner1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK   = .T.
		lcList = 'cOwnerID,cSortField'
		
		DO FORM ..\custom\picklist WITH 'investor', lcList, thisform.pgfOwners.page1.txtcownerid1.value, 2
		
		IF llOK
		   thisform.pgfOwners.page1.txtcOwnerID1.value = investor.cOwnerID
		   thisform.pgfOwners.page1.txtcOwnName1.value = investor.cOwnName
		   thisform.refresh()
		ENDIF   
		
		THISFORM.setnextcontrol(thisform.pgfOwners.page1.txtcOwnerID1)
	ENDPROC

	PROCEDURE pgfOwners.Page1.cmdOwner2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK   = .T.
		lcList = 'cOwnerID,cSortField'
		
		DO FORM ..\custom\picklist WITH 'investor', lcList, thisform.pgfOwners.page1.txtcownerid2.value, 2
		
		IF llOK
		   thisform.pgfOwners.page1.txtcOwnerID2.value = investor.cOwnerID
		   thisform.pgfOwners.page1.txtcOwnName2.value = investor.cOwnName
		   thisform.refresh()
		ENDIF   
		
		THISFORM.setnextcontrol(thisform.pgfOwners.page1.txtcOwnerID2)
	ENDPROC

	PROCEDURE pgfOwners.Page1.cmdOwner3.Click
		LOCAL lcList
		PRIV llOK
		
		llOK   = .T.
		lcList = 'cOwnerID,cSortField'
		
		DO FORM ..\custom\picklist WITH 'investor', lcList, thisform.pgfOwners.page1.txtcownerid3.value, 2
		
		IF llOK
		   thisform.pgfOwners.page1.txtcOwnerID3.value = investor.cOwnerID
		   thisform.pgfOwners.page1.txtcOwnName3.value = investor.cOwnName
		   thisform.refresh()
		ENDIF   
		
		THISFORM.setnextcontrol(thisform.pgfOwners.page1.txtcOwnerID3)
	ENDPROC

	PROCEDURE pgfOwners.Page1.cmdOwner4.Click
		LOCAL lcList
		PRIV llOK
		
		llOK   = .T.
		lcList = 'cOwnerID,cSortField'
		
		DO FORM ..\custom\picklist WITH 'investor', lcList, thisform.pgfOwners.page1.txtcownerid4.value, 2
		
		IF llOK
		   thisform.pgfOwners.page1.txtcOwnerID4.value = investor.cOwnerID
		   thisform.pgfOwners.page1.txtcOwnName4.value = investor.cOwnName
		   thisform.refresh()
		ENDIF   
		
		THISFORM.setnextcontrol(thisform.pgfOwners.page1.txtcOwnerID4)
	ENDPROC

	PROCEDURE pgfOwners.Page1.cmdOwner5.Click
		LOCAL lcList
		PRIV llOK
		
		llOK   = .T.
		lcList = 'cOwnerID,cSortField'
		
		DO FORM ..\custom\picklist WITH 'investor', lcList, thisform.pgfOwners.page1.txtcownerid5.value, 2
		
		IF llOK
		   thisform.pgfOwners.page1.txtcOwnerID5.value = investor.cOwnerID
		   thisform.pgfOwners.page1.txtcOwnName5.value = investor.cOwnName
		   thisform.refresh()
		ENDIF   
		
		THISFORM.setnextcontrol(thisform.pgfOwners.page1.txtcOwnerID5)
	ENDPROC

	PROCEDURE pgfOwners.Page1.txtcOwnerID1.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.pgfOwners.page1.cmdOwner1.CLICK()
		
		IF NOT USED('investor')
		   USE investor IN 0
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE pgfOwners.Page1.txtcOwnerID1.InteractiveChange
		IF DODEFAULT()
		   SELECT investor
		   LOCATE FOR cownerid == this.Value
		   IF FOUND()
		      thisform.pgfOwners.page1.txtcownname1.set('value',investor.cownname)
		   ELSE
		      thisform.pgfOwners.page1.txtcownname1.set('value','')   
		   ENDIF
		ENDIF    
	ENDPROC

	PROCEDURE pgfOwners.Page1.txtcOwnerID1.LostFocus
		ON KEY LABEL F2 *
		DODEFAULT()
	ENDPROC

	PROCEDURE pgfOwners.Page1.txtcOwnerID2.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.pgfOwners.page1.cmdOwner2.CLICK()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE pgfOwners.Page1.txtcOwnerID2.InteractiveChange
		IF DODEFAULT()
		   SELECT investor
		   LOCATE FOR cownerid == this.Value
		   IF FOUND()
		      thisform.pgfOwners.page1.txtcownname2.set('value',investor.cownname)
		   ELSE
		      thisform.pgfOwners.page1.txtcownname2.set('value','')   
		   ENDIF
		ENDIF    
	ENDPROC

	PROCEDURE pgfOwners.Page1.txtcOwnerID2.LostFocus
		ON KEY LABEL F2 *
		DODEFAULT()
	ENDPROC

	PROCEDURE pgfOwners.Page1.txtcOwnerID3.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.pgfOwners.page1.cmdOwner3.CLICK()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE pgfOwners.Page1.txtcOwnerID3.InteractiveChange
		IF DODEFAULT()
		   SELECT investor
		   LOCATE FOR cownerid == this.Value
		   IF FOUND()
		      thisform.pgfOwners.page1.txtcownname3.set('value',investor.cownname)
		   ELSE
		      thisform.pgfOwners.page1.txtcownname3.set('value','')   
		   ENDIF
		ENDIF    
	ENDPROC

	PROCEDURE pgfOwners.Page1.txtcOwnerID3.LostFocus
		ON KEY LABEL F2 *
		DODEFAULT()
	ENDPROC

	PROCEDURE pgfOwners.Page1.txtcOwnerID4.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.pgfOwners.page1.cmdOwner4.CLICK()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE pgfOwners.Page1.txtcOwnerID4.InteractiveChange
		IF DODEFAULT()
		   SELECT investor
		   LOCATE FOR cownerid == this.Value
		   IF FOUND()
		      thisform.pgfOwners.page1.txtcownname4.set('value',investor.cownname)
		   ELSE
		      thisform.pgfOwners.page1.txtcownname4.set('value','')   
		   ENDIF
		ENDIF    
	ENDPROC

	PROCEDURE pgfOwners.Page1.txtcOwnerID4.LostFocus
		ON KEY LABEL F2 *
		DODEFAULT()
	ENDPROC

	PROCEDURE pgfOwners.Page1.txtcOwnerID5.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.pgfOwners.page1.cmdOwner5.CLICK()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE pgfOwners.Page1.txtcOwnerID5.InteractiveChange
		IF DODEFAULT()
		   SELECT investor
		   LOCATE FOR cownerid == this.Value
		   IF FOUND()
		      thisform.pgfOwners.page1.txtcownname5.set('value',investor.cownname)
		   ELSE
		      thisform.pgfOwners.page1.txtcownname5.set('value','')   
		   ENDIF
		ENDIF    
	ENDPROC

	PROCEDURE pgfOwners.Page1.txtcOwnerID5.LostFocus
		ON KEY LABEL F2 *
		DODEFAULT()
	ENDPROC

	PROCEDURE pgfOwners.Page1.txtcOwnName1.When
		RETURN .F.
	ENDPROC

	PROCEDURE pgfOwners.Page1.txtcOwnName2.When
		RETURN .F.
	ENDPROC

	PROCEDURE pgfOwners.Page1.txtcOwnName3.When
		RETURN .F.
	ENDPROC

	PROCEDURE pgfOwners.Page1.txtcOwnName4.When
		RETURN .F.
	ENDPROC

	PROCEDURE pgfOwners.Page1.txtcOwnName5.When
		RETURN .F.
	ENDPROC

	PROCEDURE pgfOwners.Page1.txtnAmount1.Valid
		DODEFAULT()
		
		THISFORM.calctotals()
		
	ENDPROC

	PROCEDURE pgfOwners.Page1.txtnAmount2.Valid
		DODEFAULT()
		
		THISFORM.calctotals()
		
	ENDPROC

	PROCEDURE pgfOwners.Page1.txtnAmount3.Valid
		DODEFAULT()
		
		THISFORM.calctotals()
		
	ENDPROC

	PROCEDURE pgfOwners.Page1.txtnAmount4.Valid
		DODEFAULT()
		
		THISFORM.calctotals()
		
	ENDPROC

	PROCEDURE pgfOwners.Page1.txtnAmount5.Valid
		DODEFAULT()
		
		THISFORM.calctotals()
		
	ENDPROC

	PROCEDURE pgfOwners.Page2.Click
		DODEFAULT()
		
		THISFORM.setnextcontrol(THIS.txtcOwnerID6)
		THIS.txtcOwnerID6.SETFOCUS()
		
	ENDPROC

	PROCEDURE pgfOwners.Page2.cmdOwner10.Click
		LOCAL lcList
		PRIV llOK
		
		llOK   = .T.
		lcList = 'cOwnerID,cSortField'
		
		DO FORM ..\custom\picklist WITH 'investor', lcList, thisform.pgfOwners.page2.txtcownerid10.value, 2
		
		IF llOK
		   thisform.pgfOwners.page2.txtcOwnerID10.value = investor.cOwnerID
		   thisform.pgfOwners.page2.txtcOwnName10.value = investor.cOwnName
		   thisform.refresh()
		ENDIF   
		
		THISFORM.setnextcontrol(thisform.pgfOwners.page2.txtcOwnerID10)
	ENDPROC

	PROCEDURE pgfOwners.Page2.cmdOwner6.Click
		LOCAL lcList
		PRIV llOK
		
		llOK   = .T.
		lcList = 'cOwnerID,cSortField'
		
		DO FORM ..\custom\picklist WITH 'investor', lcList, thisform.pgfOwners.page2.txtcownerid6.value, 2
		
		IF llOK
		   thisform.pgfOwners.page2.txtcOwnerID6.value = investor.cOwnerID
		   thisform.pgfOwners.page2.txtcOwnName6.value = investor.cOwnName
		   thisform.refresh()
		ENDIF   
		
		THISFORM.setnextcontrol(thisform.pgfOwners.page2.txtcOwnerID6)
	ENDPROC

	PROCEDURE pgfOwners.Page2.cmdOwner7.Click
		LOCAL lcList
		PRIV llOK
		
		llOK   = .T.
		lcList = 'cOwnerID,cSortField'
		
		DO FORM ..\custom\picklist WITH 'investor', lcList, thisform.pgfOwners.page2.txtcownerid7.value, 2
		
		IF llOK
		   thisform.pgfOwners.page2.txtcOwnerID7.value = investor.cOwnerID
		   thisform.pgfOwners.page2.txtcOwnName7.value = investor.cOwnName
		   thisform.refresh()
		ENDIF   
		
		THISFORM.setnextcontrol(thisform.pgfOwners.page2.txtcOwnerID7)
	ENDPROC

	PROCEDURE pgfOwners.Page2.cmdOwner8.Click
		LOCAL lcList
		PRIV llOK
		
		llOK   = .T.
		lcList = 'cOwnerID,cSortField'
		
		DO FORM ..\custom\picklist WITH 'investor', lcList, thisform.pgfOwners.page2.txtcownerid8.value, 2
		
		IF llOK
		   thisform.pgfOwners.page2.txtcOwnerID8.value = investor.cOwnerID
		   thisform.pgfOwners.page2.txtcOwnName8.value = investor.cOwnName
		   thisform.refresh()
		ENDIF   
		
		THISFORM.setnextcontrol(thisform.pgfOwners.page2.txtcOwnerID8)
	ENDPROC

	PROCEDURE pgfOwners.Page2.cmdOwner9.Click
		LOCAL lcList
		PRIV llOK
		
		llOK   = .T.
		lcList = 'cOwnerID,cSortField'
		
		DO FORM ..\custom\picklist WITH 'investor', lcList, thisform.pgfOwners.page2.txtcownerid9.value, 2
		
		IF llOK
		   thisform.pgfOwners.page2.txtcOwnerID9.value = investor.cOwnerID
		   thisform.pgfOwners.page2.txtcOwnName9.value = investor.cOwnName
		   thisform.refresh()
		ENDIF   
		
		THISFORM.setnextcontrol(thisform.pgfOwners.page2.txtcOwnerID9)
	ENDPROC

	PROCEDURE pgfOwners.Page2.txtcOwnerID10.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.pgfOwners.page2.cmdOwner10.CLICK()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE pgfOwners.Page2.txtcOwnerID10.InteractiveChange
		IF DODEFAULT()
		   SELECT investor
		   LOCATE FOR cownerid == this.Value
		   IF FOUND()
		      thisform.pgfOwners.page2.txtcownname10.set('value',investor.cownname)
		   ELSE
		      thisform.pgfOwners.page2.txtcownname10.set('value','')   
		   ENDIF
		ENDIF    
	ENDPROC

	PROCEDURE pgfOwners.Page2.txtcOwnerID10.LostFocus
		ON KEY LABEL F2 *
		DODEFAULT()
	ENDPROC

	PROCEDURE pgfOwners.Page2.txtcOwnerID6.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.pgfOwners.page2.cmdOwner6.CLICK()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE pgfOwners.Page2.txtcOwnerID6.InteractiveChange
		IF DODEFAULT()
		   SELECT investor
		   LOCATE FOR cownerid == this.Value
		   IF FOUND()
		      thisform.pgfOwners.page2.txtcownname6.set('value',investor.cownname)
		   ELSE
		      thisform.pgfOwners.page2.txtcownname6.set('value','')   
		   ENDIF
		ENDIF    
	ENDPROC

	PROCEDURE pgfOwners.Page2.txtcOwnerID6.LostFocus
		ON KEY LABEL F2 *
		DODEFAULT()
	ENDPROC

	PROCEDURE pgfOwners.Page2.txtcOwnerID7.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.pgfOwners.page2.cmdOwner7.CLICK()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE pgfOwners.Page2.txtcOwnerID7.InteractiveChange
		IF DODEFAULT()
		   SELECT investor
		   LOCATE FOR cownerid == this.Value
		   IF FOUND()
		      thisform.pgfOwners.page2.txtcownname7.set('value',investor.cownname)
		   ELSE
		      thisform.pgfOwners.page2.txtcownname7.set('value','')   
		   ENDIF
		ENDIF    
	ENDPROC

	PROCEDURE pgfOwners.Page2.txtcOwnerID7.LostFocus
		ON KEY LABEL F2 *
		DODEFAULT()
	ENDPROC

	PROCEDURE pgfOwners.Page2.txtcOwnerID8.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.pgfOwners.page2.cmdOwner8.CLICK()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE pgfOwners.Page2.txtcOwnerID8.InteractiveChange
		IF DODEFAULT()
		   SELECT investor
		   LOCATE FOR cownerid == this.Value
		   IF FOUND()
		      thisform.pgfOwners.page2.txtcownname8.set('value',investor.cownname)
		   ELSE
		      thisform.pgfOwners.page2.txtcownname8.set('value','')   
		   ENDIF
		ENDIF    
	ENDPROC

	PROCEDURE pgfOwners.Page2.txtcOwnerID8.LostFocus
		ON KEY LABEL F2 *
		DODEFAULT()
	ENDPROC

	PROCEDURE pgfOwners.Page2.txtcOwnerID9.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.pgfOwners.page2.cmdOwner9.CLICK()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE pgfOwners.Page2.txtcOwnerID9.InteractiveChange
		IF DODEFAULT()
		   SELECT investor
		   LOCATE FOR cownerid == this.Value
		   IF FOUND()
		      thisform.pgfOwners.page2.txtcownname9.set('value',investor.cownname)
		   ELSE
		      thisform.pgfOwners.page2.txtcownname9.set('value','')   
		   ENDIF
		ENDIF    
	ENDPROC

	PROCEDURE pgfOwners.Page2.txtcOwnerID9.LostFocus
		ON KEY LABEL F2 *
		DODEFAULT()
	ENDPROC

	PROCEDURE pgfOwners.Page2.txtcOwnName10.When
		RETURN .F.
	ENDPROC

	PROCEDURE pgfOwners.Page2.txtcOwnName6.When
		RETURN .F.
	ENDPROC

	PROCEDURE pgfOwners.Page2.txtcOwnName7.When
		RETURN .F.
	ENDPROC

	PROCEDURE pgfOwners.Page2.txtcOwnName8.When
		RETURN .F.
	ENDPROC

	PROCEDURE pgfOwners.Page2.txtcOwnName9.When
		RETURN .F.
	ENDPROC

	PROCEDURE pgfOwners.Page2.txtnAmount10.Valid
		DODEFAULT()
		
		THISFORM.calctotals()
		
	ENDPROC

	PROCEDURE pgfOwners.Page2.txtnAmount6.Valid
		DODEFAULT()
		
		THISFORM.calctotals()
		
	ENDPROC

	PROCEDURE pgfOwners.Page2.txtnAmount7.Valid
		DODEFAULT()
		
		THISFORM.calctotals()
		
	ENDPROC

	PROCEDURE pgfOwners.Page2.txtnAmount8.Valid
		DODEFAULT()
		
		THISFORM.calctotals()
		
	ENDPROC

	PROCEDURE pgfOwners.Page2.txtnAmount9.Valid
		DODEFAULT()
		
		THISFORM.calctotals()
		
	ENDPROC

	PROCEDURE pgfOwners.Page3.Click
		DODEFAULT()
		
		THISFORM.setnextcontrol(THIS.txtcOwnerID11)
		THIS.txtcOwnerID11.SETFOCUS()
		
	ENDPROC

	PROCEDURE pgfOwners.Page3.cmdOwner11.Click
		LOCAL lcList
		PRIV llOK
		
		llOK   = .T.
		lcList = 'cOwnerID,cSortField'
		
		DO FORM ..\custom\picklist WITH 'investor', lcList, thisform.pgfOwners.page3.txtcownerid11.value, 2
		
		IF llOK
		   thisform.pgfOwners.page3.txtcOwnerID11.value = investor.cOwnerID
		   thisform.pgfOwners.page3.txtcOwnName11.value = investor.cOwnName
		   thisform.refresh()
		ENDIF   
		
		THISFORM.setnextcontrol(thisform.pgfOwners.page3.txtcOwnerID11)
	ENDPROC

	PROCEDURE pgfOwners.Page3.cmdOwner12.Click
		LOCAL lcList
		PRIV llOK
		
		llOK   = .T.
		lcList = 'cOwnerID,cSortField'
		
		DO FORM ..\custom\picklist WITH 'investor', lcList, thisform.pgfOwners.page3.txtcownerid12.value, 2
		
		IF llOK
		   thisform.pgfOwners.page3.txtcOwnerID12.value = investor.cOwnerID
		   thisform.pgfOwners.page3.txtcOwnName12.value = investor.cOwnName
		   thisform.refresh()
		ENDIF   
		
		THISFORM.setnextcontrol(thisform.pgfOwners.page3.txtcOwnerID12)
	ENDPROC

	PROCEDURE pgfOwners.Page3.cmdOwner13.Click
		LOCAL lcList
		PRIV llOK
		
		llOK   = .T.
		lcList = 'cOwnerID,cSortField'
		
		DO FORM ..\custom\picklist WITH 'investor', lcList, thisform.pgfOwners.page3.txtcownerid13.value, 2
		
		IF llOK
		   thisform.pgfOwners.page3.txtcOwnerID13.value = investor.cOwnerID
		   thisform.pgfOwners.page3.txtcOwnName13.value = investor.cOwnName
		   thisform.refresh()
		ENDIF   
		
		THISFORM.setnextcontrol(thisform.pgfOwners.page3.txtcOwnerID13)
	ENDPROC

	PROCEDURE pgfOwners.Page3.cmdOwner14.Click
		LOCAL lcList
		PRIV llOK
		
		llOK   = .T.
		lcList = 'cOwnerID,cSortField'
		
		DO FORM ..\custom\picklist WITH 'investor', lcList, thisform.pgfOwners.page3.txtcownerid14.value, 2
		
		IF llOK
		   thisform.pgfOwners.page3.txtcOwnerID14.value = investor.cOwnerID
		   thisform.pgfOwners.page3.txtcOwnName14.value = investor.cOwnName
		   thisform.refresh()
		ENDIF   
		
		THISFORM.setnextcontrol(thisform.pgfOwners.page3.txtcOwnerID14)
	ENDPROC

	PROCEDURE pgfOwners.Page3.cmdOwner15.Click
		LOCAL lcList
		PRIV llOK
		
		llOK   = .T.
		lcList = 'cOwnerID,cSortField'
		
		DO FORM ..\custom\picklist WITH 'investor', lcList, thisform.pgfOwners.page3.txtcownerid15.value, 2
		
		IF llOK
		   thisform.pgfOwners.page3.txtcOwnerID15.value = investor.cOwnerID
		   thisform.pgfOwners.page3.txtcOwnName15.value = investor.cOwnName
		   thisform.refresh()
		ENDIF   
		
		THISFORM.setnextcontrol(thisform.pgfOwners.page3.txtcOwnerID15)
	ENDPROC

	PROCEDURE pgfOwners.Page3.txtcOwnerID11.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.pgfOwners.page3.cmdOwner11.CLICK()
		
		IF NOT USED('investor')
		   USE investor IN 0
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE pgfOwners.Page3.txtcOwnerID11.InteractiveChange
		IF DODEFAULT()
		   SELECT investor
		   LOCATE FOR cownerid == this.Value
		   IF FOUND()
		      thisform.pgfOwners.page3.txtcownname11.set('value',investor.cownname)
		   ELSE
		      thisform.pgfOwners.page3.txtcownname11.set('value','')   
		   ENDIF
		ENDIF    
	ENDPROC

	PROCEDURE pgfOwners.Page3.txtcOwnerID11.LostFocus
		ON KEY LABEL F2 *
		DODEFAULT()
	ENDPROC

	PROCEDURE pgfOwners.Page3.txtcOwnerID12.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.pgfOwners.page3.cmdOwner12.CLICK()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE pgfOwners.Page3.txtcOwnerID12.InteractiveChange
		IF DODEFAULT()
		   SELECT investor
		   LOCATE FOR cownerid == this.Value
		   IF FOUND()
		      thisform.pgfOwners.page3.txtcownname12.set('value',investor.cownname)
		   ELSE
		      thisform.pgfOwners.page3.txtcownname12.set('value','')   
		   ENDIF
		ENDIF    
	ENDPROC

	PROCEDURE pgfOwners.Page3.txtcOwnerID12.LostFocus
		ON KEY LABEL F2 *
		DODEFAULT()
	ENDPROC

	PROCEDURE pgfOwners.Page3.txtcOwnerID13.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.pgfOwners.page3.cmdOwner13.CLICK()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE pgfOwners.Page3.txtcOwnerID13.InteractiveChange
		IF DODEFAULT()
		   SELECT investor
		   LOCATE FOR cownerid == this.Value
		   IF FOUND()
		      thisform.pgfOwners.page3.txtcownname13.set('value',investor.cownname)
		   ELSE
		      thisform.pgfOwners.page3.txtcownname13.set('value','')   
		   ENDIF
		ENDIF    
	ENDPROC

	PROCEDURE pgfOwners.Page3.txtcOwnerID13.LostFocus
		ON KEY LABEL F2 *
		DODEFAULT()
	ENDPROC

	PROCEDURE pgfOwners.Page3.txtcOwnerID14.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.pgfOwners.page3.cmdOwner14.CLICK()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE pgfOwners.Page3.txtcOwnerID14.InteractiveChange
		IF DODEFAULT()
		   SELECT investor
		   LOCATE FOR cownerid == this.Value
		   IF FOUND()
		      thisform.pgfOwners.page3.txtcownname14.set('value',investor.cownname)
		   ELSE
		      thisform.pgfOwners.page3.txtcownname14.set('value','')   
		   ENDIF
		ENDIF    
	ENDPROC

	PROCEDURE pgfOwners.Page3.txtcOwnerID14.LostFocus
		ON KEY LABEL F2 *
		DODEFAULT()
	ENDPROC

	PROCEDURE pgfOwners.Page3.txtcOwnerID15.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.pgfOwners.page3.cmdOwner15.CLICK()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE pgfOwners.Page3.txtcOwnerID15.InteractiveChange
		IF DODEFAULT()
		   SELECT investor
		   LOCATE FOR cownerid == this.Value
		   IF FOUND()
		      thisform.pgfOwners.page3.txtcownname15.set('value',investor.cownname)
		   ELSE
		      thisform.pgfOwners.page3.txtcownname15.set('value','')   
		   ENDIF
		ENDIF    
	ENDPROC

	PROCEDURE pgfOwners.Page3.txtcOwnerID15.LostFocus
		ON KEY LABEL F2 *
		DODEFAULT()
	ENDPROC

	PROCEDURE pgfOwners.Page3.txtcOwnName11.When
		RETURN .F.
	ENDPROC

	PROCEDURE pgfOwners.Page3.txtcOwnName12.When
		RETURN .F.
	ENDPROC

	PROCEDURE pgfOwners.Page3.txtcOwnName13.When
		RETURN .F.
	ENDPROC

	PROCEDURE pgfOwners.Page3.txtcOwnName14.When
		RETURN .F.
	ENDPROC

	PROCEDURE pgfOwners.Page3.txtcOwnName15.When
		RETURN .F.
	ENDPROC

	PROCEDURE pgfOwners.Page3.txtnAmount11.Valid
		DODEFAULT()
		
		THISFORM.calctotals()
		
	ENDPROC

	PROCEDURE pgfOwners.Page3.txtnAmount12.Valid
		DODEFAULT()
		
		THISFORM.calctotals()
		
	ENDPROC

	PROCEDURE pgfOwners.Page3.txtnAmount13.Valid
		DODEFAULT()
		
		THISFORM.calctotals()
		
	ENDPROC

	PROCEDURE pgfOwners.Page3.txtnAmount14.Valid
		DODEFAULT()
		
		THISFORM.calctotals()
		
	ENDPROC

	PROCEDURE pgfOwners.Page3.txtnAmount15.Valid
		DODEFAULT()
		
		THISFORM.calctotals()
		
	ENDPROC

	PROCEDURE pgfOwners.Page4.Click
		DODEFAULT()
		
		THISFORM.setnextcontrol(THIS.txtcOwnerID16)
		THIS.txtcOwnerID16.SETFOCUS()
		
	ENDPROC

	PROCEDURE pgfOwners.Page4.cmdOwner16.Click
		LOCAL lcList
		PRIV llOK
		
		llOK   = .T.
		lcList = 'cOwnerID,cSortField'
		
		DO FORM ..\custom\picklist WITH 'investor', lcList, thisform.pgfOwners.page4.txtcownerid16.value, 2
		
		IF llOK
		   thisform.pgfOwners.page4.txtcOwnerID16.value = investor.cOwnerID
		   thisform.pgfOwners.page4.txtcOwnName16.value = investor.cOwnName
		   thisform.refresh()
		ENDIF   
		
		THISFORM.setnextcontrol(thisform.pgfOwners.page4.txtcOwnerID16)
	ENDPROC

	PROCEDURE pgfOwners.Page4.cmdOwner17.Click
		LOCAL lcList
		PRIV llOK
		
		llOK   = .T.
		lcList = 'cOwnerID,cSortField'
		
		DO FORM ..\custom\picklist WITH 'investor', lcList, thisform.pgfOwners.page4.txtcownerid17.value, 2
		
		IF llOK
		   thisform.pgfOwners.page4.txtcOwnerID17.value = investor.cOwnerID
		   thisform.pgfOwners.page4.txtcOwnName17.value = investor.cOwnName
		   thisform.refresh()
		ENDIF   
		
		THISFORM.setnextcontrol(thisform.pgfOwners.page4.txtcOwnerID17)
	ENDPROC

	PROCEDURE pgfOwners.Page4.cmdOwner18.Click
		LOCAL lcList
		PRIV llOK
		
		llOK   = .T.
		lcList = 'cOwnerID,cSortField'
		
		DO FORM ..\custom\picklist WITH 'investor', lcList, thisform.pgfOwners.page4.txtcownerid18.value, 2
		
		IF llOK
		   thisform.pgfOwners.page4.txtcOwnerID18.value = investor.cOwnerID
		   thisform.pgfOwners.page4.txtcOwnName18.value = investor.cOwnName
		   thisform.refresh()
		ENDIF   
		
		THISFORM.setnextcontrol(thisform.pgfOwners.page4.txtcOwnerID18)
	ENDPROC

	PROCEDURE pgfOwners.Page4.cmdOwner19.Click
		LOCAL lcList
		PRIV llOK
		
		llOK   = .T.
		lcList = 'cOwnerID,cSortField'
		
		DO FORM ..\custom\picklist WITH 'investor', lcList, thisform.pgfOwners.page4.txtcownerid19.value, 2
		
		IF llOK
		   thisform.pgfOwners.page4.txtcOwnerID19.value = investor.cOwnerID
		   thisform.pgfOwners.page4.txtcOwnName19.value = investor.cOwnName
		   thisform.refresh()
		ENDIF   
		
		THISFORM.setnextcontrol(thisform.pgfOwners.page4.txtcOwnerID19)
	ENDPROC

	PROCEDURE pgfOwners.Page4.cmdOwner20.Click
		LOCAL lcList
		PRIV llOK
		
		llOK   = .T.
		lcList = 'cOwnerID,cSortField'
		
		DO FORM ..\custom\picklist WITH 'investor', lcList, thisform.pgfOwners.page4.txtcownerid20.value, 2
		
		IF llOK
		   thisform.pgfOwners.page4.txtcOwnerID20.value = investor.cOwnerID
		   thisform.pgfOwners.page4.txtcOwnName20.value = investor.cOwnName
		   thisform.refresh()
		ENDIF   
		
		THISFORM.setnextcontrol(thisform.pgfOwners.page4.txtcOwnerID20)
	ENDPROC

	PROCEDURE pgfOwners.Page4.txtcOwnerID16.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.pgfOwners.page4.cmdOwner16.CLICK()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE pgfOwners.Page4.txtcOwnerID16.InteractiveChange
		IF DODEFAULT()
		   SELECT investor
		   LOCATE FOR cownerid == this.Value
		   IF FOUND()
		      thisform.pgfOwners.page4.txtcownname16.set('value',investor.cownname)
		   ELSE
		      thisform.pgfOwners.page4.txtcownname16.set('value','')   
		   ENDIF
		ENDIF    
	ENDPROC

	PROCEDURE pgfOwners.Page4.txtcOwnerID16.LostFocus
		ON KEY LABEL F2 *
		DODEFAULT()
	ENDPROC

	PROCEDURE pgfOwners.Page4.txtcOwnerID17.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.pgfOwners.page4.cmdOwner17.CLICK()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE pgfOwners.Page4.txtcOwnerID17.InteractiveChange
		IF DODEFAULT()
		   SELECT investor
		   LOCATE FOR cownerid == this.Value
		   IF FOUND()
		      thisform.pgfOwners.page4.txtcownname17.set('value',investor.cownname)
		   ELSE
		      thisform.pgfOwners.page4.txtcownname17.set('value','')   
		   ENDIF
		ENDIF    
	ENDPROC

	PROCEDURE pgfOwners.Page4.txtcOwnerID17.LostFocus
		ON KEY LABEL F2 *
		DODEFAULT()
	ENDPROC

	PROCEDURE pgfOwners.Page4.txtcOwnerID18.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.pgfOwners.page4.cmdOwner18.CLICK()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE pgfOwners.Page4.txtcOwnerID18.InteractiveChange
		IF DODEFAULT()
		   SELECT investor
		   LOCATE FOR cownerid == this.Value
		   IF FOUND()
		      thisform.pgfOwners.page4.txtcownname18.set('value',investor.cownname)
		   ELSE
		      thisform.pgfOwners.page4.txtcownname18.set('value','')   
		   ENDIF
		ENDIF    
	ENDPROC

	PROCEDURE pgfOwners.Page4.txtcOwnerID18.LostFocus
		ON KEY LABEL F2 *
		DODEFAULT()
	ENDPROC

	PROCEDURE pgfOwners.Page4.txtcOwnerID19.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.pgfOwners.page4.cmdOwner19.CLICK()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE pgfOwners.Page4.txtcOwnerID19.InteractiveChange
		IF DODEFAULT()
		   SELECT investor
		   LOCATE FOR cownerid == this.Value
		   IF FOUND()
		      thisform.pgfOwners.page4.txtcownname19.set('value',investor.cownname)
		   ELSE
		      thisform.pgfOwners.page4.txtcownname19.set('value','')   
		   ENDIF
		ENDIF    
	ENDPROC

	PROCEDURE pgfOwners.Page4.txtcOwnerID19.LostFocus
		ON KEY LABEL F2 *
		DODEFAULT()
	ENDPROC

	PROCEDURE pgfOwners.Page4.txtcOwnerID20.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.pgfOwners.page4.cmdOwner20.CLICK()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE pgfOwners.Page4.txtcOwnerID20.InteractiveChange
		IF DODEFAULT()
		   SELECT investor
		   LOCATE FOR cownerid == this.Value
		   IF FOUND()
		      thisform.pgfOwners.page4.txtcownname20.set('value',investor.cownname)
		   ELSE
		      thisform.pgfOwners.page4.txtcownname20.set('value','')   
		   ENDIF
		ENDIF    
	ENDPROC

	PROCEDURE pgfOwners.Page4.txtcOwnerID20.LostFocus
		ON KEY LABEL F2 *
		DODEFAULT()
	ENDPROC

	PROCEDURE pgfOwners.Page4.txtcOwnName16.When
		RETURN .F.
	ENDPROC

	PROCEDURE pgfOwners.Page4.txtcOwnName17.When
		RETURN .F.
	ENDPROC

	PROCEDURE pgfOwners.Page4.txtcOwnName18.When
		RETURN .F.
	ENDPROC

	PROCEDURE pgfOwners.Page4.txtcOwnName19.When
		RETURN .F.
	ENDPROC

	PROCEDURE pgfOwners.Page4.txtcOwnName20.When
		RETURN .F.
	ENDPROC

	PROCEDURE pgfOwners.Page4.txtnAmount16.Valid
		DODEFAULT()
		
		THISFORM.calctotals()
		
	ENDPROC

	PROCEDURE pgfOwners.Page4.txtnAmount17.Valid
		DODEFAULT()
		
		THISFORM.calctotals()
		
	ENDPROC

	PROCEDURE pgfOwners.Page4.txtnAmount18.Valid
		DODEFAULT()
		
		THISFORM.calctotals()
		
	ENDPROC

	PROCEDURE pgfOwners.Page4.txtnAmount19.Valid
		DODEFAULT()
		
		THISFORM.calctotals()
		
	ENDPROC

	PROCEDURE pgfOwners.Page4.txtnAmount20.Valid
		DODEFAULT()
		
		THISFORM.calctotals()
		
	ENDPROC

	PROCEDURE Runcombo1.Init
		IF DODEFAULT()
		   this.listitemid = 1
		ENDIF   
	ENDPROC

	PROCEDURE Runcombo1.Requery
		SELE 'RUN:'+cTypeClose+'-'+PADL(ALLT(STR(nRunNo)),3,'0')+'/'+cYear+'/'+cGroup+' Date:'+DTOC(dAcctDate), cYear, nRunNo, cGroup, cDMBatch, cTypeClose, DTOC(dAcctDate), DTOC(dPostDate), IIF(lCompanyPost,'Y','N') ;
		   FROM sysctl ;
		   WHERE lDisbman = .T. AND cTypeClose = 'R' ;
		   AND (IIF(THIS.lNonPostedOnly,sysctl.lPosted = .F.,.T.)) ;
		   AND IIF(THIS.lNoOldruns,NOT EMPTY(cVersion),.T.)  ;
		   AND NOT 'BEG' $ cVersion ;
		   INTO ARRAY laRuns ;
		   ORDER BY cYear DESC, nRunNo DESC
		
		lnCount = _TALLY
		
		* Don't allow more than 1500 entries in the list.
		IF lnCount > 1500
		   lnCount = 1500
		ENDIF
		
		THIS.ADDLISTITEM('** All Past Data **',1,1)
		THIS.ADDLISTITEM('',1,2)
		THIS.ADDLISTITEM('',1,3)
		THIS.ADDLISTITEM('',1,4)
		THIS.ADDLISTITEM('',1,5)
		THIS.ADDLISTITEM('',1,6)
		THIS.ADDLISTITEM('',1,7)
		THIS.ADDLISTITEM('',1,8)
		THIS.ADDLISTITEM('',1,9)
		
		IF lnCount > 0
		   FOR lnx = 2 TO lnCount+1
		      IF lnx = 1500
		         THIS.ADDLISTITEM('** More than 1500 Closed Runs **',lnx-1,1)
		         THIS.ADDLISTITEM('',lnx-1,2)
		         THIS.ADDLISTITEM('',lnx-1,3)
		         THIS.ADDLISTITEM('',lnx-1,4)
		         THIS.ADDLISTITEM('',lnx-1,5)
		         THIS.ADDLISTITEM('',lnx-1,6)
		         THIS.ADDLISTITEM('',lnx-1,7)
		         THIS.ADDLISTITEM('',lnx-1,8)
		         THIS.ADDLISTITEM('',lnx-1,9)
		      ELSE
		         THIS.ADDLISTITEM(laRuns[lnx-1,1],lnx,1)            && Display Value
		         THIS.ADDLISTITEM(laRuns[lnx-1,2],lnx,2)            && Run Year
		         THIS.ADDLISTITEM(ALLT(STR(laRuns[lnx-1,3])),lnx,3) && Run No
		         THIS.ADDLISTITEM(laRuns[lnx-1,4],lnx,4)            && Group
		         THIS.ADDLISTITEM(laRuns[lnx-1,5],lnx,5)            && DMBatch
		         THIS.ADDLISTITEM(laRuns[lnx-1,6],lnx,6)            && Type of Closing
		         THIS.ADDLISTITEM(laRuns[lnx-1,7],lnx,7)            && Accounting Date
		         THIS.ADDLISTITEM(laRuns[lnx-1,8],lnx,8)            && Post Date
		         THIS.ADDLISTITEM(laRuns[lnx-1,9],lnx,9)            && Company Share Only
		      ENDIF
		   ENDFOR
		ENDIF
		
	ENDPROC

	PROCEDURE txtcOwnerID.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.cmdLookOwner.CLICK()
		
		IF NOT USED('investor')
		   USE investor IN 0
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtcOwnerID.InteractiveChange
		IF DODEFAULT()
		   SELECT investor
		   LOCATE FOR cownerid == this.Value
		   IF FOUND()
		      thisform.txtcownname.set('value',investor.cownname)
		   ELSE
		      thisform.txtcownname.set('value','')   
		   ENDIF
		ENDIF    
	ENDPROC

	PROCEDURE txtcOwnerID.LostFocus
		ON KEY LABEL F2 *
		DODEFAULT()
	ENDPROC

	PROCEDURE txtcOwnName.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtcWellID.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.cmdLookWell.CLICK()
		
		IF NOT USED('wells')
		   USE wells IN 0
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtcWellID.InteractiveChange
		IF DODEFAULT()
		   thisform.txtcWellName.set('value',wells.cwellname)
		ENDIF 
	ENDPROC

	PROCEDURE txtcWellID.LostFocus
		ON KEY LABEL F2 *
	ENDPROC

	PROCEDURE txtcWellName.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtnTotal.When
		return .f.
		
	ENDPROC

ENDDEFINE
