*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="imrpayout.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor7" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 333
	Left = 40
	Name = "Dataenvironment"
	Top = 235
	Width = 585

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "investor", ;
		CursorSource = "investor", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "decline", ;
		CursorSource = "decline", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "disbhist", ;
		CursorSource = "disbhist", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 430, ;
		Name = "Cursor4", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "fields", ;
		CursorSource = "fields", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor5", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "wellhist", ;
		CursorSource = "wellhist", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor6", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor7' AS cursor WITH ;
		Alias = "wellinv", ;
		CursorSource = "wellinv", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 448, ;
		Name = "Cursor7", ;
		Top = 180, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formimpayout AS frmrptcriteria OF "..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblBegID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEndID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBegOwnID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEndOwnID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="opgEstimate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkNoEstimates" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSelectedOwn" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSelectedOwn" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSelectedWells" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSelectedWell" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkCondensed" UniqueID="" Timestamp="" />

	Caption = "Well Payout by Owner Report"
	DoCreate = .T.
	Height = 573
	HelpContextID = 642
	Name = "FormImpayout"
	Width = 625
	Swrptcriteriabuttons1.chkExport.Alignment = 0
	Swrptcriteriabuttons1.chkExport.Name = "chkExport"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.cmdPreview.Name = "cmdPreview"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 195
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 15
	Swrptcriteriabuttons1.Top = 492

	ADD OBJECT 'chkCondensed' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Print the Condensed Version", ;
		Left = 240, ;
		Name = "chkCondensed", ;
		TabIndex = 13, ;
		Top = 414, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkNoEstimates' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Don't Include Payout Estimates", ;
		Left = 240, ;
		Name = "chkNoEstimates", ;
		TabIndex = 14, ;
		Top = 444, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSelectedOwn' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Choose Selected Owners", ;
		Left = 242, ;
		Name = "chkSelectedOwn", ;
		TabIndex = 7, ;
		Top = 269, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSelectedWells' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Choose Selected Wells", ;
		Left = 240, ;
		Name = "chkSelectedWells", ;
		TabIndex = 3, ;
		Top = 140, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'lblBegID' AS lbllabelcustom WITH ;
		Caption = "Beginning Well", ;
		Left = 154, ;
		Name = "lblBegID", ;
		TabIndex = 5, ;
		Top = 165
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblBegOwnID' AS lbllabelcustom WITH ;
		Caption = "Beginning Owner", ;
		Left = 140, ;
		Name = "lblBegOwnID", ;
		TabIndex = 9, ;
		Top = 291
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblEndID' AS lbllabelcustom WITH ;
		Caption = "Ending Well", ;
		Left = 169, ;
		Name = "lblEndID", ;
		TabIndex = 6, ;
		Top = 215
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblEndOwnID' AS lbllabelcustom WITH ;
		Caption = "Ending Owner", ;
		Left = 155, ;
		Name = "lblEndOwnID", ;
		TabIndex = 10, ;
		Top = 342
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom5' AS lbllabelcustom WITH ;
		Caption = "Base Projections On", ;
		Left = 126, ;
		Name = "Lbllabelcustom5", ;
		TabIndex = 2, ;
		Top = 49
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSelectedOwn' AS lbllabelcustom WITH ;
		Caption = "All Owners Selected", ;
		ForeColor = 0,0,255, ;
		Left = 260, ;
		Name = "lblSelectedOwn", ;
		TabIndex = 11, ;
		Top = 327, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSelectedWell' AS lbllabelcustom WITH ;
		Caption = "All Owners Selected", ;
		ForeColor = 0,0,255, ;
		Left = 261, ;
		Name = "lblSelectedWell", ;
		TabIndex = 12, ;
		Top = 202, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'opgEstimate' AS opgoptiongroupcustom WITH ;
		AutoSize = .T., ;
		BorderStyle = 0, ;
		ButtonCount = 2, ;
		Left = 240, ;
		Name = "opgEstimate", ;
		TabIndex = 1, ;
		Top = 45, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "Net Revenue Received", ;
		Option1.FontSize = 8, ;
		Option1.Height = 16, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Top = 5, ;
		Option1.Width = 128, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "Price Changes", ;
		Option2.FontSize = 8, ;
		Option2.Height = 16, ;
		Option2.Left = 5, ;
		Option2.Name = "Option2", ;
		Option2.Top = 29, ;
		Option2.Width = 88
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		Left = 240, ;
		Name = "Swrptlook1", ;
		TabIndex = 4, ;
		Top = 163, ;
		ZOrderSet = 5, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		TxtBegID.clistexpression = wells.cwellid, ;
		TxtBegID.clistworkarea = wells, ;
		TxtBegID.Name = "TxtBegID", ;
		TxtBegName.Name = "TxtBegName", ;
		TxtEndID.clistexpression = wells.cwellid, ;
		TxtEndID.clistworkarea = wells, ;
		TxtEndID.Name = "TxtEndID", ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />

	ADD OBJECT 'Swrptlook2' AS swrptlook WITH ;
		Left = 240, ;
		Name = "Swrptlook2", ;
		TabIndex = 8, ;
		Top = 288, ;
		ZOrderSet = 3, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		txtBegID.clistexpression = investor.cownerid, ;
		txtBegID.clistworkarea = investor, ;
		txtBegID.Name = "txtBegID", ;
		TxtBegName.Name = "TxtBegName", ;
		txtEndID.clistexpression = investor.cownerid, ;
		txtEndID.clistworkarea = investor, ;
		txtEndID.Name = "txtEndID", ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />
	
	PROCEDURE builddata
		LOCAL tnDecType, tcOwner1, tcOwner2, tcLease1, tcLease2, tnYears, tlNoEstimate
		
		tnDecType = THISFORM.opgEstimate.VALUE
		
		tcOwner1         = THISFORM.swrptlook2.txtbegid.VALUE
		tcOwner2         = THISFORM.swrptlook2.txtendid.VALUE
		tcLease1         = THISFORM.swrptlook1.txtbegid.VALUE
		tcLease2         = THISFORM.swrptlook1.txtendid.VALUE
		tlNoEstimate     = THISFORM.chkNoEstimates.VALUE
		tlSelectedWells  = THISFORM.chkSelectedWells.VALUE
		tlSelectedOwners = THISFORM.chkselectedOwn.VALUE
		
		IF NOT tlSelectedWells
		   SELECT  cwellid AS cid ;
			   FROM wells ;
			   WHERE BETWEEN(cwellid, tcLease1, tcLease2) ;
			   INTO CURSOR selectedwells
		ENDIF
		
		IF NOT tlSelectedOwners
		   SELECT  cownerid AS cid ;
			   FROM investor ;
			   WHERE BETWEEN(cownerid, tcOwner1, tcOwner2) ;
			   INTO CURSOR SELECTED ;
			   ORDER BY cid
		ENDIF
		
		tnYears   = 12
		
		IF NOT THISFORM.chkCondensed.VALUE
		   THISFORM.cReportName = 'imrwpay1'
		   DO calcdecl WITH tnDecType, tcOwner1, tcOwner2, tcLease1, tcLease2, tnYears, tlNoEstimate, tlSelectedWells, tlSelectedOwners
		ELSE
		   THISFORM.cReportName = 'imrwpay2'
		
		   SELECT  disbhist.cownerid,;
		           investor.cownname, ;
				   disbhist.cwellid,;
				   wells.cwellname as cleasename, ;
				   disbhist.ctypeinv, ;
				   SUM(disbhist.nincome) AS nincome, ;
				   SUM(disbhist.nexpense) AS nexpense, ;
				   SUM(disbhist.nnetcheck + disbhist.nsevtaxes) AS nNet ;
			   FROM disbhist JOIN investor ON investor.cownerid = disbhist.cownerid ;
			        JOIN wells ON wells.cwellid = disbhist.cwellid ;
			   INTO CURSOR temp1 READWRITE ;
			   WHERE disbhist.cownerid IN (SELECT  cid ;
									  FROM SELECTED) ;
				   AND disbhist.cwellid IN (SELECT  cid ;
									   FROM selectedwells) ;
			   ORDER BY disbhist.cownerid, disbhist.cwellid, disbhist.ctypeinv ;
			   GROUP BY disbhist.cownerid, disbhist.cwellid, disbhist.ctypeinv
		
		   SELECT  suspense.cownerid,;
		           investor.cownname, ;
				   suspense.cwellid,;
				   wells.cwellname as cleasename, ;
				   ctypeinv, ;
				   SUM(suspense.nincome) AS nincome, ;
				   SUM(suspense.nexpense) AS nexpense, ;
				   SUM(suspense.nnetcheck + nsevtaxes) AS nNet ;
			   FROM suspense JOIN investor ON investor.cownerid = suspense.cownerid ;
			        JOIN wells ON wells.cwellid = suspense.cwellid ;
			   INTO CURSOR temp2 ;
			   WHERE suspense.cownerid IN (SELECT  cid ;
									  FROM SELECTED) ;
				   AND suspense.cwellid IN (SELECT  cid ;
									   FROM selectedwells) ;
			   ORDER BY suspense.cownerid, suspense.cwellid, suspense.ctypeinv ;
			   GROUP BY suspense.cownerid, suspense.cwellid, suspense.ctypeinv
		
		   SELECT temp1
		   APPEND FROM DBF('temp2')
		
		   SELECT  cownerid,;
		           cownname, ;
				   cwellid,;
				   cleasename, ;
				   ctypeinv,;
				   000000000.00 AS nInvestment, ;
					 SPACE(5) AS cStart, ;
				   SUM(nincome) AS nincome, ;
				   SUM(nexpense) AS nexpense, ;
				   SUM(nNet) AS nNet ;
			   FROM temp1 ;
			   INTO CURSOR temppayout READWRITE ;
			   WHERE cownerid IN (SELECT  cid ;
									  FROM SELECTED) ;
				   AND cwellid IN (SELECT  cid ;
									   FROM selectedwells) ;
			   ORDER BY cownerid, cwellid, ctypeinv ;
			   GROUP BY cownerid, cwellid, ctypeinv
		
		   SELECT temppayout
		   SCAN
		      SCATTER MEMVAR
		      SELECT wellinv
		      LOCATE FOR cownerid = m.cownerid ;
		         AND cwellid  = m.cwellid ;
		         AND ctypeinv = m.ctypeinv
		      IF FOUND()
		         m.nInvestment = nInvAmount
		         m.dInvdate    = dInvdate
		         m.cStart      = TRANSFORM(MONTH(m.dinvdate)) + '/' + RIGHT(TRANSFORM(YEAR(m.dInvdate)),2)
		         SELECT temppayout
		         REPLACE nInvestment WITH m.nInvestment, ;
		            cStart WITH m.cStart
		      ENDIF
		   ENDSCAN
		
		ENDIF
		
		THISFORM.cSelectCriteria = 'Wells: ' + ALLTRIM(tcLease1) + ' - ' + ALLTRIM(tcLease2) + ;
		   '  Owners: ' + ALLTRIM(tcOwner1) + ' - ' + ALLTRIM(tcOwner2)
		THISFORM.cSortOrder = 'Well ID'
		THISFORM.cTitle1    = 'By Well and Owner'
		IF tnDecType = 1
		   THISFORM.cTitle2 = 'Estimates Based on Net Revenue Received'
		ELSE
		   THISFORM.cTitle2 = 'Estimates Based on Price Fluctuations'
		ENDIF
		
		IF NOT THISFORM.chkCondensed.VALUE
		   SELECT decline
		   COUNT FOR NOT DELETED() TO lnCount
		ELSE
		   SELECT temppayout
		   COUNT FOR NOT DELETED() TO lnCount
		ENDIF
		
		IF lnCount > 0
		   RETURN .T.
		ELSE
		   RETURN .F.
		ENDIF
		
		
		
		
	ENDPROC

	PROCEDURE Init
		DODEFAULT()
		SELECT wells
		SET ORDER TO cwellid
		GO TOP
		thisform.swrptlook1.txtbegid.value = cwellid
		thisform.swrptlook1.txtbegname.value = cwellname
		GO BOTT
		thisform.swrptlook1.txtendid.value = cwellid
		thisform.swrptlook1.txtendname.value = cwellname
		
		SELECT investor
		SET ORDER TO cownerid
		GO TOP
		thisform.swrptlook2.txtbegid.value = cownerid
		thisform.swrptlook2.txtbegname.value = cownname
		GO BOTT
		thisform.swrptlook2.txtendid.value = cownerid
		thisform.swrptlook2.txtendname.value = cownname
		
		
		
	ENDPROC

	PROCEDURE chkSelectedOwn.Click
		IF this.Value
		   DO FORM commonsource\selected-ids WITH 'OWNER' LINKED 
		   lnCount = RECCOUNT('selected')
		   thisform.lblselectedOwn.Caption = TRANSFORM(lnCount) + ' Owners Selected'
		   thisform.lblselectedOwn.Visible = .T.
		   thisform.lblbegOwnID.Visible = .F.
		   thisform.lblendOwnID.Visible = .F.
		   thisform.swrptlook2.Visible = .F.
		ELSE
		   thisform.lblselectedOwn.Visible = .F.
		   thisform.lblbegOwnID.Visible = .T.
		   thisform.lblendOwnID.Visible = .T.
		   thisform.swrptlook2.Visible = .T.
		ENDIF 
	ENDPROC

	PROCEDURE chkSelectedWells.Click
		IF this.Value
		   DO FORM commonsource\selected-ids WITH 'WELL','selectedwells' LINKED 
		   lnCount = RECCOUNT('selectedwells')
		   thisform.lblselectedWell.Caption = TRANSFORM(lnCount) + ' Wells Selected'
		   thisform.lblselectedWell.Visible = .T.
		   thisform.lblbegID.Visible = .F.
		   thisform.lblendID.Visible = .F.
		   thisform.swrptlook1.Visible = .F.
		ELSE
		   thisform.lblselectedWell.Visible = .F.
		   thisform.lblbegID.Visible = .T.
		   thisform.lblendID.Visible = .T.
		   thisform.swrptlook1.Visible = .T.
		ENDIF 
	ENDPROC

	PROCEDURE opgEstimate.Init
		this.value = 1
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cwellid,cwellname,cgroup,cwellstat'
		DO FORM ..\custom\picklist WITH 'Wells', lcList, 'cwellid', 4
		
		IF llOK
		   thisform.swrptlook1.txtBegId.value = cwellid
		   thisform.swrptlook1.txtBegName.value = cwellname
		   thisform.swrptlook1.txtBegId.SetFocus()
		   thisform.swrptlook1.txtBegId.refresh()
		   thisform.swrptlook1.txtBegName.refresh()
		ENDIF   
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cwellid,cwellname,cgroup,cwellstat'
		DO FORM ..\custom\picklist WITH 'Wells', lcList, 'cwellid', 4
		
		IF llOK
		   thisform.swrptlook1.txtEndId.value = cwellid
		   thisform.swrptlook1.txtEndName.value = cwellname
		   thisform.swrptlook1.txtEndId.SetFocus()
		   thisform.swrptlook1.txtEndId.refresh()
		   thisform.swrptlook1.txtEndName.refresh()
		ENDIF   
	ENDPROC

	PROCEDURE Swrptlook2.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cownerid,cownname'
		
		DO FORM ..\custom\picklist WITH 'Investor', lcList, thisform.swrptlook2.txtBegId.value, 2
		
		IF llOK
		   thisform.swrptlook2.txtBegId.value = cOwnerID
		   thisform.swrptlook2.txtBegName.value = cOwnname
		   thisform.swrptlook2.txtBegId.refresh()
		   thisform.swrptlook2.txtBegName.refresh()
		ENDIF   
		
		thisform.setnextcontrol(thisform.swrptlook2.txtBegId)
		
	ENDPROC

	PROCEDURE Swrptlook2.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cownerid,cownname'
		
		DO FORM ..\custom\picklist WITH 'Investor', lcList, thisform.swrptlook2.txtEndId.value, 2
		
		IF llOK
		   thisform.swrptlook2.txtEndId.value = cOwnerID
		   thisform.swrptlook2.txtEndName.value = cOwnname
		   thisform.swrptlook2.txtEndId.refresh()
		   thisform.swrptlook2.txtEndName.refresh()
		ENDIF   
		
		thisform.setnextcontrol(thisform.swrptlook2.txtEndId)
		
	ENDPROC

	PROCEDURE Swrptlook2.txtBegID.GotFocus
		ON KEY LABEL F2 _screen.activeform.swrptlook2.swlookupbutton1.Click()
	ENDPROC

	PROCEDURE Swrptlook2.txtBegID.LostFocus
		on key label F2 *
	ENDPROC

	PROCEDURE Swrptlook2.txtEndID.Click
		IF NOT EMPTY(THIS.VALUE)
		   SELECT investor
		   IF SEEK(THIS.VALUE)
		      THISFORM.swrptlook1.txtEndName.VALUE = cownname
		      THISFORM.swrptlook1.txtEndName.REFRESH()
		   ELSE
		      WAIT WIND NOWAIT 'Invalid Owner ID Entered...'
		      THISFORM.swrptlook1.txtEndName.VALUE = ''
		      THISFORM.swrptlook1.txtEndName.REFRESH()
		      RETURN 0
		   ENDIF
		ENDIF
		
	ENDPROC

	PROCEDURE Swrptlook2.txtEndID.GotFocus
		ON KEY LABEL F2 _screen.activeform.swrptlook2.swlookupbutton2.Click()
	ENDPROC

	PROCEDURE Swrptlook2.txtEndID.LostFocus
		on key label F2 *
	ENDPROC

ENDDEFINE
