*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="ten99summst.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 260
	Left = 40
	Name = "Dataenvironment"
	Top = 235
	Width = 520

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "investor", ;
		CursorSource = "investor", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Order = "cownerid", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "tax1099", ;
		CursorSource = "tax1099", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Filter = "NOT DELETED()", ;
		Height = 90, ;
		Left = 149, ;
		Name = "Cursor2", ;
		Top = 21, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "vendor", ;
		CursorSource = "vendor", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 288, ;
		Name = "Cursor3", ;
		Order = "cvendorid", ;
		Top = 22, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor4", ;
		Top = 140, ;
		Width = 101
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "custownvend", ;
		CursorSource = "custownvend", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor5", ;
		Top = 140, ;
		Width = 101
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS form1099summ AS frmrptcriteria OF "..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Swyear1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cbostate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSelected" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkIncOwners" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSelected" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkIncVendors" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklMask" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: lookup
		*m: selectowners
	*</DefinedPropArrayMethod>

	Caption = "State 1099 Summary Report"
	DataSession = 2
	DoCreate = .T.
	Height = 342
	HelpContextID = 515
	Name = "Form1099summ"
	Width = 444
	_memberdata = <VFPData>
		<memberdata name="selectowners" display="SelectOwners"/>
		</VFPData>
	Swrptcriteriabuttons1.CHKEXPORT.Alignment = 0
	Swrptcriteriabuttons1.CHKEXPORT.Name = "CHKEXPORT"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.cmdPreview.Name = "cmdPreview"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 108
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 10
	Swrptcriteriabuttons1.Top = 276
	Swrptcriteriabuttons1.ZOrderSet = 0

	ADD OBJECT 'cbostate' AS cbocomboboxcustom WITH ;
		Height = 20, ;
		Left = 153, ;
		Name = "cbostate", ;
		TabIndex = 1, ;
		Top = 48, ;
		Width = 60
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'chkIncOwners' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Include All Owner1099s", ;
		Left = 153, ;
		Name = "chkIncOwners", ;
		TabIndex = 5, ;
		Top = 158, ;
		Value = .T.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkIncVendors' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Include All Vendor 1099s", ;
		Left = 153, ;
		Name = "chkIncVendors", ;
		TabIndex = 6, ;
		Top = 186, ;
		Value = .T.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklMask' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Mask Recipient Tax IDs", ;
		Left = 153, ;
		Name = "chklMask", ;
		TabIndex = 8, ;
		Top = 240, ;
		Value = .F., ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSelected' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Choose Selected 1099s", ;
		Left = 153, ;
		Name = "chkSelected", ;
		TabIndex = 7, ;
		Top = 214, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "State", ;
		Left = 109, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 4, ;
		Top = 50
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "Accounting Year:", ;
		Height = 16, ;
		Left = 49, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 3, ;
		Top = 96, ;
		Width = 87, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSelected' AS lbllabelcustom WITH ;
		Caption = " ", ;
		Height = 16, ;
		Left = 204, ;
		Name = "lblSelected", ;
		TabIndex = 9, ;
		Top = 232, ;
		Width = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Swyear1' AS swyear WITH ;
		Left = 153, ;
		Name = "Swyear1", ;
		TabIndex = 2, ;
		Top = 93, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE builddata
		LOCAL tcYear, tnType, tcID1, tcID2
		LOCAL lcDeleted, llReturn, loError
		*:Global paddr1, paddr2, paddr3, ptax, tcState
		
		llReturn = .T.
		tlMask   = THISFORM.chklMask.VALUE
		
		TRY
		   tcYear  = THISFORM.swyear1.VALUE
		   tcState = THISFORM.cboState.VALUE
		
		   THISFORM.cTitle1 = tcState + ' State 1099s For Year: ' + tcYear
		
		   lcDeleted = SET('Deleted')
		   SET DELETED ON
		
		   * Check on the existence of the application object
		   * if it doesn't exist, we're running in development
		   * mode and need to initialize the company address info.
		   IF TYPE('m.goApp') = 'O'
		      m.paddr1 = m.goApp.cAddress1
		      m.paddr2 = m.goApp.cAddress2
		      m.paddr3 = m.goApp.cAddress3
		      m.ptax   = cmEncrypt(ALLTRIM(m.goApp.cTaxid),m.goapp.cEncryptionKey)
		   ELSE
		      m.paddr1 = 'PO Box 223'
		      m.paddr2 = 'Wooster, OH  44691'
		      m.paddr3 = ''
		      m.ptax   = '99-9999999'
		   ENDIF
		
		   * Create cursor
		   SELECT  *, ;
		           m.paddr1 AS paddr1, ;
		           m.paddr2 AS paddr2, ;
		           m.paddr3 AS paddr3, ;
		           .F. AS lByWell,  ;
		           m.ptax   AS ptax ;
		       FROM tax1099st ;
		       WHERE cyear = '****' ;
		       INTO CURSOR temp1099 READWRITE
		
		   IF THISFORM.chkincOwners.VALUE
		      THISFORM.cSelectCriteria = 'All Owner 1099s'
		      IF tcState = 'ALL'
		         SELECT  *, ;
		                 m.paddr1 AS paddr1, ;
		                 m.paddr2 AS paddr2, ;
		                 m.paddr3 AS paddr3, ;
		                 .F. AS lByWell,  ;
		                 m.ptax   AS ptax ;
		             FROM tax1099st ;
		             WHERE cyear  = tcYear ;
		                 AND cidtype = 'I' ;
		             INTO CURSOR tempo1099 READWRITE ;
		             ORDER BY c1099state, cid
		      ELSE
		         SELECT  *, ;
		                 m.paddr1 AS paddr1, ;
		                 m.paddr2 AS paddr2, ;
		                 m.paddr3 AS paddr3, ;
		                 .F. AS lByWell,  ;
		                 m.ptax   AS ptax ;
		             FROM tax1099st ;
		             WHERE c1099state = tcState ;
		                 AND cyear  = tcYear ;
		                 AND cidtype = 'I' ;
		             INTO CURSOR tempo1099 READWRITE ;
		             ORDER BY c1099state, cid
		      ENDIF
		      SELECT temp1099
		      APPEND FROM DBF('tempo1099')
		   ENDIF
		
		   IF THISFORM.chkIncVendors.VALUE = .T.
		      IF tcState = 'ALL'
		         SELECT  *, ;
		                 m.paddr1 AS paddr1, ;
		                 m.paddr2 AS paddr2, ;
		                 m.paddr3 AS paddr3, ;
		                 .F. AS lByWell,  ;
		                 m.ptax   AS ptax ;
		             FROM tax1099st ;
		             WHERE cyear  = tcYear ;
		                 AND cidtype = 'V' ;
		             INTO CURSOR tempv1099 READWRITE ;
		             ORDER BY c1099state, cid
		
		         SELECT temp1099
		         APPEND FROM DBF('tempv1099')
		      ELSE
		         SELECT  *, ;
		                 m.paddr1 AS paddr1, ;
		                 m.paddr2 AS paddr2, ;
		                 m.paddr3 AS paddr3, ;
		                 .F. AS lByWell,  ;
		                 m.ptax   AS ptax ;
		             FROM tax1099st ;
		             WHERE cyear  = tcYear ;
		                 AND cidtype = 'V' ;
		                 AND c1099state = tcState ;
		             INTO CURSOR tempv1099 READWRITE ;
		             ORDER BY c1099state, cid
		
		         SELECT temp1099
		         APPEND FROM DBF('tempv1099')
		      ENDIF
		   ENDIF
		
		   IF THISFORM.chkselected.VALUE
		      THISFORM.cSelectCriteria = 'Selected 1099s'
		      SELECT  *, ;
		              m.paddr1 AS paddr1, ;
		              m.paddr2 AS paddr2, ;
		              m.paddr3 AS paddr3, ;
		              .F. AS lByWell,  ;
		              m.ptax   AS ptax ;
		          FROM tax1099st ;
		          WHERE cid IN (SELECT  cid ;
		                            FROM ten99sel) ;
		              AND IIF(tcState = 'ALL', .T., c1099state = tcState) ;
		              AND cyear  = tcYear ;
		          INTO CURSOR temp1099 READWRITE ;
		          ORDER BY c1099state, cid
		   ENDIF
		   THISFORM.cReportName = m.goapp.cRptsFolder + '1099s\ten99summst.frx'
		
		   SET DELETED &lcDeleted
		
		   IF !m.goApp.oSecurity.HasPrivilege('Tax Ids')
		      tlMask = .T.
		   ENDIF
		
		   *  If masking tax ID numbers
		   IF tlMask
		      SELECT temp1099
		      SCAN
		         REPLACE cTaxID WITH cmEncrypt(ALLTRIM(cTaxID),m.goApp.cEncryptionKey)
		*  If the 3rd character is a hyphen, it's a Fed ID #, so mask accordingly
		        IF SUBSTR(ctaxid, 3, 1) = '-'
		            REPLACE ctaxid WITH 'XX-XXX' + SUBSTR(ALLTRIM(ctaxid), 7, 4)
		        ENDIF
		*  If the 4th character is a hyphen, it's a SSN, so mask accordingly
		        IF SUBSTR(ctaxid, 4, 1) = '-'
		            REPLACE ctaxid WITH 'XXX-XX-' + SUBSTR(ALLTRIM(ctaxid), 8, 4)
		        ENDIF
		*  It's got a number of some kind in it, but it has no hyphens, so put some kind of a mask on it
		        IF NOT '-' $ ctaxid AND LEN(ALLTRIM(ctaxid)) > 8
		            REPLACE ctaxid WITH 'XXXXX' + SUBSTR(ctaxid, 6, 4)
		        ENDIF
		        *  If the 3rd character is a hyphen, it's a Fed ID #, so mask accordingly
		        IF SUBSTR(ptax, 3, 1) = '-'
		            REPLACE ptax WITH 'XX-XXX' + SUBSTR(ALLTRIM(ptax), 7, 4)
		        ENDIF
		*  If the 4th character is a hyphen, it's a SSN, so mask accordingly
		        IF SUBSTR(ptax, 4, 1) = '-'
		            REPLACE ptax WITH 'XXX-XX-' + SUBSTR(ALLTRIM(ptax), 8, 4)
		        ENDIF
		*  It's got a number of some kind in it, but it has no hyphens, so put some kind of a mask on it
		        IF NOT '-' $ ctaxid AND LEN(ALLTRIM(ctaxid)) > 8
		            REPLACE ctaxid WITH 'XXXXX' + SUBSTR(ctaxid, 6, 4)
		        ENDIF
		    ENDSCAN
		ELSE 
		    SELECT temp1099
		    REPLACE cTaxID WITH cmEncrypt(ALLTRIM(cTaxID),m.goApp.cEncryptionKey) ALL 
		ENDIF
		
		   SELECT temp1099
		   INDEX ON c1099state + cid TAG cid
		   IF RECC() > 0
		      llReturn = .T.
		   ELSE
		      llReturn = .F.
		   ENDIF
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'BuildData', loError.LINENO, 'State 1099 Summary', loError.ERRORNO, loError.MESSAGE
		   MESSAGEBOX('Unable to process the report at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
		
		
		
		
		
		
		
		
		
		
	ENDPROC

	PROCEDURE Init
		DODEFAULT()
		*
		*  Initialize the form criteria
		*
		swselect('tax1099st')
		SET ORDER to cyear
		GO BOTTOM 
		thisform.swyear1.value = cyear
		
		
		
	ENDPROC

	PROCEDURE lookup
	ENDPROC

	PROCEDURE selectowners
		LOCAL oTen99Sel AS FORM
		LOCAL llReturn, lnCount, loError
		llReturn = .T.
		
		TRY
		    DO FORM commonsource\ten99selected NAME oTen99Sel LINKED WITH THISFORM.swyear1.VALUE, .T.
		    RELEASE oTen99Sel
		    SELECT ten99sel
		    lnCount                      = RECCOUNT()
		    THISFORM.lblselected.CAPTION = TRANSFORM(lnCount) + ' Owner 1099s Selected'
		CATCH TO loError
		    llReturn = .F.
		    DO errorlog WITH 'Method', loError.LINENO, 'FormName', loError.ERRORNO, loError.MESSAGE, '', loError
		    MESSAGEBOX('Unable to process the report at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		          'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
	ENDPROC

	PROCEDURE cbostate.Init
		LOCAL lnx
		DODEFAULT()
		
		SELE c1099state FROM tax1099st INTO CURSOR lastate ORDER BY c1099state GROUP BY c1099state
		
		lnx = 1
		IF _TALLY > 0
		   THIS.ADDLISTITEM('ALL', lnx)
		   lnx = lnx + 1
		   SELECT lastate
		   SCAN
		      THIS.ADDLISTITEM(lastate.c1099state, lnx)
		      lnx = lnx + 1
		   ENDSCAN
		   THIS.LISTITEMID = 1
		ENDIF
	ENDPROC

	PROCEDURE chkIncOwners.Click
		LOCAL lnCount
		
		IF this.value
		   thisform.chkSelected.Value = .f.
		   thisform.chkINCVENDORS.Visible = .t.
		   THISFORM.lblselected.CAPTION = ''
		ELSE
		   this.Value = .t.
		ENDIF   
	ENDPROC

	PROCEDURE chkSelected.Click
		LOCAL lnCount
		LOCAL oTen99Sel AS FORM
		LOCAL llReturn, loError
		
		llReturn = .T.
		
		TRY
		   IF THIS.VALUE
		      THISFORM.chkincOwners.VALUE = .F.
		      thisform.chkiNCVENDORS.Value = .f.
		      thisform.chkINCVENDORS.Visible = .f.
		      thisform.SelectOwners()
		   ELSE
		      this.Value = .t.
		   ENDIF
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'Select 1099s', loError.LINENO, 'State 1099 Summary', loError.ERRORNO, loError.MESSAGE
		   MESSAGEBOX('Unable to process the report at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
	ENDPROC

ENDDEFINE
