*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="dmexpcat.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 619
	InitialSelectedAlias = "expcat"
	Left = 18
	Name = "Dataenvironment"
	Top = 394
	Width = 1016

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "expcat", ;
		CursorSource = "expcat", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Filter = "", ;
		Height = 90, ;
		Name = "Cursor1", ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "coa", ;
		CursorSource = "coa", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 850, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "glopt", ;
		CursorSource = "glopt", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 268, ;
		Name = "Cursor3", ;
		Top = 6, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "expcat1", ;
		CursorSource = "expcat", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 405, ;
		Name = "Cursor4", ;
		Top = 2, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "taxcodes", ;
		CursorSource = "taxcodes", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 134, ;
		Name = "Cursor5", ;
		Top = 5, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "expense", ;
		CursorSource = "expense", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 710, ;
		Name = "Cursor6", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor7' AS cursor WITH ;
		Alias = "afeopt", ;
		CursorSource = "afeopt", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 554, ;
		Name = "Cursor7", ;
		Top = 7, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formdmexpcat AS frmdatamanagerformcustom OF "..\custom\cforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="shpAccounts" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCateg" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCateg" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtDescrip" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDescrip" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcVendorCr" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblTaxcode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLookCoa2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCcracctv" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblOwnerAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCdraccto" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblVendorAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkLafetype" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLookCoa1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCcatcode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCcatcode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboDOIClass" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboTaxCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcOwnerDr" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkJIBOnly" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklRevDed" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: coldcatcode		&& Saves the original catcode so that if it changes we can cascade changes to csrctdet.
		*p: crevclear		&& Revenue Distribution Clearing Account
		*p: csaveclass		&& Saves the original exp class so that changes can be made to fixed expenses.
		*p: csavecode
		*p: lallocexp
		*p: ljibonly
	*</DefinedPropArrayMethod>

	Caption = "Expense Codes"
	clistexpression = expcat.ccatcode
	cnavworkarea = Expcat
	coldcatcode = 		&& Saves the original catcode so that if it changes we can cascade changes to csrctdet.
	crevclear = ""		&& Revenue Distribution Clearing Account
	csaveclass = 		&& Saves the original exp class so that changes can be made to fixed expenses.
	csavecode = 
	cworkarea = Expcat
	DoCreate = .T.
	Height = 333
	HelpContextID = 67
	lallocexp = .F.
	lexpliciteditmode = .F.
	ljibonly = .F.
	Name = "FormDmexpcat"
	Width = 631
	CMDATAMANAGER.Name = "CMDATAMANAGER"
	CMDATAMANAGER.TabIndex = 1
	CMDATAMANAGER.ZOrderSet = 0
	cmlookupmanager.Name = "cmlookupmanager"
	Mwresize1.lblHighLight.Name = "lblHighLight"
	Mwresize1.lblShading.Name = "lblShading"
	Mwresize1.Name = "Mwresize1"
	Mwresize1.TabIndex = 2

	ADD OBJECT 'cboDOIClass' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		ControlSource = "expcat.cexpclass", ;
		FontName = "Courier New", ;
		Height = 20, ;
		Left = 100, ;
		Name = "cboDOIClass", ;
		TabIndex = 12, ;
		Top = 115, ;
		Width = 140
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboTaxCode' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		ControlSource = "expcat.ctaxcode", ;
		FontName = "Courier New", ;
		Height = 20, ;
		Left = 300, ;
		Name = "cboTaxCode", ;
		RowSource = "", ;
		RowSourceType = 0, ;
		TabIndex = 13, ;
		Top = 115, ;
		Width = 180, ;
		ZOrderSet = 21
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'chkJIBOnly' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "JIB Only", ;
		ControlSource = "expcat.ljibonly", ;
		Height = 16, ;
		Left = 486, ;
		Name = "chkJIBOnly", ;
		TabIndex = 6, ;
		Top = 35, ;
		Width = 57
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkLafetype' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "AFE Code", ;
		ControlSource = "expcat.lafetype", ;
		Height = 16, ;
		Left = 486, ;
		Name = "chkLafetype", ;
		TabIndex = 5, ;
		Top = 12, ;
		Width = 66
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklRevDed' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Deduct from Revenue", ;
		ControlSource = "expcat.lrevenueded", ;
		Height = 16, ;
		Left = 486, ;
		Name = "chklRevDed", ;
		TabIndex = 7, ;
		Top = 57, ;
		Width = 123
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdLookCoa1' AS cmdcommandbuttoncustom WITH ;
		Caption = "Debit Account", ;
		Height = 20, ;
		Left = 21, ;
		Name = "cmdLookCoa1", ;
		TabIndex = 17, ;
		TabStop = .F., ;
		Top = 197, ;
		Width = 80, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdLookCoa2' AS cmdcommandbuttoncustom WITH ;
		Caption = "Credit Account", ;
		Height = 20, ;
		Left = 21, ;
		Name = "cmdLookCoa2", ;
		TabIndex = 21, ;
		TabStop = .F., ;
		Top = 285, ;
		Width = 80, ;
		ZOrderSet = 28
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'lblCateg' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		AutoSize = .F., ;
		Caption = "Name", ;
		Height = 16, ;
		Left = 38, ;
		Name = "lblCateg", ;
		TabIndex = 9, ;
		Top = 54, ;
		Width = 46, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblCcatcode' AS lblfieldlabelcustom WITH ;
		AutoSize = .F., ;
		Caption = "Code", ;
		Height = 16, ;
		Left = 38, ;
		Name = "lblCcatcode", ;
		TabIndex = 8, ;
		Top = 17, ;
		Width = 27, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblDescrip' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		AutoSize = .F., ;
		Caption = "Description", ;
		Height = 16, ;
		Left = 38, ;
		Name = "lblDescrip", ;
		TabIndex = 11, ;
		Top = 85, ;
		Width = 56, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		AutoSize = .F., ;
		Caption = "DOI Class", ;
		Height = 16, ;
		Left = 38, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 15, ;
		Top = 118
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblOwnerAcct' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		BackStyle = 1, ;
		Caption = "Account to Use for Posting Operator Owner Expense", ;
		FontBold = .T., ;
		FontSize = 9, ;
		Height = 17, ;
		Left = 21, ;
		Name = "lblOwnerAcct", ;
		TabIndex = 16, ;
		Top = 169, ;
		Width = 300, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblTaxcode' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "Section", ;
		Height = 16, ;
		Left = 257, ;
		Name = "lblTaxcode", ;
		TabIndex = 14, ;
		Top = 117, ;
		Width = 38, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblVendorAcct' AS lblfieldlabelcustom WITH ;
		Alignment = 2, ;
		AutoSize = .T., ;
		BackStyle = 1, ;
		Caption = "Account to Use for Posting Operator Vendor Revenue", ;
		FontBold = .T., ;
		FontSize = 9, ;
		Height = 17, ;
		Left = 21, ;
		Name = "lblVendorAcct", ;
		TabIndex = 20, ;
		Top = 261, ;
		Width = 303, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'shpAccounts' AS shpshapecustom WITH ;
		Height = 50, ;
		Left = 11, ;
		Name = "shpAccounts", ;
		Top = 268, ;
		Width = 601, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Shpshapecustom1' AS shpshapecustom WITH ;
		Height = 58, ;
		Left = 12, ;
		Name = "Shpshapecustom1", ;
		Top = 174, ;
		Width = 600, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'txtCateg' AS txttextboxcustom WITH ;
		ControlSource = "expcat.ccateg", ;
		Height = 20, ;
		Left = 100, ;
		lrequired = .T., ;
		MaxLength = 25, ;
		Name = "txtCateg", ;
		TabIndex = 4, ;
		Top = 52, ;
		Width = 183, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCcatcode' AS txttextboxcustom WITH ;
		ControlSource = "expcat.ccatcode", ;
		Format = "!", ;
		Height = 20, ;
		InputMask = "", ;
		Left = 100, ;
		lrequired = .T., ;
		MaxLength = 4, ;
		Name = "txtCcatcode", ;
		TabIndex = 3, ;
		Top = 15, ;
		Width = 48, ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCcracctv' AS txtquickfill WITH ;
		clistexpression = cAcctNo, ;
		clistworkarea = coa, ;
		ControlSource = "expcat.ccracctv", ;
		Height = 20, ;
		InputMask = "999999", ;
		Left = 119, ;
		MaxLength = 6, ;
		Name = "txtCcracctv", ;
		TabIndex = 22, ;
		Top = 285, ;
		Width = 52, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCdraccto' AS txtquickfill WITH ;
		clistexpression = cAcctNo, ;
		clistworkarea = coa, ;
		ControlSource = "expcat.cdraccto", ;
		Height = 20, ;
		InputMask = "999999", ;
		Left = 119, ;
		MaxLength = 6, ;
		Name = "txtCdraccto", ;
		TabIndex = 18, ;
		Top = 197, ;
		Width = 52, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcOwnerDr' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 214, ;
		lreadonly = .T., ;
		Name = "txtcOwnerDr", ;
		TabIndex = 19, ;
		TabStop = .F., ;
		Top = 197, ;
		Width = 386, ;
		ZOrderSet = 22
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcVendorCr' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 214, ;
		lreadonly = .T., ;
		Name = "txtcVendorCr", ;
		TabIndex = 23, ;
		TabStop = .F., ;
		Top = 285, ;
		Width = 386, ;
		ZOrderSet = 25
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtDescrip' AS txttextboxcustom WITH ;
		ControlSource = "expcat.cdescrip", ;
		Height = 20, ;
		Left = 100, ;
		lrequired = .T., ;
		MaxLength = 40, ;
		Name = "txtDescrip", ;
		TabIndex = 10, ;
		Top = 83, ;
		Width = 312, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE Activate
		IF DODEFAULT()
		   SELECT afeopt
		   GO top
		   thisform.lAllocExp = afeopt.lAllocExp
		endif
	ENDPROC

	PROCEDURE Init
		
		LOCAL lnSelect
		
		IF TYPE('m.goApp') = 'O'
		   IF NOT m.goApp.lAMVersion
		      THISFORM.cmdlookcoa1.VISIBLE = .F.
		      THISFORM.cmdlookcoa2.VISIBLE = .F.
		      THISFORM.txtcdraccto.VISIBLE = .F.
		      THISFORM.txtccracctv.VISIBLE = .F.
		      THISFORM.txtcownerdr.VISIBLE = .F.
		      THISFORM.txtcvendorcr.VISIBLE = .F.
		      THISFORM.lblowneracct.VISIBLE = .F.
		      THISFORM.lblvendoracct.VISIBLE = .F.
		      THISFORM.shpaccounts.VISIBLE = .F.
		      THISFORM.HEIGHT = 147
		   ENDIF
		ENDIF
		
		IF m.goApp.lAFEOpt
		   thisform.chklafetype.Visible = .t.
		ELSE
		   thisform.chklafetype.Visible = .f.
		ENDIF 
		
		SELECT expcat
		SET ORDER TO ccatcode
		
		SELECT glopt
		GO TOP
		IF NOT EMPTY(cexpclear)
		   THISFORM.cRevClear = cExpClear
		ELSE
		   thisform.cRevClear = ''
		ENDIF    
		
		thisform.refresh()
		DODEFAULT()
	ENDPROC

	PROCEDURE list
		LPARAMETERS cworkarea
		LOCAL lcList, lnRecNo
		PRIV llOK
		
		IF USED('exptmp')
		   USE IN exptmp
		ENDIF
		
		llOK = .T.
		
		IF THIS.flushcontrolbuffer() AND THIS.beforenav('Expcat')
		   SELECT cCatCode,cCateg,cExpClass,IIF(lAFEType,'X','') AS cAFEType, IIF(lJIBOnly,'X','') AS cJIBOnly  ;
		      FROM expcat INTO CURSOR exptmp READWRITE
		
		   SELECT exptmp
		   INDEX ON cCatCode           TAG cCatCode
		   INDEX ON cCateg             TAG cCateg
		   INDEX ON cExpClass+cCatCode TAG cExpClass
		   INDEX ON cAFEType           TAG cAFEType
		   INDEX ON cJIBOnly           TAG cJIBOnly
		
		   lcList = 'ccatcode\Code,ccateg\Category,cexpclass\Cls,cAFEType\AFE,cJIBOnly\JIB'
		
		   DO FORM '..\custom\picklist' WITH 'exptmp', lcList, THISFORM.txtcCatCode.VALUE, 5, .T., .T.
		
		   IF llOK
		      SELECT expcat
		      SET ORDER TO cCatCode
		      SEEK(exptmp.cCatCode)
		
		      IF m.goApp.lAMVersion
		         SWSELECT('coa')
		         SET ORDER TO acctno
		
		         IF SEEK(expcat.cdraccto)
		            THISFORM.txtcOwnerDr.VALUE = coa.cAcctDesc
		            THISFORM.txtcOwnerDr.REFRESH()
		         ELSE
		            THISFORM.txtcOwnerDr.VALUE = ''
		            THISFORM.txtcOwnerDr.REFRESH()
		         ENDIF
		
		         IF SEEK(expcat.ccracctv)
		            THISFORM.txtcVendorCr.VALUE = coa.cAcctDesc
		            THISFORM.txtcVendorCr.REFRESH()
		         ELSE
		            THISFORM.txtcVendorCr.VALUE = ''
		            THISFORM.txtcVendorCr.REFRESH()
		         ENDIF
		
		         IF expcat.lAFEType = .T. AND NOT THISFORM.lallocexp  &&  Change accounts for AFE categories
		            THISFORM.lblOwnerAcct.CAPTION = 'G/L Posting Account'
		            THISFORM.cmdLookCoa1.CAPTION = 'G/L Account'
		            THISFORM.shpAccounts.VISIBLE = .F.
		            THISFORM.lblVendorAcct.VISIBLE = .F.
		            THISFORM.txtcCrAcctV.VISIBLE = .F.
		            THISFORM.txtcVendorCr.VISIBLE = .F.
		            THISFORM.cmdLookCoa2.VISIBLE = .F.
		         ELSE
		            THISFORM.lblOwnerAcct.CAPTION = 'Accounts To Use For Posting Operator Owner Expense'
		            THISFORM.cmdLookCoa1.CAPTION = 'Debit Account'
		            THISFORM.shpAccounts.VISIBLE = .T.
		            THISFORM.lblVendorAcct.VISIBLE = .T.
		            THISFORM.txtcCrAcctV.VISIBLE = .T.
		            THISFORM.txtcVendorCr.VISIBLE = .T.
		            THISFORM.cmdLookCoa2.VISIBLE = .T.
		         ENDIF
		      ENDIF
		
		      IF expcat.cCatCode = 'MKTG'  &&  Disable the class and tax code fields
		*         THISFORM.cboDOIClass.SET('enabled',.F.)
		         THISFORM.cbotaxCode.SET('enabled',.F.)
		      ELSE
		         THISFORM.cboDOIClass.SET('enabled',.T.)
		         THISFORM.cbotaxCode.SET('enabled',.T.)
		      ENDIF
		
		      THISFORM.REFRESH()
		   ENDIF
		ELSE
		   RETURN
		ENDIF
		
	ENDPROC

	PROCEDURE Load
		DODEFAULT()
		
		IF m.goapp.lAMVersion
		   swselect('coa')
		ENDIF 
		
		SWSELECT('afeopt')
		GO top
		thisform.lAllocExp = afeopt.lAllocExp
		
		
	ENDPROC

	PROCEDURE cboDOIClass.Init
		DODEFAULT()
		
		this.requery()
		
		
	ENDPROC

	PROCEDURE cboDOIClass.Requery
		THIS.CLEAR()
		IF INLIST(ALLTRIM(expcat.ccatcode), 'GATH', 'COMP')
		   THIS.ADDLISTITEM('Net Gas Int', 1, 1)
		   THIS.ADDLISTITEM('G', 1, 2)
		   THIS.ADDLISTITEM('Working Int', 2, 1)
		   THIS.ADDLISTITEM('0', 2, 2)
		   THIS.ADDLISTITEM('Class 1', 3, 1)
		   THIS.ADDLISTITEM('1', 3, 2)
		   THIS.ADDLISTITEM('Class 2', 4, 1)
		   THIS.ADDLISTITEM('2', 4, 2)
		   THIS.ADDLISTITEM('Class 3', 5, 1)
		   THIS.ADDLISTITEM('3', 5, 2)
		   THIS.ADDLISTITEM('Class 4', 6, 1)
		   THIS.ADDLISTITEM('4', 6, 2)
		   THIS.ADDLISTITEM('Class 5', 7, 1)
		   THIS.ADDLISTITEM('5', 7, 2)
		   THIS.ADDLISTITEM('Before Case Pt', 8, 1)
		   THIS.ADDLISTITEM('B', 8, 2)
		   THIS.ADDLISTITEM('After Case Pt', 9, 1)
		   THIS.ADDLISTITEM('A', 9, 2)
		   IF m.goapp.lPluggingModule
		      THIS.ADDLISTITEM('Plugging', 9, 1)
		      THIS.ADDLISTITEM('P', 9, 2)
		   ENDIF    
		ELSE
		   THIS.ADDLISTITEM('Working Int', 1, 1)
		   THIS.ADDLISTITEM('0', 1, 2)
		   THIS.ADDLISTITEM('Class 1', 2, 1)
		   THIS.ADDLISTITEM('1', 2, 2)
		   THIS.ADDLISTITEM('Class 2', 3, 1)
		   THIS.ADDLISTITEM('2', 3, 2)
		   THIS.ADDLISTITEM('Class 3', 4, 1)
		   THIS.ADDLISTITEM('3', 4, 2)
		   THIS.ADDLISTITEM('Class 4', 5, 1)
		   THIS.ADDLISTITEM('4', 5, 2)
		   THIS.ADDLISTITEM('Class 5', 6, 1)
		   THIS.ADDLISTITEM('5', 6, 2)
		   THIS.ADDLISTITEM('Before Case Pt', 7, 1)
		   THIS.ADDLISTITEM('B', 7, 2)
		   THIS.ADDLISTITEM('After Case Pt', 8, 1)
		   THIS.ADDLISTITEM('A', 8, 2)
		   IF m.goapp.lPluggingModule
		      THIS.ADDLISTITEM('Plugging', 9, 1)
		      THIS.ADDLISTITEM('P', 9, 2)
		   ENDIF    
		ENDIF
	ENDPROC

	PROCEDURE cboDOIClass.Valid
		IF THIS.VALUE <> expcat.cExpClass  &&  Changed, so warn them about the DOI
		   THISFORM.oMessage.Warning('Since the expense class has changed, make sure the DOI screen is set up with owners with interests in this class before entering expenses using this category.')
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE cboTaxCode.Init
		dodefault()
		
		SELECT cdesc, ctaxcode FROM taxcodes INTO ARRAY laTaxCodes ORDER BY ctaxcode
		
		IF _tally > 0
		   FOR lnX = 1 TO _tally
		       this.addlistitem(laTaxCodes[lnX,1],lnX,1)
		       this.addlistitem(laTaxCodes[lnX,2],lnX,2)
		   ENDFOR    
		ENDIF
		
		
	ENDPROC

	PROCEDURE chkJIBOnly.Valid
		IF this.Value <> thisform.lJIBonly
		   SELECT expense.ccatcode FROM expense ;
		     WHERE expense.ccatcode = thisform.txtCcatcode.Value ;
		       and expense.ccatcode in (SELECT ccatcode FROM expcat WHERE ljibonly) ;
		       AND (expense.nrunnorev <> 0 OR expense.nrunnojib <> 0) ;
		     into cursor temp
		   IF _tally > 0
		      MESSAGEBOX('The JIB only flag cannot be changed for this category because the ' + ;
		                 'category has already been used and processed in a run.',16,'JIB Only Flag')
		      this.Value = not this.value           
		      RETURN 0
		   ENDIF 
		ENDIF    
		
		DODEFAULT() 
	ENDPROC

	PROCEDURE chkJIBOnly.When
		thisform.ljibonly = this.Value 
		RETURN DODEFAULT()
	ENDPROC

	PROCEDURE chkLafetype.Click
		IF THIS.VALUE = .T. AND NOT thisform.lallocexp  &&  Don't change to the posting account if they're allocating AFE expenses - BH 12/28/06
		   THISFORM.lblOwnerAcct.CAPTION = 'G/L Posting Account'
		   THISFORM.cmdLookCoa1.CAPTION = 'G/L Account'
		   THISFORM.shpAccounts.VISIBLE = .F.
		   THISFORM.lblVendorAcct.VISIBLE = .F.
		   THISFORM.txtcCrAcctV.VISIBLE = .F.
		   THISFORM.txtcVendorCr.VISIBLE = .F.
		   THISFORM.cmdLookCoa2.VISIBLE = .F.
		ELSE
		   THISFORM.lblOwnerAcct.CAPTION = 'Accounts To Use For Posting Operator Owner Expense'
		   THISFORM.cmdLookCoa1.CAPTION = 'Debit Account'
		   THISFORM.shpAccounts.VISIBLE = .T.
		   THISFORM.lblVendorAcct.VISIBLE = .T.
		   THISFORM.txtcCrAcctV.VISIBLE = .T.
		   THISFORM.txtcVendorCr.VISIBLE = .T.
		   THISFORM.cmdLookCoa2.VISIBLE = .T.
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE chklRevDed.Valid
		IF this.Value <> thisform.lJIBonly
		   SELECT expense.ccatcode FROM expense ;
		     WHERE expense.ccatcode = thisform.txtCcatcode.Value ;
		       and expense.ccatcode in (SELECT ccatcode FROM expcat WHERE ljibonly) ;
		       AND (expense.nrunnorev <> 0 OR expense.nrunnojib <> 0) ;
		     into cursor temp
		   IF _tally > 0
		      MESSAGEBOX('The JIB only flag cannot be changed for this category because the ' + ;
		                 'category has already been used and processed in a run.',16,'JIB Only Flag')
		      this.Value = not this.value           
		      RETURN 0
		   ENDIF 
		ENDIF    
		
		DODEFAULT() 
	ENDPROC

	PROCEDURE chklRevDed.When
		thisform.ljibonly = this.Value 
		RETURN DODEFAULT()
	ENDPROC

	PROCEDURE CMDATAMANAGER.afternav
		LPARAMETERS cworkarea
		
		IF cworkarea = 'Expcat'
		   THISFORM.txtcownerDr.VALUE = ''
		   THISFORM.txtcvendorCr.VALUE = ''
		   THISFORM.csaveclass = expcat.cexpclass
		   thisform.csavecode  = expcat.ccatcode
		   IF m.goApp.lAMVersion
		      SWSELECT('coa')
		      SET ORDER TO acctno
		
		      IF SEEK(expcat.cdraccto)
		         THISFORM.txtcownerDr.VALUE = coa.cAcctDesc
		         THISFORM.txtcownerDr.REFRESH()
		      ELSE
		         THISFORM.txtcownerDr.VALUE = ''
		      ENDIF
		
		      IF SEEK(expcat.ccracctv)
		         THISFORM.txtcvendorCr.VALUE = coa.cAcctDesc
		         THISFORM.txtcvendorCr.REFRESH()
		      ELSE
		         THISFORM.txtcvendorCr.VALUE = ''
		      ENDIF
		   ENDIF
		
		   IF expcat.lAFEType = .T.  AND NOT THISFORM.lallocexp  &&  Change accounts for AFE categories - Don't change if they're allocating AFE expenses - BH 12/28/06
		      THISFORM.lblOwnerAcct.CAPTION = 'G/L Posting Account'
		      THISFORM.cmdLookCoa1.CAPTION = 'G/L Account'
		      THISFORM.shpAccounts.VISIBLE = .F.
		      THISFORM.lblVendorAcct.VISIBLE = .F.
		      THISFORM.txtcCrAcctV.VISIBLE = .F.
		      THISFORM.txtcvendorCr.VISIBLE = .F.
		      THISFORM.cmdLookCoa2.VISIBLE = .F.
		   ELSE
		      THISFORM.lblOwnerAcct.CAPTION = 'Accounts To Use For Posting Operator Owner Expense'
		      THISFORM.cmdLookCoa1.CAPTION = 'Debit Account'
		      THISFORM.shpAccounts.VISIBLE = .T.
		      THISFORM.lblVendorAcct.VISIBLE = .T.
		      THISFORM.txtcCrAcctV.VISIBLE = .T.
		      THISFORM.txtcvendorCr.VISIBLE = .T.
		      THISFORM.cmdLookCoa2.VISIBLE = .T.
		   ENDIF
		
		   IF expcat.cCatCode = 'MKTG'  &&  Disable the class and tax code fields
		*      THISFORM.cboDOIClass.SET('enabled',.F.)
		      THISFORM.cbotaxCode.SET('enabled',.F.)
		   ELSE
		      THISFORM.cboDOIClass.SET('enabled',.T.)
		      THISFORM.cbotaxCode.SET('enabled',.T.)
		   ENDIF
		
		   SELECT (cworkarea)
		   thisform.cboDOIClass.Requery()
		   THISFORM.REFRESH()
		ENDIF
		
		DODEFAULT(cworkarea)
		
		
	ENDPROC

	PROCEDURE CMDATAMANAGER.afternew
		LPARAMETERS cworkarea
		
		IF m.cWorkArea = 'Expcat'
		   lcBatch = THISFORM.oRegistry.IncrementCounter('%Shared.Counters.Expense Category')
		   set dele off
		   SELECT expcat1
		   SET ORDER TO cidexpc
		   DO WHILE SEEK(lcBatch)
		      lcBatch = THISFORM.oRegistry.IncrementCounter('%Shared.Counters.Expense Category')
		   ENDDO
		   set dele on
		   SELECT expcat
		   SET ORDER TO ccatcode
		   REPLACE cidexpc  WITH lcBatch,  ;
		      ccatcode with '', ;
		      ccraccto WITH THISFORM.cRevClear, ;
		      cdracctv WITH THISFORM.cRevClear, ;
		      ctaxcode WITH 'OE', ;
		      cexpclass WITH '0'
		   THISFORM.setnextcontrol(THISFORM.txtcCatCode)
		   thisform.refresh()
		ENDIF
		
		DODEFAULT(cworkarea)
		
	ENDPROC

	PROCEDURE CMDATAMANAGER.beforedelete
		LPARAMETERS cworkarea
		
		LOCAL lcBatch, llFound
		
		llFound = .F.
		
		swSELECT('expense')
		LOCATE FOR cCatCode = expcat.cCatCode AND NOT DELETED()
		IF FOUND()
		   llFound = .t.
		ELSE
		   swselect('expsusp')
		   LOCATE FOR cCatCode = expcat.cCatCode AND NOT DELETED()
		   IF FOUND()
		      llFound = .T.
		   ELSE
		      swselect('appurchd')   
		      LOCATE FOR cCatCode = expcat.cCatCode AND NOT DELETED()
		      IF FOUND()
		         llFound = .T.
		      ELSE
		         swselect('appurecd')   
		         LOCATE FOR cCatCode = expcat.cCatCode AND NOT DELETED()
		         IF FOUND()
		            llFound = .T.
		         ENDIF 
		      ENDIF
		   ENDIF
		ENDIF 
		
		IF llFound
		   THISFORM.oMessage.Warning('There have been expenses entered using this category.  It cannot be deleted.')
		   RETURN .F.
		ELSE
		   lcBatch = THISFORM.oRegistry.IncrementCounter('%Shared.Counters.Batch')
		   *  To avoid uniqueness errors on deleted records, re-assign ccatcode with a unique value.
		   SELECT expcat
		   replace ccatcode WITH RIGHT(ALLTRIM(lcBatch),4)
		   =TABLEUPDATE(.t.)
		ENDIF
		
		DODEFAULT(cworkarea)
		
	ENDPROC

	PROCEDURE CMDATAMANAGER.beforeupdate
		LPARAMETERS cWorkareaList, lCurrentRecordOnly
		
		IF THISFORM.csaveclass <> expcat.cexpclass AND NOT thisform.isnew()
		   SELE expense
		   SCAN FOR cyear='FIXD' AND ccatcode = expcat.ccatcode
		      REPL cexpclass WITH expcat.cexpclass
		   ENDSCAN
		ENDIF
		
		IF thisform.coldcatcode <> expcat.ccatcode AND NOT thisform.isnew()
		   swselect('csrctdet')
		   SCAN FOR ALLTRIM(ctype) = thisform.coldcatcode
		      REPLACE ctype WITH expcat.ccatcode
		   ENDSCAN
		ENDIF 
		
		IF thisform.txtcCatCode.Value = 'COMP' OR ;
		   thisform.txtcCatCode.Value = 'GATH'
		   MESSAGEBOX('The codes "COMP" and "GATH" are system codes for Compression and Gathering. ' + ;
		              'If you want to use this code for either of these then everything is good. ' + ;
		              'If you are wanting to use the code for some other type of expense give it ' + ;
		              'an expense code other than "COMP" or "GATH".',64,'Compression/Gathering Code')
		ENDIF 
	ENDPROC

	PROCEDURE cmdLookCoa1.Click
		LOCAL lnSelect, lcList
		PRIV llOK
		
		llOK   = .T.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		lnSelect = SELECT()
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, thisform.txtcdraccto.value, 2
		
		IF llOK
		   THISFORM.cmdatamanager.REPLACE('Expcat', 'Cdraccto', coa.cacctno)
		   THISFORM.txtcOwnerDR.VALUE = coa.cAcctDesc
		   THISFORM.txtcDRAccto.REFRESH()
		   THISFORM.txtcOwnerDR.REFRESH()
		   THISFORM.lChanged = .T.
		   m.goStateManager.RefreshAll('Form Edit')
		   THISFORM.txtcdraccto.SETFOCUS()
		ENDIF
		
		SELECT (lnSelect)
		
		
	ENDPROC

	PROCEDURE cmdLookCoa1.When
		RETURN MDOWN()
	ENDPROC

	PROCEDURE cmdLookCoa2.Click
		LOCAL lnSelect, lcList
		PRIV llOK
		
		llOK   = .T.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		lnSelect = SELECT()
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, thisform.txtccracctv.value, 2
		
		IF llOK
		   THISFORM.cmdatamanager.REPLACE('Expcat', 'Ccracctv', coa.cacctno)
		   THISFORM.txtcVendorCR.VALUE = coa.cAcctDesc
		   THISFORM.txtccracctv.REFRESH()
		   THISFORM.txtcVendorCR.REFRESH()
		   THISFORM.lChanged = .T.
		   m.goStateManager.RefreshAll('Form Edit')
		   THISFORM.txtccracctv.SETFOCUS()
		ENDIF
		
		SELECT (lnSelect)
		
		
	ENDPROC

	PROCEDURE cmdLookCoa2.When
		RETURN MDOWN()
		
		
	ENDPROC

	PROCEDURE txtCateg.LostFocus
		IF EMPTY(thisform.txtDescrip.value)
		   thisform.cmdatamanager.replace('Expcat','cdescrip',this.value)
		   thisform.txtDescrip.refresh()
		ENDIF   
		
		dodefault()
	ENDPROC

	PROCEDURE txtCcatcode.Valid
		LOCAL lcCatCode
		
		lcCatCode = THIS.VALUE
		
		IF thisform.isnew('Expcat')
		   IF NOT m.goapp.lPluggingModule
		      IF lcCatCode = 'PLUG'
		         MESSAGEBOX('The PLUG code is a reserved code for the Plugging Module. It cannot be added without ' + ;
		                    'the Plugging Module being active. Please use an alternate code.',16,'Reserved Code')
		         this.Value = ''
		         RETURN
		      ENDIF
		   ENDIF
		ENDIF 
		
		IF NOT EMPTY(lcCatCode) AND lcCatCode <> expcat.ccatcode AND NOT thisform.isnew('expcat')
		   IF m.goapp.lPluggingModule AND lcCatCode = 'PLUG' AND thisform.cSaveCode # 'PLUG' AND NOT thisform.isnew()
		      MESSAGEBOX('A current code cannot be changed to the system reserved PLUG code.',16,'PLUG Code Problem')
		      this.Value = expcat.ccatcode
		      RETURN 
		   ENDIF
		
		   SELECT expcat1
		   SET ORDER TO ccatcode
		   SET DELETED OFF
		   IF SEEK(lcCatCode)
		      IF NOT DELETED()
		         IF THISFORM.omessage.CONFIRM('There is already an expense category with this code.  Would you like to view this record?')
		            THISFORM.cmdatamanager.revertall()
		            SELECT expcat
		            SET ORDER TO ccatcode
		            SEEK(lcCatCode)
		            THISFORM.REFRESH()
		         ELSE
		            THIS.VALUE = ''
		            RETURN 0
		         ENDIF
		      ELSE
		         SELECT expcat
		         SCATTER MEMVAR
		         THISFORM.cmdatamanager.revertall()
		         LOCATE FOR ccatcode = lcCatCode
		         IF FOUND()
		            RECALL
		            m.ccatcode = lcCatCode
		            GATHER MEMVAR
		            THISFORM.REFRESH()
		         ENDIF
		      ENDIF
		   ENDIF
		   SET DELETED ON
		
		   IF THIS.VALUE = 'MKTG'  &&  Disable the class and tax code fields
		*      THISFORM.cboDOIClass.SET('enabled',.F.)
		      THISFORM.cbotaxCode.SET('enabled',.F.)
		      THISFORM.omessage.Warning('The MKTG code is a special code used by the system for entering expenses that will be deducted prior to calculating Gas Taxes.  Be aware that expenses using the MKTG code will be charged to owners at their Gas Revenue interest.')
		   ELSE
		      THISFORM.cboDOIClass.SET('enabled',.T.)
		      THISFORM.cbotaxCode.SET('enabled',.T.)
		      thisform.cboDOIClass.Requery()
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtCcatcode.When
		IF DODEFAULT()
		   thisform.coldcatcode = expcat.ccatcode
		   IF this.Value = 'PLUG'
		      RETURN .f.
		   ENDIF 
		ENDIF 
	ENDPROC

	PROCEDURE txtCcracctv.GotFocus
		ON KEY LABEL F2 _screen.activeform.cmdLookCOA2.Click()
		
		dodefault()
	ENDPROC

	PROCEDURE txtCcracctv.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      thisform.txtcVendorCr.set('value',coa.cacctdesc)
		   ELSE
		      thisform.txtcVendorCr.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtCcracctv.LostFocus
		ON KEY LABEL F2 *
		
	ENDPROC

	PROCEDURE txtCcracctv.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      thisform.txtcVendorCr.set('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtCdraccto.GotFocus
		ON KEY LABEL F2 _screen.activeform.cmdLookCOA1.Click()
		
		dodefault()
	ENDPROC

	PROCEDURE txtCdraccto.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      thisform.txtcownerDr.set('value',coa.cacctdesc)
		   ELSE
		      thisform.txtcownerDr.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE txtCdraccto.LostFocus
		ON KEY LABEL F2 *
		
	ENDPROC

	PROCEDURE txtCdraccto.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      thisform.txtcOwnerDr.set('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtcOwnerDr.When
		RETURN .F.
		
	ENDPROC

	PROCEDURE txtcVendorCr.When
		RETURN .F.
	ENDPROC

ENDDEFINE
