*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="dmrlasev.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 358
	Left = 40
	Name = "Dataenvironment"
	Top = 235
	Width = 587

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "fields", ;
		CursorSource = "fields", ;
		Database = s:\program distribution\ampro new\sampledata\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "wellhist", ;
		CursorSource = "wellhist", ;
		Database = s:\program distribution\ampro new\sampledata\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "wellinv", ;
		CursorSource = "wellinv", ;
		Database = s:\program distribution\ampro new\sampledata\appdata.dbc, ;
		Height = 90, ;
		Left = 430, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "options", ;
		CursorSource = "options", ;
		Database = s:\program distribution\ampro new\sampledata\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor4", ;
		Top = 140, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "income", ;
		CursorSource = "income", ;
		Database = s:\program distribution\ampro new\sampledata\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor5", ;
		Top = 140, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor9' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = s:\program distribution\ampro new\sampledata\appdata.dbc, ;
		Height = 90, ;
		Left = 3, ;
		Name = "Cursor9", ;
		Top = 3, ;
		Width = 101
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formdmrlasev AS frmformcustom OF "..\custom\cforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCreate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdExit" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcYear" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcPeriod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcReportingNumber" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcRevAcctNo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="opgCreatePrint" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtdDate" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: makefile		&& Create the 1099 file
	*</DefinedPropArrayMethod>

	Caption = "Create/Print LA Gas Severance Tax File"
	DataSession = 2
	DoCreate = .T.
	Height = 254
	HelpContextID = 599
	lcloseonescape = .T.
	Name = "Formdmrlasev"
	Width = 331

	ADD OBJECT 'cmdCreate' AS cmdcommandbuttoncustom WITH ;
		Caption = "\<Create", ;
		Height = 36, ;
		Left = 89, ;
		Name = "cmdCreate", ;
		TabIndex = 12, ;
		Top = 203, ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdExit' AS cmdcommandbuttoncustom WITH ;
		Caption = "E\<xit", ;
		Height = 36, ;
		Left = 170, ;
		Name = "cmdExit", ;
		TabIndex = 13, ;
		Top = 203, ;
		Width = 72
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Create File for Period/Year:", ;
		FontBold = .F., ;
		Height = 16, ;
		Left = 42, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 4, ;
		Top = 49, ;
		Width = 133
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom1' AS lbltextcustom WITH ;
		Caption = "/", ;
		FontSize = 10, ;
		Left = 213, ;
		Name = "Lbltextcustom1", ;
		TabIndex = 5, ;
		Top = 49
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom2' AS lbltextcustom WITH ;
		Caption = "Date:", ;
		Left = 148, ;
		Name = "Lbltextcustom2", ;
		TabIndex = 7, ;
		Top = 86
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom3' AS lbltextcustom WITH ;
		Caption = "Reporting Number", ;
		Left = 87, ;
		Name = "Lbltextcustom3", ;
		TabIndex = 9, ;
		Top = 122
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom4' AS lbltextcustom WITH ;
		Caption = "Revenue Acct. No.", ;
		Left = 82, ;
		Name = "Lbltextcustom4", ;
		TabIndex = 11, ;
		Top = 158
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'opgCreatePrint' AS opgoptiongroupcustom WITH ;
		AutoSize = .T., ;
		BorderStyle = 0, ;
		ButtonCount = 2, ;
		Left = 123, ;
		Name = "opgCreatePrint", ;
		TabIndex = 1, ;
		Top = 2, ;
		Value = 1, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "Create File", ;
		Option1.FontSize = 8, ;
		Option1.Height = 16, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Top = 5, ;
		Option1.Value = 1, ;
		Option1.Width = 69, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "Print Report", ;
		Option2.FontSize = 8, ;
		Option2.Height = 16, ;
		Option2.Left = 5, ;
		Option2.Name = "Option2", ;
		Option2.Top = 24, ;
		Option2.Width = 74
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'txtcPeriod' AS swperiod WITH ;
		Left = 189, ;
		Name = "txtcPeriod", ;
		TabIndex = 2, ;
		Top = 47
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcReportingNumber' AS txttextboxcustom WITH ;
		ControlSource = "options.ccomprptno", ;
		Height = 20, ;
		InputMask = "!!!!!!", ;
		Left = 189, ;
		Name = "txtcReportingNumber", ;
		TabIndex = 8, ;
		Top = 120, ;
		Width = 57
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcRevAcctNo' AS txttextboxcustom WITH ;
		ControlSource = "options.crevacctno", ;
		Left = 189, ;
		Name = "txtcRevAcctNo", ;
		TabIndex = 10, ;
		Top = 156
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcYear' AS swyear WITH ;
		Height = 20, ;
		Left = 219, ;
		MaxLength = 4, ;
		Name = "txtcYear", ;
		TabIndex = 3, ;
		Top = 47, ;
		Width = 40
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtdDate' AS dpk WITH ;
		Height = 20, ;
		InputMask = "", ;
		Left = 189, ;
		Name = "txtdDate", ;
		TabIndex = 6, ;
		Top = 84, ;
		Width = 75, ;
		ZOrderSet = 28
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />
	
	PROCEDURE Init
		PARA cWhichOne
		PUBLIC lcWhichOne
		
		lcWhichOne = cWhichOne
		
		IF TYPE('lcWhichOne') = 'L'  &&  If nothing's passed, most likely for development testing
		   lcWhichOne = 1
		ENDIF
		
		DO CASE
		   CASE lcWhichOne = 1  &&  LA SevTax Rpt
		      THIS.opgCreatePrint.VISIBLE = .T.
		      THIS.CAPTION = 'LA Gas Severance Tax Report'
		      THIS.cmdCreate.CAPTION = 'Create'
		   CASE lcWhichOne = 2  &&  LA Oil & Gas Production Rpt
		      THIS.opgCreatePrint.VISIBLE = .F.
		      THIS.CAPTION = 'LA Oil & Gas Production Report'
		      THIS.cmdCreate.CAPTION = 'Print'
		      thisform.HelpContextID = 600
		ENDCASE
		
		DODEFAULT()
		
		*
		*  Find the Registry object
		*
		THIS.oRegistry = FindGlobalObject('cmRegistry')
		THIS.oMessage = FindGlobalObject('cmMessage')
		
	ENDPROC

	PROCEDURE makefile		&& Create the 1099 file
		PUBLIC cRepNum, cRevAcctNum, cWrittenMonth, dDate, lcYear, lcPeriod, lcFieldID, lcFieldName
		
		SET DELETED ON
		
		lcYear = THISFORM.txtcYear.VALUE
		lcPeriod = THISFORM.txtcPeriod.VALUE
		cRepNum = options.cCompRptNo
		cRevAcctNo = options.cRevAcctNo
		dDate = THISFORM.txtdDate.VALUE
		lnMonth = MONTH(THISFORM.txtdDate.VALUE)
		lnYear = YEAR(THISFORM.txtdDate.VALUE)
		
		DO CASE
		   CASE lnMonth = 1  &&  January
		      cWrittenMonth = 'January ' + ALLTRIM(STR(lnYear))
		   CASE lnMonth = 2  &&  February
		      cWrittenMonth = 'February ' + ALLTRIM(STR(lnYear))
		   CASE lnMonth = 3  &&  March
		      cWrittenMonth = 'March ' + ALLTRIM(STR(lnYear))
		   CASE lnMonth = 4  &&  April
		      cWrittenMonth = 'April ' + ALLTRIM(STR(lnYear))
		   CASE lnMonth = 5  &&  May
		      cWrittenMonth = 'May ' + ALLTRIM(STR(lnYear))
		   CASE lnMonth = 6  &&  June
		      cWrittenMonth = 'June ' + ALLTRIM(STR(lnYear))
		   CASE lnMonth = 7  &&  July
		      cWrittenMonth = 'July ' + ALLTRIM(STR(lnYear))
		   CASE lnMonth = 8  &&  August
		      cWrittenMonth = 'August ' + ALLTRIM(STR(lnYear))
		   CASE lnMonth = 9  &&  September
		      cWrittenMonth = 'September ' + ALLTRIM(STR(lnYear))
		   CASE lnMonth = 10  &&  October
		      cWrittenMonth = 'October ' + ALLTRIM(STR(lnYear))
		   CASE lnMonth = 11  &&  November
		      cWrittenMonth = 'November ' + ALLTRIM(STR(lnYear))
		   CASE lnMonth = 12  &&  December
		      cWrittenMonth = 'December ' + ALLTRIM(STR(lnYear))
		ENDCASE
		
		IF USED('temp')
		   USE IN temp
		ENDIF
		IF USED('sevtemp')
		   USE IN sevtemp
		ENDIF
		IF USED('fieldtmp')
		   USE IN fieldtmp
		ENDIF
		
		m.cProducer = m.goApp.cCompanyname
		m.caddress1 = m.goApp.caddress1
		m.cAddress2 = m.goApp.cAddress2
		m.cAddress3 = m.goApp.cAddress3
		m.cPhoneNo  = m.goApp.cPhoneNo
		m.cFaxNo    = m.goApp.cFaxNo
		m.cContact  = m.goApp.cContact
		
		IF lcWhichOne = 1  &&  LA SevTax Rpt
		
		   IF THISFORM.opgCreatePrint.VALUE = 1  &&  Create File
		      CREATE CURSOR sevtemp  ;
		         (cwellid         c(10),  ;
		         cWellName       c(40),  ;
		         cFieldID        c(10),  ;
		         cFieldName      c(40),  ;
		         cParish         c(5),  ;
		         cCounty         c(40),  ;
		         cPayerCode      c(5),  ;
		         cTaxCode        c(3),  ;
		         cCode           c(1),  ;
		         nExclRate       N(7,6),  ;
		         cRevAcctNo      c(10),  ;
		         cRepNum         c(5),  ;
		         cYear           c(4),  ;
		         cPeriod         c(2),  ;
		         nTotMCF         N(6,0),  ;
		         nExMCF          N(6,0),  ;
		         nNetMCF         N(6,0),  ;
		         nTotalDue       N(12,2))
		      INDEX ON cParish+cFieldID+cwellid TAG cParish
		
		      SELECT wells.cPermit6 AS cwellid,  ;
		         cWellName,  ;
		         cCounty,  ;
		         FIELDS.cFieldID,  ;
		         cFieldName,  ;
		         cUser1 AS cParish,  ;
		         cUser2 AS cPayerCode,  ;
		         cUser3 AS cTaxCode,  ;
		         cUser4 AS cCode,  ;
		         ROUND(VAL(cUser5),6) AS nExclRate,  ;
		         options.cRevAcctNo,  ;
		         options.cCompRptNo AS cRepNum,  ;
		         ROUND(SUM(income.nUnits),0) AS nTotMCF,  ;
		         0 AS nExMCF,  ;
		         0 AS nNetMCF,  ;
		         income.cYear,  ;
		         income.cPeriod  ;
		         FROM wells, FIELDS, options, income  ;
		         WHERE wells.cwellid = income.cwellid  ;
		         AND IIF(NOT EMPTY(wells.cFieldID),wells.cFieldID = FIELDS.cFieldID,.T.)  ;
		         AND income.cYear+income.cPeriod = lcYear+lcPeriod  ;
		         AND income.cSource = 'MCF'  ;
		         INTO CURSOR temp  ;
		         GROUP BY wells.cwellid
		
		      SELECT sevtemp
		      APPEND FROM DBF('temp')
		      IF RECC() > 0
		         REPLACE nExMCF WITH nTotMCF*nExclRate ALL
		         REPLACE nExMCF WITH nTotMCF FOR ALLTRIM(cCode) = '9'  &&  Total MCF excluded for class 9 exemptions
		         REPLACE nNetMCF WITH nTotMCF-nExMCF ALL
		         REPLACE nTotalDue WITH nNetMCF * .03 FOR ALLTRIM(cTaxCode) = '2'
		         REPLACE nTotalDue WITH ROUND(nNetMCF * .013,2) FOR ALLTRIM(cTaxCode) = '3'
		         REPLACE nTotalDue WITH nNetMCF * .07 FOR ALLTRIM(cTaxCode) = '7'
		
		         IF NOT FILE(m.goapp.cCommonFolder+'lasevtax.dbf')
		            COPY TO (m.goapp.cCommonFolder+'lasevtax')
		            USE (m.goapp.cCommonFolder+'lasevtax') EXCL
		            INDEX ON cParish+cFieldID+cwellid TAG cParish
		         ELSE
		            IF NOT USED('lasevtax')
		               USE (m.goapp.cCommonFolder+'lasevtax') IN 0
		            ENDIF
		            SELE lasevtax
		            DELE FOR cYear+cPeriod = lcYear+lcPeriod
		            APPEND FROM DBF('sevtemp')
		         ENDIF
		
		         THISFORM.oMessage.DISPLAY('File creation completed.')
		      ELSE
		         THISFORM.oMessage.DISPLAY('There was no activity during the given period.')
		      ENDIF
		   ELSE  &&  Print report
		      IF FILE(m.goapp.cCommonFolder+'lasevtax.dbf')
		         IF NOT USED('lasevtax')
		            USE (m.goapp.cCommonFolder+'lasevtax') IN 0
		         ENDIF
		         SELECT lasevtax
		         COUNT FOR cYear+cPeriod = lcYear+lcPeriod TO lnCount  &&  Don't print if no records
		         IF lnCount > 0
		            SET FILT TO cYear+cPeriod = lcYear+lcPeriod
		            SET ORDER TO cParish
		            REPORT FORM (m.goapp.cRptsFolder+'lasevtax.frx') PREVIEW
		            IF THISFORM.oMessage.CONFIRM('Do you want to send the report to the printer?')
		               REPORT FORM (m.goapp.cRptsFolder+'lasevtax.frx') TO PRINTER PROMPT
		            ENDIF
		
		            CREATE CURSOR sevtemp2  ;  &&  Create summary page
		            (cCounty1        c(40),  ;
		               cCounty2         c(40),  ;
		               cCounty3         c(40),  ;
		               cCounty4         c(40),  ;
		               cCounty5         c(40),  ;
		               cCounty6         c(40),  ;
		               cCounty7         c(40),  ;
		               cCounty8         c(40),  ;
		               cCounty9         c(40),  ;
		               cCounty10        c(40),  ;
		               cCounty11        c(40),  ;
		               cCounty12        c(40),  ;
		               cCounty13        c(40),  ;
		               cCounty14        c(40),  ;
		               cCounty15        c(40),  ;
		               cCounty16        c(40),  ;
		               cCounty17        c(40),  ;
		               cParish1         c(2),  ;
		               cParish2         c(2),  ;
		               cParish3         c(2),  ;
		               cParish4         c(2),  ;
		               cParish5         c(2),  ;
		               cParish6         c(2),  ;
		               cParish7         c(2),  ;
		               cParish8         c(2),  ;
		               cParish9         c(2),  ;
		               cParish10        c(2),  ;
		               cParish11        c(2),  ;
		               cParish12        c(2),  ;
		               cParish13        c(2),  ;
		               cParish14        c(2),  ;
		               cParish15        c(2),  ;
		               cParish16        c(2),  ;
		               cParish17        c(2),  ;
		               cPeriod          c(2),  ;
		               cYear            c(4),  ;
		               cTaxCode1        c(2),  ;
		               cTaxCode2        c(2),  ;
		               cTaxCode3        c(2),  ;
		               cTaxCode4        c(2),  ;
		               cTaxCode5        c(2),  ;
		               cTaxCode6        c(2),  ;
		               cTaxCode7        c(2),  ;
		               cTaxCode8        c(2),  ;
		               cTaxCode9        c(2),  ;
		               cTaxCode10       c(2),  ;
		               cTaxCode11       c(2),  ;
		               cTaxCode12       c(2),  ;
		               cTaxCode13       c(2),  ;
		               cTaxCode14       c(2),  ;
		               cTaxCode15       c(2),  ;
		               cTaxCode16       c(2),  ;
		               cTaxCode17       c(2),  ;
		               nNetMCF1         N(6,0),  ;
		               nNetMCF2         N(6,0),  ;
		               nNetMCF3         N(6,0),  ;
		               nNetMCF4         N(6,0),  ;
		               nNetMCF5         N(6,0),  ;
		               nNetMCF6         N(6,0),  ;
		               nNetMCF7         N(6,0),  ;
		               nNetMCF8         N(6,0),  ;
		               nNetMCF9         N(6,0),  ;
		               nNetMCF10        N(6,0),  ;
		               nNetMCF11        N(6,0),  ;
		               nNetMCF12        N(6,0),  ;
		               nNetMCF13        N(6,0),  ;
		               nNetMCF14        N(6,0),  ;
		               nNetMCF15        N(6,0),  ;
		               nNetMCF16        N(6,0),  ;
		               nNetMCF17        N(6,0),  ;
		               nTotalMCF        N(6,0),  ;
		               nTotMCF2         N(6,0),  ;
		               nTotMCF3         N(6,0),  ;
		               nTotMCF7         N(6,0),  ;
		               nTotalDue1       N(10,2),  ;
		               nTotalDue2       N(10,2),  ;
		               nTotalDue3       N(10,2),  ;
		               nTotalDue4       N(10,2),  ;
		               nTotalDue5       N(10,2),  ;
		               nTotalDue6       N(10,2),  ;
		               nTotalDue7       N(10,2),  ;
		               nTotalDue8       N(10,2),  ;
		               nTotalDue9       N(10,2),  ;
		               nTotalDue10      N(10,2),  ;
		               nTotalDue11      N(10,2),  ;
		               nTotalDue12      N(10,2),  ;
		               nTotalDue13      N(10,2),  ;
		               nTotalDue14      N(10,2),  ;
		               nTotalDue15      N(10,2),  ;
		               nTotalDue16      N(10,2),  ;
		               nTotalDue17      N(10,2),  ;
		               nTotalDue        N(10,2),  ;
		               nTotDue2         N(10,2),  ;
		               nTotDue3         N(10,2),  ;
		               nTotDue7         N(10,2))
		
		            SELECT cCounty, ;
		               cParish,  ;
		               cPeriod,  ;
		               cYear,  ;
		               cTaxCode,  ;
		               SUM(nNetMCF) AS nNetMCF,  ;
		               SUM(nTotalDue) AS nTotalDue  ;
		               FROM lasevtax  ;
		               INTO CURSOR temp  ;
		               WHERE cYear+cPeriod = lcYear+lcPeriod  ;
		               GROUP BY cParish,cTaxCode
		
		            SELECT sevtemp2
		            APPEND BLANK
		            SELECT temp
		            lnCount = 1
		            SCAN
		               lcParish = 'cParish' + ALLTRIM(STR(lnCount))
		               lcCounty = 'cCounty' + ALLTRIM(STR(lnCount))
		               lcTaxCode = 'cTaxCode' + ALLTRIM(STR(lnCount))
		               lnNetMCF = 'nNetMCF' + + ALLTRIM(STR(lnCount))
		               lnTotalDue = 'nTotalDue' + ALLTRIM(STR(lnCount))
		               SELECT sevtemp2
		               REPLACE &lcParish WITH temp.cParish
		               REPLACE &lcCounty WITH temp.cCounty
		               REPLACE &lcTaxCode WITH temp.cTaxCode
		               REPLACE &lnNetMCF WITH temp.nNetMCF
		               REPLACE &lnTotalDue WITH temp.nTotalDue
		               REPLACE cPeriod WITH lcPeriod
		               REPLACE cYear WITH lcYear
		               REPLACE nTotalDue WITH nTotalDue + temp.nTotalDue
		               REPLACE nTotalMCF WITH nTotalMCF + temp.nNetMCF
		               DO CASE  &&  Update Taxcode totals
		                  CASE ALLTRIM(temp.cTaxCode) = '2'
		                     REPLACE sevtemp2.nTotMCF2 WITH sevtemp2.nTotMCF2 + temp.nNetMCF
		                     REPLACE sevtemp2.nTotDue2 WITH sevtemp2.nTotDue2 + temp.nTotalDue
		                  CASE ALLTRIM(temp.cTaxCode) = '3'
		                     REPLACE sevtemp2.nTotMCF3 WITH sevtemp2.nTotMCF3 + temp.nNetMCF
		                     REPLACE sevtemp2.nTotDue3 WITH sevtemp2.nTotDue3 + temp.nTotalDue
		                  CASE ALLTRIM(temp.cTaxCode) = '7'
		                     REPLACE sevtemp2.nTotMCF7 WITH sevtemp2.nTotMCF7 + temp.nNetMCF
		                     REPLACE sevtemp2.nTotDue7 WITH sevtemp2.nTotDue7 + temp.nTotalDue
		               ENDCASE
		
		               lnCount = lnCount + 1
		            ENDSCAN
		
		            SELECT sevtemp2
		            REPORT FORM (m.goapp.cRptsFolder+'lasevtax2.frx') PREVIEW
		            IF THISFORM.oMessage.CONFIRM('Do you want to send the report to the printer?')
		               REPORT FORM (m.goapp.cRptsFolder+'lasevtax2.frx') TO PRINTER PROMPT
		            ENDIF
		
		         ELSE
		            THISFORM.oMessage.DISPLAY('There are no records in the file for this year and period.')
		         ENDIF
		      ELSE
		         THISFORM.oMessage.DISPLAY("The severance tax file hasn't been created yet.  Please create the file before attempting to print.")
		      ENDIF
		   ENDIF
		
		ELSE  &&  LA Oil & Gas Production Rpt
		
		   CREATE CURSOR sevtemp  ;
		      (cLUW           c(10),  ;
		      cWellName       c(40),  ;
		      cFieldID        c(10),  ;
		      cFieldName      c(40),  ;
		      cParish         c(5),  ;
		      cRepNum         c(5),  ;
		      nWellCount      N(5,0),  ;
		      cYear           c(4),  ;
		      cPeriod         c(2),  ;
		      nMCF         N(6,0))
		   INDEX ON cLUW+cParish+cFieldID TAG cLUW
		
		   SELECT wells.cPermit6 AS cLUW,  ;
		      IIF('#' $ wells.cWellName,SUBSTR(wells.cWellName,1,AT('#',wells.cWellName)-1)+SPACE(40),wells.cWellName) AS cWellName,  ;
		      nWellCount,  ;
		      FIELDS.cFieldID,  ;
		      cFieldName,  ;
		      cUser1 AS cParish,  ;
		      options.cCompRptNo AS cRepNum,  ;
		      ROUND(SUM(income.nUnits),0) AS nMCF,  ;
		      income.cYear,  ;
		      income.cPeriod  ;
		      FROM wells, income, options, FIELDS  ;
		      WHERE wells.cwellid = income.cwellid  ;
		      AND IIF(NOT EMPTY(wells.cFieldID),wells.cFieldID = FIELDS.cFieldID,.T.)  ;
		      AND income.cYear+income.cPeriod = lcYear+lcPeriod  ;
		      AND income.cwellid = wells.cwellid  ;
		      AND income.cSource = 'MCF'  ;
		      INTO CURSOR temp  ;
		      GROUP BY wells.cPermit6
		
		   SELECT sevtemp
		   APPEND FROM DBF('temp')
		   SET ORDER TO cLUW
		
		   SELECT cFieldID, cFieldName FROM sevtemp INTO CURSOR fieldtmp GROUP BY cFieldID
		   select fieldtmp
		   IF RECC() > 0
		      SCAN
		         select sevtemp
		         SET FILT TO cFieldID = fieldtmp.cFieldID
		         lcFieldID = fieldtmp.cFieldID
		         lcFieldName = fieldtmp.cFieldName
		
		         IF RECC('sevtemp') = 0  &&  No recs, so no report
		            THISFORM.oMessage.DISPLAY('There are no records in the selected criteria.')
		            EXIT
		         ELSE
		            REPORT FORM (m.goapp.cRptsFolder+'lasevtax3.frx') PREVIEW
		            IF THISFORM.oMessage.CONFIRM('Do you want to send the report to the printer?')
		               REPORT FORM (m.goapp.cRptsFolder+'lasevtax3.frx') TO PRINTER PROMPT
		            ENDIF
		         ENDIF
		      ENDSCAN
		   ELSE
		      THISFORM.oMessage.DISPLAY('There are no records in the selected criteria.')
		   ENDIF
		ENDIF
		
	ENDPROC

	PROCEDURE cmdCreate.Click
		thisform.makefile()
	ENDPROC

	PROCEDURE cmdExit.Click
		thisform.release()
	ENDPROC

	PROCEDURE opgCreatePrint.Option1.Click
		THISFORM.cmdCreate.CAPTION = '\<Create'
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE opgCreatePrint.Option2.Click
		THISFORM.cmdCreate.CAPTION = '\<Print'
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtcYear.Valid
		IF NOT BETWEEN(VAL(this.value),1900,2099)
		   WAIT WIND 'Invalid year, please re-enter...'
		   RETURN 0
		ENDIF
	ENDPROC

ENDDEFINE
