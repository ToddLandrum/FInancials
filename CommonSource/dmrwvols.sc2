*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="dmrwvols.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	Height = 356
	Left = -11
	Name = "Dataenvironment"
	Top = 205
	Width = 727

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "wellhist", ;
		CursorSource = "wellhist", ;
		Database = ..\data\appdata.dbc, ;
		Height = 90, ;
		Left = 124, ;
		Name = "Cursor2", ;
		Top = 21, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "meterall", ;
		CursorSource = "meterall", ;
		Database = ..\data\appdata.dbc, ;
		Height = 90, ;
		Left = 243, ;
		Name = "Cursor3", ;
		Top = 17, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "metersub", ;
		CursorSource = "metersub", ;
		Database = ..\data\appdata.dbc, ;
		Height = 90, ;
		Left = 360, ;
		Name = "Cursor4", ;
		Top = 16, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "pumpers", ;
		CursorSource = "pumpers", ;
		Database = ..\data\appdata.dbc, ;
		Height = 90, ;
		Left = 570, ;
		Name = "Cursor5", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formdmrwvols AS frmrptcriteria OF "..\..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="cboGroup" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="opgSelect" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkNoActivity" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="opgSortBy" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkIncMetered" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboPumper" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcMonth1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcYear1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom3" UniqueID="" Timestamp="" />

	Caption = "Production Volumes Report"
	DataSession = 2
	DoCreate = .T.
	Height = 436
	Name = "FormDMRWVOLS"
	Width = 402
	Swrptcriteriabuttons1.chkSendFile.Name = "chkSendFile"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.cmdPreview.Name = "cmdPreview"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 84
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 19
	Swrptcriteriabuttons1.Top = 374

	ADD OBJECT 'cboGroup' AS swgroup WITH ;
		Left = 127, ;
		Name = "cboGroup", ;
		TabIndex = 9, ;
		Top = 141
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboPumper' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		Height = 20, ;
		Left = 127, ;
		Name = "cboPumper", ;
		TabIndex = 14, ;
		Top = 288, ;
		Width = 177
		*< END OBJECT: ClassLib="h:\develop\codemine\..\custom\ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'chkIncMetered' AS chkcheckboxcustom WITH ;
		Caption = "Include Metered Gas Volumes instead of Brine", ;
		Left = 127, ;
		Name = "chkIncMetered", ;
		TabIndex = 16, ;
		Top = 322, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkNoActivity' AS chkcheckboxcustom WITH ;
		Caption = "Include Wells With No Activity", ;
		Left = 127, ;
		Name = "chkNoActivity", ;
		TabIndex = 17, ;
		Top = 346, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Well Group:", ;
		Left = 57, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 10, ;
		Top = 143
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "Ending Month:", ;
		Left = 46, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 8, ;
		Top = 107
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom3' AS lbllabelcustom WITH ;
		Caption = "/", ;
		FontSize = 10, ;
		Left = 153, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 7, ;
		Top = 107
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom1' AS lbltextcustom WITH ;
		Caption = "Pumper:", ;
		Left = 74, ;
		Name = "Lbltextcustom1", ;
		TabIndex = 15, ;
		Top = 290
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom3' AS lbltextcustom WITH ;
		BackStyle = 0, ;
		Caption = "First Well:", ;
		Left = 66, ;
		Name = "Lbltextcustom3", ;
		TabIndex = 12, ;
		Top = 182
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom4' AS lbltextcustom WITH ;
		BackStyle = 0, ;
		Caption = "Last Well:", ;
		Left = 66, ;
		Name = "Lbltextcustom4", ;
		TabIndex = 13, ;
		Top = 233
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom5' AS lbltextcustom WITH ;
		Caption = "Base Report On:", ;
		Left = 33, ;
		Name = "Lbltextcustom5", ;
		TabIndex = 4, ;
		Top = 61
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom6' AS lbltextcustom WITH ;
		Caption = "Order By:", ;
		Left = 66, ;
		Name = "Lbltextcustom6", ;
		TabIndex = 2, ;
		Top = 25
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'opgSelect' AS opgoptiongroupcustom WITH ;
		AutoSize = .T., ;
		BorderStyle = 0, ;
		ButtonCount = 2, ;
		Height = 26, ;
		Left = 123, ;
		Name = "opgSelect", ;
		TabIndex = 3, ;
		Top = 55, ;
		Value = 1, ;
		Width = 235, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "Production Year", ;
		Option1.FontSize = 8, ;
		Option1.Height = 16, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Top = 5, ;
		Option1.Value = 1, ;
		Option1.Width = 96, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "Accounting Year", ;
		Option2.FontSize = 8, ;
		Option2.Height = 16, ;
		Option2.Left = 130, ;
		Option2.Name = "Option2", ;
		Option2.Top = 5, ;
		Option2.Width = 100
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'opgSortBy' AS opgoptiongroupcustom WITH ;
		AutoSize = .T., ;
		BorderStyle = 0, ;
		ButtonCount = 2, ;
		Height = 26, ;
		Left = 124, ;
		Name = "opgSortBy", ;
		TabIndex = 1, ;
		Top = 20, ;
		Value = 1, ;
		Width = 205, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = " Well ID", ;
		Option1.FontSize = 8, ;
		Option1.Height = 16, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Top = 5, ;
		Option1.Value = 1, ;
		Option1.Width = 53, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = " Well Name", ;
		Option2.FontSize = 8, ;
		Option2.Height = 16, ;
		Option2.Left = 129, ;
		Option2.Name = "Option2", ;
		Option2.Top = 5, ;
		Option2.Width = 71
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		Left = 127, ;
		Name = "Swrptlook1", ;
		TabIndex = 11, ;
		Top = 179, ;
		ZOrderSet = 5, ;
		Swlookupbutton1.Height = 20, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton1.Top = 0, ;
		Swlookupbutton2.Height = 20, ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		txtBegID.clistexpression = wells.cwellid, ;
		txtBegID.clistworkarea = wells, ;
		txtBegID.Height = 20, ;
		txtBegID.Name = "txtBegID", ;
		txtBegID.Top = 0, ;
		TxtBegName.Height = 20, ;
		TxtBegName.Name = "TxtBegName", ;
		txtEndID.clistexpression = wells.cwellid, ;
		txtEndID.clistworkarea = wells, ;
		txtEndID.Height = 20, ;
		txtEndID.Name = "txtEndID", ;
		TxtEndName.Height = 20, ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />

	ADD OBJECT 'txtcMonth1' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 127, ;
		Name = "txtcMonth1", ;
		TabIndex = 5, ;
		Top = 105, ;
		Width = 24
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcYear1' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 159, ;
		Name = "txtcYear1", ;
		TabIndex = 6, ;
		Top = 105, ;
		Width = 35
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE builddata
		LOCAL tcwell1, tcwell2, tnsort, tcgroup, tdDate1, tdDate2, tcPumper, lncount
		
		tcwell1 = ALLTRIM(THISFORM.swrptlook1.txtbegid.VALUE)
		tcwell2 = ALLTRIM(THISFORM.swrptlook1.txtendid.VALUE)
		tnsort = THISFORM.opgselect.VALUE
		tcgroup = SUBSTR(THISFORM.cbogroup.VALUE,1,2)
		tdDate1 = ALLT(THISFORM.txtcYear1.VALUE)+ALLT(THISFORM.txtcMonth1.VALUE)
		tcYear = ALLT(THISFORM.txtcYear1.VALUE)
		tcMonth = ALLT(THISFORM.txtcMonth1.VALUE)
		
		IF THISFORM.txtcMonth1.VALUE <> '12'  &&  If not for December, subtract a year from the beginning date
		   tdDate2 = ALLT(STR(VAL(THISFORM.txtcYear1.VALUE)-1)) + PADL(ALLT(STR(12-(ABS(VAL(THISFORM.txtcMonth1.VALUE)-11)))),2,'0')
		ELSE
		   tdDate2 = ALLT(THISFORM.txtcYear1.VALUE) + '01'
		ENDIF
		
		tcPumper = ALLT(THISFORM.cboPumper.VALUE)
		IF tcPumper <> '**'  &&  Set pumper variable true, so it will know to show it on the report
		   m.lPumper = .T.
		ENDIF
		
		m.lBrine = NOT THISFORM.chkIncMetered.VALUE
		
		WAIT WIND NOWAIT 'Processing Request...Please Wait'
		
		CREATE CURSOR voltmp ;
		   (cwellid   c(10), ;
		   cwellname  c(30), ;
		   cpermit1   c(20), ;
		   cmeterid   c(10), ;
		   cidpumper  c(10), ;
		   cpumper    c(20), ;
		   ccounty    c(25), ;
		   cstate     c(2), ;
		   cyear      c(4), ;
		   cgroup     c(2),  ;
		   cMonth1    c(15),  ;
		   cMonth2    c(15),  ;
		   cMonth3    c(15),  ;
		   cMonth4    c(15),  ;
		   cMonth5    c(15),  ;
		   cMonth6    c(15),  ;
		   cMonth7    c(15),  ;
		   cMonth8    c(15),  ;
		   cMonth9    c(15),  ;
		   cMonth10   c(15),  ;
		   cMonth11   c(15),  ;
		   cMonth12   c(15),  ;
		   ntotbbl1   N(9), ;
		   ntotbbl2   N(9), ;
		   ntotbbl3   N(9), ;
		   ntotbbl4   N(9), ;
		   ntotbbl5   N(9), ;
		   ntotbbl6   N(9), ;
		   ntotbbl7   N(9), ;
		   ntotbbl8   N(9), ;
		   ntotbbl9   N(9), ;
		   ntotbbl10  N(9), ;
		   ntotbbl11  N(9), ;
		   ntotbbl12  N(9), ;
		   ntotwtr1   N(9), ;
		   ntotwtr2   N(9), ;
		   ntotwtr3   N(9), ;
		   ntotwtr4   N(9), ;
		   ntotwtr5   N(9), ;
		   ntotwtr6   N(9), ;
		   ntotwtr7   N(9), ;
		   ntotwtr8   N(9), ;
		   ntotwtr9   N(9), ;
		   ntotwtr10  N(9), ;
		   ntotwtr11  N(9), ;
		   ntotwtr12  N(9), ;
		   ntotmcf1   N(9), ;
		   ntotmcf2   N(9), ;
		   ntotmcf3   N(9), ;
		   ntotmcf4   N(9), ;
		   ntotmcf5   N(9), ;
		   ntotmcf6   N(9), ;
		   ntotmcf7   N(9), ;
		   ntotmcf8   N(9), ;
		   ntotmcf9   N(9), ;
		   ntotmcf10  N(9), ;
		   ntotmcf11  N(9), ;
		   ntotmcf12  N(9), ;
		   ntotmtr1   N(9), ;
		   ntotmtr2   N(9), ;
		   ntotmtr3   N(9), ;
		   ntotmtr4   N(9), ;
		   ntotmtr5   N(9), ;
		   ntotmtr6   N(9), ;
		   ntotmtr7   N(9), ;
		   ntotmtr8   N(9), ;
		   ntotmtr9   N(9), ;
		   ntotmtr10  N(9), ;
		   ntotmtr11  N(9), ;
		   ntotmtr12  N(9),  ;
		   lBrine     L,  ;
		   lPumper    L)
		
		THISFORM.ctitle1 = 'Production Volumes'
		
		IF tnsort = 1      && Production Year
		   THISFORM.ctitle2 = 'by Production Year'
		   SELECT wellhist.cwellid, hyear, hperiod, ;
		      SUM(ntotmcf) AS totmcf, SUM(ntotbbl) AS totbbl, SUM(ntotsalt) AS ntotwater, cwellname, wells.cgroup ;
		      FROM wellhist, wells ;
		      WHERE BETWEEN(hyear+hperiod,tdDate2,tdDate1) ;
		      AND BETWEEN(ALLTRIM(wellhist.cwellid), tcwell1, tcwell2) ;
		      AND IIF(tcgroup='**',.T.,wellhist.cgroup=tcgroup) ;
		      AND wellhist.cwellid = wells.cwellid ;
		      AND IIF(tcPumper='**',.T.,wells.cidpumper=tcPumper)  ;
		      INTO CURSOR temp ;
		      ORDER BY wellhist.cwellid, hyear, hperiod ;
		      GROUP BY wellhist.cwellid, hyear, hperiod
		ELSE  &&  Accounting Year
		   THISFORM.ctitle2 = 'by Accounting Year'
		   SELECT wellhist.cwellid, ALLT(STR(YEAR(hdate))) AS nyear, PADL(ALLT(STR(MONTH(hdate))),2,'0') AS nperiod, ;
		      SUM(ntotmcf) AS totmcf, SUM(ntotbbl) AS totbbl, SUM(ntotsalt) AS ntotwater, cwellname, wells.cgroup, wells.cidpumper, cpumper ;
		      FROM wellhist, wells, pumpers ;
		      WHERE BETWEEN(ALLT(STR(YEAR(hdate)))+PADL(ALLT(STR(MONTH(hdate))),2,'0'),tdDate2,tdDate1) ;
		      AND BETWEEN(ALLTRIM(wellhist.cwellid), tcwell1, tcwell2) ;
		      AND IIF(tcgroup='**',.T.,wellhist.cgroup=tcgroup) ;
		      AND wellhist.cwellid = wells.cwellid ;
		      AND IIF(tcPumper='**',.T.,wells.cidpumper=tcPumper)  ;
		      AND wells.cidpumper = pumpers.cidpumper  ;
		      INTO CURSOR temp ;
		      ORDER BY wellhist.cwellid, nyear, nperiod ;
		      GROUP BY wellhist.cwellid, nyear, nperiod
		ENDIF
		
		IF tcPumper = '**'
		   THISFORM.ctitle2 = THISFORM.ctitle2 + ' For All Pumpers'
		ELSE
		   THISFORM.ctitle2 = THISFORM.ctitle2 + ' For ' + THISFORM.cboPumper.LISTITEM(THISFORM.cboPumper.LISTITEMID,1)
		ENDIF
		
		tdDate = CTOD(tcMonth + '/01/' + tcYear)  &&  Figure bogus starting date, so we can work back 12 months and get the month name to fill in
		m.cMonth1  = tdDate
		lcMonth1   = ALLT(STR(YEAR(m.cMonth1))) + PADL(ALLT(STR(MONTH(m.cMonth1))),2,'0')
		m.cMonth2  = GOMONTH(tdDate,-1)
		lcMonth2   = ALLT(STR(YEAR(m.cMonth2))) + PADL(ALLT(STR(MONTH(m.cMonth2))),2,'0')
		m.cMonth3  = GOMONTH(tdDate,-2)
		lcMonth3   = ALLT(STR(YEAR(m.cMonth3))) + PADL(ALLT(STR(MONTH(m.cMonth3))),2,'0')
		m.cMonth4  = GOMONTH(tdDate,-3)
		lcMonth4   = ALLT(STR(YEAR(m.cMonth4))) + PADL(ALLT(STR(MONTH(m.cMonth4))),2,'0')
		m.cMonth5  = GOMONTH(tdDate,-4)
		lcMonth5   = ALLT(STR(YEAR(m.cMonth5))) + PADL(ALLT(STR(MONTH(m.cMonth5))),2,'0')
		m.cMonth6  = GOMONTH(tdDate,-5)
		lcMonth6   = ALLT(STR(YEAR(m.cMonth6))) + PADL(ALLT(STR(MONTH(m.cMonth6))),2,'0')
		m.cMonth7  = GOMONTH(tdDate,-6)
		lcMonth7   = ALLT(STR(YEAR(m.cMonth7))) + PADL(ALLT(STR(MONTH(m.cMonth7))),2,'0')
		m.cMonth8  = GOMONTH(tdDate,-7)
		lcMonth8   = ALLT(STR(YEAR(m.cMonth8))) + PADL(ALLT(STR(MONTH(m.cMonth8))),2,'0')
		m.cMonth9  = GOMONTH(tdDate,-8)
		lcMonth9   = ALLT(STR(YEAR(m.cMonth9))) + PADL(ALLT(STR(MONTH(m.cMonth9))),2,'0')
		m.cMonth10 = GOMONTH(tdDate,-9)
		lcMonth10   = ALLT(STR(YEAR(m.cMonth10))) + PADL(ALLT(STR(MONTH(m.cMonth10))),2,'0')
		m.cMonth11 = GOMONTH(tdDate,-10)
		lcMonth11   = ALLT(STR(YEAR(m.cMonth11))) + PADL(ALLT(STR(MONTH(m.cMonth11))),2,'0')
		m.cMonth12 = GOMONTH(tdDate,-11)
		lcMonth12   = ALLT(STR(YEAR(m.cMonth12))) + PADL(ALLT(STR(MONTH(m.cMonth12))),2,'0')
		
		
		FOR lnX = 1 TO 12
		   lcCount = ALLT(STR(lnX))
		   DO CASE
		      CASE MONTH(m.cMonth&lcCount) = 1
		         m.cMonth&lcCount = 'January ' + ALLT(STR(YEAR(m.cMonth&lcCount)))
		      CASE MONTH(m.cMonth&lcCount) = 2
		         m.cMonth&lcCount = 'February ' + ALLT(STR(YEAR(m.cMonth&lcCount)))
		      CASE MONTH(m.cMonth&lcCount) = 3
		         m.cMonth&lcCount = 'March ' + ALLT(STR(YEAR(m.cMonth&lcCount)))
		      CASE MONTH(m.cMonth&lcCount) = 4
		         m.cMonth&lcCount = 'April ' + ALLT(STR(YEAR(m.cMonth&lcCount)))
		      CASE MONTH(m.cMonth&lcCount) = 5
		         m.cMonth&lcCount = 'May ' + ALLT(STR(YEAR(m.cMonth&lcCount)))
		      CASE MONTH(m.cMonth&lcCount) = 6
		         m.cMonth&lcCount = 'June ' + ALLT(STR(YEAR(m.cMonth&lcCount)))
		      CASE MONTH(m.cMonth&lcCount) = 7
		         m.cMonth&lcCount = 'July ' + ALLT(STR(YEAR(m.cMonth&lcCount)))
		      CASE MONTH(m.cMonth&lcCount) = 8
		         m.cMonth&lcCount = 'August ' + ALLT(STR(YEAR(m.cMonth&lcCount)))
		      CASE MONTH(m.cMonth&lcCount) = 9
		         m.cMonth&lcCount = 'September ' + ALLT(STR(YEAR(m.cMonth&lcCount)))
		      CASE MONTH(m.cMonth&lcCount) = 10
		         m.cMonth&lcCount = 'October ' + ALLT(STR(YEAR(m.cMonth&lcCount)))
		      CASE MONTH(m.cMonth&lcCount) = 11
		         m.cMonth&lcCount = 'November ' + ALLT(STR(YEAR(m.cMonth&lcCount)))
		      CASE MONTH(m.cMonth&lcCount) = 12
		         m.cMonth&lcCount = 'December ' + ALLT(STR(YEAR(m.cMonth&lcCount)))
		   ENDCASE
		ENDFOR
		
		lncount = 12
		
		IF _TALLY > 0
		   lcOldWell = ''
		   SELE cwellid FROM temp INTO CURSOR tempwell ORDER BY cwellid GROUP BY cwellid
		   SELE tempwell
		   SCAN
		      SCATTER MEMVAR
		      STORE 0 TO m.ntotmcf1, m.ntotmcf2, m.ntotmcf3, m.ntotmcf4, m.ntotmcf5, ;
		         m.ntotmcf6, m.ntotmcf7, m.ntotmcf8, m.ntotmcf9, m.ntotmcf10, ;
		         m.ntotmcf11, m.ntotmcf12
		      STORE 0 TO m.ntotbbl1, m.ntotbbl2, m.ntotbbl3, m.ntotbbl4, m.ntotbbl5, ;
		         m.ntotbbl6, m.ntotbbl7, m.ntotbbl8, m.ntotbbl9, m.ntotbbl10, ;
		         m.ntotbbl11, m.ntotbbl12
		      STORE 0 TO m.ntotwtr1, m.ntotwtr2, m.ntotwtr3, m.ntotwtr4, m.ntotwtr5, ;
		         m.ntotwtr6, m.ntotwtr7, m.ntotwtr8, m.ntotwtr9, m.ntotwtr10, ;
		         m.ntotwtr11, m.ntotwtr12
		
		      SELECT temp
		      SCAN FOR cwellid = m.cwellid
		         SCATTER MEMVAR
		
		         IF tnsort = 2  &&  Accounting Year, so re-assign the memvars to match
		            m.hperiod = ALLT(m.nperiod)
		            m.hyear   = ALLT(m.nyear)
		         ENDIF
		
		         FOR lnY = 1 TO 12
		            lcCountY = ALLT(STR(lnY))
		            IF m.hyear+m.hperiod = lcMonth&lcCountY
		               m.ntotmcf&lcCountY = m.totmcf
		               m.ntotbbl&lcCountY = m.totbbl
		               m.nTotWtr&lcCountY = m.ntotwater
		            ENDIF
		         ENDFOR
		
		      ENDSCAN
		
		      INSERT INTO voltmp FROM MEMVAR
		
		   ENDSCAN
		ENDIF
		
		SELECT voltmp
		SCAN
		   m.cwellid = cwellid
		   SELECT wells
		   SET ORDER TO cwellid
		   IF SEEK(m.cwellid)
		      SCATTER MEMVAR
		   ELSE
		      STORE ' ' TO m.ccounty, m.cpermit1, m.cstate
		   ENDIF
		   SELECT voltmp
		   REPLACE ccounty  WITH m.ccounty, ;
		      cstate   WITH m.cstate, ;
		      cpermit1 WITH m.cpermit1
		ENDSCAN
		
		IF THISFORM.chknoactivity.VALUE = .F.
		   SELECT voltmp
		   SCAN
		      IF ntotmcf1+ntotmcf2+ntotmcf3+ntotmcf4+ntotmcf5+ntotmcf6 + ;
		            ntotmcf7+ntotmcf8+ntotmcf9+ntotmcf10+ntotmcf11+ntotmcf12 + ;
		            ntotbbl1+ntotbbl2+ntotbbl3+ntotbbl4+ntotbbl5+ntotbbl6 + ;
		            ntotbbl7+ntotbbl8+ntotbbl9+ntotbbl10+ntotbbl11+ntotbbl12 = 0
		         DELE NEXT 1
		      ENDIF
		   ENDSCAN
		ENDIF
		
		DO CASE
		   CASE THISFORM.opgsortby.VALUE = 1  &&  Well ID
		      IF tcPumper = '**'  &&  All pumpers
		         INDEX ON cwellid TAG volkey
		      ELSE                &&  Pumper specified
		         INDEX ON cpumper+cwellid TAG volkey
		      ENDIF
		   CASE THISFORM.opgsortby.VALUE = 2  &&  Well Name
		      IF tcPumper = '**'  &&  All pumpers
		         INDEX ON cwellname TAG volkey
		      ELSE                &&  All pumpers
		         INDEX ON cpumper+cwellname TAG volkey
		      ENDIF
		ENDCASE
		
		IF THISFORM.chkIncMetered.VALUE = .T.
		   IF tnsort = 1   && Production Month
		      SELE metersub.cwellid, meterall.cyear, meterall.cperiod AS hperiod, SUM(metersub.nsubmeter) AS ntotmtr ;
		         FROM meterall, metersub ;
		         WHERE BETWEEN(meterall.cyear+meterall.cperiod,tdDate2,tdDate1)  ;
		         AND meterall.cbatch = metersub.cbatch ;
		         INTO CURSOR tempvols ;
		         ORDER BY cwellid, cyear, cperiod ;
		         GROUP BY cwellid, cyear, cperiod
		   ELSE            &&  Accounting Month
		      SELE metersub.cwellid, ALLT(YEAR(meterall.dincdate)) AS nyear, PADL(ALLT(STR(MONTH(meterall.dincdate))),2,'0') AS nperiod, SUM(metersub.nsubmeter) AS ntotmtr ;
		         FROM meterall, metersub ;
		         WHERE BETWEEN(ALLT(STR(YEAR(meterall.dincdate)))+PADL(ALLT(STR(MONTH(meterall.dincdate))),2,'0'),tdDate2,tdDate1) ;
		         AND meterall.cbatch = metersub.cbatch ;
		         INTO CURSOR tempvols ;
		         ORDER BY cwellid, nyear, nperiod ;
		         GROUP BY cwellid, nyear, nperiod
		   ENDIF
		
		   SELE cwellid FROM tempvols INTO CURSOR tempwell ORDER BY cwellid GROUP BY cwellid
		
		   SELE tempwell
		   SCAN
		      m.cwellid = cwellid
		      STORE 0 TO m.ntotmtr1, m.ntotmtr2, m.ntotmtr3, m.ntotmtr4, m.ntotmtr5, ;
		         m.ntotmtr6, m.ntotmtr7, m.ntotmtr8, m.ntotmtr9, m.ntotmtr10, ;
		         m.ntotmtr11, m.ntotmtr12
		
		      SELE tempvols
		      SCAN FOR cwellid = m.cwellid
		         SCATTER MEMVAR
		
		         IF tnsort = 2  &&  Accounting Year, so re-assign the memvars to match
		            m.hperiod = ALLT(m.nperiod)
		            m.hyear   = ALLT(m.nyear)
		         ENDIF
		
		         FOR lnZ = 1 TO 12
		            lcCountZ = ALLT(STR(lnZ))
		            IF m.hyear+m.hperiod = lcMonth&lcCountZ
		               m.ntotmtr&lcCountY = m.totmtr
		            ENDIF
		         ENDFOR
		
		      ENDSCAN
		
		      SELE voltmp
		      LOCATE FOR cwellid = m.cwellid
		      IF FOUND()
		         REPL ntotmtr1 WITH m.ntotmtr1, ;
		            ntotmtr2  WITH m.ntotmtr2, ;
		            ntotmtr3  WITH m.ntotmtr3, ;
		            ntotmtr4  WITH m.ntotmtr4, ;
		            ntotmtr5  WITH m.ntotmtr5, ;
		            ntotmtr6  WITH m.ntotmtr6, ;
		            ntotmtr7  WITH m.ntotmtr7, ;
		            ntotmtr8  WITH m.ntotmtr8, ;
		            ntotmtr9  WITH m.ntotmtr9, ;
		            ntotmtr10 WITH m.ntotmtr10, ;
		            ntotmtr11 WITH m.ntotmtr11, ;
		            ntotmtr12 WITH m.ntotmtr12
		      ELSE  &&  Probably should never get here
		         STORE 0 TO m.ntotmcf1, m.ntotmcf2, m.ntotmcf3, m.ntotmcf4, m.ntotmcf5, ;
		            m.ntotmcf6, m.ntotmcf7, m.ntotmcf8, m.ntotmcf9, m.ntotmcf10, ;
		            m.ntotmcf11, m.ntotmcf12
		         STORE 0 TO m.ntotbbl1, m.ntotbbl2, m.ntotbbl3, m.ntotbbl4, m.ntotbbl5, ;
		            m.ntotbbl6, m.ntotbbl7, m.ntotbbl8, m.ntotbbl9, m.ntotbbl10, ;
		            m.ntotbbl11, m.ntotbbl12
		         STORE 0 TO m.ntotwtr1, m.ntotwtr2, m.ntotwtr3, m.ntotwtr4, m.ntotwtr5, ;
		            m.ntotwtr6, m.ntotwtr7, m.ntotwtr8, m.ntotwtr9, m.ntotwtr10, ;
		            m.ntotwtr11, m.ntotwtr12
		         INSERT INTO voltmp FROM MEMVAR
		      ENDIF
		
		   ENDSCAN
		ENDIF
		
		THISFORM.creportname = 'dmrwvol1x'
		
		THISFORM.csortorder  = ' '
		
		SELECT voltmp
		
		IF RECC() > 0
		   RETURN .T.
		ELSE
		   RETURN .F.
		ENDIF
		
		
		
	ENDPROC

	PROCEDURE Init
		DODEFAULT()
		
		SELECT wells
		SET ORDER TO cWellID
		
		GO TOP
		THISFORM.swrptlook1.txtBegName.VALUE = cwellname
		THISFORM.swrptlook1.txtBegID.VALUE = cWellID
		
		GO BOTTOM
		THISFORM.swrptlook1.txtEndName.VALUE = cwellname
		THISFORM.swrptlook1.txtEndID.VALUE = cWellID
		
		THISFORM.txtcYear1.SET('value',ALLT(STR(YEAR(DATE()))))
		THISFORM.txtcMonth1.SET('value',PADL(ALLT(STR(MONTH(DATE()))),2,'0'))
		THISFORM.chknoactivity.VALUE = .F.
		
		
		
		
	ENDPROC

	PROCEDURE cboPumper.Init
		
		DODEFAULT()
		
		SELE cname, cidpumper FROM pumpers INTO ARRAY laPumper ORDER BY cName
		
		this.addlistitem('** All Pumpers **', 1, 1)
		this.addlistitem('**', 1, 2)
		   
		IF _Tally > 0
		   FOR lnX = 1 TO _tally
		      this.addlistitem(laPumper[lnX,1], lnx+1, 1)
		      this.addlistitem(laPumper[lnX,2], lnx+1, 2)
		   ENDFOR
		ENDIF      
		
		this.listitemid = 1
	ENDPROC

	PROCEDURE opgSelect.Init
		THIS.VALUE = 1
		
	ENDPROC

	PROCEDURE opgSelect.Option1.GotFocus
		THISFORM.opgSelect.VALUE = 1
		
		THIS.CLICK()
		
	ENDPROC

	PROCEDURE opgSelect.Option2.GotFocus
		THISFORM.opgSelect.VALUE = 2
		
		THIS.CLICK()
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cwellid,cwellname,cgroup,cwellstat'
		DO FORM ..\custom\picklist WITH 'Wells', lcList, thisform.swrptlook1.txtbegid.value, 4
		
		IF llOK
		   thisform.swrptlook1.txtBegId.value = cwellid
		   thisform.swrptlook1.txtBegName.value = cwellname
		   thisform.swrptlook1.txtBegId.refresh()
		   thisform.swrptlook1.txtBegName.refresh()
		ENDIF   
		
		thisform.setnextcontrol(thisform.swrptlook1.txtBegId)
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cwellid,cwellname,cgroup,cwellstat'
		DO FORM ..\custom\picklist WITH 'Wells', lcList, thisform.swrptlook1.txtendid.value, 4
		
		IF llOK
		   thisform.swrptlook1.txtEndId.value = cwellid
		   thisform.swrptlook1.txtEndName.value = cwellname
		   thisform.swrptlook1.txtEndId.refresh()
		   thisform.swrptlook1.txtEndName.refresh()
		ENDIF   
		
		thisform.setnextcontrol(thisform.swrptlook1.txtEndId)
		
	ENDPROC

	PROCEDURE Swrptlook1.txtBegID.quickfill
		LPARAMETERS cvalue
		
		DODEFAULT(cvalue)
		
		thisform.swrptlook1.txtbegname.set('value',wells.cwellname)
	ENDPROC

	PROCEDURE Swrptlook1.txtEndID.quickfill
		LPARAMETERS cvalue
		
		DODEFAULT(cvalue)
		
		thisform.swrptlook1.txtendname.set('value',wells.cwellname)
	ENDPROC

	PROCEDURE txtcMonth1.Valid
		IF NOT EMPTY(THIS.VALUE)
		   THIS.SET('value',PADL(ALLT(THIS.VALUE),2,'0'))
		   IF NOT BETWEEN(THIS.VALUE,'01','12')
		      THISFORM.oMessage.Warning('Please enter a valid month between 1 and 12.')
		      RETURN 0
		   ENDIF
		ELSE
		   THIS.SET('value',PADL(ALLT(STR(MONTH(DATE()))),2,'0'))
		ENDIF
		
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtcYear1.Valid
		IF EMPTY(THIS.VALUE)
		   THIS.SET('value',ALLT(STR(YEAR(DATE()))))
		ELSE
		   IF NOT BETWEEN(THIS.VALUE,'1980','2040')
		      THISFORM.oMessage.Warning('Please enter a valid year.')
		      RETURN 0
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

ENDDEFINE
