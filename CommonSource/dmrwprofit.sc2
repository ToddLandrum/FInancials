*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="dmrwprofit.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 200
	Left = 40
	Name = "Dataenvironment"
	Top = 235
	Width = 520

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "groups", ;
		CursorSource = "groups", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "glopt", ;
		CursorSource = "glopt", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formdmrwprofit AS frmrptcriteria OF "..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="LblProdYear" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblProdPer" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBegID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEndID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblGroup" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swgroup1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swyear1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swperiod1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklActive" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="opgReportBy" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Glmaint" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkDirectPaid" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSelected" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSelected" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: royalty
		*p: cgroup
		*p: cperiod
		*p: cwellid1
		*p: cwellid2
		*p: cyear
		*p: lactive
		*p: ldirect
		*p: nreport
	*</DefinedPropArrayMethod>

	Caption = "Well Profit and Loss Statement"
	cgroup = .F.
	cperiod = .F.
	cwellid1 = .F.
	cwellid2 = .F.
	cyear = .F.
	DoCreate = .T.
	Height = 453
	HelpContextID = 204
	lactive = .F.
	ldirect = .F.
	Name = "FormDmrwprofit"
	nreport = .F.
	Width = 472
	Swrptcriteriabuttons1.chkExport.Alignment = 0
	Swrptcriteriabuttons1.chkExport.Name = "chkExport"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.cmdPreview.Name = "cmdPreview"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 118
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 14
	Swrptcriteriabuttons1.Top = 372

	ADD OBJECT 'chkDirectPaid' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Include Direct Paid and Dummy Amounts", ;
		Left = 167, ;
		Name = "chkDirectPaid", ;
		TabIndex = 13, ;
		Top = 320, ;
		Value = .T.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklActive' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Include Only Active Wells", ;
		Left = 167, ;
		Name = "chklActive", ;
		TabIndex = 12, ;
		Top = 295, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSelected' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Choose Selected Wells", ;
		Left = 169, ;
		Name = "chkSelected", ;
		TabIndex = 6, ;
		Top = 108, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Glmaint' AS glmaint WITH ;
		Height = 24, ;
		Left = 24, ;
		Name = "Glmaint", ;
		Top = 228, ;
		Width = 24
		*< END OBJECT: ClassLib="..\custom\swgl.vcx" BaseClass="custom" />

	ADD OBJECT 'lblBegID' AS lbllabelcustom WITH ;
		Caption = "First Well:", ;
		Height = 16, ;
		Left = 101, ;
		Name = "lblBegID", ;
		TabIndex = 8, ;
		Top = 137, ;
		Width = 49
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblEndID' AS lbllabelcustom WITH ;
		Caption = "Last Well:", ;
		Height = 16, ;
		Left = 101, ;
		Name = "lblEndID", ;
		TabIndex = 9, ;
		Top = 188, ;
		Width = 49
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblGroup' AS lbllabelcustom WITH ;
		Caption = "Group:", ;
		Height = 16, ;
		Left = 115, ;
		Name = "LblGroup", ;
		TabIndex = 11, ;
		Top = 246, ;
		Width = 35
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Report By", ;
		Height = 16, ;
		Left = 69, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 15, ;
		Top = 30
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblProdPer' AS lbllabelcustom WITH ;
		Caption = "Period", ;
		Height = 16, ;
		Left = 211, ;
		Name = "LblProdPer", ;
		TabIndex = 4, ;
		Top = 68, ;
		Width = 32
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblProdYear' AS lbllabelcustom WITH ;
		Caption = "Year:", ;
		Height = 16, ;
		Left = 121, ;
		Name = "LblProdYear", ;
		TabIndex = 2, ;
		Top = 68, ;
		Width = 29
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSelected' AS lbllabelcustom WITH ;
		Caption = "All IDs Selected", ;
		ForeColor = 0,0,255, ;
		Left = 168, ;
		Name = "lblSelected", ;
		TabIndex = 16, ;
		Top = 174, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'opgReportBy' AS opgoptiongroupcustom WITH ;
		AutoSize = .T., ;
		BorderStyle = 0, ;
		ButtonCount = 2, ;
		Height = 27, ;
		Left = 127, ;
		Name = "opgReportBy", ;
		TabIndex = 1, ;
		Top = 23, ;
		Width = 225, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "Production Year", ;
		Option1.FontSize = 8, ;
		Option1.Height = 16, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Top = 5, ;
		Option1.Width = 96, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "Accounting Year", ;
		Option2.FontSize = 8, ;
		Option2.Height = 16, ;
		Option2.Left = 120, ;
		Option2.Name = "Option2", ;
		Option2.Top = 6, ;
		Option2.Width = 100
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'Swgroup1' AS swgroup WITH ;
		Left = 163, ;
		Name = "Swgroup1", ;
		TabIndex = 10, ;
		Top = 244
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Swperiod1' AS swperiod WITH ;
		Left = 247, ;
		Name = "Swperiod1", ;
		TabIndex = 5, ;
		Top = 65
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		Left = 163, ;
		Name = "Swrptlook1", ;
		TabIndex = 7, ;
		Top = 134, ;
		ZOrderSet = 5, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		txtBegID.clistexpression = wells.cwellid, ;
		txtBegID.clistworkarea = wells, ;
		txtBegID.Name = "txtBegID", ;
		TxtBegName.Name = "TxtBegName", ;
		txtEndID.clistexpression = wells.cwellid, ;
		txtEndID.clistworkarea = wells, ;
		txtEndID.Name = "txtEndID", ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />

	ADD OBJECT 'Swyear1' AS swyear WITH ;
		Left = 163, ;
		Name = "Swyear1", ;
		TabIndex = 3, ;
		Top = 65
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE builddata
		LOCAL lcWellid1, lcWellid2, lcPeriod, lcPeriodA, lcYear, lcGroup, llActive, llCalendarFY
		LOCAL lcTitle1, lcTitle2
		PRIV m.cGrpName
		
		lcWellid1 = THISFORM.swrptlook1.txtbegid.VALUE
		lcWellid2 = THISFORM.swrptlook1.txtendid.VALUE
		lcPeriod  = THISFORM.swperiod1.VALUE
		lcPeriodA = lcPeriod
		lcYear    = THISFORM.swyear1.VALUE
		lcGroup   = LEFT(THISFORM.swgroup1.VALUE,2)
		llActive  = THISFORM.chklActive.VALUE
		llDirect  = THISFORM.chkDirectPaid.VALUE
		lnReport  = THISFORM.opgReportBy.VALUE
		lcReportBy = IIF(lnReport=1,' by Production Year',' by Accounting Year')
		lcTitle2  = ' '
		llSelected = thisform.chkselected.Value 
		
		IF NOT llSelected
		   SELECT cwellid as cid FROM wells WHERE BETWEEN(cwellid,lcWellID1,lcWellID2) INTO CURSOR selected
		ENDIF 
		
		thisform.cwellid1 = lcWellID1
		thisform.cwellid2 = lcWellID2
		thisform.cyear    = lcYear
		thisform.cperiod  = lcPeriod
		thisform.cgroup   = lcgroup
		thisform.ldirect  = lldirect
		thisform.nreport  = lnReport
		thisform.lactive  = llActive
		
		WAIT WIND NOWAIT 'Processing Report Request....'
		
		* Check to see if the FY is based on calendar year
		IF NOT m.goApp.lAMVersion
		   llCalendarFY = .T.
		ELSE
		   IF glopt.cfybegin <> '01'
		      llCalendarFY = .F.
		   ELSE
		      llCalendarFY = .T.
		   ENDIF
		ENDIF
		
		**-
		**-  Get the group name from the group table
		**-
		SELECT groups
		SET ORDER TO cGroup
		DO CASE
		   CASE lcGroup = '**'
		      m.cGrpName = 'All Groups'
		   CASE SEEK(lcGroup)
		      m.cGrpName = cDesc
		   OTHERWISE
		      m.cGrpName = 'Unknown Group'
		ENDCASE
		
		*
		********************************************************************
		*  Create the work cursor.
		********************************************************************
		*
		CREATE CURSOR temppl ;
		   (cSection   C(1),  ;
		   cWellid    C(10), ;
		   cWellname  C(30), ;
		   cSource    C(5),  ;
		   cSrcid     C(25), ;
		   cIncType   C(30), ;
		   nPrdUnits  N(12,4), ;
		   nPrdTotal  N(12,2), ;
		   nYrUnits   N(12,4), ;
		   nYrTotal   N(12,2), ;
		   cCategory  C(30), ;
		   nPrdAmt    N(12,2), ;
		   nYearAmt   N(12,2), ;
		   nRoyPrd    N(12,2), ;
		   nRoyYear   N(12,2), ;
		   nWrkPrd    N(12,2), ;
		   nWrkYear   N(12,2))
		INDEX ON cWellid+cSection TAG wellid
		INDEX ON cWellid+cSource TAG wellsrc
		INDEX ON cWellid+cCategory TAG wellcat
		INDEX ON cSection TAG SECTION
		INDEX ON cSource  TAG SOURCE
		INDEX ON cCategory TAG category
		INDEX on cwellid+csection+csource+ccategory TAG primekey
		
		*
		********************************************************************
		*  Fill in the income paid this year.
		********************************************************************
		*
		IF lnReport = 1
		   SELECT wellhist.cWellid     AS cWellid, ;
		      wells.cWellname          AS cWellname, ;
		      wells.cState             AS cState, ;
		      IIF(llDirect,SUM(wellhist.nGrossGas), SUM(swNetRevenue(wellhist.cwellid, wellhist.nGrossGas, 'G',, .T.,,,,,, wellhist.cDeck)))    AS nNetGas, ;
		      IIF(llDirect,SUM(wellhist.noilinc), SUM(swNetRevenue(wellhist.cwellid, wellhist.nGrossOil, 'O',, .T.,,,,,, wellhist.cDeck)))    AS nNetOil, ;
		      IIF(llDirect,SUM(wellhist.nOthInc), SUM(swNetRevenue(wellhist.cwellid, wellhist.nOthInc, 'P',, .T.,,,,,, wellhist.cDeck)))    AS nNetOth, ;
		      IIF(llDirect,SUM(wellhist.nTotProd), SUM(swNetRevenue(wellhist.cwellid, wellhist.nTotProd, 'P',, .T.,,,,,, wellhist.cDeck)))    AS nTototh, ;
		      IIF(llDirect,SUM(wellhist.nTRPInc), SUM(swNetRevenue(wellhist.cwellid, wellhist.nTRPInc, 'T',, .T.,,,,,, wellhist.cDeck)))    AS nTRPInc, ;
		      IIF(llDirect,SUM(wellhist.nTotMKTG), SUM(swNetRevenue(wellhist.cwellid, wellhist.nTotMktg, 'G',, .T.,,,,,, wellhist.cDeck)))   AS nTotMKTG, ;
		      IIF(llDirect,SUM(wellhist.nMiscInc1+wellhist.nMiscInc2), SUM(swNetRevenue(wellhist.cwellid, wellhist.nMiscInc1, '1',, .T.,,,,,, wellhist.cDeck) + ;
		            swNetRevenue(wellhist.cwellid, wellhist.nMiscInc2, '2',, .T.,,,,,, wellhist.cDeck))) AS nMiscInc, ;
		      'A'                      AS cSection, ;
		      IIF(llDirect,SUM(wellhist.ntotbbl), SUM(swNetRevenue(wellhist.cwellid, wellhist.nTotBBL, 'O',, .T.,,,,,, wellhist.cDeck)))    AS ntotbbl, ;
		      IIF(llDirect,SUM(wellhist.ntotmcf), SUM(swNetRevenue(wellhist.cwellid, wellhist.nTotMCF, 'G',, .T.,,,,,, wellhist.cDeck)))    AS ntotmcf, ;
		      000000000.00             AS nPrdAmt ;
		      FROM wellhist, wells;
		      WHERE wellhist.cwellid in (SELECT cid FROM selected) ;
		      AND wellhist.cWellid = wells.cWellid  ;
		      AND wellhist.hYear = lcYear ;
		      AND wellhist.hPeriod <= lcPeriod ;
		      AND IIF(lcGroup='**',.T.,wells.cGroup  = lcGroup) ;
		      ORDER BY wellhist.cWellid ;
		      GROUP BY wellhist.cWellid ;
		      INTO CURSOR temp
		
		   SELECT temp
		   SCAN
		      SCATTER MEMVAR
		      *  Process Gas
		      m.cSource = 'MCF'
		      m.nYearAmt = m.nNetGas
		      m.nYearUnits = m.ntotmcf
		      m.wellsrc = m.cWellid + 'MCF'
		
		      INSERT INTO temppl FROM MEMVAR
		
		      * Process Oil
		      m.cSource = 'BBL'
		      m.nYearAmt = m.nNetOil
		      m.nYearUnits = m.ntotbbl
		      m.wellsrc = m.cWellid + 'BBL'
		      INSERT INTO temppl FROM MEMVAR
		
		      * Process other products
		      m.cSource = 'OTH'
		      m.nYearAmt = m.nNetOth
		      m.nYearUnits = m.nTototh
		      m.wellsrc = m.cWellid + 'OTH'
		      INSERT INTO temppl FROM MEMVAR
		
		      * Process Miscellaneous
		      m.cSource = 'MISC'
		      m.nYearAmt = m.nMiscInc
		      m.nYearUnits = 0
		      m.wellsrc = m.cWellid + 'MISC'
		      INSERT INTO temppl FROM MEMVAR
		
		      * Transportation Income
		      m.cSource = 'TRANS'
		      m.nYearAmt = m.nTRPInc
		      m.nYearUnits = 0
		      m.wellsrc = m.cWellid + 'TRANS'
		      INSERT INTO temppl FROM MEMVAR
		
		      * Marketing Expenses
		      m.cSource = 'MKTG'
		      m.nYearAmt = m.nTotMKTG * -1
		      m.nYearUnits = 0
		      m.wellsrc = m.cWellid + 'MKTG'
		      INSERT INTO temppl FROM MEMVAR
		
		   ENDSCAN
		ELSE
		   SELECT wellhist.cWellid     AS cWellid, ;
		      wells.cWellname          AS cWellname, ;
		      wells.cState             AS cState, ;
		      IIF(llDirect,SUM(wellhist.nGrossGas), SUM(swNetRevenue(wellhist.cwellid, wellhist.nGrossGas, 'G',, .T.,,,,,, wellhist.cDeck)))    AS nNetGas, ;
		      IIF(llDirect,SUM(wellhist.noilinc), SUM(swNetRevenue(wellhist.cwellid, wellhist.nGrossOil, 'O',, .T.,,,,,, wellhist.cDeck)))    AS nNetOil, ;
		      IIF(llDirect,SUM(wellhist.nOthInc), SUM(swNetRevenue(wellhist.cwellid, wellhist.nOthInc, 'P',, .T.,,,,,, wellhist.cDeck)))    AS nNetOth, ;
		      IIF(llDirect,SUM(wellhist.nTotProd), SUM(swNetRevenue(wellhist.cwellid, wellhist.nTotProd, 'P',, .T.,,,,,, wellhist.cDeck)))    AS nTototh, ;
		      IIF(llDirect,SUM(wellhist.nTRPInc), SUM(swNetRevenue(wellhist.cwellid, wellhist.nTRPInc, 'T',, .T.,,,,,, wellhist.cDeck)))    AS nTRPInc, ;
		      IIF(llDirect,SUM(wellhist.nTotMKTG), SUM(swNetRevenue(wellhist.cwellid, wellhist.nTotMktg, 'G',, .T.,,,,,, wellhist.cDeck)))   AS nTotMKTG, ;
		       IIF(llDirect,SUM(wellhist.nMiscInc1+wellhist.nMiscInc2), SUM(swNetRevenue(wellhist.cwellid, wellhist.nMiscInc1, '1',, .T.,,,,,, wellhist.cDeck) + ;
		            swNetRevenue(wellhist.cwellid, wellhist.nMiscInc2, '2',, .T.,,,,,, wellhist.cDeck))) AS nMiscInc, ;
		      'A'                      AS cSection, ;
		      IIF(llDirect,SUM(wellhist.ntotbbl), SUM(swNetRevenue(wellhist.cwellid, wellhist.nTotBBL, 'O',, .T.,,,,,, wellhist.cDeck)))    AS ntotbbl, ;
		      IIF(llDirect,SUM(wellhist.ntotmcf), SUM(swNetRevenue(wellhist.cwellid, wellhist.nTotMCF, 'G',, .T.,,,,,, wellhist.cDeck)))    AS ntotmcf, ;
		      000000000.00             AS nPrdAmt ;
		      FROM wellhist, wells;
		      WHERE wellhist.cwellid in (SELECT cid FROM selected) ;
		      AND wellhist.crunyear + PADL(TRANSFORM(wellhist.nrunno), 3, '0')+wellhist.crectype IN ;
					 (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0')+ctypeclose ;
						  FROM sysctl ;
						  WHERE YEAR(dAcctDate) = VAL(lcYear) ;
						    AND MONTH(dAcctDate) <= VAL(lcperiod)) ;
		      AND IIF(lcGroup='**',.T.,wells.cGroup  = lcGroup) ;
		      AND wellhist.cWellid = wells.cWellid  ;
		      ORDER BY wellhist.cWellid ;
		      GROUP BY wellhist.cWellid ;
		      INTO CURSOR temp
		
		   SELECT temp
		   SCAN
		      SCATTER MEMVAR
		      *  Process Gas
		      m.cSource = 'MCF'
		      m.nYearAmt = m.nNetGas
		      m.nYearUnits = m.ntotmcf
		      m.wellsrc = m.cWellid + 'MCF'
		      INSERT INTO temppl FROM MEMVAR
		
		      * Process Oil
		      m.cSource = 'BBL'
		      m.nYearAmt = m.nNetOil
		      m.nYearUnits = m.ntotbbl
		      m.wellsrc = m.cWellid + 'BBL'
		      INSERT INTO temppl FROM MEMVAR
		
		      * Process other products
		      m.cSource = 'OTH'
		      m.nYearAmt = m.nNetOth
		      m.nYearUnits = m.nTototh
		      m.wellsrc = m.cWellid + 'OTH'
		      INSERT INTO temppl FROM MEMVAR
		
		      * Process Miscellaneous
		      m.cSource = 'MISC'
		      m.nYearAmt = m.nMiscInc
		      m.nYearUnits = 0
		      m.wellsrc = m.cWellid + 'MISC'
		      INSERT INTO temppl FROM MEMVAR
		
		      * Transportation Income
		      m.cSource = 'TRANS'
		      m.nYearAmt = m.nTRPInc
		      m.nYearUnits = 0
		      m.wellsrc = m.cWellid + 'TRANS'
		      INSERT INTO temppl FROM MEMVAR
		
		      * Marketing Expenses
		      m.cSource = 'MKTG'
		      m.nYearAmt = m.nTotMKTG * -1
		      m.nYearUnits = 0
		      m.wellsrc = m.cWellid + 'MKTG'
		      INSERT INTO temppl FROM MEMVAR
		
		   ENDSCAN
		ENDIF
		
		*
		********************************************************************
		*  Fill in the income paid this period.
		********************************************************************
		*
		IF lnReport = 1
		   SELECT wellhist.cWellid     AS cWellid, ;
		      wells.cWellname          AS cWellname, ;
		      wells.cState             AS cState, ;
		      IIF(llDirect,SUM(wellhist.nGrossGas), SUM(swNetRevenue(wellhist.cwellid, wellhist.nGrossGas, 'G',, .T.,,,,,, wellhist.cDeck)))    AS nNetGas, ;
		      IIF(llDirect,SUM(wellhist.noilinc), SUM(swNetRevenue(wellhist.cwellid, wellhist.nGrossOil, 'O',, .T.,,,,,, wellhist.cDeck)))    AS nNetOil, ;
		      IIF(llDirect,SUM(wellhist.nOthInc), SUM(swNetRevenue(wellhist.cwellid, wellhist.nOthInc, 'P',, .T.,,,,,, wellhist.cDeck)))    AS nNetOth, ;
		      IIF(llDirect,SUM(wellhist.nTotProd), SUM(swNetRevenue(wellhist.cwellid, wellhist.nTotProd, 'P',, .T.,,,,,, wellhist.cDeck)))    AS nTototh, ;
		      IIF(llDirect,SUM(wellhist.nTRPInc), SUM(swNetRevenue(wellhist.cwellid, wellhist.nTRPInc, 'T',, .T.,,,,,, wellhist.cDeck)))    AS nTRPInc, ;
		      IIF(llDirect,SUM(wellhist.nTotMKTG), SUM(swNetRevenue(wellhist.cwellid, wellhist.nTotMktg, 'G',, .T.,,,,,, wellhist.cDeck)))   AS nTotMKTG, ;
		       IIF(llDirect,SUM(wellhist.nMiscInc1+wellhist.nMiscInc2), SUM(swNetRevenue(wellhist.cwellid, wellhist.nMiscInc1, '1',, .T.,,,,,, wellhist.cDeck) + ;
		            swNetRevenue(wellhist.cwellid, wellhist.nMiscInc2, '2',, .T.,,,,,, wellhist.cDeck))) AS nMiscInc, ;
		      'A'                      AS cSection, ;
		      IIF(llDirect,SUM(wellhist.ntotbbl), SUM(swNetRevenue(wellhist.cwellid, wellhist.nTotBBL, 'O',, .T.,,,,,, wellhist.cDeck)))    AS ntotbbl, ;
		      IIF(llDirect,SUM(wellhist.ntotmcf), SUM(swNetRevenue(wellhist.cwellid, wellhist.nTotMCF, 'G',, .T.,,,,,, wellhist.cDeck)))    AS ntotmcf, ;
		      000000000.00             AS nPrdAmt ;
		      FROM wellhist, wells;
		      WHERE wellhist.cwellid in (SELECT cid FROM selected) ;
		      AND wellhist.cWellid = wells.cWellid  ;
		      AND wellhist.hYear = lcYear ;
		      AND wellhist.hPeriod = lcPeriod ;
		      AND IIF(lcGroup='**',.T.,wells.cGroup  = lcGroup) ;
		      ORDER BY wellhist.cWellid ;
		      GROUP BY wellhist.cWellid ;
		      INTO CURSOR temp
		
		   SELECT temp
		   SCAN
		      SCATTER MEMVAR
		      *  Process Gas
		      m.cSource = 'MCF'
		      m.nPrdAmt = m.nNetGas
		      m.nPrdUnits = m.ntotmcf
		      m.wellsrc = m.cWellid + 'MCF'
		      SELECT temppl
		      SET ORDER TO wellsrc
		      SEEK (m.wellsrc)
		      IF FOUND()
		         REPLACE nPrdAmt WITH nPrdAmt + m.nPrdAmt, ;
		            nPrdUnits WITH nPrdUnits + m.nPrdUnits
		      ELSE
		         APPEND BLANK
		         GATHER MEMVAR
		      ENDIF
		      * Process Oil
		      m.cSource = 'BBL'
		      m.nPrdAmt = m.nNetOil
		      m.nPrdUnits = m.ntotbbl
		      m.wellsrc = m.cWellid + 'BBL'
		      SELECT temppl
		      SET ORDER TO wellsrc
		      SEEK (m.wellsrc)
		      IF FOUND()
		         REPLACE nPrdAmt WITH nPrdAmt + m.nPrdAmt, ;
		            nPrdUnits WITH nPrdUnits + m.nPrdUnits
		      ELSE
		         APPEND BLANK
		         GATHER MEMVAR
		      ENDIF
		
		      * Process other products
		      m.cSource = 'OTH'
		      m.nPrdAmt = m.nNetOth
		      m.nPrdUnits = m.nTototh
		      m.wellsrc = m.cWellid + 'OTH'
		      SELECT temppl
		      SET ORDER TO wellsrc
		      SEEK (m.wellsrc)
		      IF FOUND()
		         REPLACE nPrdAmt WITH nPrdAmt + m.nPrdAmt, ;
		            nPrdUnits WITH nPrdUnits + m.nPrdUnits
		      ELSE
		         APPEND BLANK
		         GATHER MEMVAR
		      ENDIF
		
		      * Process miscellaneous income
		      m.cSource = 'MISC'
		      m.nPrdAmt = m.nMiscInc
		      m.nPrdUnits = 0
		      m.wellsrc = m.cWellid + 'MISC'
		      SELECT temppl
		      SET ORDER TO wellsrc
		      SEEK (m.wellsrc)
		      IF FOUND()
		         REPLACE nPrdAmt WITH nPrdAmt + m.nPrdAmt, ;
		            nPrdUnits WITH nPrdUnits + m.nPrdUnits
		      ELSE
		         APPEND BLANK
		         GATHER MEMVAR
		      ENDIF
		
		      * Process transportation income
		      m.cSource = 'TRANS'
		      m.nPrdAmt = m.nTRPInc
		      m.nPrdUnits = 0
		      m.wellsrc = m.cWellid + 'TRANS'
		      SELECT temppl
		      SET ORDER TO wellsrc
		      SEEK (m.wellsrc)
		      IF FOUND()
		         REPLACE nPrdAmt WITH nPrdAmt + m.nPrdAmt, ;
		            nPrdUnits WITH nPrdUnits + m.nPrdUnits
		      ELSE
		         APPEND BLANK
		         GATHER MEMVAR
		      ENDIF
		
		      * Process marketing expenses
		      m.cSource = 'MKTG'
		      m.nPrdAmt = m.nTotMKTG * -1
		      m.nPrdUnits = 0
		      m.wellsrc = m.cWellid + 'MKTG'
		      SELECT temppl
		      SET ORDER TO wellsrc
		      SEEK (m.wellsrc)
		      IF FOUND()
		         REPLACE nPrdAmt WITH nPrdAmt + m.nPrdAmt, ;
		            nPrdUnits WITH nPrdUnits + m.nPrdUnits
		      ELSE
		         APPEND BLANK
		         GATHER MEMVAR
		      ENDIF
		
		   ENDSCAN
		ELSE
		   SELECT wellhist.cWellid     AS cWellid, ;
		      wells.cWellname          AS cWellname, ;
		      wells.cState             AS cState, ;
		      IIF(llDirect,SUM(wellhist.nGrossGas), SUM(swNetRevenue(wellhist.cwellid, wellhist.nGrossGas, 'G',, .T.,,,,,, wellhist.cDeck)))    AS nNetGas, ;
		      IIF(llDirect,SUM(wellhist.noilinc), SUM(swNetRevenue(wellhist.cwellid, wellhist.nGrossOil, 'O',, .T.,,,,,, wellhist.cDeck)))    AS nNetOil, ;
		      IIF(llDirect,SUM(wellhist.nOthInc), SUM(swNetRevenue(wellhist.cwellid, wellhist.nOthInc, 'P',, .T.,,,,,, wellhist.cDeck)))    AS nNetOth, ;
		      IIF(llDirect,SUM(wellhist.nTotProd), SUM(swNetRevenue(wellhist.cwellid, wellhist.nTotProd, 'P',, .T.,,,,,, wellhist.cDeck)))    AS nTototh, ;
		      IIF(llDirect,SUM(wellhist.nTRPInc), SUM(swNetRevenue(wellhist.cwellid, wellhist.nTRPInc, 'T',, .T.,,,,,, wellhist.cDeck)))    AS nTRPInc, ;
		      IIF(llDirect,SUM(wellhist.nTotMKTG), SUM(swNetRevenue(wellhist.cwellid, wellhist.nTotMktg, 'G',, .T.,,,,,, wellhist.cDeck)))   AS nTotMKTG, ;
		       IIF(llDirect,SUM(wellhist.nMiscInc1+wellhist.nMiscInc2), SUM(swNetRevenue(wellhist.cwellid, wellhist.nMiscInc1, '1',, .T.,,,,,, wellhist.cDeck) + ;
		            swNetRevenue(wellhist.cwellid, wellhist.nMiscInc2, '2',, .T.,,,,,, wellhist.cDeck))) AS nMiscInc, ;
		      'A'                      AS cSection, ;
		      IIF(llDirect,SUM(wellhist.ntotbbl), SUM(swNetRevenue(wellhist.cwellid, wellhist.nTotBBL, 'O',, .T.,,,,,, wellhist.cDeck)))    AS ntotbbl, ;
		      IIF(llDirect,SUM(wellhist.ntotmcf), SUM(swNetRevenue(wellhist.cwellid, wellhist.nTotMCF, 'G',, .T.,,,,,, wellhist.cDeck)))    AS ntotmcf, ;
		      000000000.00             AS nPrdAmt ;
		      FROM wellhist, wells;
		      WHERE wellhist.cwellid in (SELECT cid FROM selected) ;
		      AND wellhist.crunyear + PADL(TRANSFORM(wellhist.nrunno), 3, '0')+wellhist.crectype IN ;
					 (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0')+ctypeclose ;
						  FROM sysctl ;
						  WHERE YEAR(dAcctDate) = VAL(lcYear)) ;
		      AND wellhist.crunyear + PADL(TRANSFORM(wellhist.nrunno), 3, '0')+wellhist.crectype IN ;
					 (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0')+ctypeclose ;
						  FROM sysctl ;
						  WHERE MONTH(dAcctDate) = VAL(lcPeriod)) ;				  
		      AND IIF(lcGroup='**',.T.,wells.cGroup  = lcGroup) ;
		      AND wellhist.cWellid = wells.cWellid  ;      
		      ORDER BY wellhist.cWellid ;
		      GROUP BY wellhist.cWellid ;
		      INTO CURSOR temp
		
		   SELECT temp
		   SCAN
		      SCATTER MEMVAR
		      *  Process Gas
		      m.cSource = 'MCF'
		      m.nPrdAmt = m.nNetGas
		      m.nPrdUnits = m.ntotmcf
		      m.wellsrc = m.cWellid + 'MCF'
		      SELECT temppl
		      SET ORDER TO wellsrc
		      SEEK (m.wellsrc)
		      IF FOUND()
		         REPLACE nPrdAmt WITH nPrdAmt + m.nPrdAmt, ;
		            nPrdUnits WITH nPrdUnits + m.nPrdUnits
		      ELSE
		         APPEND BLANK
		         GATHER MEMVAR
		      ENDIF
		      * Process Oil
		      m.cSource = 'BBL'
		      m.nPrdAmt = m.nNetOil
		      m.nPrdUnits = m.ntotbbl
		      m.wellsrc = m.cWellid + 'BBL'
		      SELECT temppl
		      SET ORDER TO wellsrc
		      SEEK (m.wellsrc)
		      IF FOUND()
		         REPLACE nPrdAmt WITH nPrdAmt + m.nPrdAmt, ;
		            nPrdUnits WITH nPrdUnits + m.nPrdUnits
		      ELSE
		         APPEND BLANK
		         GATHER MEMVAR
		      ENDIF
		
		      * Process other products
		      m.cSource = 'OTH'
		      m.nPrdAmt = m.nNetOth
		      m.nPrdUnits = m.nTototh
		      m.wellsrc = m.cWellid + 'OTH'
		      SELECT temppl
		      SET ORDER TO wellsrc
		      SEEK (m.wellsrc)
		      IF FOUND()
		         REPLACE nPrdAmt WITH nPrdAmt + m.nPrdAmt, ;
		            nPrdUnits WITH nPrdUnits + m.nPrdUnits
		      ELSE
		         APPEND BLANK
		         GATHER MEMVAR
		      ENDIF
		
		      * Process miscellaneous income
		      m.cSource = 'MISC'
		      m.nPrdAmt = m.nMiscInc
		      m.nPrdUnits = 0
		      m.wellsrc = m.cWellid + 'MISC'
		      SELECT temppl
		      SET ORDER TO wellsrc
		      SEEK (m.wellsrc)
		      IF FOUND()
		         REPLACE nPrdAmt WITH nPrdAmt + m.nPrdAmt, ;
		            nPrdUnits WITH nPrdUnits + m.nPrdUnits
		      ELSE
		         APPEND BLANK
		         GATHER MEMVAR
		      ENDIF
		
		      * Process transportation income
		      m.cSource = 'TRANS'
		      m.nPrdAmt = m.nTRPInc
		      m.nPrdUnits = 0
		      m.wellsrc = m.cWellid + 'TRANS'
		      SELECT temppl
		      SET ORDER TO wellsrc
		      SEEK (m.wellsrc)
		      IF FOUND()
		         REPLACE nPrdAmt WITH nPrdAmt + m.nPrdAmt, ;
		            nPrdUnits WITH nPrdUnits + m.nPrdUnits
		      ELSE
		         APPEND BLANK
		         GATHER MEMVAR
		      ENDIF
		
		      * Process marketing expenses
		      m.cSource = 'MKTG'
		      m.nPrdAmt = m.nTotMKTG * -1
		      m.nPrdUnits = 0
		      m.wellsrc = m.cWellid + 'MKTG'
		      SELECT temppl
		      SET ORDER TO wellsrc
		      SEEK (m.wellsrc)
		      IF FOUND()
		         REPLACE nPrdAmt WITH nPrdAmt + m.nPrdAmt, ;
		            nPrdUnits WITH nPrdUnits + m.nPrdUnits
		      ELSE
		         APPEND BLANK
		         GATHER MEMVAR
		      ENDIF
		
		   ENDSCAN
		ENDIF
		
		IF USED('temp')
		   SELECT temp
		   USE
		ENDIF
		
		*
		********************************************************************
		*  Fill in the amount of gathering & compression paid this year.
		********************************************************************
		*
		*
		*  Gathering
		*
		IF lnReport = 1
		   SELECT wellhist.cWellid    AS cWellid, ;
		      'TRG'              AS cSource, ;
		      IIF(llDirect,SUM(wellhist.nGather),SUM(swNetRevenue(wellhist.cwellid,wellhist.nGather, 'O1',,.T.,,,,,,wellhist.cdeck))) * -1 AS nYearAmt, ;
		      000000000.00             AS nPrdAmt, ;
		      'A'                AS cSection ;
		      FROM wellhist  ;
		      WHERE wellhist.cwellid in (SELECT cid FROM selected) ;
		      AND wellhist.hYear   = lcYear  ;
		      AND wellhist.hPeriod <= lcPeriod ;
		      AND IIF(lcGroup='**',.T.,cGroup  = lcGroup) ;
		      INTO CURSOR temp ;
		      ORDER BY cWellid, cSource ;
		      GROUP BY cWellid, cSource
		
		   SELECT temppl
		   APPEND FROM DBF('temp') FOR nYearAmt <> 0
		   SELECT temp
		   USE
		ELSE
		   SELECT wellhist.cWellid    AS cWellid, ;
		      'TRG'              AS cSource, ;
		      IIF(llDirect,SUM(wellhist.nGather),SUM(swNetRevenue(wellhist.cwellid,wellhist.nGather, 'O1',,.T.,,,,,,wellhist.cdeck))) * -1 AS nYearAmt, ;
		      000000000.00             AS nPrdAmt, ;
		      'A'                AS cSection ;
		      FROM wellhist  ;
		      WHERE wellhist.cwellid in (SELECT cid FROM selected) ;
		      AND wellhist.crunyear + PADL(TRANSFORM(wellhist.nrunno), 3, '0')+wellhist.crectype IN ;
					 (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0')+ctypeclose ;
						  FROM sysctl ;
						  WHERE YEAR(dAcctDate) = VAL(lcYear) ;
		  				  AND MONTH(dAcctDate) <= VAL(lcperiod)) ;
		      AND IIF(lcGroup='**',.T.,cGroup  = lcGroup) ;
		      INTO CURSOR temp ;
		      ORDER BY cWellid, cSource ;
		      GROUP BY cWellid, cSource
		
		   SELECT temppl
		   APPEND FROM DBF('temp') FOR nYearAmt <> 0
		   SELECT temp
		   USE
		ENDIF
		
		*
		*  Compression
		*
		IF lnReport = 1
		   SELECT wellhist.cWellid    AS cWellid, ;
		      'TRC'              AS cSource, ;
		      IIF(llDirect,SUM(wellhist.nCompress),SUM(swNetRevenue(wellhist.cwellid,wellhist.nCompress, 'O1',,.T.,,,,,,wellhist.cdeck))) * -1 AS nYearAmt, ;
		      000000000.00             AS nPrdAmt, ;
		      'A'                AS cSection ;
		      FROM wellhist ;
		      WHERE wellhist.cwellid in (SELECT cid FROM selected) ;
		      AND wellhist.hYear   = lcYear  ;
		      AND wellhist.hPeriod <= lcPeriod ;
		      INTO CURSOR temp   ;
		      ORDER BY cWellid, cSource ;
		      GROUP BY cWellid, cSource
		   SELECT temppl
		   APPEND FROM DBF('temp') FOR nYearAmt <> 0
		   SELECT temp
		   USE
		ELSE
		   SELECT wellhist.cWellid    AS cWellid, ;
		      'TRC'              AS cSource, ;
		      SUM(wellhist.nCompress) * -1 AS nYearAmt, ;
		      000000000.00             AS nPrdAmt, ;
		      'A'                AS cSection ;
		      FROM wellhist  ;
		      WHERE wellhist.cwellid in (SELECT cid FROM selected) ;
		      AND wellhist.crunyear + PADL(TRANSFORM(wellhist.nrunno), 3, '0')+wellhist.crectype IN ;
					 (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0')+ctypeclose ;
						  FROM sysctl ;
						  WHERE YEAR(dAcctDate) = VAL(lcYear) ;
						  AND MONTH(dAcctDate) <= VAL(lcperiod)) ;
		      INTO CURSOR temp ;
		      ORDER BY cWellid, cSource ;
		      GROUP BY cWellid, cSource
		
		   SELECT temppl
		   APPEND FROM DBF('temp') FOR nYearAmt <> 0
		   SELECT temp
		   USE
		ENDIF
		
		*
		********************************************************************
		*  Fill in the amount of compression & gathering paid this period.
		********************************************************************
		*
		
		*
		*  Gathering
		*
		IF lnReport = 1
		   SELECT wellhist.cWellid    AS cWellid, ;
		      'TRG'              AS cSource, ;
		      IIF(llDirect,SUM(wellhist.nGather),SUM(swNetRevenue(wellhist.cwellid,wellhist.nGather, 'O1',,.T.,,,,,,wellhist.cdeck))) * -1 AS nPrdAmt, ;
		      'A'                AS cSection ;
		      FROM wellhist ;
		      WHERE wellhist.cwellid in (SELECT cid FROM selected) ;
		      AND wellhist.hYear   = lcYear  ;
		      AND wellhist.hPeriod = lcPeriod ;
		      AND IIF(lcGroup='**',.T.,cGroup  = lcGroup) ;
		      INTO CURSOR temp ;
		      ORDER BY cWellid, cSource ;
		      GROUP BY cWellid, cSource
		   SELECT temp
		   SCAN FOR nPrdAmt <> 0
		      SCATTER MEMVAR
		      m.wellsrc = cWellid + cSource
		      SELECT temppl
		      SET ORDER TO wellsrc
		      IF SEEK(m.wellsrc)
		         REPLACE nPrdAmt WITH nPrdAmt + m.nPrdAmt
		      ELSE
		         APPEND BLANK
		         GATHER MEMVAR
		      ENDIF
		   ENDSCAN
		   *
		   *  Compression
		   *
		   SELECT wellhist.cWellid        AS cWellid, ;
		      'TRC'              AS cSource, ;
		      IIF(llDirect,SUM(wellhist.nCompress),SUM(swNetRevenue(wellhist.cwellid,wellhist.nCompress, 'O1',,.T.,,,,,,wellhist.cdeck))) * -1 AS nPrdAmt, ;
		      'A'                    AS cSection ;
		      FROM wellhist ;
		      WHERE wellhist.cwellid in (SELECT cid FROM selected) ;
		      AND wellhist.hYear   = lcYear  ;
		      AND wellhist.hPeriod = lcPeriod ;
		      AND IIF(lcGroup='**',.T.,cGroup  = lcGroup) ;
		      INTO CURSOR temp ;
		      ORDER BY cWellid, cSource ;
		      GROUP BY cWellid, cSource
		   SELECT temp
		   SCAN FOR nPrdAmt <> 0
		      SCATTER MEMVAR
		      m.wellsrc = cWellid + cSource
		      SELECT temppl
		      SET ORDER TO wellsrc
		      IF SEEK(m.wellsrc)
		         REPLACE nPrdAmt WITH nPrdAmt + m.nPrdAmt
		      ELSE
		         APPEND BLANK
		         GATHER MEMVAR
		      ENDIF
		   ENDSCAN
		ELSE
		   SELECT wellhist.cWellid    AS cWellid, ;
		      'TRG'              AS cSource, ;
		      IIF(llDirect,SUM(wellhist.nGather),SUM(swNetRevenue(wellhist.cwellid,wellhist.nGather, 'O1',,.T.,,,,,,wellhist.cdeck))) * -1 AS nPrdAmt, ;
		      'A'                AS cSection ;
		      FROM wellhist ;
		      WHERE wellhist.cwellid in (SELECT cid FROM selected) ;
		     AND wellhist.crunyear + PADL(TRANSFORM(wellhist.nrunno), 3, '0')+wellhist.crectype IN ;
					 (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0')+ctypeclose ;
						  FROM sysctl ;
						  WHERE YEAR(dAcctDate) = VAL(lcYear)) ;
		      AND wellhist.crunyear + PADL(TRANSFORM(wellhist.nrunno), 3, '0')+wellhist.crectype IN ;
					 (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0')+ctypeclose ;
						  FROM sysctl ;
						  WHERE MONTH(dAcctDate) = VAL(lcPeriod)) ;				
		      AND IIF(lcGroup='**',.T.,cGroup  = lcGroup) ;
		      INTO CURSOR temp ;
		      ORDER BY cWellid, cSource ;
		      GROUP BY cWellid, cSource
		   SELECT temp
		   SCAN FOR nPrdAmt <> 0
		      SCATTER MEMVAR
		      m.wellsrc = cWellid + cSource
		      SELECT temppl
		      SET ORDER TO wellsrc
		      IF SEEK(m.wellsrc)
		         REPLACE nPrdAmt WITH nPrdAmt + m.nPrdAmt
		      ELSE
		         APPEND BLANK
		         GATHER MEMVAR
		      ENDIF
		   ENDSCAN
		   *
		   *  Compression
		   *
		   SELECT wellhist.cWellid        AS cWellid, ;
		      'TRC'              AS cSource, ;
		      IIF(llDirect,SUM(wellhist.nCompress),SUM(swNetRevenue(wellhist.cwellid,wellhist.nCompress, 'O1',,.T.,,,,,,wellhist.cdeck))) * -1 AS nPrdAmt, ;
		      'A'                    AS cSection ;
		      FROM wellhist ;
		      WHERE wellhist.cwellid in (SELECT cid FROM selected) ;
		      AND wellhist.crunyear + PADL(TRANSFORM(wellhist.nrunno), 3, '0')+wellhist.crectype IN ;
					 (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0')+ctypeclose ;
						  FROM sysctl ;
						  WHERE YEAR(dAcctDate) = VAL(lcYear)) ;
		      AND wellhist.crunyear + PADL(TRANSFORM(wellhist.nrunno), 3, '0')+wellhist.crectype IN ;
					 (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0')+ctypeclose ;
						  FROM sysctl ;
						  WHERE MONTH(dAcctDate) = VAL(lcPeriod)) ;				
		      AND IIF(lcGroup='**',.T.,cGroup  = lcGroup) ;
		      INTO CURSOR temp ;
		      ORDER BY cWellid, cSource ;
		      GROUP BY cWellid, cSource
		   SELECT temp
		   SCAN FOR nPrdAmt <> 0
		      SCATTER MEMVAR
		      m.wellsrc = cWellid + cSource
		      SELECT temppl
		      SET ORDER TO wellsrc
		      IF SEEK(m.wellsrc)
		         REPLACE nPrdAmt WITH nPrdAmt + m.nPrdAmt
		      ELSE
		         APPEND BLANK
		         GATHER MEMVAR
		      ENDIF
		   ENDSCAN
		ENDIF
		
		*
		********************************************************************
		*  Fill in the amount of severance taxes paid this year.
		********************************************************************
		*
		IF lnReport = 1
		   *
		   *  Oil Taxes
		   *
		   SELECT wellhist.cWellid    AS cWellid, ;
		      'OTAX1'              AS cSource, ;
		      IIF(llDirect,SUM(wellhist.nTotbbltx1+wellhist.nTotbbltx2+wellhist.nTotbbltx3+wellhist.nTotbbltx4), ;
		                   SUM(swNetRevenue(wellhist.cWellID, wellhist.nTotbbltx1+wellhist.nTotbbltx2+wellhist.nTotbbltx3+wellhist.nTotbbltx4, 'O1',,.T.,,,,,,wellhist.cdeck))) * -1 AS nYearAmt, ;
		      000000000.00             AS nPrdAmt, ;
		      'A'                AS cSection ;
		      FROM wellhist ;
		      WHERE wellhist.cwellid in (SELECT cid FROM selected) ;
		      AND wellhist.hYear   = lcYear  ;
		      AND wellhist.hPeriod <= lcPeriod ;
		      AND IIF(lcGroup='**',.T.,cGroup  = lcGroup) ;
		      INTO CURSOR temp ;
		      ORDER BY cWellid, cSource ;
		      GROUP BY cWellid, cSource
		
		   SELECT temp
		   SCAN
		      SCATTER MEMVAR
		     
		      IF m.nYearAmt <> 0
		         INSERT INTO temppl FROM MEMVAR
		      ENDIF
		   ENDSCAN
		   SELECT temp
		   USE
		
		   *
		   *  Gas Taxes
		   *
		   SELECT wellhist.cWellid    AS cWellid, ;
		      'GTAX1'              AS cSource, ;
		      IIF(llDirect,SUM(wellhist.nTotmcftx1+wellhist.nTotmcftx2+wellhist.nTotmcftx3+wellhist.nTotmcftx4), ;
		                   SUM(swNetRevenue(wellhist.cwellid, wellhist.nTotmcftx1+wellhist.nTotmcftx2+wellhist.nTotmcftx3+wellhist.nTotmcftx4, 'G1',,.T.,,,,,,wellhist.cDeck))) * -1 AS nYearAmt, ;
		      000000000.00             AS nPrdAmt, ;
		      'A'                AS cSection ;
		      FROM wellhist ;
		      WHERE wellhist.cwellid in (SELECT cid FROM selected) ;
		      AND wellhist.hYear   = lcYear  ;
		      AND wellhist.hPeriod <= lcPeriod ;
		      AND IIF(lcGroup='**',.T.,cGroup  = lcGroup) ;
		      INTO CURSOR temp   ;
		      ORDER BY cWellid, cSource ;
		      GROUP BY cWellid, cSource
		   SELECT temp
		   SCAN
		      SCATTER MEMVAR
		      
		      IF m.nYearAmt <> 0
		         INSERT INTO temppl FROM MEMVAR
		      ENDIF
		   ENDSCAN
		   SELECT temp
		   USE
		   *
		   *  Other Product Taxes
		   *
		   SELECT wellhist.cWellid    AS cWellid, ;
		      'PTAX1'              AS cSource, ;
		      IIF(llDirect,SUM(wellhist.nTotothtx1+wellhist.nTotothtx2+wellhist.nTotothtx3+wellhist.nTotothtx4), ;
		          SUM(swNetRevenue(wellhist.cwellid, wellhist.nTotothtx1+wellhist.nTotothtx2+wellhist.nTotothtx3+wellhist.nTotothtx4, 'P1',,.T.,,,,,,wellhist.cDeck))) * -1 AS nYearAmt, ;
		      000000000.00             AS nPrdAmt, ;
		      'A'                AS cSection ;
		      FROM wellhist ;
		      WHERE wellhist.cwellid in (SELECT cid FROM selected) ;
		      AND wellhist.hYear   = lcYear  ;
		      AND wellhist.hPeriod <= lcPeriod ;
		      AND IIF(lcGroup='**',.T.,cGroup  = lcGroup) ;
		      INTO CURSOR temp   ;
		      ORDER BY cWellid, cSource ;
		      GROUP BY cWellid, cSource
		   SELECT temp
		   SCAN
		      SCATTER MEMVAR
		      IF m.nYearAmt <> 0
		         INSERT INTO temppl FROM MEMVAR
		      ENDIF
		   ENDSCAN
		   SELECT temp
		   USE
		ELSE
		   *
		   *  Oil Taxes
		   *
		   SELECT wellhist.cWellid    AS cWellid, ;
		      'OTAX1'              AS cSource, ;
		      IIF(llDirect,SUM(wellhist.nTotbbltx1+wellhist.nTotbbltx2+wellhist.nTotbbltx3+wellhist.nTotbbltx4), ;
		                   SUM(swNetRevenue(wellhist.cWellID, wellhist.nTotbbltx1+wellhist.nTotbbltx2+wellhist.nTotbbltx3+wellhist.nTotbbltx4, 'O1',,.T.,,,,,,wellhist.cdeck))) * -1 AS nYearAmt, ;
		      000000000.00             AS nPrdAmt, ;
		      'A'                AS cSection ;
		      FROM wellhist ;
		      WHERE wellhist.cwellid in (SELECT cid FROM selected) ;
		      AND wellhist.crunyear + PADL(TRANSFORM(wellhist.nrunno), 3, '0')+wellhist.crectype IN ;
					 (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0')+ctypeclose ;
						  FROM sysctl ;
						  WHERE YEAR(dAcctDate) = VAL(lcYear) ;
						  AND MONTH(dAcctDate) <= VAL(lcperiod)) ;
		      AND IIF(lcGroup='**',.T.,cGroup  = lcGroup) ;
		      INTO CURSOR temp ;
		      ORDER BY cWellid, cSource ;
		      GROUP BY cWellid, cSource
		
		   SELECT temp
		   SCAN
		      SCATTER MEMVAR
		     
		      IF m.nYearAmt <> 0
		         INSERT INTO temppl FROM MEMVAR
		      ENDIF
		   ENDSCAN
		   SELECT temp
		   USE
		
		   *
		   *  Gas Taxes
		   *
		   SELECT wellhist.cWellid    AS cWellid, ;
		      'GTAX1'              AS cSource, ;
		      IIF(llDirect,SUM(wellhist.nTotmcftx1+wellhist.nTotmcftx2+wellhist.nTotmcftx3+wellhist.nTotmcftx4), ;
		                   SUM(swNetRevenue(wellhist.cwellid, wellhist.nTotmcftx1+wellhist.nTotmcftx2+wellhist.nTotmcftx3+wellhist.nTotmcftx4, 'G1',,.T.,,,,,,wellhist.cDeck))) * -1 AS nYearAmt, ;
		      000000000.00             AS nPrdAmt, ;
		      'A'                AS cSection ;
		      FROM wellhist ;
		      WHERE wellhist.cwellid in (SELECT cid FROM selected) ;
		        AND wellhist.crunyear + PADL(TRANSFORM(wellhist.nrunno), 3, '0')+wellhist.crectype IN ;
					 (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0')+ctypeclose ;
						  FROM sysctl ;
						  WHERE YEAR(dAcctDate) = VAL(lcYear) ;
						  AND MONTH(dAcctDate) <= VAL(lcperiod)) ;
		        AND IIF(lcGroup='**',.T.,cGroup  = lcGroup) ;
		      INTO CURSOR temp   ;
		      ORDER BY cWellid, cSource ;
		      GROUP BY cWellid, cSource
		   SELECT temp
		   SCAN
		      SCATTER MEMVAR
		      IF llDirect
		         m.nYearAmt = swNetRevenue(m.cWellid,m.nYearAmt,'G',.T.)
		      ENDIF
		      IF m.nYearAmt <> 0
		         INSERT INTO temppl FROM MEMVAR
		      ENDIF
		   ENDSCAN
		   SELECT temp
		   USE
		   *
		   *  Other Product Taxes
		   *
		   SELECT wellhist.cWellid    AS cWellid, ;
		      'PTAX1'              AS cSource, ;
		      IIF(llDirect,SUM(wellhist.nTotothtx1+wellhist.nTotothtx2+wellhist.nTotothtx3+wellhist.nTotothtx4), ;
		          SUM(swNetRevenue(wellhist.cwellid, wellhist.nTotothtx1+wellhist.nTotothtx2+wellhist.nTotothtx3+wellhist.nTotothtx4, 'P1',,.T.,,,,,,wellhist.cDeck))) * -1 AS nYearAmt, ;
		      000000000.00             AS nPrdAmt, ;
		      'A'                AS cSection ;
		      FROM wellhist ;
		      WHERE wellhist.cwellid in (SELECT cid FROM selected) ;
		      AND wellhist.crunyear + PADL(TRANSFORM(wellhist.nrunno), 3, '0')+wellhist.crectype IN ;
					 (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0')+ctypeclose ;
						  FROM sysctl ;
						  WHERE YEAR(dAcctDate) = VAL(lcYear) ;
						  AND MONTH(dAcctDate) <= VAL(lcperiod)) ;
		      AND IIF(lcGroup='**',.T.,cGroup  = lcGroup) ;
		      INTO CURSOR temp   ;
		      ORDER BY cWellid, cSource ;
		      GROUP BY cWellid, cSource
		   SELECT temp
		   SCAN
		      SCATTER MEMVAR
		      IF m.nYearAmt <> 0
		         INSERT INTO temppl FROM MEMVAR
		      ENDIF
		   ENDSCAN
		   SELECT temp
		   USE
		ENDIF
		
		*
		********************************************************************
		*  Fill in the amount of severance taxes paid this period.
		********************************************************************
		*
		*
		*  Oil Taxes
		*
		IF lnReport = 1
		   SELECT wellhist.cWellid    AS cWellid, ;
		      'OTAX1'              AS cSource, ;
		      IIF(llDirect,SUM(wellhist.nTotbbltx1+wellhist.nTotbbltx2+wellhist.nTotbbltx3+wellhist.nTotbbltx4), ;
		                   SUM(swNetRevenue(wellhist.cWellID, wellhist.nTotbbltx1+wellhist.nTotbbltx2+wellhist.nTotbbltx3+wellhist.nTotbbltx4, 'O1',,.T.,,,,,,wellhist.cdeck))) * -1 AS nPrdAmt, ;
		      'A'                AS cSection ;
		      FROM wellhist ;
		      WHERE wellhist.cwellid in (SELECT cid FROM selected) ;
		      AND wellhist.hYear   = lcYear  ;
		      AND wellhist.hPeriod = lcPeriod ;
		      AND IIF(lcGroup='**',.T.,cGroup  = lcGroup) ;
		      INTO CURSOR temp ;
		      ORDER BY cWellid, cSource ;
		      GROUP BY cWellid, cSource
		   SELECT temp
		   SCAN FOR nPrdAmt <> 0
		      SCATTER MEMVAR
		     
		      SELECT temppl
		      LOCATE FOR cSource == m.cSource AND cWellid == m.cWellid
		      IF FOUND()
		         REPLACE nPrdAmt WITH nPrdAmt + m.nPrdAmt
		      ELSE
		         APPEND BLANK
		         GATHER MEMVAR
		      ENDIF
		   ENDSCAN
		   *
		   *  Gas Taxes
		   *
		   SELECT wellhist.cWellid        AS cWellid, ;
		      'GTAX1'              AS cSource, ;
		      IIF(llDirect,SUM(wellhist.nTotmcftx1+wellhist.nTotmcftx2+wellhist.nTotmcftx3+wellhist.nTotmcftx4), ;
		                   SUM(swNetRevenue(wellhist.cwellid, wellhist.nTotmcftx1+wellhist.nTotmcftx2+wellhist.nTotmcftx3+wellhist.nTotmcftx4, 'G1',,.T.,,,,,,wellhist.cDeck))) * -1 AS nPrdAmt, ;
		      'A'                    AS cSection ;
		      FROM wellhist ;
		      WHERE wellhist.cwellid in (SELECT cid FROM selected) ;
		      AND wellhist.hYear   = lcYear  ;
		      AND wellhist.hPeriod = lcPeriod ;
		      AND IIF(lcGroup='**',.T.,cGroup  = lcGroup) ;
		      INTO CURSOR temp ;
		      ORDER BY cWellid, cSource ;
		      GROUP BY cWellid, cSource
		   SELECT temp
		   SCAN FOR nPrdAmt <> 0
		      SCATTER MEMVAR
		      m.wellsrc = cWellid + cSource
		     
		      SELECT temppl
		      SET ORDER TO wellsrc
		      IF SEEK(m.wellsrc)
		         REPLACE nPrdAmt WITH nPrdAmt + m.nPrdAmt
		      ELSE
		         APPEND BLANK
		         GATHER MEMVAR
		      ENDIF
		   ENDSCAN
		   *
		   *  Other Product Taxes
		   *
		   SELECT wellhist.cWellid        AS cWellid, ;
		      'PTAX1'              AS cSource, ;
		      IIF(llDirect,SUM(wellhist.nTotothtx1+wellhist.nTotothtx2+wellhist.nTotothtx3+wellhist.nTotothtx4), ;
		          SUM(swNetRevenue(wellhist.cwellid, wellhist.nTotothtx1+wellhist.nTotothtx2+wellhist.nTotothtx3+wellhist.nTotothtx4, 'P1',,.T.,,,,,,wellhist.cDeck))) * -1 AS nPrdAmt, ;
		      'A'                    AS cSection ;
		      FROM wellhist ;
		      WHERE wellhist.cwellid in (SELECT cid FROM selected) ;
		      AND wellhist.hYear   = lcYear  ;
		      AND wellhist.hPeriod = lcPeriod ;
		      AND IIF(lcGroup='**',.T.,cGroup  = lcGroup) ;
		      INTO CURSOR temp ;
		      ORDER BY cWellid, cSource ;
		      GROUP BY cWellid, cSource
		   SELECT temp
		   SCAN FOR nPrdAmt <> 0
		      SCATTER MEMVAR
		      m.wellsrc = cWellid + cSource
		      
		      SELECT temppl
		      SET ORDER TO wellsrc
		      IF SEEK(m.wellsrc)
		         REPLACE nPrdAmt WITH nPrdAmt + m.nPrdAmt
		      ELSE
		         APPEND BLANK
		         GATHER MEMVAR
		      ENDIF
		   ENDSCAN
		ELSE
		   SELECT wellhist.cWellid    AS cWellid, ;
		      'OTAX1'              AS cSource, ;
		      IIF(llDirect,SUM(wellhist.nTotbbltx1+wellhist.nTotbbltx2+wellhist.nTotbbltx3+wellhist.nTotbbltx4), ;
		                   SUM(swNetRevenue(wellhist.cWellID, wellhist.nTotbbltx1+wellhist.nTotbbltx2+wellhist.nTotbbltx3+wellhist.nTotbbltx4, 'O1',,.T.,,,,,,wellhist.cdeck))) * -1 AS nPrdAmt, ;
		      'A'                AS cSection ;
		      FROM wellhist ;
		      WHERE wellhist.cwellid in (SELECT cid FROM selected) ;
		      AND wellhist.crunyear + PADL(TRANSFORM(wellhist.nrunno), 3, '0')+wellhist.crectype IN ;
					 (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0')+ctypeclose ;
						  FROM sysctl ;
						  WHERE YEAR(dAcctDate) = VAL(lcYear)) ;
		      AND wellhist.crunyear + PADL(TRANSFORM(wellhist.nrunno), 3, '0')+wellhist.crectype IN ;
					 (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0')+ctypeclose ;
						  FROM sysctl ;
						  WHERE MONTH(dAcctDate) = VAL(lcPeriod)) ;				
		      AND IIF(lcGroup='**',.T.,cGroup  = lcGroup) ;
		      INTO CURSOR temp ;
		      ORDER BY cWellid, cSource ;
		      GROUP BY cWellid, cSource
		   SELECT temp
		   SCAN FOR nPrdAmt <> 0
		      SCATTER MEMVAR
		      SELECT temppl
		      LOCATE FOR cSource = m.cSource AND cWellid = m.cWellid
		      IF FOUND()
		         REPLACE nPrdAmt WITH nPrdAmt + m.nPrdAmt
		      ELSE
		         APPEND BLANK
		         GATHER MEMVAR
		      ENDIF
		   ENDSCAN
		   *
		   *  Gas Taxes
		   *
		   SELECT wellhist.cWellid        AS cWellid, ;
		      'GTAX1'              AS cSource, ;
		      IIF(llDirect,SUM(wellhist.nTotmcftx1+wellhist.nTotmcftx2+wellhist.nTotmcftx3+wellhist.nTotmcftx4), ;
		                   SUM(swNetRevenue(wellhist.cwellid, wellhist.nTotmcftx1+wellhist.nTotmcftx2+wellhist.nTotmcftx3+wellhist.nTotmcftx4, 'G1',,.T.,,,,,,wellhist.cDeck))) * -1 AS nPrdAmt, ;
		      'A'                    AS cSection ;
		      FROM wellhist ;
		      WHERE wellhist.cwellid in (SELECT cid FROM selected) ;
		      AND wellhist.crunyear + PADL(TRANSFORM(wellhist.nrunno), 3, '0')+wellhist.crectype IN ;
					 (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0')+ctypeclose ;
						  FROM sysctl ;
						  WHERE YEAR(dAcctDate) = VAL(lcYear)) ;
		      AND wellhist.crunyear + PADL(TRANSFORM(wellhist.nrunno), 3, '0')+wellhist.crectype IN ;
					 (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0')+ctypeclose ;
						  FROM sysctl ;
						  WHERE MONTH(dAcctDate) = VAL(lcPeriod)) ;				
		      AND IIF(lcGroup='**',.T.,cGroup  = lcGroup) ;
		      INTO CURSOR temp ;
		      ORDER BY cWellid, cSource ;
		      GROUP BY cWellid, cSource
		   SELECT temp
		   SCAN FOR nPrdAmt <> 0
		      SCATTER MEMVAR
		      m.wellsrc = cWellid + cSource
		      SELECT temppl
		      SET ORDER TO wellsrc
		      IF SEEK(m.wellsrc)
		         REPLACE nPrdAmt WITH nPrdAmt + m.nPrdAmt
		      ELSE
		         APPEND BLANK
		         GATHER MEMVAR
		      ENDIF
		   ENDSCAN
		   *
		   *  Other Product Taxes
		   *
		   SELECT wellhist.cWellid        AS cWellid, ;
		      'PTAX1'              AS cSource, ;
		      IIF(llDirect,SUM(wellhist.nTotothtx1+wellhist.nTotothtx2+wellhist.nTotothtx3+wellhist.nTotothtx4), ;
		          SUM(swNetRevenue(wellhist.cwellid, wellhist.nTotothtx1+wellhist.nTotothtx2+wellhist.nTotothtx3+wellhist.nTotothtx4, 'P1',,.T.,,,,,,wellhist.cDeck))) * -1 AS nPrdAmt, ;
		      'A'                    AS cSection ;
		      FROM wellhist ;
		      WHERE wellhist.cwellid in (SELECT cid FROM selected) ;
		      AND wellhist.crunyear + PADL(TRANSFORM(wellhist.nrunno), 3, '0')+wellhist.crectype IN ;
					 (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0')+ctypeclose ;
						  FROM sysctl ;
						  WHERE YEAR(dAcctDate) = VAL(lcYear)) ;
		      AND wellhist.crunyear + PADL(TRANSFORM(wellhist.nrunno), 3, '0')+wellhist.crectype IN ;
					 (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0')+ctypeclose ;
						  FROM sysctl ;
						  WHERE MONTH(dAcctDate) = VAL(lcPeriod)) ;				
		      AND IIF(lcGroup='**',.T.,cGroup  = lcGroup) ;
		      INTO CURSOR temp ;
		      ORDER BY cWellid, cSource ;
		      GROUP BY cWellid, cSource
		   SELECT temp
		   SCAN FOR nPrdAmt <> 0
		      SCATTER MEMVAR
		      m.wellsrc = cWellid + cSource
		      IF llDirect
		         m.nPrdAmt = swNetRevenue(m.cWellid,m.nPrdAmt,'G',.T.)
		      ENDIF
		      SELECT temppl
		      SET ORDER TO wellsrc
		      IF SEEK(m.wellsrc)
		         REPLACE nPrdAmt WITH nPrdAmt + m.nPrdAmt
		      ELSE
		         APPEND BLANK
		         GATHER MEMVAR
		      ENDIF
		   ENDSCAN
		ENDIF
		
		*
		********************************************************************
		*  Fill in the expenses paid this Year.
		********************************************************************
		*
		IF lnReport = 1
		   SELECT expense.cWellid    AS cWellid, ;
		      wells.cWellname    AS cWellname, ;
		      'B'               AS cSection, ;
		      expense.cCateg     AS cCategory, ;
		      expense.cYear      AS cYear, ;
		      000000000.00      AS nPrdAmt, ;
		      IIF(llDirect,SUM(nAmount), SUM(swNetExp(expense.nAmount, expense.cWellID, .T., expense.cexpclass, 'B',, expense.cownerid, expense.ccatcode, expense.cdeck))) AS nYearAmt ;
		      FROM expense, wells ;
		      WHERE expense.cwellid in (SELECT cid FROM selected) ;
		      AND expense.cWellid = wells.cWellid  ;
		      AND ((expense.cYear = lcYear AND expense.cPeriod <= lcPeriod)) ;
		      AND expense.ccatcode <> 'MKTG' AND (nRunnoRev <> 0 or nRunnoJIB <> 0)  ;
		      AND IIF(lcGroup='**',.T.,wells.cGroup  = lcGroup) ;
		      ORDER BY expense.cWellid, expense.cCateg ;
		      GROUP BY expense.cWellid, expense.cCateg ;
		      INTO CURSOR temp
		   INDEX on ccategory TAG ccategory   
		ELSE
		   SELECT expense.cWellid    AS cWellid, ;
		      wells.cWellname    AS cWellname, ;
		      'B'               AS cSection, ;
		      expense.cCateg     AS cCategory, ;
		      expense.cYear      AS cYear, ;
		      000000000.00      AS nPrdAmt, ;
		      IIF(llDirect,SUM(nAmount), SUM(swNetExp(expense.nAmount, expense.cWellID, .T., expense.cexpclass, 'B',, expense.cownerid, expense.ccatcode, expense.cdeck))) AS nYearAmt ;
		      FROM expense, wells ;
		      WHERE expense.cwellid in (SELECT cid FROM selected) ;
		      AND expense.cWellid = wells.cWellid  ;
		      AND ((expense.crunyearrev+PADL(TRANSFORM(expense.nrunnorev),3,'0') in ;
		            (SELECT crunyear+PADL(TRANSFORM(nrunno),3,'0')  ;
		               FROM sysctl ;
		               WHERE YEAR(dacctdate) = VAL(lcYear) AND ctypeclose='R') ;
		               AND MONTH(dAcctDate) <= VAL(lcperiod)) ;
		           OR ;
		           (expense.crunyearjib+PADL(TRANSFORM(expense.nrunnojib),3,'0') in ;
		            (SELECT crunyear+PADL(TRANSFORM(nrunno),3,'0') ;
		               FROM sysctl ;
		               WHERE YEAR(dacctdate) = VAL(lcYear) AND ctypeclose='J') ;
		               AND MONTH(dAcctDate) <= VAL(lcperiod))) ;
		      AND expense.ccatcode <> 'MKTG' AND (nRunnoRev <> 0 OR nRunnoJIB <> 0)  ;
		      AND IIF(lcGroup='**',.T.,wells.cGroup  = lcGroup) ;
		      ORDER BY expense.cWellid, expense.cCatcode ;
		      GROUP BY expense.cWellid, expense.cCatcode ;
		      INTO CURSOR temp
		   INDEX on ccategory TAG ccategory   
		ENDIF
		
		SELECT temppl
		APPEND FROM DBF('temp')
		SELECT temp
		USE
		
		*
		********************************************************************
		*  Fill in the expenses paid this period.
		********************************************************************
		*
		IF lnReport = 1
		   SELECT expense.cWellid    AS cWellid, ;
		      wells.cWellname    AS cWellname, ;
		      'B'               AS cSection, ;
		      expense.cCateg     AS cCategory, ;
		      IIF(llDirect,SUM(nAmount), SUM(swNetExp(expense.nAmount, expense.cWellID, .T., expense.cexpclass, 'B',, expense.cownerid, expense.ccatcode, expense.cdeck))) AS nPrdAmt ;
		      FROM expense, wells ;
		      WHERE expense.cwellid in (SELECT cid FROM selected) ;
		      AND expense.cWellid = wells.cWellid  ;
		      AND ((expense.cYear = lcYear AND expense.cPeriod = lcPeriod)) ;
		      AND expense.ccatcode <> 'MKTG' AND (nRunnoRev <> 0 OR nRunnoJIB <> 0)  ;
		      AND IIF(lcGroup='**',.T.,wells.cGroup  = lcGroup) ;
		      ORDER BY expense.cWellid, expense.cCateg ;
		      GROUP BY expense.cWellid, expense.cCateg ;
		      INTO CURSOR temp
		   INDEX on ccategory TAG ccategory
		   SELECT temp
		   SCAN
		      SCATTER MEMVAR
		      m.wellcat = cWellid + cCategory
		      SELECT temppl
		      SET ORDER TO wellcat
		      IF SEEK (m.wellcat)
		         REPLACE nPrdAmt WITH nPrdAmt + m.nPrdAmt
		      ELSE
		         APPEND BLANK
		         GATHER MEMVAR
		      ENDIF
		   ENDSCAN
		ELSE
		   SELECT expense.cWellid    AS cWellid, ;
		      wells.cWellname    AS cWellname, ;
		      'B'               AS cSection, ;
		      expense.cCateg     AS cCategory, ;
		      IIF(llDirect,SUM(nAmount), SUM(swNetExp(expense.nAmount, expense.cWellID, .T., expense.cexpclass, 'B',, expense.cownerid, expense.ccatcode, expense.cdeck))) AS nPrdAmt ;
		      FROM expense, wells ;
		      WHERE expense.cwellid in (SELECT cid FROM selected) ;
		      AND expense.cWellid = wells.cWellid  ;
		      AND ((expense.crunyearrev+PADL(TRANSFORM(expense.nrunnorev),3,'0') in ;
		            (SELECT crunyear+PADL(TRANSFORM(nrunno),3,'0') ;
		               FROM sysctl ;
		               WHERE YEAR(dacctdate) = VAL(lcYear) AND MONTH(dacctdate) = VAL(lcperiod) AND ctypeclose='R')) ;
		           OR ;
		           (expense.crunyearjib+PADL(TRANSFORM(expense.nrunnojib),3,'0') in ;
		            (SELECT crunyear+PADL(TRANSFORM(nrunno),3,'0') ;
		               FROM sysctl ;
		               WHERE YEAR(dacctdate) = VAL(lcYear) AND MONTH(dacctdate) = VAL(lcperiod) AND ctypeclose='J'))) ;
		      AND expense.ccatcode <> 'MKTG' AND (nRunnoRev <> 0 OR nRunnoJIB <> 0)  ;
		      AND IIF(lcGroup='**',.T.,wells.cGroup  = lcGroup) ;
		      ORDER BY expense.cWellid, expense.cCatcode ;
		      GROUP BY expense.cWellid, expense.cCatcode ;
		      INTO CURSOR temp
		   INDEX on ccategory TAG ccategory
		   SELECT temp
		   SCAN
		      SCATTER MEMVAR
		      m.wellcat = cWellid + cCategory
		      SELECT temppl
		      SET ORDER TO wellcat
		      IF SEEK (m.wellcat)
		         REPLACE nPrdAmt WITH nPrdAmt + m.nPrdAmt
		      ELSE
		         APPEND BLANK
		         GATHER MEMVAR
		      ENDIF
		   ENDSCAN
		ENDIF
		
		SELECT temp
		USE
		
		*
		********************************************************************
		*  Fill in amounts paid to Landowner interests 
		********************************************************************
		
		thisform.royalty('L')
		
		********************************************************************
		*  Fill in amounts paid to override interests for the current year.
		********************************************************************
		
		thisform.royalty('O')
		
		********************************************************************
		*  Fill in amounts paid to working interests for the current year.
		********************************************************************
		*
		
		IF lnReport = 1
		   SELECT wellhist.cWellid      AS cWellid, ;
		      cWellname,  ;
		      SUM(wellhist.nwrkint) AS nWrkYear, ;
		      'C'                  AS cSection ;
		      FROM wellhist, wells ;
		      WHERE wellhist.cwellid in (SELECT cid FROM selected) ;
		      AND wellhist.cWellid = wells.cWellid  ;
		      AND wellhist.hYear   = lcYear  ;
		      AND wellhist.hPeriod <= lcPeriod ;
		      AND IIF(lcGroup='**',.T.,wells.cGroup  = lcGroup) ;
		      INTO CURSOR temp ;
		      ORDER BY wellhist.cWellid ;
		      GROUP BY wellhist.cWellid
		   SELECT temp
		   SCAN
		      SCATTER MEMVAR
		      SELECT temppl
		      SET ORDER TO wellid
		      IF SEEK(m.cWellid+m.cSection)
		         REPLACE nWrkYear WITH m.nWrkYear
		      ELSE
		         APPEND BLANK
		         GATHER MEMVAR
		      ENDIF
		   ENDSCAN
		ELSE
		   SELECT wellhist.cWellid      AS cWellid, ;
		      cWellname,  ;
		      SUM(wellhist.nwrkint) AS nWrkYear, ;
		      'C'                  AS cSection ;
		      FROM wellhist, wells ;
		      WHERE wellhist.cwellid in (SELECT cid FROM selected) ;
		      AND wellhist.cWellid = wells.cWellid  ;
		      AND wellhist.crunyear + PADL(TRANSFORM(wellhist.nrunno), 3, '0')+wellhist.crectype IN ;
					 (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0')+ctypeclose ;
						  FROM sysctl ;
						  WHERE YEAR(dAcctDate) = VAL(lcYear) ;
						  AND MONTH(dAcctDate) <= VAL(lcperiod)) ;
		      AND IIF(lcGroup='**',.T.,wells.cGroup  = lcGroup) ;
		      INTO CURSOR temp ;
		      ORDER BY wellhist.cWellid ;
		      GROUP BY wellhist.cWellid
		   SELECT temp
		   SCAN
		      SCATTER MEMVAR
		      SELECT temppl
		      SET ORDER TO wellid
		      IF SEEK(m.cWellid+m.cSection)
		         REPLACE nWrkYear WITH m.nWrkYear
		      ELSE
		         APPEND BLANK
		         GATHER MEMVAR
		      ENDIF
		   ENDSCAN
		ENDIF
		
		*
		********************************************************************
		*  Fill in amounts paid to workint interests for the period.
		********************************************************************
		*
		IF lnReport = 1
		   SELECT wellhist.cWellid   AS cWellid, ;
		      SUM(wellhist.nwrkint) AS nWrkPrd, ;
		      'C'               AS cSection ;
		      FROM wellhist ;
		      WHERE wellhist.cwellid in (SELECT cid FROM selected) ;
		      AND wellhist.hYear   = lcYear  ;
		      AND wellhist.hPeriod = lcPeriod ;
		      AND IIF(lcGroup='**',.T.,cGroup  = lcGroup) ;
		      INTO CURSOR temp ;
		      ORDER BY cWellid ;
		      GROUP BY cWellid
		   SELECT temp
		   SCAN
		      SCATTER MEMVAR
		      SELECT temppl
		      SET ORDER TO wellid
		      IF SEEK(m.cWellid+m.cSection)
		         REPLACE nWrkPrd WITH m.nWrkPrd
		      ELSE
		         APPEND BLANK
		         GATHER MEMVAR
		      ENDIF
		   ENDSCAN
		ELSE
		   SELECT wellhist.cWellid   AS cWellid, ;
		      SUM(wellhist.nwrkint) AS nWrkPrd, ;
		      'C'               AS cSection ;
		      FROM wellhist ;
		      WHERE wellhist.cwellid in (SELECT cid FROM selected) ;
		      AND wellhist.crunyear + PADL(TRANSFORM(wellhist.nrunno), 3, '0')+wellhist.crectype IN ;
					 (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0')+ctypeclose ;
						  FROM sysctl ;
						  WHERE YEAR(dAcctDate) = VAL(lcYear)) ;
		      AND wellhist.crunyear + PADL(TRANSFORM(wellhist.nrunno), 3, '0')+wellhist.crectype IN ;
					 (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0')+ctypeclose ;
						  FROM sysctl ;
						  WHERE MONTH(dAcctDate) = VAL(lcPeriod)) ;				
		      AND IIF(lcGroup='**',.T.,cGroup  = lcGroup) ;
		      INTO CURSOR temp ;
		      ORDER BY cWellid ;
		      GROUP BY cWellid
		   SELECT temp
		   SCAN
		      SCATTER MEMVAR
		      SELECT temppl
		      SET ORDER TO wellid
		      IF SEEK(m.cWellid+m.cSection)
		         REPLACE nWrkPrd WITH m.nWrkPrd
		      ELSE
		         APPEND BLANK
		         GATHER MEMVAR
		      ENDIF
		   ENDSCAN
		ENDIF
		
		*
		********************************************************************
		*  Set up the title of the report.
		********************************************************************
		*
		IF llCalendarFY OR (NOT llCalendarFY AND lnReport = 1)
		   DO CASE
		      CASE lcPeriod = '01'
		         lcTitle2 = 'For the One Month Ending January 31, ' + lcYear
		      CASE lcPeriod = '02'
		         lcTitle2 = 'For the Two Months Ending February 28, ' + lcYear
		      CASE lcPeriod = '03'
		         lcTitle2 = 'For the Three Months Ending March 31, ' + lcYear
		      CASE lcPeriod = '04'
		         lcTitle2 = 'For the Four Months Ending April 30, ' + lcYear
		      CASE lcPeriod = '05'
		         lcTitle2 = 'For the Five Months Ending May 31, ' + lcYear
		      CASE lcPeriod = '06'
		         lcTitle2 = 'For the Six Months Ending  June 30, ' + lcYear
		      CASE lcPeriod = '07'
		         lcTitle2 = 'For the Seven Months Ending July 31, ' + lcYear
		      CASE lcPeriod = '08'
		         lcTitle2 = 'For the Eight Months Ending August 31, ' + lcYear
		      CASE lcPeriod = '09'
		         lcTitle2 = 'For the Nine Months Ending September 30 , ' + lcYear
		      CASE lcPeriod = '10'
		         lcTitle2 = 'For the Ten Months Ending October 31, ' + lcYear
		      CASE lcPeriod = '11'
		         lcTitle2 = 'For the Eleven Months Ending November 30, ' + lcYear
		      CASE lcPeriod = '12'
		         lcTitle2 = 'For the Twelve Months Ending December 31, ' + lcYear
		   ENDCASE
		ELSE
		   DO CASE
		      CASE lcPeriodA = '01'
		         lcTitle2 = 'For the One Month Ending January 31, ' + lcYear
		      CASE lcPeriodA = '02'
		         lcTitle2 = 'For the Two Months Ending February 28, ' + lcYear
		      CASE lcPeriodA = '03'
		         lcTitle2 = 'For the Three Months Ending March 31, ' + lcYear
		      CASE lcPeriodA = '04'
		         lcTitle2 = 'For the Four Months Ending April 30, ' + lcYear
		      CASE lcPeriodA = '05'
		         lcTitle2 = 'For the Five Months Ending May 31, ' + lcYear
		      CASE lcPeriodA = '06'
		         lcTitle2 = 'For the Six Months Ending  June 30, ' + lcYear
		      CASE lcPeriodA = '07'
		         lcTitle2 = 'For the Seven Months Ending July 31, ' + lcYear
		      CASE lcPeriodA = '08'
		         lcTitle2 = 'For the Eight Months Ending August 31, ' + lcYear
		      CASE lcPeriodA = '09'
		         lcTitle2 = 'For the Nine Months Ending September 30 , ' + lcYear
		      CASE lcPeriodA = '10'
		         lcTitle2 = 'For the Ten Months Ending October 31, ' + lcYear
		      CASE lcPeriodA = '11'
		         lcTitle2 = 'For the Eleven Months Ending November 30, ' + lcYear
		      CASE lcPeriodA = '12'
		         lcTitle2 = 'For the Twelve Months Ending December 31, ' + lcYear
		   ENDCASE
		ENDIF
		
		THISFORM.cTitle1 = 'Well Profit and Loss'
		THISFORM.cTitle2 = lcTitle2
		THISFORM.cReportName = 'dmrwpl1'
		THISFORM.cSortOrder = ''
		IF llDirect
		   THISFORM.cSelectCriteria = 'Wells: ' + ALLTRIM(lcWellid1) + ' - ' + ALLTRIM(lcWellid2) + ' '+ALLT(lcReportBy) + ' ' + 'Including Direct Paid Revenue'
		ELSE
		   THISFORM.cSelectCriteria = 'Wells: ' + ALLTRIM(lcWellid1) + ' - ' + ALLTRIM(lcWellid2) + ' '+ALLT(lcReportBy) + ' ' + 'NOT Including Direct Paid Revenue'
		ENDIF
		SELECT temppl
		SCAN FOR cSection = 'A'
		   IF nYearAmt = 0 AND nPrdAmt = 0
		      DELETE NEXT 1
		      LOOP
		   ENDIF
		   DO CASE
		      CASE cSource = 'MCF'
		         REPLACE cIncType WITH 'Gas Income', ;
		                 cSource WITH 'GAS'
		      CASE cSource = 'BBL'
		         REPLACE cIncType WITH 'Oil Income', ;
		                 csource  WITH 'OIL'
		      CASE cSource = 'MKTG'
		         REPLACE cIncType WITH 'Marketing Expenses'
		      CASE cSource = 'TRANS'
		         REPLACE cIncType WITH 'Transportation Income'
		      CASE cSource = 'MISC'
		         REPLACE cIncType WITH 'Miscellaneous Income'
		      CASE cSource = 'OTH'
		         REPLACE cIncType WITH 'Other Income', ;
		                 csource WITH 'PROD'
		      CASE LEFT(cSource,4) = 'OTAX'
		         REPLACE cIncType WITH 'Oil Taxes'
		      CASE LEFT(cSource,4) = 'GTAX'
		         REPLACE cIncType WITH 'Gas Taxes'
		      CASE LEFT(cSource,4) = 'PTAX'
		         REPLACE cIncType WITH 'Other Product Taxes'   
		      CASE cSource = 'TRC'
		         REPLACE cIncType WITH 'Compression Charges'
		      CASE cSource = 'TRG'
		         REPLACE cIncType WITH 'Gathering Charges'
		      CASE cSource = 'XXX'
		         REPLACE cIncType WITH 'Royalty Interests Paid'
		      CASE cSource = 'YYY'
		         REPLACE cIncType WITH 'Override Interests Paid'
		   ENDCASE
		ENDSCAN
		
		WAIT CLEAR
		
		SELECT wells
		SET ORDER TO cWellid
		
		IF llActive
		   SELECT temppl
		   SET ORDER TO wellid
		   SCAN
		      m.cWellid = cWellid
		      SELECT wells
		      IF SEEK(m.cWellid)
		         IF NOT INLIST(cwellstat,'A','V')
		            SELECT temppl
		            DELETE NEXT 1
		         ENDIF
		      ENDIF
		   ENDSCAN
		ENDIF
		
		* Make sure the correct wellname is on the records
		SELECT temppl
		SCAN
		   m.cwellid = cwellid
		   SELECT wells   
		   IF SEEK(m.cwellid)
		      SELECT temppl
		      REPLACE cwellname WITH wells.cwellname
		   ENDIF
		ENDSCAN
		
		SELECT temppl 
		COUNT FOR NOT DELETED() TO lnCount
		GO TOP
		SET ORDER to primekey
		
		IF lnCount > 0
		   RETURN .T.
		ELSE
		   RETURN .F.
		ENDIF
		
	ENDPROC

	PROCEDURE Init
		IF DODEFAULT()
		   SELECT wells
		   SET ORDER TO cwellid
		   GO TOP
		
		   THISFORM.swrptlook1.txtBegName.VALUE = cwellname
		   THISFORM.swrptlook1.txtBegID.VALUE = cwellid
		   GO BOTTOM
		
		   THISFORM.swrptlook1.txtEndName.VALUE = cwellname
		   THISFORM.swrptlook1.txtEndID.VALUE = cwellid
		   
		   THISFORM.chklActive.value = .F.
		   THISFORM.opgReportBy.value = 1
		
		ENDIF
		
	ENDPROC

	PROCEDURE royalty
		LPARAMETERS tcType
		
		LOCAL lcGroup, lcPeriod, lcPeriodA, lcWellid1, lcWellid2, lcYear, llActive, llDirect, lnReport, lcRptGroup
		
		*:Global nnetcheck
		lcWellid1 = THISFORM.cwellid1
		lcWellid2 = THISFORM.cwellid2
		lcPeriod  = THISFORM.cperiod
		lcPeriodA = lcPeriod
		lcYear    = THISFORM.cyear
		lcGroup   = THISFORM.cgroup
		llActive  = THISFORM.lActive
		llDirect  = THISFORM.lDirect
		lnReport  = THISFORM.nreport
		
		IF tcType = 'L'
		   lcRptGroup = 'XXX'
		ELSE
		   lcRptGroup = 'YYY'
		ENDIF
		
		* Get Landowner royalties paid this year to date
		IF lnReport = 1
		   IF llDirect
		      SELE * FROM disbhist ;
		         INTO CURSOR tempown READWRITE  ;
		         WHERE disbhist.cwellid in (SELECT cid FROM selected) ;
		         AND disbhist.hYear = lcYear ;
		         AND disbhist.hPeriod <= lcPeriod ;
		         AND disbhist.ctypeinv = tcType ;
		         AND cRecType <> 'P'  ;
		         AND IIF(lcGroup = '**', .T., cgroup  = lcGroup)
		      SELE * FROM suspense ;
		         INTO CURSOR tempowns  ;
		         WHERE suspense.cwellid in (SELECT cid FROM selected) ;
		         AND suspense.hYear = lcYear ;
		         AND suspense.hPeriod <= lcPeriod ;
		         AND suspense.ctypeinv = tcType ;
		         AND cRecType <> 'P'  ;
		         AND IIF(lcGroup = '**', .T., cgroup  = lcGroup)
		
		      SELECT tempown
		      APPEND FROM DBF('tempowns')
		      SELE tempown
		      SCAN
		         SCATTER MEMVAR
		         DO CASE
		            CASE m.cdirect = 'O'
		               m.nnetcheck = m.nnetcheck + m.noilrev - m.noiltax1 - m.noiltax2 - m.noiltax3 - m.noiltax4
		               REPL nnetcheck WITH m.nnetcheck
		            CASE m.cdirect = 'G'
		               m.nnetcheck = m.nnetcheck + m.ngasrev - m.ngastax1 - m.ngastax2 - m.ngastax3 - m.ngastax4
		               REPL nnetcheck WITH m.nnetcheck
		            CASE m.cdirect = 'B'
		               m.nnetcheck = m.nnetcheck + m.ngasrev - m.ngastax1 - m.ngastax2 - m.ngastax3 - m.ngastax4 + ;
		                             m.noilrev - m.noiltax1 - m.noiltax2 - m.noiltax3 - m.noiltax4
		               REPL nnetcheck WITH m.nnetcheck
		         ENDCASE
		      ENDSCAN
		
			  SELECT  tempown.cWellid      AS cWellid, ;
					  SUM(nnetcheck) * -1      AS nYearAmt, ;
					  lcRptGroup                    AS cSource, ;
					  'A'                      AS cSection ;
				  FROM tempown ;
				  INTO CURSOR temp ;
				  ORDER BY cWellid ;
				  GROUP BY cWellid
		   ELSE
			  SELECT  disbhist.cWellid      AS cWellid, ;
					  SUM(IIF(ctypeinv = tcType, nnetcheck, 000000.00)) * -1 AS nYearAmt, ;
					  lcRptGroup                    AS cSource, ;
					  'A'                      AS cSection ;
				  FROM disbhist ;
				  WHERE disbhist.cwellid in (SELECT cid FROM selected) ;
					  AND disbhist.hYear = lcYear ;
					  AND disbhist.hPeriod <= lcPeriod ;
					  AND disbhist.ctypeinv = tcType ;
					  AND cRecType <> 'P'  ;
					  AND IIF(lcGroup = '**', .T., cgroup  = lcGroup) ;
				  INTO CURSOR temp READWRITE  ;
				  ORDER BY cWellid ;
				  GROUP BY cWellid
			  SELECT  suspense.cWellid      AS cWellid, ;
					  SUM(IIF(ctypeinv = tcType, nnetcheck, 000000.00)) * -1 AS nYearAmt, ;
					  lcRptGroup                    AS cSource, ;
					  'A'                      AS cSection ;
				  FROM suspense ;
				  WHERE suspense.cwellid in (SELECT cid FROM selected) ;
					  AND suspense.hYear = lcYear ;
					  AND suspense.hPeriod <= lcPeriod ;
					  AND suspense.ctypeinv = tcType ;
					  AND cRecType <> 'P'  ;
					  AND IIF(lcGroup = '**', .T., cgroup  = lcGroup) ;
				  INTO CURSOR tempowns ;
				  ORDER BY cWellid ;
				  GROUP BY cWellid
		      SELECT temp
		      APPEND FROM DBF('tempowns')
		   ENDIF
		ELSE
		   IF llDirect
		      SELE * FROM disbhist ;
		         INTO CURSOR tempown READWRITE  ;
		         WHERE disbhist.cwellid in (SELECT cid FROM selected) ;
		         and EMPTY(disbhist.csusptype) ;
		         AND disbhist.crunyear + PADL(TRANSFORM(disbhist.nrunno), 3, '0') + disbhist.cRecType IN ;
		           (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + ctypeclose ;
		             FROM sysctl ;
		             WHERE YEAR(dAcctDate) = VAL(lcYear) ;
		               AND MONTH(dAcctDate) <= VAL(lcPeriod)) ;
		         AND IIF(lcGroup = '**', .T., cgroup  = lcGroup) ;
		         AND cRecType <> 'P'  ;
		         AND disbhist.ctypeinv = tcType
		
		      SELE * FROM disbhist ;
		         INTO CURSOR tempown1 ;
		         WHERE disbhist.cwellid in (SELECT cid FROM selected) ;
		         and NOT EMPTY(disbhist.csusptype) ;
		         AND disbhist.crunyear_in + PADL(TRANSFORM(disbhist.nrunno_in), 3, '0') + disbhist.cRecType IN ;
		           (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + ctypeclose ;
		             FROM sysctl ;
		             WHERE YEAR(dAcctDate) = VAL(lcYear) ;
		             AND MONTH(dAcctDate) <= VAL(lcPeriod)) ;
		         AND IIF(lcGroup = '**', .T., cgroup  = lcGroup) ;
		         AND cRecType <> 'P'  ;
		         AND disbhist.ctypeinv = tcType
		         
		      SELE * FROM suspense ;
		         INTO CURSOR tempowns  ;
		         WHERE suspense.cwellid in (SELECT cid FROM selected) ;
		         AND suspense.crunyear_in + PADL(TRANSFORM(suspense.nrunno_in), 3, '0') + suspense.cRecType IN ;
		         (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + ctypeclose ;
		           FROM sysctl ;
		           WHERE YEAR(dAcctDate) = VAL(lcYear)  ;
		           AND MONTH(dAcctDate) <= VAL(lcPeriod)) ;
		         AND IIF(lcGroup = '**', .T., cgroup  = lcGroup) ;
		         AND cRecType <> 'P'  ;
		         AND suspense.ctypeinv = tcType
		
		      SELECT tempown
		      APPEND FROM DBF('tempown1')
		      APPEND FROM DBF('tempowns')
		      SELE tempown
		      SCAN
		         SCATTER MEMVAR
		         DO CASE
		            CASE m.cdirect = 'O'
		               m.nnetcheck = m.nnetcheck + m.noilrev - m.noiltax1 - m.noiltax2 - m.noiltax3 - m.noiltax4
		               REPL nnetcheck WITH m.nnetcheck
		            CASE m.cdirect = 'G'
		               m.nnetcheck = m.nnetcheck + m.ngasrev - m.ngastax1 - m.ngastax2 - m.ngastax3 - m.ngastax4
		               REPL nnetcheck WITH m.nnetcheck
		            CASE m.cdirect = 'B'
		               m.nnetcheck = m.nnetcheck + m.ngasrev - m.ngastax1 - m.ngastax2 - m.ngastax3 - m.ngastax4 + ;
		                             m.noilrev - m.noiltax1 - m.noiltax2 - m.noiltax3 - m.noiltax4
		               REPL nnetcheck WITH m.nnetcheck
		         ENDCASE
		      ENDSCAN
		
			  SELECT  tempown.cWellid      AS cWellid, ;
					  SUM(nnetcheck) * -1      AS nYearAmt, ;
					  lcRptGroup               AS cSource, ;
					  'A'                      AS cSection ;
				  FROM tempown ;
				  INTO CURSOR temp ;
				  ORDER BY cWellid ;
				  GROUP BY cWellid
		   ELSE
		      SELE * FROM disbhist ;
		         INTO CURSOR tempown READWRITE  ;
		         WHERE disbhist.cwellid in (SELECT cid FROM selected) ;
		         and EMPTY(disbhist.csusptype) ;
		         AND disbhist.crunyear + PADL(TRANSFORM(disbhist.nrunno), 3, '0') + disbhist.cRecType IN ;
		           (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + ctypeclose ;
		             FROM sysctl ;
		             WHERE YEAR(dAcctDate) = VAL(lcYear) ;
		             AND MONTH(dAcctDate) <= VAL(lcPeriod)) ;
		         AND IIF(lcGroup = '**', .T., cgroup  = lcGroup) ;
		         AND cRecType <> 'P'  ;
		         AND disbhist.ctypeinv = tcType
		
		      SELE * FROM disbhist ;
		         INTO CURSOR tempown1 ;
		         WHERE disbhist.cwellid in (SELECT cid FROM selected) ;
		         and NOT EMPTY(disbhist.csusptype) ;
		         AND disbhist.crunyear_in + PADL(TRANSFORM(disbhist.nrunno_in), 3, '0') + disbhist.cRecType IN ;
		           (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + ctypeclose ;
		             FROM sysctl ;
		             WHERE YEAR(dAcctDate) = VAL(lcYear) ;
		             AND MONTH(dAcctDate) <= VAL(lcPeriod)) ;
		         AND IIF(lcGroup = '**', .T., cgroup  = lcGroup) ;
		         AND cRecType <> 'P'  ;
		         AND disbhist.ctypeinv = tcType
		
		      SELE * FROM suspense ;
		         INTO CURSOR tempowns  ;
		         WHERE suspense.cwellid in (SELECT cid FROM selected) ;
		         AND suspense.crunyear_in + PADL(TRANSFORM(suspense.nrunno_in), 3, '0') + suspense.cRecType IN ;
		         (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + ctypeclose ;
		           FROM sysctl ;
		           WHERE YEAR(dAcctDate) = VAL(lcYear) ;
		           AND MONTH(dAcctDate) <= VAL(lcPeriod)) ;
		         AND IIF(lcGroup = '**', .T., cgroup  = lcGroup) ;
		         AND cRecType <> 'P'  ;
		         AND suspense.ctypeinv = tcType
		
		      SELECT tempown
		      APPEND FROM DBF('tempown1')
		      APPEND FROM DBF('tempowns')
		
			  SELECT  tempown.cWellid      AS cWellid, ;
					  SUM(nnetcheck) * -1      AS nYearAmt, ;
					  lcRptGroup               AS cSource, ;
					  'A'                      AS cSection ;
				  FROM tempown ;
				  INTO CURSOR temp ;
				  ORDER BY cWellid ;
				  GROUP BY cWellid
		   ENDIF
		ENDIF
		STORE 0 TO m.nPrdAmt, m.nYearAmt
		SELECT temppl
		APPEND FROM DBF('temp')
		SELECT temp
		USE
		IF USED('tempown')
		   USE IN tempown
		ENDIF
		IF USED('tempown1')
		   USE IN tempown1
		ENDIF
		
		*
		********************************************************************
		*  Fill in amounts paid to Landowner interests for the period.
		********************************************************************
		*
		
		IF lnReport = 1
		   IF llDirect
		      SELE * FROM disbhist ;
		         INTO CURSOR tempown READWRITE  ;
		         WHERE disbhist.cwellid in (SELECT cid FROM selected) ;
		         AND disbhist.hYear = lcYear ;
		         AND disbhist.hPeriod = lcPeriod ;
		         AND disbhist.ctypeinv = tcType ;
		         AND cRecType <> 'P'  ;
		         AND IIF(lcGroup = '**', .T., cgroup  = lcGroup)
		
		      SELE * FROM suspense ;
		         INTO CURSOR tempowns ;
		         WHERE suspense.cwellid in (SELECT cid FROM selected) ;
		         AND suspense.hYear = lcYear ;
		         AND suspense.hPeriod = lcPeriod ;
		         AND suspense.ctypeinv = tcType ;
		         AND cRecType <> 'P'  ;
		         AND IIF(lcGroup = '**', .T., cgroup  = lcGroup)
		      SELECT tempown
		      APPEND FROM DBF('tempowns')
		      SELE tempown
		      SCAN
		         SCATTER MEMVAR
		         DO CASE
		            CASE m.cdirect = 'O'
		               m.nnetcheck = m.nnetcheck + m.noilrev - m.noiltax1 - m.noiltax2 - m.noiltax3 - m.noiltax4
		               REPL nnetcheck WITH m.nnetcheck
		            CASE m.cdirect = 'G'
		               m.nnetcheck = m.nnetcheck + m.ngasrev - m.ngastax1 - m.ngastax2 - m.ngastax3 - m.ngastax4
		               REPL nnetcheck WITH m.nnetcheck
		         ENDCASE
		      ENDSCAN
		
			  SELECT  tempown.cWellid      AS cWellid, ;
					  SUM(nnetcheck) * -1      AS nPrdAmt, ;
					  lcRptGroup                    AS cSource, ;
					  'A'                      AS cSection ;
				  FROM tempown ;
				  INTO CURSOR temp ;
				  ORDER BY cWellid ;
				  GROUP BY cWellid
		   ELSE
			  SELECT  disbhist.cWellid      AS cWellid, ;
					  SUM(IIF(ctypeinv = tcType, nnetcheck, 000000.00)) * -1 AS nPrdAmt, ;
					  lcRptGroup                    AS cSource, ;
					  'A'                      AS cSection ;
				  FROM disbhist ;
				  WHERE disbhist.cwellid in (SELECT cid FROM selected) ;
					  AND disbhist.hYear = lcYear ;
					  AND disbhist.hPeriod = lcPeriod ;
					  AND cRecType <> 'P'  ;
					  AND IIF(lcGroup = '**', .T., cgroup  = lcGroup) ;
				  INTO CURSOR temp READWRITE ;
				  ORDER BY cWellid ;
				  GROUP BY cWellid
		
			  SELECT  suspense.cWellid      AS cWellid, ;
					  SUM(IIF(ctypeinv = tcType, nnetcheck, 000000.00)) * -1 AS nPrdAmt, ;
					  lcRptGroup                    AS cSource, ;
					  'A'                      AS cSection ;
				  FROM suspense ;
				  WHERE suspense.cwellid in (SELECT cid FROM selected) ;
					  AND suspense.hYear = lcYear ;
					  AND suspense.hPeriod = lcPeriod ;
					  AND cRecType <> 'P'  ;
					  AND IIF(lcGroup = '**', .T., cgroup  = lcGroup) ;
				  INTO CURSOR temps ;
				  ORDER BY cWellid ;
				  GROUP BY cWellid
		
		      SELECT temp
		      APPEND FROM DBF('temps')
		   ENDIF
		ELSE
		   IF llDirect
		      SELE * FROM disbhist ;
		         INTO CURSOR tempown READWRITE ;
		         WHERE disbhist.cwellid in (SELECT cid FROM selected) ;
		         AND EMPTY(disbhist.csusptype) ;
		         AND disbhist.crunyear + PADL(TRANSFORM(disbhist.nrunno), 3, '0') + disbhist.cRecType IN ;
		         (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + ctypeclose ;
		           FROM sysctl ;
		           WHERE YEAR(dAcctDate) = VAL(lcYear)) ;
		         AND disbhist.crunyear + PADL(TRANSFORM(disbhist.nrunno), 3, '0') + disbhist.cRecType IN ;
		         (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + ctypeclose ;
		           FROM sysctl ;
		           WHERE MONTH(dAcctDate) = VAL(lcPeriod)) ;
		         AND IIF(lcGroup = '**', .T., cgroup  = lcGroup) ;
		         AND cRecType <> 'P'  ;
		         AND disbhist.ctypeinv = tcType
		
		      SELE * FROM disbhist ;
		         INTO CURSOR tempown1 ;
		         WHERE disbhist.cwellid in (SELECT cid FROM selected) ;
		         AND NOT EMPTY(disbhist.csusptype) ;
		         AND disbhist.crunyear_in + PADL(TRANSFORM(disbhist.nrunno_in), 3, '0') + disbhist.cRecType IN ;
		         (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + ctypeclose ;
		           FROM sysctl ;
		           WHERE YEAR(dAcctDate) = VAL(lcYear)) ;
		         AND disbhist.crunyear_in + PADL(TRANSFORM(disbhist.nrunno_in), 3, '0') + disbhist.cRecType IN ;
		         (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + ctypeclose ;
		           FROM sysctl ;
		           WHERE MONTH(dAcctDate) = VAL(lcPeriod)) ;
		         AND IIF(lcGroup = '**', .T., cgroup  = lcGroup) ;
		         AND cRecType <> 'P'  ;
		         AND disbhist.ctypeinv = tcType
		
		      SELE * FROM suspense ;
		         INTO CURSOR tempowns ;
		         WHERE suspense.cwellid in (SELECT cid FROM selected) ;
		         AND suspense.crunyear_in + PADL(TRANSFORM(suspense.nrunno_in), 3, '0') + suspense.cRecType IN ;
		         (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + ctypeclose ;
		           FROM sysctl ;
		           WHERE YEAR(dAcctDate) = VAL(lcYear)) ;
		         AND suspense.crunyear_in + PADL(TRANSFORM(suspense.nrunno_in), 3, '0') + suspense.cRecType IN ;
		         (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + ctypeclose ;
		           FROM sysctl ;
		           WHERE MONTH(dAcctDate) = VAL(lcPeriod)) ;
		         AND IIF(lcGroup = '**', .T., cgroup  = lcGroup) ;
		         AND cRecType <> 'P'  ;
		         AND suspense.ctypeinv = tcType
		
		      SELECT tempown
		      APPEND FROM DBF('tempown1')
		      APPEND FROM DBF('tempowns')
		      SELE tempown
		      SCAN
		         SCATTER MEMVAR
		         DO CASE
		            CASE m.cdirect = 'O'
		               m.nnetcheck = m.nnetcheck + m.noilrev - m.noiltax1 - m.noiltax2 - m.noiltax3 - m.noiltax4
		               REPL nnetcheck WITH m.nnetcheck
		            CASE m.cdirect = 'G'
		               m.nnetcheck = m.nnetcheck + m.ngasrev - m.ngastax1 - m.ngastax2 - m.ngastax3 - m.ngastax4
		               REPL nnetcheck WITH m.nnetcheck
		         ENDCASE
		      ENDSCAN
		
			  SELECT  tempown.cWellid      AS cWellid, ;
					  SUM(nnetcheck) * -1      AS nPrdAmt, ;
					  lcRptGroup                    AS cSource, ;
					  'A'                      AS cSection ;
				  FROM tempown ;
				  INTO CURSOR temp ;
				  ORDER BY cWellid ;
				  GROUP BY cWellid
		   ELSE
		      SELE * FROM disbhist ;
		         INTO CURSOR tempown READWRITE ;
		         WHERE disbhist.cwellid in (SELECT cid FROM selected) ;
		         AND EMPTY(disbhist.csusptype) ;
		         AND disbhist.crunyear + PADL(TRANSFORM(disbhist.nrunno), 3, '0') + disbhist.cRecType IN ;
		         (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + ctypeclose ;
		           FROM sysctl ;
		           WHERE YEAR(dAcctDate) = VAL(lcYear)) ;
		         AND disbhist.crunyear + PADL(TRANSFORM(disbhist.nrunno), 3, '0') + disbhist.cRecType IN ;
		         (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + ctypeclose ;
		           FROM sysctl ;
		           WHERE MONTH(dAcctDate) = VAL(lcPeriod)) ;
		         AND IIF(lcGroup = '**', .T., cgroup  = lcGroup) ;
		         AND cRecType <> 'P'  ;
		         AND disbhist.ctypeinv = tcType
		
		      SELE * FROM disbhist ;
		         INTO CURSOR tempown1 ;
		         WHERE disbhist.cwellid in (SELECT cid FROM selected) ;
		         AND NOT EMPTY(disbhist.csusptype) ;
		         AND disbhist.crunyear_in + PADL(TRANSFORM(disbhist.nrunno_in), 3, '0') + disbhist.cRecType IN ;
		         (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + ctypeclose ;
		           FROM sysctl ;
		           WHERE YEAR(dAcctDate) = VAL(lcYear)) ;
		         AND disbhist.crunyear_in + PADL(TRANSFORM(disbhist.nrunno_in), 3, '0') + disbhist.cRecType IN ;
		         (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + ctypeclose ;
		           FROM sysctl ;
		           WHERE MONTH(dAcctDate) = VAL(lcPeriod)) ;
		         AND IIF(lcGroup = '**', .T., cgroup  = lcGroup) ;
		         AND cRecType <> 'P'  ;
		         AND disbhist.ctypeinv = tcType
		
			  SELECT  suspense.cWellid      AS cWellid, ;
					  SUM(IIF(ctypeinv = tcType, nnetcheck, 000000.00)) * -1 AS nPrdAmt, ;
					  lcRptGroup                    AS cSource, ;
					  'A'                      AS cSection ;
				  FROM suspense ;
				  WHERE suspense.cwellid in (SELECT cid FROM selected) ;
					  AND suspense.crunyear_in + PADL(TRANSFORM(suspense.nrunno_in), 3, '0') + suspense.cRecType IN ;
					  (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + ctypeclose ;
						   FROM sysctl ;
						   WHERE YEAR(dAcctDate) = VAL(lcYear)) ;
					  AND suspense.crunyear_in + PADL(TRANSFORM(suspense.nrunno_in), 3, '0') + suspense.cRecType IN ;
					  (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + ctypeclose ;
						   FROM sysctl ;
						   WHERE MONTH(dAcctDate) = VAL(lcPeriod)) ;
					  AND cRecType <> 'P'  ;
					  AND IIF(lcGroup = '**', .T., cgroup  = lcGroup) ; 
				  INTO CURSOR temps ;
				  ORDER BY cWellid ;
				  GROUP BY cWellid
		
		      SELECT tempown
		      APPEND FROM DBF('tempown1')
		      APPEND FROM DBF('temps')
		
			  SELECT  tempown.cWellid      AS cWellid, ;
					  SUM(nnetcheck) * -1      AS nPrdAmt, ;
					  lcRptGroup               AS cSource, ;
					  'A'                      AS cSection ;
				  FROM tempown ;
				  INTO CURSOR temp ;
				  ORDER BY cWellid ;
				  GROUP BY cWellid
		   ENDIF
		ENDIF
		
		STORE 0 TO m.nPrdAmt, m.nYearAmt
		SELECT temp
		SCAN
		   SCATTER MEMVAR
		   SELECT temppl
		   SET ORDER TO wellsrc
		   IF SEEK(m.cWellid + m.cSource)
		      REPLACE nPrdAmt WITH nPrdAmt + m.nPrdAmt
		   ELSE
		      APPEND BLANK
		      GATHER MEMVAR
		   ENDIF
		ENDSCAN
		
		swclose('tempown')
		
		
	ENDPROC

	PROCEDURE chkSelected.Click
		IF this.Value
		   DO FORM commonsource\selected-ids WITH 'WELL' LINKED 
		   lnCount = RECCOUNT('selected')
		   thisform.lblselected.Caption = TRANSFORM(lnCount) + ' Wells Selected'
		   thisform.lblselected.Visible = .T.
		   thisform.lblbegID.Visible = .F.
		   thisform.lblendID.Visible = .F.
		   thisform.swrptlook1.Visible = .F.
		ELSE
		   thisform.lblselected.Visible = .F.
		   thisform.lblbegID.Visible = .T.
		   thisform.lblendID.Visible = .T.
		   thisform.swrptlook1.Visible = .T.
		ENDIF 
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cwellid,cwellname,cgroup,cwellstat'
		DO FORM ..\custom\picklist WITH 'Wells', lcList, thisform.swrptlook1.txtbegid.value, 4
		
		IF llOK
		   thisform.swrptlook1.txtBegId.value = cwellid
		   thisform.swrptlook1.txtBegName.value = cwellname
		   thisform.swrptlook1.txtBegId.refresh()
		   thisform.swrptlook1.txtBegName.refresh()
		ENDIF   
		
		thisform.setnextcontrol(thisform.swrptlook1.txtBegId)
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cwellid,cwellname,cgroup,cwellstat'
		DO FORM ..\custom\picklist WITH 'Wells', lcList, thisform.swrptlook1.txtendid.value, 4
		
		IF llOK
		   thisform.swrptlook1.txtEndId.value = cwellid
		   thisform.swrptlook1.txtEndName.value = cwellname
		   thisform.swrptlook1.txtEndId.refresh()
		   thisform.swrptlook1.txtEndName.refresh()
		ENDIF   
		
		thisform.setnextcontrol(thisform.swrptlook1.txtEndId)
		
	ENDPROC

ENDDEFINE
