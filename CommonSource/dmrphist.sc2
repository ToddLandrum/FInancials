*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="dmrphist.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 200
	Left = 40
	Name = "Dataenvironment"
	Top = 235
	Width = 520

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "programs", ;
		CursorSource = "programs", ;
		Database = ..\datafiles\1099testingcompanydata\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formdmrphist AS frmrptcriteria OF "..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="swReportBy" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swyear1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklNewPage" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblEndID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblBegID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblAccDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblBegYear" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblRange" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="swdate1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="swdate2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklSuspense" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSummary" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkDirectPaid" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSelected" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSelected" UniqueID="" Timestamp="" />

	Caption = "Program/Partnership History"
	DoCreate = .T.
	Height = 500
	HelpContextID = 589
	Name = "FormDmrphist"
	Width = 366
	Swrptcriteriabuttons1.chkExport.Alignment = 0
	Swrptcriteriabuttons1.chkExport.Name = "chkExport"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.cmdPreview.Name = "cmdPreview"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 60
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 17
	Swrptcriteriabuttons1.Top = 401
	Swrptcriteriabuttons1.ZOrderSet = 0

	ADD OBJECT 'chkDirectPaid' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Include Direct Paid Revenue", ;
		Left = 81, ;
		Name = "chkDirectPaid", ;
		TabIndex = 16, ;
		Top = 364, ;
		Value = .T.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklNewPage' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Start a New Page For Each Program", ;
		Left = 81, ;
		Name = "chklNewPage", ;
		TabIndex = 14, ;
		Top = 316, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklSuspense' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Include Entries Still in Suspense", ;
		Left = 81, ;
		Name = "chklSuspense", ;
		TabIndex = 15, ;
		Top = 339, ;
		Value = .T.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSelected' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Choose Selected Programs", ;
		Left = 117, ;
		Name = "chkSelected", ;
		TabIndex = 10, ;
		Top = 174, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSummary' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Summary Report", ;
		Left = 240, ;
		Name = "chkSummary", ;
		TabIndex = 3, ;
		Top = 36, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'LblAccDate' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Accounting Date:", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 18, ;
		Name = "LblAccDate", ;
		TabIndex = 6, ;
		Top = 124, ;
		Width = 85, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblBegID' AS lbllabelcustom WITH ;
		Alignment = 1, ;
		AutoSize = .T., ;
		Caption = "First Program:", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 34, ;
		Name = "LblBegID", ;
		TabIndex = 12, ;
		Top = 200, ;
		Width = 69, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblBegYear' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Year:", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 74, ;
		Name = "LblBegYear", ;
		TabIndex = 5, ;
		Top = 96, ;
		Width = 29, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblEndID' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Last Program:", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 34, ;
		Name = "LblEndID", ;
		TabIndex = 13, ;
		Top = 251, ;
		Width = 69, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "-", ;
		FontBold = .T., ;
		Height = 16, ;
		Left = 218, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 9, ;
		Top = 126, ;
		Width = 6
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblRange' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Report By:", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 50, ;
		Name = "LblRange", ;
		TabIndex = 2, ;
		Top = 10, ;
		Width = 53, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSelected' AS lbllabelcustom WITH ;
		Caption = "All IDs Selected", ;
		ForeColor = 0,0,255, ;
		Left = 116, ;
		Name = "lblSelected", ;
		TabIndex = 18, ;
		Top = 240, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'swdate1' AS dpk WITH ;
		ControlSource = "", ;
		Enabled = .F., ;
		Height = 20, ;
		Left = 115, ;
		Name = "swdate1", ;
		TabIndex = 7, ;
		Top = 124, ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />

	ADD OBJECT 'swdate2' AS dpk WITH ;
		ControlSource = "", ;
		Enabled = .F., ;
		Height = 20, ;
		Left = 233, ;
		Name = "swdate2", ;
		TabIndex = 8, ;
		Top = 124, ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />

	ADD OBJECT 'swReportBy' AS swrange_py_ay_ad WITH ;
		Left = 107, ;
		Name = "swReportBy", ;
		TabIndex = 1, ;
		Top = 4, ;
		ZOrderSet = 2, ;
		AccDate.Left = 5, ;
		AccDate.Name = "AccDate", ;
		AccDate.Top = 57, ;
		AccYear.Left = 5, ;
		AccYear.Name = "AccYear", ;
		AccYear.Top = 31, ;
		ProdYear.Left = 5, ;
		ProdYear.Name = "ProdYear", ;
		ProdYear.Top = 5, ;
		ProdYear.Value = 1
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		Left = 115, ;
		Name = "Swrptlook1", ;
		TabIndex = 11, ;
		Top = 197, ;
		ZOrderSet = 6, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		TxtBegID.clistexpression = programs.cProgCode, ;
		TxtBegID.clistworkarea = programs, ;
		TxtBegID.Name = "TxtBegID", ;
		TxtBegName.Name = "TxtBegName", ;
		TxtEndID.clistexpression = programs.cProgCode, ;
		TxtEndID.clistworkarea = programs, ;
		TxtEndID.Name = "TxtEndID", ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />

	ADD OBJECT 'Swyear1' AS swyear WITH ;
		Left = 115, ;
		Name = "Swyear1", ;
		TabIndex = 4, ;
		Top = 94, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE builddata
		LOCAL tnReportBy, tcFirstProg, tcLastProg, tcYear, tcPeriod, tdDate1, tdDate2, llSuspense
		LOCAL llIncDirect, llReturn, llSummary, loError
		LOCAL llNewPage
		
		llReturn = .T.
		
		TRY
		   tnReportBy  = THISFORM.swReportBy.VALUE
		   tcFirstProg = THISFORM.swrptlook1.txtBegID.VALUE
		   tcLastProg  = THISFORM.swrptlook1.txtEndID.VALUE
		   tcYear      = THISFORM.swYear1.VALUE
		   tdDate1     = THISFORM.swDate1.VALUE
		   tdDate2     = THISFORM.swDate2.VALUE
		   llSuspense  = THISFORM.chklSuspense.VALUE
		   llSummary   = THISFORM.chksummary.VALUE
		   llIncDirect = THISFORM.chkDirectPaid.VALUE
		   llNewPage   = THISFORM.chklNewPage.VALUE
		   llSelected = thisform.chkselected.value
		
		IF NOT llSelected
		   SELECT cprogcode as cid FROM programs ;
		      INTO CURSOR selected ;
		      WHERE BETWEEN(cprogcode,tcFirstProg,tcLastProg) ;
		      ORDER BY cid
		ENDIF 
		
		   THISFORM.cReportName = 'dmrproghist'
		
		   THISFORM.cTitle1         = 'Program History'
		   THISFORM.cTitle2         = ''
		   THISFORM.cSortOrder      = 'Program, Well, Owner'
		   THISFORM.cSelectCriteria = 'Programs: ' + ALLTRIM(tcFirstProg) + ' - ' + ALLTRIM(tcLastProg)
		
		   DO CASE
		      CASE tnReportBy = 1            && Production Year
		         THISFORM.cTitle2     = 'For Production Year ' + tcYear
				 SELECT  disbhist.cOwnerID, ;
						 SPACE(10) AS cPageBreak, ;
						 investor.cOwnname AS cOwnname, ;
						 disbhist.cwellid, ;
						 disbhist.cdirect, ;
						 wells.cwellname, ;
						 disbhist.cprogcode, ;
						 programs.cprogname, ;
						 SUM(nexpense)  AS nexptotal, ;
						 IIF(llIncDirect, SUM(noilrev), IIF(INLIST(cdirect, 'O', 'B'), 0, SUM(noilrev)))   AS noiltotal, ;
						 IIF(llIncDirect, SUM(ngasrev), IIF(INLIST(cdirect, 'G', 'B'), 0, SUM(ngasrev)))   AS ngastotal, ;
						 SUM(ntrprev)   AS ntrptotal, ;
						 SUM(ntotale1 + ntotale2 + ntotale3 + ntotale4 + ntotale5 + ntotaleb + ntotalea + disbhist.ngather + disbhist.ncompress)  AS nclasstotal, ;
						 SUM(nsevtaxes) AS ntaxtotal, ;
						 SUM(nnetcheck) AS nnettotal ;
					 WHERE disbhist.cprogcode in (SELECT cid FROM selected) ;
						 AND disbhist.hyear = tcYear ;
						 AND disbhist.cprogcode = programs.cprogcode ;
						 AND disbhist.cOwnerID = investor.cOwnerID ;
						 AND disbhist.cwellid = wells.cwellid ;
					 FROM disbhist, programs, investor, wells ;
					 INTO CURSOR proghist READWRITE ;
					 GROUP BY disbhist.cprogcode, disbhist.cwellid, disbhist.cOwnerID ;
					 ORDER BY disbhist.cprogcode, disbhist.cwellid, disbhist.cOwnerID
		
		         IF llSuspense
					SELECT  suspense.cOwnerID, ;
							SPACE(10) AS cPageBreak, ;
							investor.cOwnname AS cOwnname, ;
							suspense.cwellid, ;
							wells.cwellname, ;
							suspense.cdirect, ;
							suspense.cprogcode, ;
							programs.cprogname, ;
							SUM(nexpense)  AS nexptotal, ;
							IIF(llIncDirect, SUM(noilrev), IIF(INLIST(cdirect, 'O', 'B'), 0, SUM(noilrev)))   AS noiltotal, ;
							IIF(llIncDirect, SUM(ngasrev), IIF(INLIST(cdirect, 'G', 'B'), 0, SUM(ngasrev)))   AS ngastotal, ;
							SUM(ntrprev)   AS ntrptotal, ;
							SUM(ntotale1 + ntotale2 + ntotale3 + ntotale4 + ntotale5 + ntotaleb + ntotalea + suspense.ngather + suspense.ncompress)  AS nclasstotal, ;
							SUM(nsevtaxes) AS ntaxtotal, ;
							SUM(nnetcheck) AS nnettotal ;
						WHERE suspense.cprogcode in (SELECT cid FROM selected) ;
							AND suspense.hyear = tcYear ;
							AND suspense.cprogcode = programs.cprogcode ;
							AND suspense.cOwnerID = investor.cOwnerID ;
							AND suspense.cwellid = wells.cwellid ;
						FROM suspense, programs, investor, wells ;
						INTO CURSOR proghist2  ;
						GROUP BY suspense.cprogcode, suspense.cwellid, suspense.cOwnerID ;
						ORDER BY suspense.cprogcode, suspense.cwellid, suspense.cOwnerID
		
		            IF _TALLY > 0
		               SELECT proghist2
		               SCAN
		                  SCATTER MEMVAR
		                  SELECT proghist
		                  LOCATE FOR cprogcode == m.cprogcode AND cwellid == m.cwellid AND cOwnerID == m.cOwnerID
		                  IF FOUND()
		                     REPLACE nexptotal WITH nexptotal + m.nexptotal, noiltotal WITH noiltotal + m.noiltotal, ngastotal WITH ngastotal + m.ngastotal,  ;
		                        ntrptotal WITH ntrptotal + m.ntrptotal, nclasstotal WITH nclasstotal + m.nclasstotal, ntaxtotal WITH ntaxtotal + m.ntaxtotal,  ;
		                        nnettotal WITH nnettotal + m.nnettotal
		                  ELSE
		                     INSERT INTO proghist FROM MEMVAR
		                  ENDIF
		               ENDSCAN
		            ENDIF
		         ENDIF
		
		      CASE tnReportBy = 2           && Accounting Year
		         THISFORM.cTitle2     = 'For Accounting Year ' + tcYear
				 SELECT  disbhist.cOwnerID, ;
						 SPACE(10) AS cPageBreak, ;
						 investor.cOwnname AS cOwnname, ;
						 disbhist.cwellid, ;
						 wells.cwellname, ;
						 disbhist.cdirect, ;
						 disbhist.cprogcode, ;
						 programs.cprogname, ;
						 SUM(nexpense)  AS nexptotal, ;
						 IIF(llIncDirect, SUM(noilrev), IIF(INLIST(cdirect, 'O', 'B'), 0, SUM(noilrev)))   AS noiltotal, ;
						 IIF(llIncDirect, SUM(ngasrev), IIF(INLIST(cdirect, 'G', 'B'), 0, SUM(ngasrev)))   AS ngastotal, ;
						 SUM(ntrprev)   AS ntrptotal, ;
						 SUM(ntotale1 + ntotale2 + ntotale3 + ntotale4 + ntotale5 + ntotaleb + ntotalea + disbhist.ngather + disbhist.ncompress) AS nclasstotal, ;
						 SUM(nsevtaxes) AS ntaxtotal, ;
						 SUM(nnetcheck) AS nnettotal ;
					 WHERE disbhist.cprogcode in (SELECT cid FROM selected);
						 AND disbhist.crunyear + PADL(TRANSFORM(disbhist.nrunno), 3, '0') + disbhist.crectype IN ;
						 (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + ctypeclose ;
							  FROM sysctl ;
							  WHERE YEAR(dAcctDate) = VAL(tcYear)) ;
						 AND disbhist.cprogcode = programs.cprogcode ;
						 AND disbhist.cOwnerID = investor.cOwnerID ;
						 AND disbhist.cwellid = wells.cwellid ;
					 FROM disbhist, programs, investor, wells ;
					 INTO CURSOR proghist READWRITE ;
					 GROUP BY disbhist.cprogcode, disbhist.cwellid, disbhist.cOwnerID ;
					 ORDER BY disbhist.cprogcode, disbhist.cwellid, disbhist.cOwnerID
		
		         IF llSuspense
					SELECT  suspense.cOwnerID, ;
							SPACE(10) AS cPageBreak, ;
							investor.cOwnname AS cOwnname, ;
							suspense.cwellid, ;
							wells.cwellname, ;
							suspense.cprogcode, ;
							suspense.cdirect, ;
							programs.cprogname, ;
							SUM(nexpense)  AS nexptotal, ;
							IIF(llIncDirect, SUM(noilrev), IIF(INLIST(cdirect, 'O', 'B'), 0, SUM(noilrev)))   AS noiltotal, ;
							IIF(llIncDirect, SUM(ngasrev), IIF(INLIST(cdirect, 'G', 'B'), 0, SUM(ngasrev)))   AS ngastotal, ;
							SUM(ntrprev)   AS ntrptotal, ;
							SUM(ntotale1 + ntotale2 + ntotale3 + ntotale4 + ntotale5 + ntotaleb + ntotalea + suspense.ngather + suspense.ncompress) AS nclasstotal, ;
							SUM(nsevtaxes) AS ntaxtotal, ;
							SUM(nnetcheck) AS nnettotal ;
						WHERE suspense.cprogcode in (SELECT cid FROM selected);
							AND suspense.crunyear + PADL(TRANSFORM(suspense.nrunno), 3, '0') + suspense.crectype IN ;
							(SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + ctypeclose ;
								 FROM sysctl ;
								 WHERE YEAR(dAcctDate) = VAL(tcYear)) ;
							AND suspense.cprogcode = programs.cprogcode ;
							AND suspense.cOwnerID = investor.cOwnerID ;
							AND suspense.cwellid = wells.cwellid ;
						FROM suspense, programs, investor, wells ;
						INTO CURSOR proghist2  ;
						GROUP BY suspense.cprogcode, suspense.cwellid, suspense.cOwnerID ;
						ORDER BY suspense.cprogcode, suspense.cwellid, suspense.cOwnerID
		
		            IF _TALLY > 0
		               SELECT proghist2
		               SCAN
		                  SCATTER MEMVAR
		                  SELECT proghist
		                  LOCATE FOR cprogcode == m.cprogcode AND cwellid == m.cwellid AND cOwnerID == m.cOwnerID
		                  IF FOUND()
		                     REPLACE nexptotal WITH nexptotal + m.nexptotal, noiltotal WITH noiltotal + m.noiltotal, ngastotal WITH ngastotal + m.ngastotal,  ;
		                        ntrptotal WITH ntrptotal + m.ntrptotal, nclasstotal WITH nclasstotal + m.nclasstotal, ntaxtotal WITH ntaxtotal + m.ntaxtotal,  ;
		                        nnettotal WITH nnettotal + m.nnettotal
		                  ELSE
		                     INSERT INTO proghist FROM MEMVAR
		                  ENDIF
		               ENDSCAN
		            ENDIF
		         ENDIF
		
		      CASE tnReportBy = 3           && Accounting Date Range
		         THISFORM.cTitle2     = 'For Accounting Dates ' + DTOC(tdDate1) + ' - ' + DTOC(tdDate2)
				 SELECT  disbhist.cOwnerID, ;
						 SPACE(10) AS cPageBreak, ;
						 investor.cOwnname AS cOwnname, ;
						 disbhist.cwellid, ;
						 wells.cwellname, ;
						 disbhist.cprogcode, ;
						 disbhist.cdirect, ;
						 programs.cprogname, ;
						 SUM(nexpense)  AS nexptotal, ;
						 IIF(llIncDirect, SUM(noilrev), IIF(INLIST(cdirect, 'O', 'B'), 0, SUM(noilrev)))   AS noiltotal, ;
						 IIF(llIncDirect, SUM(ngasrev), IIF(INLIST(cdirect, 'G', 'B'), 0, SUM(ngasrev)))   AS ngastotal, ;
						 SUM(ntrprev)   AS ntrptotal, ;
						 SUM(ntotale1 + ntotale2 + ntotale3 + ntotale4 + ntotale5 + ntotaleb + ntotalea + disbhist.ngather + disbhist.ncompress) AS nclasstotal, ;
						 SUM(nsevtaxes) AS ntaxtotal, ;
						 SUM(nnetcheck) AS nnettotal ;
					 WHERE disbhist.cprogcode in (SELECT cid FROM selected) ;
						 AND disbhist.crunyear + PADL(TRANSFORM(disbhist.nrunno), 3, '0') + disbhist.crectype IN ;
						 (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + ctypeclose ;
							  FROM sysctl ;
							  WHERE BETWEEN(dAcctDate, tdDate1, tdDate2)) ;
						 AND disbhist.cprogcode = programs.cprogcode ;
						 AND disbhist.cOwnerID = investor.cOwnerID ;
						 AND disbhist.cwellid = wells.cwellid ;
					 FROM disbhist, programs, investor, wells ;
					 INTO CURSOR proghist READWRITE ;
					 GROUP BY disbhist.cprogcode, disbhist.cwellid, disbhist.cOwnerID ;
					 ORDER BY disbhist.cprogcode, disbhist.cwellid, disbhist.cOwnerID
		
		         IF llSuspense
					SELECT  suspense.cOwnerID, ;
							SPACE(10) AS cPageBreak, ;
							investor.cOwnname AS cOwnname, ;
							suspense.cwellid, ;
							wells.cwellname, ;
							suspense.cprogcode, ;
							suspense.cdirect, ;
							programs.cprogname, ;
							SUM(nexpense)  AS nexptotal, ;
							IIF(llIncDirect, SUM(noilrev), IIF(INLIST(cdirect, 'O', 'B'), 0, SUM(noilrev)))   AS noiltotal, ;
							IIF(llIncDirect, SUM(ngasrev), IIF(INLIST(cdirect, 'G', 'B'), 0, SUM(ngasrev)))   AS ngastotal, ;
							SUM(ntrprev)   AS ntrptotal, ;
							SUM(ntotale1 + ntotale2 + ntotale3 + ntotale4 + ntotale5 + ntotaleb + ntotalea + suspense.ngather + suspense.ncompress) AS nclasstotal, ;
							SUM(nsevtaxes) AS ntaxtotal, ;
							SUM(nnetcheck) AS nnettotal ;
						WHERE suspense.cprogcode in (SELECT cid FROM selected) ;
							AND suspense.crunyear + PADL(TRANSFORM(suspense.nrunno), 3, '0') + suspense.crectype IN ;
							(SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + ctypeclose ;
								 FROM sysctl ;
								 WHERE BETWEEN(dAcctDate, tdDate1, tdDate2)) ;
							AND suspense.cprogcode = programs.cprogcode ;
							AND suspense.cOwnerID = investor.cOwnerID ;
							AND suspense.cwellid = wells.cwellid ;
						FROM suspense, programs, investor, wells ;
						INTO CURSOR proghist2  ;
						GROUP BY suspense.cprogcode, suspense.cwellid, suspense.cOwnerID ;
						ORDER BY suspense.cprogcode, suspense.cwellid, suspense.cOwnerID
		
		            IF _TALLY > 0
		               SELECT proghist2
		               SCAN
		                  SCATTER MEMVAR
		                  SELECT proghist
		                  LOCATE FOR cprogcode == m.cprogcode AND cwellid == m.cwellid AND cOwnerID == m.cOwnerID
		                  IF FOUND()
		                     REPLACE nexptotal WITH nexptotal + m.nexptotal, ;
		                        noiltotal WITH noiltotal + m.noiltotal, ngastotal WITH ngastotal + m.ngastotal,  ;
		                        ntrptotal WITH ntrptotal + m.ntrptotal, nclasstotal WITH nclasstotal + m.nclasstotal, ntaxtotal WITH ntaxtotal + m.ntaxtotal,  ;
		                        nnettotal WITH nnettotal + m.nnettotal
		                  ELSE
		                     INSERT INTO proghist FROM MEMVAR
		                  ENDIF
		               ENDSCAN
		            ENDIF
		         ENDIF
		   ENDCASE
		
		*  The order gets set in the select statement, but when new records are added from suspense, they're out of sequence
		   SELECT proghist
		   INDEX ON cprogcode + cwellid + cOwnerID TAG cprogcode
		   SET ORDER TO cprogcode
		
		* If direct paid revenue is included it has to be added to netcheck
		   IF llIncDirect
		      SELECT proghist
		      SCAN
		         DO CASE
		            CASE cdirect = 'O'
		               REPLACE nnettotal WITH nnettotal + noiltotal
		
		            CASE cdirect = 'G'
		               REPLACE nnettotal WITH nnettotal + ngastotal
		
		            CASE cdirect = 'B'
		               REPLACE nnettotal WITH nnettotal + noiltotal + ngastotal
		         ENDCASE
		      ENDSCAN
		   ENDIF
		
		* Setup the pagebreak variable if needed
		   IF llNewPage
		      SELECT proghist
		      REPLACE cPageBreak WITH cprogcode ALL
		   ENDIF
		
		   SELECT proghist
		   INDEX ON cPageBreak + cprogcode + cwellid + cOwnerID TAG rptkey
		
		   IF llSummary
			  SELECT  cprogcode, ;
					  cprogname, ;
					  cPageBreak, ;
					  SUM(nexptotal) AS nexptotal, ;
					  SUM(noiltotal) AS noiltotal, ;
					  SUM(ngastotal) AS ngastotal, ;
					  SUM(ntrptotal) AS ntrptotal, ;
					  SUM(nclasstotal) AS nclasstotal, ;
					  SUM(ntaxtotal) AS ntaxtotal, ;
					  SUM(nnettotal) AS nnettotal ;
				  FROM proghist   ;
				  INTO CURSOR proghist ;
				  ORDER BY cprogcode ;
				  GROUP BY cprogcode
		      THISFORM.cReportName = 'commonsource\dmrprogsumm.frx'
		   ENDIF
		
		   SELECT proghist
		   IF RECC() > 0
		      llReturn = .T.
		   ELSE
		      llReturn = .F.
		   ENDIF
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'BuildData', loError.LINENO, 'Program History Rpt', loError.ERRORNO, loError.MESSAGE, '', loError
		   MESSAGEBOX('Unable to process the report at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
		
		 
	ENDPROC

	PROCEDURE Init
		SELECT programs
		SET ORDER TO cprogcode
		GO TOP
		
		THISFORM.swrptlook1.txtBegName.VALUE = cprogname
		THISFORM.swrptlook1.txtBegID.VALUE = cprogcode
		GO BOTTOM
		
		THISFORM.swrptlook1.txtEndName.VALUE = cprogname
		THISFORM.swrptlook1.txtEndID.VALUE = cprogcode
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE chkSelected.Click
		IF this.Value
		   DO FORM commonsource\selected-ids WITH 'PROGRAM' LINKED 
		   lnCount = RECCOUNT('selected')
		   thisform.lblselected.Caption = TRANSFORM(lnCount) + ' Programs Selected'
		   thisform.lblselected.Visible = .T.
		   thisform.lblbegID.Visible = .F.
		   thisform.lblendID.Visible = .F.
		   thisform.swrptlook1.Visible = .F.
		ELSE
		   thisform.lblselected.Visible = .F.
		   thisform.lblbegID.Visible = .T.
		   thisform.lblendID.Visible = .T.
		   thisform.swrptlook1.Visible = .T.
		ENDIF 
	ENDPROC

	PROCEDURE swReportBy.AccDate.GotFocus
		THISFORM.swReportBy.VALUE = 3
	ENDPROC

	PROCEDURE swReportBy.AccYear.GotFocus
		THISFORM.swReportBy.VALUE = 2
	ENDPROC

	PROCEDURE swReportBy.Click
		IF THIS.VALUE = 3  &&  Accounting date, so enable date ranges
		   THISFORM.swDate1.ENABLED = .T.
		   THISFORM.swDate2.ENABLED = .T.
		ELSE
		   THISFORM.swDate1.ENABLED = .F.
		   THISFORM.swDate2.ENABLED = .F.
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE swReportBy.ProdYear.GotFocus
		THISFORM.SwReportBy.VALUE = 1
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cprogcode,cprogname/progname'
		DO FORM ..\custom\picklist WITH 'Programs', lcList, thisform.swrptlook1.txtbegid.value, 2
		
		IF llOK
		   thisform.swrptlook1.txtBegId.value = cprogcode
		   thisform.swrptlook1.txtBegName.value = cprogname
		   thisform.swrptlook1.txtBegId.refresh()
		   thisform.swrptlook1.txtBegName.refresh()
		ENDIF   
		
		thisform.setnextcontrol(thisform.swrptlook1.txtBegId)
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cprogcode,cprogname/progname'
		DO FORM ..\custom\picklist WITH 'Programs', lcList, thisform.swrptlook1.txtendid.value, 2
		
		IF llOK
		   thisform.swrptlook1.txtEndId.value = cprogcode
		   thisform.swrptlook1.txtEndName.value = cprogname
		   thisform.swrptlook1.txtEndId.refresh()
		   thisform.swrptlook1.txtEndName.refresh()
		ENDIF   
		
		thisform.setnextcontrol(thisform.swrptlook1.txtEndId)
		
	ENDPROC

ENDDEFINE
