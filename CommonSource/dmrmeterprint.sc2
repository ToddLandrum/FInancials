*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="dmrmeterprint.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "..\source\appdefs.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 200
	Left = 42
	Name = "Dataenvironment"
	Top = 483
	Width = 520

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "meterall", ;
		CursorSource = "meterall", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "revsrc", ;
		CursorSource = "revsrc", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formdmrmeterprint AS swrptcriteria OF "..\custom\swforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cmdcommandbuttoncustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblbatch" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtMeterID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtRefID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtMaster" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAmount" UniqueID="" Timestamp="" />

	Caption = "Print Gas Meter Reconciliation"
	DoCreate = .T.
	Height = 339
	Name = "FormDmrmeterprint"
	Width = 292
	SWRPTCRITERIABUTTONS1.chkExport.Alignment = 0
	SWRPTCRITERIABUTTONS1.chkExport.Name = "chkExport"
	SWRPTCRITERIABUTTONS1.cmdclose.Name = "cmdclose"
	SWRPTCRITERIABUTTONS1.CMDPREVIEW.Name = "CMDPREVIEW"
	SWRPTCRITERIABUTTONS1.CMDPRINT.Name = "CMDPRINT"
	SWRPTCRITERIABUTTONS1.Left = 29
	SWRPTCRITERIABUTTONS1.Name = "SWRPTCRITERIABUTTONS1"
	SWRPTCRITERIABUTTONS1.TabIndex = 8
	SWRPTCRITERIABUTTONS1.Top = 253

	ADD OBJECT 'Cmdcommandbuttoncustom1' AS cmdcommandbuttoncustom WITH ;
		Caption = "Choose", ;
		Height = 36, ;
		Left = 109, ;
		Name = "Cmdcommandbuttoncustom1", ;
		TabIndex = 1, ;
		Top = 36, ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'lblbatch' AS lbllabelcustom WITH ;
		Caption = "Batch", ;
		Left = 156, ;
		Name = "lblbatch", ;
		Top = 228, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Choose Meter Reconciliation", ;
		Left = 77, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 2, ;
		Top = 12
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "Meter ID", ;
		FontBold = .T., ;
		Left = 66, ;
		Name = "Lbllabelcustom2", ;
		Top = 99
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom3' AS lbllabelcustom WITH ;
		Caption = "Date", ;
		FontBold = .T., ;
		Left = 66, ;
		Name = "Lbllabelcustom3", ;
		Top = 126
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom4' AS lbllabelcustom WITH ;
		Caption = "Ref ID", ;
		FontBold = .T., ;
		Left = 66, ;
		Name = "Lbllabelcustom4", ;
		Top = 153
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom5' AS lbllabelcustom WITH ;
		Caption = "MCF Paid", ;
		FontBold = .T., ;
		Left = 66, ;
		Name = "Lbllabelcustom5", ;
		Top = 180
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom6' AS lbllabelcustom WITH ;
		Caption = "Paid Amt", ;
		FontBold = .T., ;
		Left = 66, ;
		Name = "Lbllabelcustom6", ;
		Top = 207
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'txtAmount' AS txttextboxcustom WITH ;
		Alignment = 0, ;
		BackColor = 212,208,200, ;
		Left = 126, ;
		Name = "txtAmount", ;
		Top = 204
		*< END OBJECT: ClassLib="..\..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtDate' AS txttextboxcustom WITH ;
		Alignment = 0, ;
		BackColor = 212,208,200, ;
		Left = 126, ;
		Name = "txtDate", ;
		Top = 123
		*< END OBJECT: ClassLib="..\..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtMaster' AS txttextboxcustom WITH ;
		Alignment = 0, ;
		BackColor = 212,208,200, ;
		Left = 126, ;
		Name = "txtMaster", ;
		Top = 177
		*< END OBJECT: ClassLib="..\..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtMeterID' AS txttextboxcustom WITH ;
		Alignment = 0, ;
		BackColor = 212,208,200, ;
		Left = 126, ;
		Name = "txtMeterID", ;
		Top = 96
		*< END OBJECT: ClassLib="..\..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtRefID' AS txttextboxcustom WITH ;
		Alignment = 0, ;
		BackColor = 212,208,200, ;
		Left = 126, ;
		Name = "txtRefID", ;
		Top = 150
		*< END OBJECT: ClassLib="..\..\custom\ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE builddata
		LOCAL lcBatch, llPrintError, llReturn
		
		tcBatch = thisform.lblbatch.Caption 
		llReturn = .t.
		llFile = .f.
		m.cGrpName = ''
		swselect('options')
		swSELECT('meterall')
		SET ORDER TO CBATCH   && CBATCH
		IF SEEK(tcBatch)
		   lcBatch = CBATCH
		   SCATTER MEMVAR
		   m.ctaxtype   = m.ctax
		   m.cprodrange = m.cbegrange + ' - ' + m.cendrange
		
		   CREATE CURSOR allprint ;
		      (cmeterid    C(10), ;
		        cmeterdesc   C(30), ;
		        cyear        C(4), ;
		        cprodrange   C(15), ;
		        cperiod      C(2), ;
		        dincdate    d, ;
		        crefid       C(20), ;
		        cdepositid   C(10), ;
		        cpurchaser   C(40), ;
		        ngasprice    N(12, 4), ;
		        nmaster      N(12, 2), ;
		        ntotalsub    N(12, 2), ;
		        nvariance    N(12, 2), ;
		        nallocation  N(12, 2), ;
		        ntaxamt      N(12, 2), ;
		        ntotaltax    N(12, 2), ;
		        ctaxtype     C(5), ;
		        cwellid      C(10), ;
		        cwellname    C(30), ;
		        cbegrange    C(5), ;
		        cendrange    C(5), ;
		        nsubmeter    N(12, 2))
		
		
		   swSELECT('meters')
		   SET ORDER TO meterid
		   IF SEEK(m.cmeterid)
		      m.cmeterdesc = cmeterdesc
		   ELSE
		      m.cmeterdesc = ''
		   ENDIF
		
		   swSELECT('metersub')
		   SCAN FOR CBATCH == lcBatch
		      SCATTER MEMVAR
		      swSELECT('wells')
		      SET ORDER TO cwellid
		      SEEK m.cwellid
		      m.cwellname = cwellname
		      m.ngasprice = meterall.ngasprice
		      swSELECT('revsrc')
		      LOCATE FOR crevkey = meterall.crevkey
		      IF FOUND()
		         m.cpurchaser = revsrc.crevname
		      ELSE
		         m.cpurchaser = 'Unknown'
		      ENDIF
		      INSERT INTO allprint FROM MEMVAR
		   ENDSCAN
		
		   SELECT allprint
		   GO TOP
		
		   thisform.creportname = 'dmrmetall.frx'
		   thisform.ctitle1     = 'Gas Meter Reconciliation Report'
		   thisform.ctitle2     = ''
		
		ELSE
		   MESSAGEBOX('Problem printing this reconciliation. The recon data can not be found. Please try again and it the problem persists, contact SherWare support.',48,'Meter Reconciliation')
		   llreturn = .f.
		ENDIF 
		
		RETURN llReturn
	ENDPROC

	PROCEDURE Cmdcommandbuttoncustom1.Click
		LOCAL lcList, lnRecNo
		PRIV llOK
		
		llOK = .F.
		
		IF USED('lookuptmp')
		   USE IN lookuptmp
		ENDIF
		IF USED('lookuptmp1')
		   USE IN lookuptmp1
		ENDIF
		
		lcList = 'cBatch\Batch,cmeterid\Meter ID,crevname\Purchaser,dincdate\Date,crefid\Ref,nmaster\Total MCF,ntotalinc\Total'
		
		SELECT meterall.cBatch, ;
		   meterall.cMeterID, ;
		   revsrc.crevname, ;
		   meterall.dincdate, ;
		   meterall.cYear, ;
		   meterall.cPeriod,;
		   meterall.crefid, ;
		   meterall.nMaster, ;
		   meterall.ntotalinc ;
		   FROM meterall,revsrc ;
		   INTO CURSOR lookuptmp1  ;
		   WHERE revsrc.crevkey == meterall.crevkey 
		
		USE DBF('lookuptmp1') AGAIN IN 0 ALIAS lookuptmp EXCL
		
		SELECT lookuptmp
		INDEX ON cBatch TAG cBatch
		INDEX ON cMeterID+cYear+cPeriod TAG cMeterID
		INDEX ON cYear+cPeriod+cMeterID TAG cYear
		INDEX ON nMaster TAG nMaster
		INDEX on crevname TAG crevname
		INDEX on crefid TAG crefid 
		INDEX on ntotalinc TAG ntotalinc
		
		DO FORM ..\CUSTOM\picklist WITH 'lookuptmp', lcList, meterall.cBatch, 7,.T.,.T.
		
		IF llOK
		   thisform.txtMeterID.value = lookuptmp.cmeterid
		   thisform.txtDate.value    = TRANSFORM(lookuptmp.dincdate)
		   thisform.txtMaster.value  = ALLTRIM(TRANSFORM(lookuptmp.nMaster,'999,999.99'))
		   thisform.txtRefID.value   = lookuptmp.crefid
		   thisform.txtAmount.value  = ALLTRIM(TRANSFORM(lookuptmp.ntotalinc,'999,999.99'))
		   thisform.lblbatch.caption = lookuptmp.cbatch
		ENDIF
		
		THISFORM.REFRESH()
		
	ENDPROC

	PROCEDURE txtAmount.When
		RETURN .f.
	ENDPROC

	PROCEDURE txtDate.When
		RETURN .f.
	ENDPROC

	PROCEDURE txtMaster.When
		RETURN .f.
	ENDPROC

	PROCEDURE txtMeterID.When
		RETURN .f.
	ENDPROC

	PROCEDURE txtRefID.When
		RETURN .f.
	ENDPROC

ENDDEFINE
