*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="dmrmlist.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 200
	Left = 34
	Name = "Dataenvironment"
	Top = 469
	Width = 520

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\amdata\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formdmrmlist AS frmrptcriteria OF "..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblLastMeter" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblFirstMeter" UniqueID="" Timestamp="" />

	Caption = "Meter Listing"
	DoCreate = .T.
	Height = 295
	HelpContextID = 657
	Name = "FormDmrmlist"
	Width = 431
	Swrptcriteriabuttons1.chkSendFile.Alignment = 0
	Swrptcriteriabuttons1.chkSendFile.Name = "chkSendFile"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.cmdPreview.Name = "cmdPreview"
	Swrptcriteriabuttons1.CMDPRINT.Name = "CMDPRINT"
	Swrptcriteriabuttons1.Left = 98
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 4
	Swrptcriteriabuttons1.Top = 216
	Swrptcriteriabuttons1.ZOrderSet = 0

	ADD OBJECT 'LblFirstMeter' AS lbllabelcustom WITH ;
		Caption = "First Meter:", ;
		Height = 16, ;
		Left = 75, ;
		Name = "LblFirstMeter", ;
		TabIndex = 2, ;
		TabStop = .F., ;
		Top = 63, ;
		Width = 56, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblLastMeter' AS lbllabelcustom WITH ;
		Caption = "Last Meter:", ;
		Height = 16, ;
		Left = 75, ;
		Name = "LblLastMeter", ;
		TabIndex = 3, ;
		TabStop = .F., ;
		Top = 114, ;
		Width = 56, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		Left = 144, ;
		Name = "Swrptlook1", ;
		TabIndex = 1, ;
		Top = 60, ;
		ZOrderSet = 1, ;
		Swlookupbutton1.Left = 123, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton1.Top = 0, ;
		Swlookupbutton2.Left = 123, ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		Swlookupbutton2.Top = 52, ;
		TxtBegID.clistexpression = meters.cmeterid, ;
		TxtBegID.clistworkarea = meters, ;
		TxtBegID.Format = "", ;
		TxtBegID.Height = 20, ;
		TxtBegID.InputMask = "XXXXXXXXXXXXXXX", ;
		TxtBegID.Left = 0, ;
		TxtBegID.MaxLength = 15, ;
		TxtBegID.Name = "TxtBegID", ;
		TxtBegID.Top = 0, ;
		TxtBegID.Width = 120, ;
		TxtBegName.Name = "TxtBegName", ;
		TxtEndID.clistexpression = meters.cmeterid, ;
		TxtEndID.clistworkarea = meters, ;
		TxtEndID.Format = "", ;
		TxtEndID.Height = 20, ;
		TxtEndID.InputMask = "XXXXXXXXXXXXXXX", ;
		TxtEndID.Left = 0, ;
		TxtEndID.MaxLength = 15, ;
		TxtEndID.Name = "TxtEndID", ;
		TxtEndID.Top = 51, ;
		TxtEndID.Width = 120, ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />
	
	PROCEDURE builddata
		*
		*   Builds the cursor needed by the report by using
		*   the criteria given in the form
		*
		
		IF USED('meterlist')
		   USE IN meterlist
		ENDIF
		
		SELECT meters.cmeterid,  ;
		       meters.cmeterdesc,  ;
		       wells.cwellid,  ;
		       wells.cwellname  ;
		   FROM meters JOIN wells ON meters.cmeterid = wells.cmeterid  ;
		   ORDER BY meters.cmeterid  ;
		   WHERE BETWEEN(meters.cmeterid, this.swrptlook1.txtBegID.value, this.swrptlook1.txtEndID.value)  ;
		   INTO CURSOR meterlist1
		SELECT meters.cmeterid,  ;
		       meters.cmeterdesc,  ;
		       wells.cwellid,  ;
		       wells.cwellname  ;
		   FROM meters JOIN wells ON meters.cmeterid = wells.cmeterid2  ;
		   ORDER BY meters.cmeterid  ;
		   WHERE BETWEEN(meters.cmeterid, this.swrptlook1.txtBegID.value, this.swrptlook1.txtEndID.value)  ;
		   INTO CURSOR meterlist2   
		SELECT meters.cmeterid,  ;
		       meters.cmeterdesc,  ;
		       wells.cwellid,  ;
		       wells.cwellname  ;
		   FROM meters JOIN wells ON meters.cmeterid = wells.cmeterid3  ;
		   ORDER BY meters.cmeterid  ;
		   WHERE BETWEEN(meters.cmeterid, this.swrptlook1.txtBegID.value, this.swrptlook1.txtEndID.value)  ;
		   INTO CURSOR meterlist3   
		SELECT meters.cmeterid,  ;
		       meters.cmeterdesc,  ;
		       wells.cwellid,  ;
		       wells.cwellname  ;
		   FROM meters JOIN wells ON meters.cmeterid = wells.cmeterid4  ;
		   ORDER BY meters.cmeterid  ;
		   WHERE BETWEEN(meters.cmeterid, this.swrptlook1.txtBegID.value, this.swrptlook1.txtEndID.value)  ;
		   INTO CURSOR meterlist4
		SELECT meters.cmeterid,  ;
		       meters.cmeterdesc,  ;
		       wells.cwellid,  ;
		       wells.cwellname  ;
		   FROM meters JOIN wells ON meters.cmeterid = wells.cmeterid5  ;
		   ORDER BY meters.cmeterid  ;
		   WHERE BETWEEN(meters.cmeterid, this.swrptlook1.txtBegID.value, this.swrptlook1.txtEndID.value)  ;
		   INTO CURSOR meterlist5
		
		CREATE CURSOR meterlist ;
		  (cmeterid    C(10), ;
		   cmeterdesc  C(30), ;
		   cwellid     C(10), ;
		   cwellname   C(30))
		 INDEX ON cmeterid+cwellid TAG cmeterid  
		 SELECT meterlist1
		 SCAN
		    SCATTER MEMVAR
		    IF ISNULL(m.cwellid)
		       m.cwellid = ''
		       m.cwellname = ''
		    ENDIF
		    INSERT INTO meterlist FROM memvar
		 ENDSCAN      
		 SELECT meterlist2
		 SCAN
		    SCATTER MEMVAR
		    IF ISNULL(m.cwellid)
		       m.cwellid = ''
		       m.cwellname = ''
		    ENDIF
		    INSERT INTO meterlist FROM memvar
		 ENDSCAN      
		 SELECT meterlist3
		 SCAN
		    SCATTER MEMVAR
		    IF ISNULL(m.cwellid)
		       m.cwellid = ''
		       m.cwellname = ''
		    ENDIF
		    INSERT INTO meterlist FROM memvar
		 ENDSCAN      
		 SELECT meterlist4
		 SCAN
		    SCATTER MEMVAR
		    IF ISNULL(m.cwellid)
		       m.cwellid = ''
		       m.cwellname = ''
		    ENDIF
		    INSERT INTO meterlist FROM memvar
		 ENDSCAN      
		 SELECT meterlist5
		 SCAN
		    SCATTER MEMVAR
		    IF ISNULL(m.cwellid)
		       m.cwellid = ''
		       m.cwellname = ''
		    ENDIF
		    INSERT INTO meterlist FROM memvar
		 ENDSCAN      
		
		   thisform.cTitle1 = ''
		   thisform.cTitle2 = ''
		   thisform.cSelectCriteria = 'Meter ID: ' + ALLTRIM(thisform.swrptlook1.txtBegID.value) +  ;
		                              ' - ' + ALLTRIM(thisform.swrptlook1.txtEndID.value)
		   thisform.cSortOrder = 'Meter ID'                            
		   thisform.cReportName = 'dmrmeter'
		   
		SELECT meterlist
		IF RECC() > 0
		   RETURN .T.
		ELSE
		   RETURN .F.
		ENDIF         
	ENDPROC

	PROCEDURE Init
		IF DODEFAULT()
		   SELECT meters
		   SET ORDER TO meterid
		   GO TOP
		
		   THISFORM.swrptlook1.txtBegName.VALUE = cmeterdesc
		   THISFORM.swrptlook1.txtBegID.VALUE = cmeterid
		   GO BOTTOM
		
		   THISFORM.swrptlook1.txtEndName.VALUE = cmeterdesc
		   THISFORM.swrptlook1.txtEndID.VALUE = cmeterid
		ENDIF
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cmeterid,cmeterdesc'
		
		DO FORM ..\custom\picklist WITH 'Meters', lcList, thisform.swrptlook1.txtbegid.value, 2
		
		IF llOK
		   thisform.swrptlook1.txtBegId.value = cmeterid
		   thisform.swrptlook1.txtBegName.value = cmeterdesc
		   thisform.swrptlook1.txtBegId.SetFocus()
		   thisform.swrptlook1.txtBegId.refresh()
		   thisform.swrptlook1.txtBegName.refresh()
		   
		ENDIF   
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.When
		RETURN MDOWN()
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cmeterid,cmeterdesc'
		
		DO FORM ..\custom\picklist WITH 'Meters', lcList, thisform.swrptlook1.txtendid.value, 2
		
		IF llOK
		   thisform.swrptlook1.txtEndId.value = cmeterid
		   thisform.swrptlook1.txtEndName.value = cmeterdesc
		   thisform.swrptlook1.txtEndId.SetFocus()
		   thisform.swrptlook1.txtEndId.refresh()
		   thisform.swrptlook1.txtEndName.refresh()
		   
		ENDIF   
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.When
		RETURN MDOWN()
	ENDPROC

ENDDEFINE
