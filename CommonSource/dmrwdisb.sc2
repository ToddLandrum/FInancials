*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="dmrwdisb.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor9" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 399
	Left = 171
	Name = "Dataenvironment"
	Top = 219
	Width = 520

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "groups", ;
		CursorSource = "groups", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "wellhist", ;
		CursorSource = "wellhist", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "options", ;
		CursorSource = "options", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor4", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "programs", ;
		CursorSource = "programs", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor5", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "glopt", ;
		CursorSource = "glopt", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor6", ;
		Top = 140, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor7' AS cursor WITH ;
		Alias = "disbhist", ;
		CursorSource = "disbhist", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor7", ;
		Top = 260, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor8' AS cursor WITH ;
		Alias = "suspense", ;
		CursorSource = "suspense", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor8", ;
		Top = 260, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor9' AS cursor WITH ;
		Alias = "sysctl", ;
		CursorSource = "sysctl", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor9", ;
		Top = 260, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formdmrwdisb AS frmrptcriteria OF "..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="LblBegPeriod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblEndPeriod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swyear1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swyear2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swperiod1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swperiod2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="opgRange" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklDirTot" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swgroup1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Glmaint" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblBegYear" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblEndYear" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBegID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEndID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblGroup" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblAccDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblRange" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="opgSortBy" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklNewPage" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtDate1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtDate2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklSuspense" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkDataEarned" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSelected" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSelected" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: builddataearned
	*</DefinedPropArrayMethod>

	Caption = "Disbursements By Well"
	DoCreate = .T.
	Height = 557
	HelpContextID = 205
	Name = "FormDmrwdisb"
	Width = 528
	Swrptcriteriabuttons1.chkExport.Alignment = 0
	Swrptcriteriabuttons1.chkExport.Name = "chkExport"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.CMDPREVIEW.Name = "CMDPREVIEW"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 132
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 26
	Swrptcriteriabuttons1.Top = 478
	Swrptcriteriabuttons1.ZOrderSet = 0

	ADD OBJECT 'chkDataEarned' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Only Include Amounts Processed During Range", ;
		Left = 252, ;
		Name = "chkDataEarned", ;
		TabIndex = 25, ;
		Top = 442, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklDirTot' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Include Direct Paid Oil and Gas", ;
		Left = 252, ;
		Name = "chklDirTot", ;
		TabIndex = 23, ;
		Top = 406, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklNewPage' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Start a New Page For Each Well", ;
		Left = 36, ;
		Name = "chklNewPage", ;
		TabIndex = 24, ;
		Top = 442, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklSuspense' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Include Owner Data Still in Suspense", ;
		Left = 36, ;
		Name = "chklSuspense", ;
		TabIndex = 22, ;
		Top = 406, ;
		Value = .T.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSelected' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Choose Selected Wells", ;
		Left = 190, ;
		Name = "chkSelected", ;
		TabIndex = 16, ;
		Top = 229, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Glmaint' AS glmaint WITH ;
		Height = 24, ;
		Left = 373, ;
		Name = "Glmaint", ;
		Top = 73, ;
		Width = 24
		*< END OBJECT: ClassLib="..\custom\swgl.vcx" BaseClass="custom" />

	ADD OBJECT 'LblAccDate' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Accounting Date:", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 104, ;
		Name = "LblAccDate", ;
		TabIndex = 13, ;
		Top = 192, ;
		Width = 85, ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblBegID' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "First Well:", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 140, ;
		Name = "lblBegID", ;
		TabIndex = 18, ;
		Top = 261, ;
		Width = 49, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblBegPeriod' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Period:", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 261, ;
		Name = "LblBegPeriod", ;
		TabIndex = 8, ;
		Top = 141, ;
		Width = 35, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblBegYear' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Beginning Year:", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 110, ;
		Name = "LblBegYear", ;
		TabIndex = 7, ;
		Top = 141, ;
		Width = 79, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblEndID' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Last Well:", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 140, ;
		Name = "lblEndID", ;
		TabIndex = 19, ;
		Top = 311, ;
		Width = 49, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblEndPeriod' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Period:", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 261, ;
		Name = "LblEndPeriod", ;
		TabIndex = 12, ;
		Top = 165, ;
		Width = 35, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblEndYear' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Ending Year:", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 125, ;
		Name = "LblEndYear", ;
		TabIndex = 11, ;
		Top = 165, ;
		Width = 64, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblGroup' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Group:", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 154, ;
		Name = "LblGroup", ;
		TabIndex = 21, ;
		Top = 369, ;
		Width = 35, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "-", ;
		FontBold = .T., ;
		Height = 16, ;
		Left = 309, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 16, ;
		Top = 194, ;
		Width = 6
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblRange' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Report Range:", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 118, ;
		Name = "LblRange", ;
		TabIndex = 4, ;
		Top = 64, ;
		Width = 71, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSelected' AS lbllabelcustom WITH ;
		Caption = "All IDs Selected", ;
		ForeColor = 0,0,255, ;
		Left = 189, ;
		Name = "lblSelected", ;
		TabIndex = 19, ;
		Top = 295, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom1' AS lbltextcustom WITH ;
		Caption = "Sort By:", ;
		Left = 148, ;
		Name = "Lbltextcustom1", ;
		TabIndex = 2, ;
		Top = 15
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'opgRange' AS swrange_py_ay_ad WITH ;
		Left = 198, ;
		Name = "opgRange", ;
		TabIndex = 3, ;
		Top = 59, ;
		ZOrderSet = 8, ;
		AccDate.Left = 5, ;
		AccDate.Name = "AccDate", ;
		AccDate.Top = 51, ;
		AccYear.Left = 5, ;
		AccYear.Name = "AccYear", ;
		AccYear.Top = 28, ;
		ProdYear.Left = 5, ;
		ProdYear.Name = "ProdYear", ;
		ProdYear.Top = 5, ;
		ProdYear.Value = 1
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'opgSortBy' AS opgoptiongroupcustom WITH ;
		AutoSize = .T., ;
		BorderStyle = 0, ;
		ButtonCount = 2, ;
		Height = 45, ;
		Left = 198, ;
		Name = "opgSortBy", ;
		TabIndex = 1, ;
		Top = 9, ;
		Value = 1, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = " Well ID", ;
		Option1.FontSize = 8, ;
		Option1.Height = 16, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Top = 5, ;
		Option1.Value = 1, ;
		Option1.Width = 53, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = " Well Name", ;
		Option2.FontSize = 8, ;
		Option2.Height = 16, ;
		Option2.Left = 5, ;
		Option2.Name = "Option2", ;
		Option2.Top = 24, ;
		Option2.Width = 71
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'Swgroup1' AS swgroup WITH ;
		Left = 204, ;
		Name = "Swgroup1", ;
		TabIndex = 20, ;
		Top = 367, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Swperiod1' AS swperiod WITH ;
		Left = 303, ;
		Name = "Swperiod1", ;
		TabIndex = 6, ;
		Top = 139, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'Swperiod2' AS swperiod WITH ;
		Left = 303, ;
		Name = "Swperiod2", ;
		TabIndex = 10, ;
		Top = 163, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		Left = 204, ;
		Name = "Swrptlook1", ;
		TabIndex = 17, ;
		Top = 257, ;
		ZOrderSet = 5, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		txtBegID.clistexpression = wells.cwellid, ;
		txtBegID.clistworkarea = wells, ;
		txtBegID.Name = "txtBegID", ;
		TxtBegName.Name = "TxtBegName", ;
		txtEndID.clistexpression = wells.cwellid, ;
		txtEndID.clistworkarea = wells, ;
		txtEndID.Name = "txtEndID", ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />

	ADD OBJECT 'Swyear1' AS swyear WITH ;
		Left = 204, ;
		Name = "Swyear1", ;
		TabIndex = 5, ;
		Top = 139, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'Swyear2' AS swyear WITH ;
		Left = 204, ;
		Name = "Swyear2", ;
		TabIndex = 9, ;
		Top = 163, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtDate1' AS dpk WITH ;
		ControlSource = "", ;
		Enabled = .F., ;
		Height = 20, ;
		Left = 204, ;
		Name = "txtDate1", ;
		TabIndex = 14, ;
		Top = 192, ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtDate2' AS dpk WITH ;
		ControlSource = "", ;
		Enabled = .F., ;
		Height = 20, ;
		Left = 324, ;
		Name = "txtDate2", ;
		TabIndex = 15, ;
		Top = 192, ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />
	
	PROCEDURE builddata
		LOCAL tnType, tcWell1, tcWell2, tcYear1, tcYear2, tcPeriod1, tcPeriod2, tdDate1, tdDate2, tcGroup
		LOCAL oProgress, lnMax, lnCount
		
		IF thisform.chkDataEarned.value
		   thisform.builddataearned()
		   RETURN
		ENDIF 
		
		IF USED('disbchk')
		    USE IN disbchk
		ENDIF
		IF USED('disbchk1')
		    USE IN disbchk1
		ENDIF
		IF USED('disbchks')
		    USE IN disbchks
		ENDIF
		
		tnType     = THISFORM.opgRange.VALUE
		tcWell1    = THISFORM.swrptlook1.txtBegID.VALUE
		tcWell2    = THISFORM.swrptlook1.txtEndID.VALUE
		tcYear1    = THISFORM.swYear1.VALUE
		tcYear2    = THISFORM.swYear2.VALUE
		tcPeriod1  = THISFORM.swPeriod1.VALUE
		tcPeriod2  = THISFORM.swPeriod2.VALUE
		tdDate1    = THISFORM.txtDate1.VALUE
		tdDate2    = THISFORM.txtDate2.VALUE
		tcGroup    = LEFT(THISFORM.swGroup1.VALUE, 2)
		llDirTot   = THISFORM.chklDirTot.VALUE
		m.lIncSusp = THISFORM.chklsuspense.VALUE
		llSelected = thisform.chkselected.Value 
		
		THISFORM.cTitle1         = 'Disbursements By Well'
		THISFORM.cSelectCriteria = 'Wells: ' + ALLTRIM(tcWell1) + ' - ' + ALLTRIM(tcWell2) + '   Group: ' + tcGroup
		THISFORM.cSortOrder      = 'Well ID'
		IF THISFORM.chklNewPage.VALUE = .F.
		    THISFORM.cReportName = 'dmrwdisb'
		ELSE
		    THISFORM.cReportName = 'dmrwdisb1'
		ENDIF
		
		DO CASE
		    CASE tnType = 1
		        THISFORM.cTitle2 = 'For Production Year: ' + tcYear1 + '/' + tcPeriod1 + '-' + tcYear2 + '/' + tcPeriod2
		    CASE tnType = 2
		        THISFORM.cTitle2 = 'For Accounting Year: ' + tcYear1 + '/' + tcPeriod1 + '-' + tcYear2 + '/' + tcPeriod2
		    CASE tnType = 3
		        THISFORM.cTitle2 = 'For Date Range: ' + DTOC(tdDate1) + '-' + DTOC(tdDate2)
		ENDCASE
		
		oProgress = THISFORM.oMessage.ProgressBar('Building Well Disbursement File...')
		
		IF NOT llSelected
		   SELECT cwellid as cid FROM wells ;
		      WHERE BETWEEN(cwellid,tcWell1,tcWell2) ;
		      INTO CURSOR selected ;
		      ORDER BY cid
		ENDIF 
		
		CREATE CURSOR disbchks ;
		    (cOwnerID        C(10), ;
		      cOwnName        C(40), ;
		      CMONTH           C(10), ;
		      cWellID          C(10), ;
		      lSuspense        L,  ;
		      lIncSusp         L,  ;
		      nIncome          N(12, 2), ;
		      nOilRev          N(12, 2), ;
		      nGasRev          N(12, 2), ;
		      cDirect          C(1),  ;
		      nOtherRev          N(12, 2), ;
		      cTypeInv         C(1), ;
		      cTypeInt         C(1), ;
		      nExpense         N(12, 2), ;
		      nSevTaxes        N(12, 2), ;
		      nNetCheck        N(12, 2), ;
		      nGather          N(12, 2), ;
		      nCompress        N(12, 2), ;
		      hyear           C(4), ;
		      hperiod         C(2), ;
		      cProgCode        C(10), ;
		      cProgName        C(40), ;
		      cWellName        C(30))
		
		IF THISFORM.opgSortBy.VALUE = 2  &&  Well Name
		    INDEX ON cWellName + cTypeInv + cOwnerID TAG wellinv
		ELSE
		    INDEX ON cWellID + cTypeInv + cOwnerID TAG wellinv
		ENDIF
		
		DO CASE
		    CASE tnType = 1   && By Production Year
		        IF llDirTot
					SELECT  disbhist.cOwnerID, ;
							investor.cOwnName, ;
							disbhist.cWellID, ;
							SUM(disbhist.nIncome) AS nIncome, ;
							SUM(nOilRev) AS nOilRev, ;
							SUM(nGasRev) AS nGasRev, ;
							SUM(disbhist.nTrpRev + disbhist.nMiscRev1 + disbhist.nMiscRev2 + disbhist.nothrev + disbhist.nFlatRate) AS nOtherRev, ;
							disbhist.cTypeInv, ;
							disbhist.cTypeInt, ;
							disbhist.cDirect,  ;
							SUM(disbhist.nExpense + ;
								disbhist.nTotale1 + ;
								disbhist.nTotale2 + ;
								disbhist.nTotale3 + ;
								disbhist.nTotale4 + ;
								disbhist.nTotale5 + ;
								disbhist.ntotaleA + ;
								disbhist.ntotaleB + ;
								disbhist.nmktgexp) AS nExpense,  ;
							SUM(disbhist.nSevTaxes) AS nSevTaxes, ;
							SUM(disbhist.nNetCheck) AS nNetCheck, ;
							disbhist.hyear,    ;
							disbhist.hperiod, ;
							disbhist.cProgCode, ;
							SUM(disbhist.nGather) AS nGather, ;
							SUM(disbhist.nCompress) AS nCompress, ;
							wells.cWellName ;
						FROM disbhist, wells, investor ;
						WHERE BETWEEN(hyear + hperiod, tcYear1 + tcPeriod1, tcYear2 + tcPeriod2)   ;
							AND disbhist.cWellID in (SELECT cid FROM selected) ;
							AND IIF(tcGroup <> '**', disbhist.cgroup = tcGroup, .T.) ;
							AND investor.cOwnerID = disbhist.cOwnerID  ;
							AND wells.cWellID = disbhist.cWellID ;
							AND disbhist.crectype # 'P' ;
							AND (lManual = .F. OR ;
							  (lManual = .T. ;
								AND crunyear_in + PADL(TRANSFORM(nrunno_in), 3, '0') ;
								NOT IN (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
											FROM sysctl ;
											WHERE EMPTY(cversion) ;
												AND cTypeClose = 'R'))) ;
							AND NOT investor.ldummy  ;
						INTO CURSOR disbchk1 READWRITE ;
						ORDER BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt;
						GROUP BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt, disbhist.cDirect
		
		            IF m.lIncSusp  &&  Including Suspense Entries
						SELECT  suspense.cOwnerID, ;
								investor.cOwnName, ;
								suspense.cWellID, ;
								.T. AS lSuspense,  ;
								SUM(suspense.nIncome) AS nIncome, ;
								SUM(nOilRev) AS nOilRev, ;
								SUM(nGasRev) AS nGasRev, ;
								SUM(suspense.nTrpRev + suspense.nMiscRev1 + suspense.nMiscRev2 + suspense.nothrev + suspense.nFlatRate) AS nOtherRev, ;
								suspense.cTypeInv, ;
								suspense.cTypeInt, ;
								suspense.cDirect,  ;
								SUM(suspense.nExpense + ;
									suspense.nTotale1 + ;
									suspense.nTotale2 + ;
									suspense.nTotale3 + ;
									suspense.nTotale4 + ;
									suspense.nTotale5 + ;
									suspense.ntotaleA + ;
									suspense.ntotaleB + ;
									suspense.nmktgexp) AS nExpense,  ;
								SUM(suspense.nSevTaxes) AS nSevTaxes, ;
								SUM(suspense.nNetCheck) AS nNetCheck, ;
								suspense.hyear,    ;
								suspense.hperiod, ;
								suspense.cProgCode, ;
								SUM(suspense.nGather) AS nGather, ;
								SUM(suspense.nCompress) AS nCompress, ;
								wells.cWellName ;
							FROM suspense, wells, investor ;
							WHERE BETWEEN(hyear + hperiod, tcYear1 + tcPeriod1, tcYear2 + tcPeriod2)   ;
								AND suspense.cWellID in (SELECT cid FROM selected) ;
								AND IIF(tcGroup <> '**', suspense.cgroup = tcGroup, .T.) ;
								AND investor.cOwnerID = suspense.cOwnerID  ;
								AND wells.cWellID = suspense.cWellID ;
								AND suspense.crectype # 'P' ;
								AND (lManual = .F. OR ;
								  (lManual = .T. ;
									AND crunyear_in + PADL(TRANSFORM(nrunno_in), 3, '0') ;
									NOT IN (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
												FROM sysctl ;
												WHERE EMPTY(cversion) ;
													AND cTypeClose = 'R'))) ;
								AND NOT investor.ldummy  ;
							INTO CURSOR disbchk2 READWRITE;
							ORDER BY suspense.cWellID, suspense.cTypeInv, suspense.cOwnerID, suspense.cTypeInt;
							GROUP BY suspense.cWellID, suspense.cTypeInv, suspense.cOwnerID, suspense.cTypeInt, suspense.cDirect
		
		
		            ENDIF
		
		        ELSE
					SELECT  disbhist.cOwnerID, ;
							investor.cOwnName, ;
							disbhist.cWellID, ;
							SUM(disbhist.nIncome) AS nIncome, ;
							IIF(cDirect <> 'O', IIF(cDirect <> 'B', SUM(nOilRev), 000000.00), 000000.00) AS nOilRev, ;
							IIF(cDirect <> 'G', IIF(cDirect <> 'B', SUM(nGasRev), 000000.00), 000000.00) AS nGasRev, ;
							SUM(disbhist.nTrpRev + disbhist.nMiscRev1 + disbhist.nMiscRev2 + disbhist.nothrev + disbhist.nFlatRate) AS nOtherRev, ;
							disbhist.cDirect,  ;
							disbhist.cTypeInv, ;
							disbhist.cTypeInt, ;
							SUM(disbhist.nExpense + ;
								disbhist.nTotale1 + ;
								disbhist.nTotale2 + ;
								disbhist.nTotale3 + ;
								disbhist.nTotale4 + ;
								disbhist.nTotale5 + ;
								disbhist.ntotaleA + ;
								disbhist.ntotaleB + ;
								disbhist.nmktgexp) AS nExpense,  ;
							SUM(disbhist.nSevTaxes) AS nSevTaxes, ;
							SUM(disbhist.nNetCheck) AS nNetCheck, ;
							disbhist.hyear,    ;
							disbhist.hperiod, ;
							disbhist.cProgCode, ;
							SUM(disbhist.nGather) AS nGather, ;
							SUM(disbhist.nCompress) AS nCompress, ;
							wells.cWellName ;
						FROM disbhist, wells, investor ;
						WHERE BETWEEN(hyear + hperiod, tcYear1 + tcPeriod1, tcYear2 + tcPeriod2)   ;
							AND disbhist.cWellID in (SELECT cid FROM selected) ;
							AND IIF(tcGroup <> '**', disbhist.cgroup = tcGroup, .T.) ;
							AND investor.cOwnerID = disbhist.cOwnerID  ;
							AND wells.cWellID = disbhist.cWellID ;
							AND disbhist.crectype # 'P' ;
							AND (lManual = .F. OR ;
							  (lManual = .T. ;
								AND crunyear_in + PADL(TRANSFORM(nrunno_in), 3, '0') ;
								NOT IN (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
											FROM sysctl ;
											WHERE EMPTY(cversion) ;
												AND cTypeClose = 'R'))) ;
							AND NOT investor.ldummy  ;
						INTO CURSOR disbchk1 READWRITE ;
						ORDER BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt;
						GROUP BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt, disbhist.cDirect
		
		            IF m.lIncSusp  &&  Including Suspense Entries
						SELECT  suspense.cOwnerID, ;
								investor.cOwnName, ;
								suspense.cWellID, ;
								.T. AS lSuspense,  ;
								SUM(suspense.nIncome) AS nIncome, ;
								IIF(cDirect <> 'O', IIF(cDirect <> 'B', SUM(nOilRev), 000000.00), 000000.00) AS nOilRev, ;
								IIF(cDirect <> 'G', IIF(cDirect <> 'B', SUM(nGasRev), 000000.00), 000000.00) AS nGasRev, ;
								SUM(suspense.nTrpRev + suspense.nMiscRev1 + suspense.nMiscRev2 + suspense.nothrev + suspense.nFlatRate) AS nOtherRev, ;
								suspense.cDirect,  ;
								suspense.cTypeInv, ;
								suspense.cTypeInt, ;
								SUM(suspense.nExpense + ;
									suspense.nTotale1 + ;
									suspense.nTotale2 + ;
									suspense.nTotale3 + ;
									suspense.nTotale4 + ;
									suspense.nTotale5 + ;
									suspense.ntotaleA + ;
									suspense.ntotaleB + ;
									suspense.nmktgexp) AS nExpense,  ;
								SUM(suspense.nSevTaxes) AS nSevTaxes, ;
								SUM(suspense.nNetCheck) AS nNetCheck, ;
								suspense.hyear,    ;
								suspense.hperiod, ;
								suspense.cProgCode, ;
								SUM(suspense.nGather) AS nGather, ;
								SUM(suspense.nCompress) AS nCompress, ;
								wells.cWellName ;
							FROM suspense, wells, investor ;
							WHERE BETWEEN(hyear + hperiod, tcYear1 + tcPeriod1, tcYear2 + tcPeriod2)   ;
								AND suspense.cWellID in (SELECT cid FROM selected) ;
								AND IIF(tcGroup <> '**', suspense.cgroup = tcGroup, .T.) ;
								AND investor.cOwnerID = suspense.cOwnerID  ;
								AND wells.cWellID = suspense.cWellID ;
								AND suspense.crectype # 'P' ;
								AND (lManual = .F. OR ;
								  (lManual = .T. ;
									AND crunyear_in + PADL(TRANSFORM(nrunno_in), 3, '0') ;
									NOT IN (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
												FROM sysctl ;
												WHERE EMPTY(cversion) ;
													AND cTypeClose = 'R'))) ;
								AND NOT investor.ldummy  ;
							INTO CURSOR disbchk2 READWRITE  ;
							ORDER BY suspense.cWellID, suspense.cTypeInv, suspense.cOwnerID, suspense.cTypeInt;
							GROUP BY suspense.cWellID, suspense.cTypeInv, suspense.cOwnerID, suspense.cTypeInt, suspense.cDirect
		            ENDIF
		        ENDIF
		
		    CASE tnType = 2      && Accounting Year
		        ldBegDate = THISFORM.glmaint.getdate(tcYear1, tcPeriod1)
		        ldEndDate = GOMONTH(THISFORM.glmaint.getdate(tcYear2, tcPeriod2), 1) - 1
		        IF llDirTot
					SELECT  disbhist.cOwnerID, ;
							investor.cOwnName, ;
							disbhist.cWellID, ;
							SUM(disbhist.nIncome) AS nIncome, ;
							SUM(nOilRev) AS nOilRev, ;
							SUM(nGasRev) AS nGasRev, ;
							SUM(disbhist.nTrpRev + disbhist.nMiscRev1 + disbhist.nMiscRev2 + disbhist.nothrev + disbhist.nFlatRate) AS nOtherRev, ;
							disbhist.cTypeInv, ;
							disbhist.cTypeInt, ;
							disbhist.cDirect,  ;
							SUM(disbhist.nExpense + ;
								disbhist.nTotale1 + ;
								disbhist.nTotale2 + ;
								disbhist.nTotale3 + ;
								disbhist.nTotale4 + ;
								disbhist.nTotale5 + ;
								disbhist.ntotaleA + ;
								disbhist.ntotaleB + ;
								disbhist.nmktgexp) AS nExpense,  ;
							SUM(disbhist.nSevTaxes) AS nSevTaxes, ;
							SUM(disbhist.nNetCheck) AS nNetCheck, ;
							disbhist.hyear,    ;
							disbhist.hperiod, ;
							disbhist.cProgCode, ;
							SUM(disbhist.nGather) AS nGather, ;
							SUM(disbhist.nCompress) AS nCompress, ;
							wells.cWellName ;
						FROM disbhist, wells, investor ;
						WHERE disbhist.crunyear + PADL(TRANSFORM(disbhist.nrunno), 3, '0') + disbhist.crectype IN ;
							(SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + cTypeClose ;
								 FROM sysctl ;
								 WHERE BETWEEN(dAcctDate, ldBegDate, ldEndDate)) ;
							AND disbhist.cWellID in (SELECT cid FROM selected) ;
							AND IIF(tcGroup <> '**', disbhist.cgroup = tcGroup, .T.) ;
							AND investor.cOwnerID = disbhist.cOwnerID  ;
							AND wells.cWellID = disbhist.cWellID ;
							AND disbhist.crectype # 'P' ;
							AND (lManual = .F. OR ;
							  (lManual = .T. ;
								AND crunyear_in + PADL(TRANSFORM(nrunno_in), 3, '0') ;
								NOT IN (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
											FROM sysctl ;
											WHERE EMPTY(cversion) ;
												AND cTypeClose = 'R'))) ;
							AND NOT investor.ldummy  ;
						INTO CURSOR disbchk1 READWRITE ;
						ORDER BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt;
						GROUP BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt, disbhist.cDirect
		
		            IF m.lIncSusp
						SELECT  suspense.cOwnerID, ;
								investor.cOwnName, ;
								suspense.cWellID, ;
								.T. AS lSuspense,  ;
								SUM(suspense.nIncome) AS nIncome, ;
								SUM(nOilRev) AS nOilRev, ;
								SUM(nGasRev) AS nGasRev, ;
								SUM(suspense.nTrpRev + suspense.nMiscRev1 + suspense.nMiscRev2 + suspense.nothrev + suspense.nFlatRate) AS nOtherRev, ;
								suspense.cTypeInv, ;
								suspense.cTypeInt, ;
								suspense.cDirect,  ;
								SUM(suspense.nExpense + ;
									suspense.nTotale1 + ;
									suspense.nTotale2 + ;
									suspense.nTotale3 + ;
									suspense.nTotale4 + ;
									suspense.nTotale5 + ;
									suspense.ntotaleA + ;
									suspense.ntotaleB + ;
									suspense.nmktgexp) AS nExpense,  ;
								SUM(suspense.nSevTaxes) AS nSevTaxes, ;
								SUM(suspense.nNetCheck) AS nNetCheck, ;
								suspense.hyear,    ;
								suspense.hperiod, ;
								suspense.cProgCode, ;
								SUM(suspense.nGather) AS nGather, ;
								SUM(suspense.nCompress) AS nCompress, ;
								wells.cWellName ;
							FROM suspense, wells, investor ;
							WHERE suspense.crunyear_in + PADL(TRANSFORM(suspense.nrunno_in), 3, '0') + suspense.crectype IN ;
								(SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + cTypeClose ;
									 FROM sysctl ;
									 WHERE BETWEEN(dAcctDate, ldBegDate, ldEndDate)) ;
								AND suspense.cWellID in (SELECT cid FROM selected) ;
								AND IIF(tcGroup <> '**', suspense.cgroup = tcGroup, .T.) ;
								AND investor.cOwnerID = suspense.cOwnerID  ;
								AND wells.cWellID = suspense.cWellID ;
								AND suspense.crectype # 'P' ;
								AND (lManual = .F. OR ;
								  (lManual = .T. ;
									AND crunyear_in + PADL(TRANSFORM(nrunno_in), 3, '0') ;
									NOT IN (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
												FROM sysctl ;
												WHERE EMPTY(cversion) ;
													AND cTypeClose = 'R'))) ;
								AND NOT investor.ldummy  ;
							INTO CURSOR disbchk2 READWRITE  ;
							ORDER BY suspense.cWellID, suspense.cTypeInv, suspense.cOwnerID, suspense.cTypeInt;
							GROUP BY suspense.cWellID, suspense.cTypeInv, suspense.cOwnerID, suspense.cTypeInt, suspense.cDirect
		
						SELECT  disbhist.cOwnerID, ;
								investor.cOwnName, ;
								disbhist.cWellID, ;
								SUM(disbhist.nIncome) AS nIncome, ;
								SUM(nOilRev) AS nOilRev, ;
								SUM(nGasRev) AS nGasRev, ;
								SUM(disbhist.nTrpRev + disbhist.nMiscRev1 + disbhist.nMiscRev2 + disbhist.nothrev + disbhist.nFlatRate) AS nOtherRev, ;
								disbhist.cTypeInv, ;
								disbhist.cTypeInt, ;
								disbhist.cDirect,  ;
								SUM(disbhist.nExpense + ;
									disbhist.nTotale1 + ;
									disbhist.nTotale2 + ;
									disbhist.nTotale3 + ;
									disbhist.nTotale4 + ;
									disbhist.nTotale5 + ;
									disbhist.ntotaleA + ;
									disbhist.ntotaleB + ;
									disbhist.nmktgexp) AS nExpense,  ;
								SUM(disbhist.nSevTaxes) AS nSevTaxes, ;
								SUM(disbhist.nNetCheck) AS nNetCheck, ;
								disbhist.hyear,    ;
								disbhist.hperiod, ;
								disbhist.cProgCode, ;
								SUM(disbhist.nGather) AS nGather, ;
								SUM(disbhist.nCompress) AS nCompress, ;
								wells.cWellName ;
							FROM disbhist, wells, investor ;
							WHERE disbhist.crunyear_in + PADL(TRANSFORM(disbhist.nrunno_in), 3, '0') + disbhist.crectype IN ;
								(SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + cTypeClose ;
									 FROM sysctl ;
									 WHERE BETWEEN(dAcctDate, ldBegDate, ldEndDate)) ;
								AND disbhist.cWellID in (SELECT cid FROM selected) ;
								AND IIF(tcGroup <> '**', disbhist.cgroup = tcGroup, .T.) ;
								AND investor.cOwnerID = disbhist.cOwnerID  ;
								AND wells.cWellID = disbhist.cWellID ;
								AND disbhist.crectype # 'P' ;
								AND (lManual = .F. OR ;
								  (lManual = .T. ;
									AND crunyear_in + PADL(TRANSFORM(nrunno_in), 3, '0') ;
									NOT IN (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
												FROM sysctl ;
												WHERE EMPTY(cversion) ;
													AND cTypeClose = 'R'))) ;
								AND NOT investor.ldummy  ;
							INTO CURSOR disbchk3 READWRITE ;
							ORDER BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt;
							GROUP BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt, disbhist.cDirect
		            ENDIF
		
		        ELSE
					SELECT  disbhist.cOwnerID, ;
							investor.cOwnName, ;
							disbhist.cWellID, ;
							SUM(disbhist.nIncome) AS nIncome, ;
							IIF(cDirect <> 'O', IIF(cDirect <> 'B', SUM(nOilRev), 000000.00), 000000.00) AS nOilRev, ;
							IIF(cDirect <> 'G', IIF(cDirect <> 'B', SUM(nGasRev), 000000.00), 000000.00) AS nGasRev, ;
							SUM(disbhist.nTrpRev + disbhist.nMiscRev1 + disbhist.nMiscRev2 + disbhist.nothrev + disbhist.nFlatRate) AS nOtherRev, ;
							disbhist.cDirect,  ;
							disbhist.cTypeInv, ;
							disbhist.cTypeInt, ;
							SUM(disbhist.nExpense + ;
								disbhist.nTotale1 + ;
								disbhist.nTotale2 + ;
								disbhist.nTotale3 + ;
								disbhist.nTotale4 + ;
								disbhist.nTotale5 + ;
								disbhist.ntotaleA + ;
								disbhist.ntotaleB + ;
								disbhist.nmktgexp) AS nExpense,  ;
							SUM(disbhist.nSevTaxes) AS nSevTaxes, ;
							SUM(disbhist.nNetCheck) AS nNetCheck, ;
							disbhist.hyear,    ;
							disbhist.hperiod, ;
							disbhist.cProgCode, ;
							SUM(disbhist.nGather) AS nGather, ;
							SUM(disbhist.nCompress) AS nCompress, ;
							wells.cWellName ;
						FROM disbhist, wells, investor ;
						WHERE disbhist.crunyear + PADL(TRANSFORM(disbhist.nrunno), 3, '0') + disbhist.crectype IN ;
							(SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + cTypeClose ;
								 FROM sysctl ;
								 WHERE BETWEEN(dAcctDate, ldBegDate, ldEndDate)) ;
							AND disbhist.cWellID in (SELECT cid FROM selected) ;
							AND IIF(tcGroup <> '**', disbhist.cgroup = tcGroup, .T.) ;
							AND investor.cOwnerID = disbhist.cOwnerID  ;
							AND wells.cWellID = disbhist.cWellID ;
							AND disbhist.crectype # 'P' ;
							AND (lManual = .F. OR ;
							  (lManual = .T. ;
								AND crunyear_in + PADL(TRANSFORM(nrunno_in), 3, '0') ;
								NOT IN (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
											FROM sysctl ;
											WHERE EMPTY(cversion) ;
												AND cTypeClose = 'R'))) ;
							AND NOT investor.ldummy  ;
						INTO CURSOR disbchk1 READWRITE ;
						ORDER BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt;
						GROUP BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt, disbhist.cDirect
		
		            IF m.lIncSusp  &&  Including Suspense entries
						SELECT  suspense.cOwnerID, ;
								investor.cOwnName, ;
								suspense.cWellID, ;
								.T. AS lSuspense,  ;
								SUM(suspense.nIncome) AS nIncome, ;
								IIF(cDirect <> 'O', IIF(cDirect <> 'B', SUM(nOilRev), 000000.00), 000000.00) AS nOilRev, ;
								IIF(cDirect <> 'G', IIF(cDirect <> 'B', SUM(nGasRev), 000000.00), 000000.00) AS nGasRev, ;
								SUM(suspense.nTrpRev + suspense.nMiscRev1 + suspense.nMiscRev2 + suspense.nothrev + suspense.nFlatRate) AS nOtherRev, ;
								suspense.cDirect,  ;
								suspense.cTypeInv, ;
								suspense.cTypeInt, ;
								SUM(suspense.nExpense + ;
									suspense.nTotale1 + ;
									suspense.nTotale2 + ;
									suspense.nTotale3 + ;
									suspense.nTotale4 + ;
									suspense.nTotale5 + ;
									suspense.ntotaleA + ;
									suspense.ntotaleB + ;
									suspense.nmktgexp) AS nExpense,  ;
								SUM(suspense.nSevTaxes) AS nSevTaxes, ;
								SUM(suspense.nNetCheck) AS nNetCheck, ;
								suspense.hyear,    ;
								suspense.hperiod, ;
								suspense.cProgCode, ;
								SUM(suspense.nGather) AS nGather, ;
								SUM(suspense.nCompress) AS nCompress, ;
								wells.cWellName ;
							FROM suspense, wells, investor ;
							WHERE suspense.crunyear_in + PADL(TRANSFORM(suspense.nrunno_in), 3, '0') + suspense.crectype IN ;
								(SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + cTypeClose ;
									 FROM sysctl ;
									 WHERE BETWEEN(dAcctDate, ldBegDate, ldEndDate)) ;
								AND suspense.cWellID in (SELECT cid FROM selected) ;
								AND IIF(tcGroup <> '**', suspense.cgroup = tcGroup, .T.) ;
								AND investor.cOwnerID = suspense.cOwnerID  ;
								AND wells.cWellID = suspense.cWellID ;
								AND suspense.crectype # 'P' ;
								AND (lManual = .F. OR ;
								  (lManual = .T. ;
									AND crunyear_in + PADL(TRANSFORM(nrunno_in), 3, '0') ;
									NOT IN (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
												FROM sysctl ;
												WHERE EMPTY(cversion) ;
													AND cTypeClose = 'R'))) ;
								AND NOT investor.ldummy  ;
							INTO CURSOR disbchk2 READWRITE  ;
							ORDER BY suspense.cWellID, suspense.cTypeInv, suspense.cOwnerID, suspense.cTypeInt;
							GROUP BY suspense.cWellID, suspense.cTypeInv, suspense.cOwnerID, suspense.cTypeInt, suspense.cDirect
		
						SELECT  disbhist.cOwnerID, ;
								investor.cOwnName, ;
								disbhist.cWellID, ;
								SUM(disbhist.nIncome) AS nIncome, ;
								IIF(cDirect <> 'O', IIF(cDirect <> 'B', SUM(nOilRev), 000000.00), 000000.00) AS nOilRev, ;
								IIF(cDirect <> 'G', IIF(cDirect <> 'B', SUM(nGasRev), 000000.00), 000000.00) AS nGasRev, ;
								SUM(disbhist.nTrpRev + disbhist.nMiscRev1 + disbhist.nMiscRev2 + disbhist.nothrev + disbhist.nFlatRate) AS nOtherRev, ;
								disbhist.cDirect,  ;
								disbhist.cTypeInv, ;
								disbhist.cTypeInt, ;
								SUM(disbhist.nExpense + ;
									disbhist.nTotale1 + ;
									disbhist.nTotale2 + ;
									disbhist.nTotale3 + ;
									disbhist.nTotale4 + ;
									disbhist.nTotale5 + ;
									disbhist.ntotaleA + ;
									disbhist.ntotaleB + ;
									disbhist.nmktgexp) AS nExpense,  ;
								SUM(disbhist.nSevTaxes) AS nSevTaxes, ;
								SUM(disbhist.nNetCheck) AS nNetCheck, ;
								disbhist.hyear,    ;
								disbhist.hperiod, ;
								disbhist.cProgCode, ;
								SUM(disbhist.nGather) AS nGather, ;
								SUM(disbhist.nCompress) AS nCompress, ;
								wells.cWellName ;
							FROM disbhist, wells, investor ;
							WHERE disbhist.cWellID in (SELECT cid FROM selected) ;
								AND disbhist.crunyear_in + PADL(TRANSFORM(disbhist.nrunno_in), 3, '0') + disbhist.crectype IN ;
								(SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + cTypeClose ;
									 FROM sysctl ;
									 WHERE BETWEEN(dAcctDate, ldBegDate, ldEndDate)) ;
								AND IIF(tcGroup <> '**', disbhist.cgroup = tcGroup, .T.) ;
								AND investor.cOwnerID = disbhist.cOwnerID  ;
								AND wells.cWellID = disbhist.cWellID ;
								AND disbhist.crectype # 'P' ;
								AND (lManual = .F. OR ;
								  (lManual = .T. ;
									AND crunyear_in + PADL(TRANSFORM(nrunno_in), 3, '0') ;
									NOT IN (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
												FROM sysctl ;
												WHERE EMPTY(cversion) ;
													AND cTypeClose = 'R'))) ;
								AND NOT investor.ldummy  ;
							INTO CURSOR disbchk3 READWRITE ;
							ORDER BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt;
							GROUP BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt, disbhist.cDirect
		
		            ENDIF
		        ENDIF
		
		    CASE tnType = 3       && Date range
		        IF llDirTot
					SELECT  disbhist.cOwnerID, ;
							investor.cOwnName, ;
							disbhist.cWellID, ;
							SUM(disbhist.nIncome) AS nIncome, ;
							SUM(nOilRev) AS nOilRev, ;
							SUM(nGasRev) AS nGasRev, ;
							SUM(disbhist.nTrpRev + disbhist.nMiscRev1 + disbhist.nMiscRev2 + disbhist.nothrev + disbhist.nFlatRate) AS nOtherRev, ;
							disbhist.cDirect,  ;
							disbhist.cTypeInv, ;
							disbhist.cTypeInt, ;
							SUM(disbhist.nExpense + ;
								disbhist.nTotale1 + ;
								disbhist.nTotale2 + ;
								disbhist.nTotale3 + ;
								disbhist.nTotale4 + ;
								disbhist.nTotale5 + ;
								disbhist.ntotaleA + ;
								disbhist.ntotaleB + ;
								disbhist.nmktgexp) AS nExpense,  ;
							SUM(disbhist.nSevTaxes) AS nSevTaxes, ;
							SUM(disbhist.nNetCheck) AS nNetCheck, ;
							disbhist.hyear,    ;
							disbhist.hperiod, ;
							disbhist.cProgCode, ;
							SUM(disbhist.nGather) AS nGather, ;
							SUM(disbhist.nCompress) AS nCompress, ;
							wells.cWellName ;
						FROM disbhist, wells, investor ;
						WHERE disbhist.crunyear + PADL(TRANSFORM(disbhist.nrunno), 3, '0') + disbhist.crectype IN ;
							(SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + cTypeClose ;
								 FROM sysctl ;
								 WHERE BETWEEN(dAcctDate, tdDate1, tdDate2)) ;
							AND disbhist.cWellID in (SELECT cid FROM selected) ;
							AND IIF(tcGroup <> '**', disbhist.cgroup = tcGroup, .T.) ;
							AND investor.cOwnerID = disbhist.cOwnerID  ;
							AND wells.cWellID = disbhist.cWellID ;
							AND disbhist.crectype # 'P' ;
							AND (lManual = .F. OR ;
							  (lManual = .T. ;
								AND crunyear_in + PADL(TRANSFORM(nrunno_in), 3, '0') ;
								NOT IN (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
											FROM sysctl ;
											WHERE EMPTY(cversion) ;
												AND cTypeClose = 'R'))) ;
							AND NOT investor.ldummy  ;
						INTO CURSOR disbchk1 READWRITE ;
						ORDER BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt;
						GROUP BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt, disbhist.cDirect
		
		            IF m.lIncSusp
						SELECT  suspense.cOwnerID, ;
								investor.cOwnName, ;
								suspense.cWellID, ;
								.T. AS lSuspense,  ;
								SUM(suspense.nIncome) AS nIncome, ;
								SUM(nOilRev) AS nOilRev, ;
								SUM(nGasRev) AS nGasRev, ;
								SUM(suspense.nTrpRev + suspense.nMiscRev1 + suspense.nMiscRev2 + suspense.nothrev + suspense.nFlatRate) AS nOtherRev, ;
								suspense.cDirect,  ;
								suspense.cTypeInv, ;
								suspense.cTypeInt, ;
								SUM(suspense.nExpense + ;
									suspense.nTotale1 + ;
									suspense.nTotale2 + ;
									suspense.nTotale3 + ;
									suspense.nTotale4 + ;
									suspense.nTotale5 + ;
									suspense.ntotaleA + ;
									suspense.ntotaleB + ;
									suspense.nmktgexp) AS nExpense,  ;
								SUM(suspense.nSevTaxes) AS nSevTaxes, ;
								SUM(suspense.nNetCheck) AS nNetCheck, ;
								suspense.hyear,    ;
								suspense.hperiod, ;
								suspense.cProgCode, ;
								SUM(suspense.nGather) AS nGather, ;
								SUM(suspense.nCompress) AS nCompress, ;
								wells.cWellName ;
							FROM suspense, wells, investor ;
							WHERE suspense.crunyear_in + PADL(TRANSFORM(suspense.nrunno_in), 3, '0') + suspense.crectype IN ;
								(SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + cTypeClose ;
									 FROM sysctl ;
									 WHERE BETWEEN(dAcctDate, tdDate1, tdDate2)) ;
								AND suspense.cWellID in (SELECT cid FROM selected) ;
								AND IIF(tcGroup <> '**', suspense.cgroup = tcGroup, .T.) ;
								AND investor.cOwnerID = suspense.cOwnerID  ;
								AND wells.cWellID = suspense.cWellID ;
								AND suspense.crectype # 'P' ;
								AND (lManual = .F. OR ;
								  (lManual = .T. ;
									AND crunyear_in + PADL(TRANSFORM(nrunno_in), 3, '0') ;
									NOT IN (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
												FROM sysctl ;
												WHERE EMPTY(cversion) ;
													AND cTypeClose = 'R'))) ;
								AND NOT investor.ldummy  ;
							INTO CURSOR disbchk2 READWRITE  ;
							ORDER BY suspense.cWellID, suspense.cTypeInv, suspense.cOwnerID, suspense.cTypeInt;
							GROUP BY suspense.cWellID, suspense.cTypeInv, suspense.cOwnerID, suspense.cTypeInt, suspense.cDirect
		
						SELECT  disbhist.cOwnerID, ;
								investor.cOwnName, ;
								disbhist.cWellID, ;
								SUM(disbhist.nIncome) AS nIncome, ;
								SUM(nOilRev) AS nOilRev, ;
								SUM(nGasRev) AS nGasRev, ;
								SUM(disbhist.nTrpRev + disbhist.nMiscRev1 + disbhist.nMiscRev2 + disbhist.nothrev + disbhist.nFlatRate) AS nOtherRev, ;
								disbhist.cDirect,  ;
								disbhist.cTypeInv, ;
								disbhist.cTypeInt, ;
								SUM(disbhist.nExpense + ;
									disbhist.nTotale1 + ;
									disbhist.nTotale2 + ;
									disbhist.nTotale3 + ;
									disbhist.nTotale4 + ;
									disbhist.nTotale5 + ;
									disbhist.ntotaleA + ;
									disbhist.ntotaleB + ;
									disbhist.nmktgexp) AS nExpense,  ;
								SUM(disbhist.nSevTaxes) AS nSevTaxes, ;
								SUM(disbhist.nNetCheck) AS nNetCheck, ;
								disbhist.hyear,    ;
								disbhist.hperiod, ;
								disbhist.cProgCode, ;
								SUM(disbhist.nGather) AS nGather, ;
								SUM(disbhist.nCompress) AS nCompress, ;
								wells.cWellName ;
							FROM disbhist, wells, investor ;
							WHERE disbhist.crunyear_in + PADL(TRANSFORM(disbhist.nrunno_in), 3, '0') + disbhist.crectype IN ;
								(SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + cTypeClose ;
									 FROM sysctl ;
									 WHERE BETWEEN(dAcctDate, tdDate1, tdDate2)) ;
								AND disbhist.cWellID in (SELECT cid FROM selected) ;
								AND IIF(tcGroup <> '**', disbhist.cgroup = tcGroup, .T.) ;
								AND investor.cOwnerID = disbhist.cOwnerID  ;
								AND wells.cWellID = disbhist.cWellID ;
								AND disbhist.crectype # 'P' ;
								AND (lManual = .F. OR ;
								  (lManual = .T. ;
									AND crunyear_in + PADL(TRANSFORM(nrunno_in), 3, '0') ;
									NOT IN (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
												FROM sysctl ;
												WHERE EMPTY(cversion) ;
													AND cTypeClose = 'R'))) ;
								AND NOT investor.ldummy  ;
							INTO CURSOR disbchk3 READWRITE ;
							ORDER BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt;
							GROUP BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt, disbhist.cDirect
		            ENDIF
		
		        ELSE
					SELECT  disbhist.cOwnerID, ;
							investor.cOwnName, ;
							disbhist.cWellID, ;
							SUM(disbhist.nIncome) AS nIncome, ;
							IIF(cDirect <> 'O', IIF(cDirect <> 'B', SUM(nOilRev), 000000.00), 000000.00) AS nOilRev, ;
							IIF(cDirect <> 'G', IIF(cDirect <> 'B', SUM(nGasRev), 000000.00), 000000.00) AS nGasRev, ;
							SUM(disbhist.nTrpRev + disbhist.nMiscRev1 + disbhist.nMiscRev2 + disbhist.nothrev + disbhist.nFlatRate) AS nOtherRev, ;
							disbhist.cDirect,  ;
							disbhist.cTypeInv, ;
							disbhist.cTypeInt, ;
							SUM(disbhist.nExpense + ;
								disbhist.nTotale1 + ;
								disbhist.nTotale2 + ;
								disbhist.nTotale3 + ;
								disbhist.nTotale4 + ;
								disbhist.nTotale5 + ;
								disbhist.ntotaleA + ;
								disbhist.ntotaleB + ;
								disbhist.nmktgexp) AS nExpense,  ;
							SUM(disbhist.nSevTaxes) AS nSevTaxes, ;
							SUM(disbhist.nNetCheck) AS nNetCheck, ;
							disbhist.hyear,    ;
							disbhist.hperiod, ;
							disbhist.cProgCode, ;
							SUM(disbhist.nGather) AS nGather, ;
							SUM(disbhist.nCompress) AS nCompress, ;
							wells.cWellName ;
						FROM disbhist, wells, investor ;
						WHERE disbhist.crunyear + PADL(TRANSFORM(disbhist.nrunno), 3, '0') + disbhist.crectype IN ;
							(SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + cTypeClose ;
								 FROM sysctl ;
								 WHERE BETWEEN(dAcctDate, tdDate1, tdDate2)) ;
							AND BETWEEN(disbhist.cWellID, tcWell1, tcWell2) ;
							AND IIF(tcGroup <> '**', disbhist.cgroup = tcGroup, .T.) ;
							AND investor.cOwnerID = disbhist.cOwnerID  ;
							AND wells.cWellID = disbhist.cWellID ;
							AND disbhist.crectype # 'P' ;
							AND (lManual = .F. OR ;
							  (lManual = .T. ;
								AND crunyear_in + PADL(TRANSFORM(nrunno_in), 3, '0') ;
								NOT IN (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
											FROM sysctl ;
											WHERE EMPTY(cversion) ;
												AND cTypeClose = 'R'))) ;
							AND NOT investor.ldummy  ;
						INTO CURSOR disbchk1 READWRITE ;
						ORDER BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt;
						GROUP BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt, disbhist.cDirect
		
		            IF m.lIncSusp
						SELECT  suspense.cOwnerID, ;
								investor.cOwnName, ;
								suspense.cWellID, ;
								.T. AS lSuspense,  ;
								SUM(suspense.nIncome) AS nIncome, ;
								IIF(cDirect <> 'O', IIF(cDirect <> 'B', SUM(nOilRev), 000000.00), 000000.00) AS nOilRev, ;
								IIF(cDirect <> 'G', IIF(cDirect <> 'B', SUM(nGasRev), 000000.00), 000000.00) AS nGasRev, ;
								SUM(suspense.nTrpRev + suspense.nMiscRev1 + suspense.nMiscRev2 + suspense.nothrev + suspense.nFlatRate) AS nOtherRev, ;
								suspense.cDirect,  ;
								suspense.cTypeInv, ;
								suspense.cTypeInt, ;
								SUM(suspense.nExpense + ;
									suspense.nTotale1 + ;
									suspense.nTotale2 + ;
									suspense.nTotale3 + ;
									suspense.nTotale4 + ;
									suspense.nTotale5 + ;
									suspense.ntotaleA + ;
									suspense.ntotaleB + ;
									suspense.nmktgexp) AS nExpense,  ;
								SUM(suspense.nSevTaxes) AS nSevTaxes, ;
								SUM(suspense.nNetCheck) AS nNetCheck, ;
								suspense.hyear,    ;
								suspense.hperiod, ;
								suspense.cProgCode, ;
								SUM(suspense.nGather) AS nGather, ;
								SUM(suspense.nCompress) AS nCompress, ;
								wells.cWellName ;
							FROM suspense, wells, investor ;
							WHERE suspense.crunyear_in + PADL(TRANSFORM(suspense.nrunno_in), 3, '0') + suspense.crectype IN ;
								(SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + cTypeClose ;
									 FROM sysctl ;
									 WHERE BETWEEN(dAcctDate, tdDate1, tdDate2)) ;
								AND suspense.cWellID in (SELECT cid FROM selected) ;
								AND IIF(tcGroup <> '**', suspense.cgroup = tcGroup, .T.) ;
								AND investor.cOwnerID = suspense.cOwnerID  ;
								AND wells.cWellID = suspense.cWellID ;
								AND suspense.crectype # 'P' ;
								AND (lManual = .F. OR ;
								  (lManual = .T. ;
									AND crunyear_in + PADL(TRANSFORM(nrunno_in), 3, '0') ;
									NOT IN (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
												FROM sysctl ;
												WHERE EMPTY(cversion) ;
													AND cTypeClose = 'R'))) ;
								AND NOT investor.ldummy  ;
							INTO CURSOR disbchk2 READWRITE  ;
							ORDER BY suspense.cWellID, suspense.cTypeInv, suspense.cOwnerID, suspense.cTypeInt;
							GROUP BY suspense.cWellID, suspense.cTypeInv, suspense.cOwnerID, suspense.cTypeInt, suspense.cDirect
		
						SELECT  disbhist.cOwnerID, ;
								investor.cOwnName, ;
								disbhist.cWellID, ;
								SUM(disbhist.nIncome) AS nIncome, ;
								IIF(cDirect <> 'O', IIF(cDirect <> 'B', SUM(nOilRev), 000000.00), 000000.00) AS nOilRev, ;
								IIF(cDirect <> 'G', IIF(cDirect <> 'B', SUM(nGasRev), 000000.00), 000000.00) AS nGasRev, ;
								SUM(disbhist.nTrpRev + disbhist.nMiscRev1 + disbhist.nMiscRev2 + disbhist.nothrev + disbhist.nFlatRate) AS nOtherRev, ;
								disbhist.cDirect,  ;
								disbhist.cTypeInv, ;
								disbhist.cTypeInt, ;
								SUM(disbhist.nExpense + ;
									disbhist.nTotale1 + ;
									disbhist.nTotale2 + ;
									disbhist.nTotale3 + ;
									disbhist.nTotale4 + ;
									disbhist.nTotale5 + ;
									disbhist.ntotaleA + ;
									disbhist.ntotaleB + ;
									disbhist.nmktgexp) AS nExpense,  ;
								SUM(disbhist.nSevTaxes) AS nSevTaxes, ;
								SUM(disbhist.nNetCheck) AS nNetCheck, ;
								disbhist.hyear,    ;
								disbhist.hperiod, ;
								disbhist.cProgCode, ;
								SUM(disbhist.nGather) AS nGather, ;
								SUM(disbhist.nCompress) AS nCompress, ;
								wells.cWellName ;
							FROM disbhist, wells, investor ;
							WHERE disbhist.crunyear_in + PADL(TRANSFORM(disbhist.nrunno_in), 3, '0') + disbhist.crectype IN ;
								(SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + cTypeClose ;
									 FROM sysctl ;
									 WHERE BETWEEN(dAcctDate, tdDate1, tdDate2)) ;
								AND disbhist.cWellID in (SELECT cid FROM selected) ;
								AND IIF(tcGroup <> '**', disbhist.cgroup = tcGroup, .T.) ;
								AND investor.cOwnerID = disbhist.cOwnerID  ;
								AND wells.cWellID = disbhist.cWellID ;
								AND disbhist.crectype # 'P' ;
								AND (lManual = .F. OR ;
								  (lManual = .T. ;
									AND crunyear_in + PADL(TRANSFORM(nrunno_in), 3, '0') ;
									NOT IN (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
												FROM sysctl ;
												WHERE EMPTY(cversion) ;
													AND cTypeClose = 'R'))) ;
								AND NOT investor.ldummy  ;
							INTO CURSOR disbchk3 READWRITE ;
							ORDER BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt;
							GROUP BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt, disbhist.cDirect
		            ENDIF
		        ENDIF
		ENDCASE
		
		lnMax   = _TALLY
		lnCount = 1
		
		oProgress.SetProgressRange(0, lnMax)
		
		SELECT disbchk1
		USE DBF('disbchk1') AGAIN IN 0 ALIAS disbchk
		
		SELECT disbchk
		SCAN
		    SCATTER MEMVAR
		    IF llDirTot
		        DO CASE
		            CASE m.cDirect = 'O'
		                m.nNetCheck = m.nNetCheck + m.nOilRev
		            CASE m.cDirect = 'G'
		                m.nNetCheck = m.nNetCheck + m.nGasRev
		            CASE m.cDirect = 'B'
		                m.nNetCheck = m.nNetCheck + m.nOilRev + m.nGasRev
		        ENDCASE
		    ENDIF
		    oProgress.UpdateProgress(lnCount)
		    lnCount = lnCount + 1
		    IF nIncome = 0 AND ;
		            nExpense = 0 AND ;
		            nNetCheck = 0
		        DELETE NEXT 1
		        LOOP
		    ENDIF
		    swselect('programs')
		    SET ORDER TO cProgCode
		    SEEK m.cProgCode
		    IF FOUND()
		        m.cProgName = cProgName
		    ELSE
		        m.cProgCode = 'None'
		        m.cProgName = 'Non Program Wells'
		    ENDIF
		    INSERT INTO disbchks FROM MEMVAR
		ENDSCAN
		
		IF m.lIncSusp  &&  Including suspense activities
		    IF USED('disbchk2')
		        SELECT disbchk2
		        SCAN
		            SCATTER MEMVAR
		            IF llDirTot
		                DO CASE
		                    CASE m.cDirect = 'O'
		                        m.nNetCheck = m.nNetCheck + m.nOilRev
		                    CASE m.cDirect = 'G'
		                        m.nNetCheck = m.nNetCheck + m.nGasRev
		                    CASE m.cDirect = 'B'
		                        m.nNetCheck = m.nNetCheck + m.nOilRev + m.nGasRev
		                ENDCASE
		            ENDIF
		            oProgress.UpdateProgress(lnCount)
		            lnCount = lnCount + 1
		            IF nIncome = 0 AND ;
		                    nExpense = 0 AND ;
		                    nNetCheck = 0
		                DELETE NEXT 1
		                LOOP
		            ENDIF
		            swselect('programs')
		            SET ORDER TO cProgCode
		            SEEK m.cProgCode
		            IF FOUND()
		                m.cProgName = cProgName
		            ELSE
		                m.cProgCode = 'None'
		                m.cProgName = 'Non Program Wells'
		            ENDIF
		            INSERT INTO disbchks FROM MEMVAR
		        ENDSCAN
		    ENDIF
		
		    IF USED('disbchk3')
		        SELECT disbchk3
		        SCAN
		            SCATTER MEMVAR
		            IF llDirTot
		                DO CASE
		                    CASE m.cDirect = 'O'
		                        m.nNetCheck = m.nNetCheck + m.nOilRev
		                    CASE m.cDirect = 'G'
		                        m.nNetCheck = m.nNetCheck + m.nGasRev
		                    CASE m.cDirect = 'B'
		                        m.nNetCheck = m.nNetCheck + m.nOilRev + m.nGasRev
		                ENDCASE
		            ENDIF
		            oProgress.UpdateProgress(lnCount)
		            lnCount = lnCount + 1
		            IF nIncome = 0 AND ;
		                    nExpense = 0 AND ;
		                    nNetCheck = 0
		                DELETE NEXT 1
		                LOOP
		            ENDIF
		            swselect('programs')
		            SET ORDER TO cProgCode
		            SEEK m.cProgCode
		            IF FOUND()
		                m.cProgName = cProgName
		            ELSE
		                m.cProgCode = 'None'
		                m.cProgName = 'Non Program Wells'
		            ENDIF
		            INSERT INTO disbchks FROM MEMVAR
		        ENDSCAN
		    ENDIF
		ENDIF
		
		*  If the direct paid status changed during the range of time the report is being run for,
		*  it can make the income numbers screwy.  Changed to group by cdirect in all the selct
		*  statements above, and then we'll re-sum everything here, not grouping by cdirect
		SELECT  cOwnerID, cOwnName, CMONTH, cWellID, lSuspense, lIncSusp, SUM(nIncome) AS nIncome,  ;
				SUM(nOilRev) AS nOilRev, SUM(nGasRev) AS nGasRev, cDirect, SUM(nOtherRev) AS nOtherRev,  ;
				cTypeInv, cTypeInt, SUM(nExpense) AS nExpense, SUM(nSevTaxes) AS nSevTaxes,   ;
				SUM(nNetCheck) AS nNetCheck, SUM(nGather) AS nGather, SUM(nCompress) AS nCompress,  ;
				hyear, hperiod, cProgCode, cProgName, cWellName  ;
			FROM disbchks  ;
			INTO CURSOR disbchksx READWRITE ;
			GROUP BY cWellID, cTypeInv, cOwnerID, cTypeInt
		
		USE IN disbchks
		USE DBF('disbchksx') AGAIN IN 0 ALIAS disbchks
		
		SELECT disbchks
		IF THISFORM.opgSortBy.VALUE = 2  &&  Well Name
		    INDEX ON cWellName + cTypeInv + cOwnerID TAG wellinv
		ELSE
		    INDEX ON cWellID + cTypeInv + cOwnerID TAG wellinv
		ENDIF
		
		oProgress.CloseProgress()
		
		SELECT disbchks
		SET ORDER TO wellinv
		
		IF RECC() > 0
		    RETURN .T.
		ELSE
		    RETURN .F.
		ENDIF
		
		
		
	ENDPROC

	PROCEDURE builddataearned
		LOCAL tnType, tcWell1, tcWell2, tcYear1, tcYear2, tcPeriod1, tcPeriod2, tdDate1, tdDate2, tcGroup
		LOCAL oProgress, lnMax, lnCount
		
		IF USED('disbchk')
		    USE IN disbchk
		ENDIF
		IF USED('disbchk1')
		    USE IN disbchk1
		ENDIF
		IF USED('disbchks')
		    USE IN disbchks
		ENDIF
		
		tnType     = THISFORM.opgRange.VALUE
		tcWell1    = THISFORM.swrptlook1.txtBegID.VALUE
		tcWell2    = THISFORM.swrptlook1.txtEndID.VALUE
		tcYear1    = THISFORM.swYear1.VALUE
		tcYear2    = THISFORM.swYear2.VALUE
		tcPeriod1  = THISFORM.swPeriod1.VALUE
		tcPeriod2  = THISFORM.swPeriod2.VALUE
		tdDate1    = THISFORM.txtDate1.VALUE
		tdDate2    = THISFORM.txtDate2.VALUE
		tcGroup    = LEFT(THISFORM.swGroup1.VALUE, 2)
		llDirTot   = THISFORM.chklDirTot.VALUE
		m.lIncSusp = THISFORM.chklsuspense.VALUE
		llSelected = thisform.chkselected.Value 
		
		THISFORM.cTitle1         = 'Disbursements By Well'
		THISFORM.cSelectCriteria = 'Only amounts earned during range'
		THISFORM.cSortOrder      = 'Well ID'
		IF THISFORM.chklNewPage.VALUE = .F.
		    THISFORM.cReportName = 'dmrwdisb'
		ELSE
		    THISFORM.cReportName = 'dmrwdisb1'
		ENDIF
		
		IF NOT llSelected
		   SELECT cwellid as cid FROM wells ;
		     WHERE BETWEEN(cwellid,tcWell1,tcWell2) ;
		     INTO CURSOR selected ;
		     ORDER BY cid
		ENDIF 
		
		DO CASE
		    CASE tnType = 1
		        THISFORM.cTitle2 = 'For Production Year: ' + tcYear1 + '/' + tcPeriod1 + '-' + tcYear2 + '/' + tcPeriod2
		    CASE tnType = 2
		        THISFORM.cTitle2 = 'For Accounting Year: ' + tcYear1 + '/' + tcPeriod1 + '-' + tcYear2 + '/' + tcPeriod2
		    CASE tnType = 3
		        THISFORM.cTitle2 = 'For Date Range: ' + DTOC(tdDate1) + '-' + DTOC(tdDate2)
		ENDCASE
		
		oProgress = THISFORM.oMessage.ProgressBar('Building Well Disbursement File...')
		
		CREATE CURSOR disbchks ;
		    (cOwnerID        C(10), ;
		      cOwnName        C(40), ;
		      CMONTH           C(10), ;
		      cWellID          C(10), ;
		      lSuspense        L,  ;
		      lIncSusp         L,  ;
		      nIncome          N(12, 2), ;
		      nOilRev          N(12, 2), ;
		      nGasRev          N(12, 2), ;
		      cDirect          C(1),  ;
		      nOtherRev          N(12, 2), ;
		      cTypeInv         C(1), ;
		      cTypeInt         C(1), ;
		      nExpense         N(12, 2), ;
		      nSevTaxes        N(12, 2), ;
		      nNetCheck        N(12, 2), ;
		      nGather          N(12, 2), ;
		      nCompress        N(12, 2), ;
		      hyear           C(4), ;
		      hperiod         C(2), ;
		      cProgCode        C(10), ;
		      cProgName        C(40), ;
		      cWellName        C(30))
		
		IF THISFORM.opgSortBy.VALUE = 2  &&  Well Name
		    INDEX ON cWellName + cTypeInv + cOwnerID TAG wellinv
		ELSE
		    INDEX ON cWellID + cTypeInv + cOwnerID TAG wellinv
		ENDIF
		
		swclose('disbchk')
		swclose('disbchk1')
		swclose('disbchk2')
		
		DO CASE
		    CASE tnType = 1   && By Production Year
		        IF llDirTot
					SELECT  disbhist.cOwnerID, ;
							investor.cOwnName, ;
							disbhist.cWellID, ;
							SUM(disbhist.nIncome) AS nIncome, ;
							SUM(nOilRev) AS nOilRev, ;
							SUM(nGasRev) AS nGasRev, ;
							SUM(disbhist.nTrpRev + disbhist.nMiscRev1 + disbhist.nMiscRev2 + disbhist.nothrev + disbhist.nFlatRate) AS nOtherRev, ;
							disbhist.cTypeInv, ;
							disbhist.cTypeInt, ;
							disbhist.cDirect,  ;
							SUM(disbhist.nExpense + ;
								disbhist.nTotale1 + ;
								disbhist.nTotale2 + ;
								disbhist.nTotale3 + ;
								disbhist.nTotale4 + ;
								disbhist.nTotale5 + ;
								disbhist.ntotaleA + ;
								disbhist.ntotaleB + ;
								disbhist.nmktgexp) AS nExpense,  ;
							SUM(disbhist.nSevTaxes) AS nSevTaxes, ;
							SUM(disbhist.nNetCheck) AS nNetCheck, ;
							disbhist.hyear,    ;
							disbhist.hperiod, ;
							disbhist.cProgCode, ;
							SUM(disbhist.nGather) AS nGather, ;
							SUM(disbhist.nCompress) AS nCompress, ;
							wells.cWellName ;
						FROM disbhist, wells, investor ;
						WHERE BETWEEN(hyear + hperiod, tcYear1 + tcPeriod1, tcYear2 + tcPeriod2)   ;
							AND disbhist.cWellID in (SELECT cid FROM selected) ;
							AND IIF(tcGroup <> '**', disbhist.cgroup = tcGroup, .T.) ;
							AND investor.cOwnerID = disbhist.cOwnerID  ;
							AND wells.cWellID = disbhist.cWellID ;
							AND disbhist.crectype # 'P' ;
							AND (lManual = .F. OR ;
							  (lManual = .T. ;
								AND crunyear_in + PADL(TRANSFORM(nrunno_in), 3, '0') ;
								NOT IN (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
											FROM sysctl ;
											WHERE EMPTY(cversion) ;
												AND cTypeClose = 'R'))) ;
							AND NOT investor.ldummy  ;
						INTO CURSOR disbchk READWRITE  ;
						ORDER BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt;
						GROUP BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt, disbhist.cDirect
		
		        ELSE
					SELECT  disbhist.cOwnerID, ;
							investor.cOwnName, ;
							disbhist.cWellID, ;
							SUM(disbhist.nIncome) AS nIncome, ;
							IIF(cDirect <> 'O', IIF(cDirect <> 'B', SUM(nOilRev), 000000.00), 000000.00) AS nOilRev, ;
							IIF(cDirect <> 'G', IIF(cDirect <> 'B', SUM(nGasRev), 000000.00), 000000.00) AS nGasRev, ;
							SUM(disbhist.nTrpRev + disbhist.nMiscRev1 + disbhist.nMiscRev2 + disbhist.nothrev + disbhist.nFlatRate) AS nOtherRev, ;
							disbhist.cDirect,  ;
							disbhist.cTypeInv, ;
							disbhist.cTypeInt, ;
							SUM(disbhist.nExpense + ;
								disbhist.nTotale1 + ;
								disbhist.nTotale2 + ;
								disbhist.nTotale3 + ;
								disbhist.nTotale4 + ;
								disbhist.nTotale5 + ;
								disbhist.ntotaleA + ;
								disbhist.ntotaleB + ;
								disbhist.nmktgexp) AS nExpense,  ;
							SUM(disbhist.nSevTaxes) AS nSevTaxes, ;
							SUM(disbhist.nNetCheck) AS nNetCheck, ;
							disbhist.hyear,    ;
							disbhist.hperiod, ;
							disbhist.cProgCode, ;
							SUM(disbhist.nGather) AS nGather, ;
							SUM(disbhist.nCompress) AS nCompress, ;
							wells.cWellName ;
						FROM disbhist, wells, investor ;
						WHERE BETWEEN(hyear + hperiod, tcYear1 + tcPeriod1, tcYear2 + tcPeriod2)   ;
							AND disbhist.cWellID in (SELECT cid FROM selected) ;
							AND IIF(tcGroup <> '**', disbhist.cgroup = tcGroup, .T.) ;
							AND investor.cOwnerID = disbhist.cOwnerID  ;
							AND wells.cWellID = disbhist.cWellID ;
							AND disbhist.crectype # 'P' ;
							AND (lManual = .F. OR ;
							  (lManual = .T. ;
								AND crunyear_in + PADL(TRANSFORM(nrunno_in), 3, '0') ;
								NOT IN (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
											FROM sysctl ;
											WHERE EMPTY(cversion) ;
												AND cTypeClose = 'R'))) ;
							AND NOT investor.ldummy  ;
						INTO CURSOR disbchk READWRITE  ;
						ORDER BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt;
						GROUP BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt, disbhist.cDirect
		
		        ENDIF
		
		    CASE tnType = 2      && Accounting Year
		        ldBegDate = THISFORM.glmaint.getdate(tcYear1, tcPeriod1)
		        ldEndDate = GOMONTH(THISFORM.glmaint.getdate(tcYear2, tcPeriod2), 1) - 1
		        IF llDirTot
					SELECT  disbhist.cOwnerID, ;
							investor.cOwnName, ;
							disbhist.cWellID, ;
							SUM(disbhist.nIncome) AS nIncome, ;
							SUM(nOilRev) AS nOilRev, ;
							SUM(nGasRev) AS nGasRev, ;
							SUM(disbhist.nTrpRev + disbhist.nMiscRev1 + disbhist.nMiscRev2 + disbhist.nothrev + disbhist.nFlatRate) AS nOtherRev, ;
							disbhist.cTypeInv, ;
							disbhist.cTypeInt, ;
							disbhist.cDirect,  ;
							SUM(disbhist.nExpense + ;
								disbhist.nTotale1 + ;
								disbhist.nTotale2 + ;
								disbhist.nTotale3 + ;
								disbhist.nTotale4 + ;
								disbhist.nTotale5 + ;
								disbhist.ntotaleA + ;
								disbhist.ntotaleB + ;
								disbhist.nmktgexp) AS nExpense,  ;
							SUM(disbhist.nSevTaxes) AS nSevTaxes, ;
							SUM(disbhist.nNetCheck) AS nNetCheck, ;
							disbhist.hyear,    ;
							disbhist.hperiod, ;
							disbhist.cProgCode, ;
							SUM(disbhist.nGather) AS nGather, ;
							SUM(disbhist.nCompress) AS nCompress, ;
							wells.cWellName ;
						FROM disbhist, wells, investor ;
						WHERE EMPTY(disbhist.csusptype) ;
							AND disbhist.crunyear + PADL(TRANSFORM(disbhist.nrunno), 3, '0') + disbhist.crectype IN ;
							(SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + cTypeClose ;
								 FROM sysctl ;
								 WHERE BETWEEN(dAcctDate, ldBegDate, ldEndDate)) ;
							AND disbhist.cWellID in (SELECT cid FROM selected) ;
							AND IIF(tcGroup <> '**', disbhist.cgroup = tcGroup, .T.) ;
							AND investor.cOwnerID = disbhist.cOwnerID  ;
							AND wells.cWellID = disbhist.cWellID ;
							AND disbhist.crectype # 'P' ;
							AND (lManual = .F. OR ;
							  (lManual = .T. ;
								AND crunyear_in + PADL(TRANSFORM(nrunno_in), 3, '0') ;
								NOT IN (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
											FROM sysctl ;
											WHERE EMPTY(cversion) ;
												AND cTypeClose = 'R'))) ;
							AND NOT investor.ldummy  ;
						INTO CURSOR disbchk READWRITE  ;
						ORDER BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt;
						GROUP BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt, disbhist.cDirect
		
					SELECT  disbhist.cOwnerID, ;
							investor.cOwnName, ;
							disbhist.cWellID, ;
							SUM(disbhist.nIncome) AS nIncome, ;
							SUM(nOilRev) AS nOilRev, ;
							SUM(nGasRev) AS nGasRev, ;
							SUM(disbhist.nTrpRev + disbhist.nMiscRev1 + disbhist.nMiscRev2 + disbhist.nothrev + disbhist.nFlatRate) AS nOtherRev, ;
							disbhist.cTypeInv, ;
							disbhist.cTypeInt, ;
							disbhist.cDirect,  ;
							SUM(disbhist.nExpense + ;
								disbhist.nTotale1 + ;
								disbhist.nTotale2 + ;
								disbhist.nTotale3 + ;
								disbhist.nTotale4 + ;
								disbhist.nTotale5 + ;
								disbhist.ntotaleA + ;
								disbhist.ntotaleB + ;
								disbhist.nmktgexp) AS nExpense,  ;
							SUM(disbhist.nSevTaxes) AS nSevTaxes, ;
							SUM(disbhist.nNetCheck) AS nNetCheck, ;
							disbhist.hyear,    ;
							disbhist.hperiod, ;
							disbhist.cProgCode, ;
							SUM(disbhist.nGather) AS nGather, ;
							SUM(disbhist.nCompress) AS nCompress, ;
							wells.cWellName ;
						FROM disbhist, wells, investor ;
						WHERE NOT EMPTY(disbhist.csusptype) ;
							AND disbhist.crunyear_in + PADL(TRANSFORM(disbhist.nrunno_in), 3, '0') + disbhist.crectype IN ;
							(SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + cTypeClose ;
								 FROM sysctl ;
								 WHERE BETWEEN(dAcctDate, ldBegDate, ldEndDate)) ;
							AND disbhist.cWellID in (SELECT cid FROM selected) ;
							AND IIF(tcGroup <> '**', disbhist.cgroup = tcGroup, .T.) ;
							AND investor.cOwnerID = disbhist.cOwnerID  ;
							AND wells.cWellID = disbhist.cWellID ;
							AND disbhist.crectype # 'P' ;
							AND (lManual = .F. OR ;
							  (lManual = .T. ;
								AND crunyear_in + PADL(TRANSFORM(nrunno_in), 3, '0') ;
								NOT IN (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
											FROM sysctl ;
											WHERE EMPTY(cversion) ;
												AND cTypeClose = 'R'))) ;
							AND NOT investor.ldummy  ;
						INTO CURSOR disbchk1  ;
						ORDER BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt;
						GROUP BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt, disbhist.cDirect
		
					SELECT  suspense.cOwnerID, ;
							investor.cOwnName, ;
							suspense.cWellID, ;
							.T. AS lSuspense,  ;
							SUM(suspense.nIncome) AS nIncome, ;
							SUM(nOilRev) AS nOilRev, ;
							SUM(nGasRev) AS nGasRev, ;
							SUM(suspense.nTrpRev + suspense.nMiscRev1 + suspense.nMiscRev2 + suspense.nothrev + suspense.nFlatRate) AS nOtherRev, ;
							suspense.cDirect,  ;
							suspense.cTypeInv, ;
							suspense.cTypeInt, ;
							SUM(suspense.nExpense + ;
								suspense.nTotale1 + ;
								suspense.nTotale2 + ;
								suspense.nTotale3 + ;
								suspense.nTotale4 + ;
								suspense.nTotale5 + ;
								suspense.ntotaleA + ;
								suspense.ntotaleB + ;
								suspense.nmktgexp) AS nExpense,  ;
							SUM(suspense.nSevTaxes) AS nSevTaxes, ;
							SUM(suspense.nNetCheck) AS nNetCheck, ;
							suspense.hyear,    ;
							suspense.hperiod, ;
							suspense.cProgCode, ;
							SUM(suspense.nGather) AS nGather, ;
							SUM(suspense.nCompress) AS nCompress, ;
							wells.cWellName ;
						FROM suspense, wells, investor ;
						WHERE suspense.crunyear_in + PADL(TRANSFORM(suspense.nrunno_in), 3, '0') + suspense.crectype IN ;
							(SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + cTypeClose ;
								 FROM sysctl ;
								 WHERE BETWEEN(dAcctDate, ldBegDate, ldEndDate)) ;
							AND suspense.cWellID in (SELECT cid FROM selected) ;
							AND IIF(tcGroup <> '**', suspense.cgroup = tcGroup, .T.) ;
							AND investor.cOwnerID = suspense.cOwnerID  ;
							AND wells.cWellID = suspense.cWellID ;
							AND suspense.crectype # 'P' ;
							AND (lManual = .F. OR ;
							  (lManual = .T. ;
								AND crunyear_in + PADL(TRANSFORM(nrunno_in), 3, '0') ;
								NOT IN (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
											FROM sysctl ;
											WHERE EMPTY(cversion) ;
												AND cTypeClose = 'R'))) ;
							AND NOT investor.ldummy  ;
						INTO CURSOR disbchk2 ;
						ORDER BY suspense.cWellID, suspense.cTypeInv, suspense.cOwnerID, suspense.cTypeInt, suspense.cDirect ;
						GROUP BY suspense.cWellID, suspense.cTypeInv, suspense.cOwnerID, suspense.cTypeInt, suspense.cDirect
		
		        ELSE
					SELECT  disbhist.cOwnerID, ;
							investor.cOwnName, ;
							disbhist.cWellID, ;
							SUM(disbhist.nIncome) AS nIncome, ;
							IIF(cDirect <> 'O', IIF(cDirect <> 'B', SUM(nOilRev), 000000.00), 000000.00) AS nOilRev, ;
							IIF(cDirect <> 'G', IIF(cDirect <> 'B', SUM(nGasRev), 000000.00), 000000.00) AS nGasRev, ;
							SUM(disbhist.nTrpRev + disbhist.nMiscRev1 + disbhist.nMiscRev2 + disbhist.nothrev + disbhist.nFlatRate) AS nOtherRev, ;
							disbhist.cDirect,  ;
							disbhist.cTypeInv, ;
							disbhist.cTypeInt, ;
							SUM(disbhist.nExpense + ;
								disbhist.nTotale1 + ;
								disbhist.nTotale2 + ;
								disbhist.nTotale3 + ;
								disbhist.nTotale4 + ;
								disbhist.nTotale5 + ;
								disbhist.ntotaleA + ;
								disbhist.ntotaleB + ;
								disbhist.nmktgexp) AS nExpense,  ;
							SUM(disbhist.nSevTaxes) AS nSevTaxes, ;
							SUM(disbhist.nNetCheck) AS nNetCheck, ;
							disbhist.hyear,    ;
							disbhist.hperiod, ;
							disbhist.cProgCode, ;
							SUM(disbhist.nGather) AS nGather, ;
							SUM(disbhist.nCompress) AS nCompress, ;
							wells.cWellName ;
						FROM disbhist, wells, investor ;
						WHERE EMPTY(disbhist.csusptype) ;
							AND disbhist.crunyear + PADL(TRANSFORM(disbhist.nrunno), 3, '0') + disbhist.crectype IN ;
							(SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + cTypeClose ;
								 FROM sysctl ;
								 WHERE BETWEEN(dAcctDate, ldBegDate, ldEndDate)) ;
							AND disbhist.cWellID in (SELECT cid FROM selected) ;
							AND IIF(tcGroup <> '**', disbhist.cgroup = tcGroup, .T.) ;
							AND investor.cOwnerID = disbhist.cOwnerID  ;
							AND wells.cWellID = disbhist.cWellID ;
							AND disbhist.crectype # 'P' ;
							AND (lManual = .F. OR ;
							  (lManual = .T. ;
								AND crunyear_in + PADL(TRANSFORM(nrunno_in), 3, '0') ;
								NOT IN (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
											FROM sysctl ;
											WHERE EMPTY(cversion) ;
												AND cTypeClose = 'R'))) ;
							AND NOT investor.ldummy  ;
						INTO CURSOR disbchk READWRITE ;
						ORDER BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt;
						GROUP BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt, disbhist.cDirect
		
					SELECT  disbhist.cOwnerID, ;
							investor.cOwnName, ;
							disbhist.cWellID, ;
							SUM(disbhist.nIncome) AS nIncome, ;
							IIF(cDirect <> 'O', IIF(cDirect <> 'B', SUM(nOilRev), 000000.00), 000000.00) AS nOilRev, ;
							IIF(cDirect <> 'G', IIF(cDirect <> 'B', SUM(nGasRev), 000000.00), 000000.00) AS nGasRev, ;
							SUM(disbhist.nTrpRev + disbhist.nMiscRev1 + disbhist.nMiscRev2 + disbhist.nothrev + disbhist.nFlatRate) AS nOtherRev, ;
							disbhist.cDirect,  ;
							disbhist.cTypeInv, ;
							disbhist.cTypeInt, ;
							SUM(disbhist.nExpense + ;
								disbhist.nTotale1 + ;
								disbhist.nTotale2 + ;
								disbhist.nTotale3 + ;
								disbhist.nTotale4 + ;
								disbhist.nTotale5 + ;
								disbhist.ntotaleA + ;
								disbhist.ntotaleB + ;
								disbhist.nmktgexp) AS nExpense,  ;
							SUM(disbhist.nSevTaxes) AS nSevTaxes, ;
							SUM(disbhist.nNetCheck) AS nNetCheck, ;
							disbhist.hyear,    ;
							disbhist.hperiod, ;
							disbhist.cProgCode, ;
							SUM(disbhist.nGather) AS nGather, ;
							SUM(disbhist.nCompress) AS nCompress, ;
							wells.cWellName ;
						FROM disbhist, wells, investor ;
						WHERE NOT EMPTY(disbhist.csusptype) ;
							AND disbhist.crunyear_in + PADL(TRANSFORM(disbhist.nrunno_in), 3, '0') + disbhist.crectype IN ;
							(SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + cTypeClose ;
								 FROM sysctl ;
								 WHERE BETWEEN(dAcctDate, ldBegDate, ldEndDate)) ;
							AND disbhist.cWellID in (SELECT cid FROM selected) ;
							AND IIF(tcGroup <> '**', disbhist.cgroup = tcGroup, .T.) ;
							AND investor.cOwnerID = disbhist.cOwnerID  ;
							AND wells.cWellID = disbhist.cWellID ;
							AND disbhist.crectype # 'P' ;
							AND (lManual = .F. OR ;
							  (lManual = .T. ;
								AND crunyear_in + PADL(TRANSFORM(nrunno_in), 3, '0') ;
								NOT IN (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
											FROM sysctl ;
											WHERE EMPTY(cversion) ;
												AND cTypeClose = 'R'))) ;
							AND NOT investor.ldummy  ;
						INTO CURSOR disbchk1 ;
						ORDER BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt;
						GROUP BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt, disbhist.cDirect
		
		
					SELECT  suspense.cOwnerID, ;
							investor.cOwnName, ;
							suspense.cWellID, ;
							.T. AS lSuspense,  ;
							SUM(suspense.nIncome) AS nIncome, ;
							IIF(cDirect <> 'O', IIF(cDirect <> 'B', SUM(nOilRev), 000000.00), 000000.00) AS nOilRev, ;
							IIF(cDirect <> 'G', IIF(cDirect <> 'B', SUM(nGasRev), 000000.00), 000000.00) AS nGasRev, ;
							SUM(suspense.nTrpRev + suspense.nMiscRev1 + suspense.nMiscRev2 + suspense.nothrev + suspense.nFlatRate) AS nOtherRev, ;
							suspense.cDirect,  ;
							suspense.cTypeInv, ;
							suspense.cTypeInt, ;
							SUM(suspense.nExpense + ;
								suspense.nTotale1 + ;
								suspense.nTotale2 + ;
								suspense.nTotale3 + ;
								suspense.nTotale4 + ;
								suspense.nTotale5 + ;
								suspense.ntotaleA + ;
								suspense.ntotaleB + ;
								suspense.nmktgexp) AS nExpense,  ;
							SUM(suspense.nSevTaxes) AS nSevTaxes, ;
							SUM(suspense.nNetCheck) AS nNetCheck, ;
							suspense.hyear,    ;
							suspense.hperiod, ;
							suspense.cProgCode, ;
							SUM(suspense.nGather) AS nGather, ;
							SUM(suspense.nCompress) AS nCompress, ;
							wells.cWellName ;
						FROM suspense, wells, investor ;
						WHERE suspense.crunyear_in + PADL(TRANSFORM(suspense.nrunno_in), 3, '0') + suspense.crectype IN ;
							(SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + cTypeClose ;
								 FROM sysctl ;
								 WHERE BETWEEN(dAcctDate, ldBegDate, ldEndDate)) ;
							AND suspense.cWellID in (SELECT cid FROM selected) ;
							AND IIF(tcGroup <> '**', suspense.cgroup = tcGroup, .T.) ;
							AND investor.cOwnerID = suspense.cOwnerID  ;
							AND wells.cWellID = suspense.cWellID ;
							AND suspense.crectype # 'P' ;
							AND (lManual = .F. OR ;
							  (lManual = .T. ;
								AND crunyear_in + PADL(TRANSFORM(nrunno_in), 3, '0') ;
								NOT IN (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
											FROM sysctl ;
											WHERE EMPTY(cversion) ;
												AND cTypeClose = 'R'))) ;
							AND NOT investor.ldummy  ;
						INTO CURSOR disbchk2 ;
						ORDER BY suspense.cWellID, suspense.cTypeInv, suspense.cOwnerID, suspense.cTypeInt, suspense.cDirect ;
						GROUP BY suspense.cWellID, suspense.cTypeInv, suspense.cOwnerID, suspense.cTypeInt, suspense.cDirect
		
		        ENDIF
		
		    CASE tnType = 3       && Date range
		        IF llDirTot
					SELECT  disbhist.cOwnerID, ;
							investor.cOwnName, ;
							disbhist.cWellID, ;
							SUM(disbhist.nIncome) AS nIncome, ;
							SUM(nOilRev) AS nOilRev, ;
							SUM(nGasRev) AS nGasRev, ;
							SUM(disbhist.nTrpRev + disbhist.nMiscRev1 + disbhist.nMiscRev2 + disbhist.nothrev + disbhist.nFlatRate) AS nOtherRev, ;
							disbhist.cDirect,  ;
							disbhist.cTypeInv, ;
							disbhist.cTypeInt, ;
							SUM(disbhist.nExpense + ;
								disbhist.nTotale1 + ;
								disbhist.nTotale2 + ;
								disbhist.nTotale3 + ;
								disbhist.nTotale4 + ;
								disbhist.nTotale5 + ;
								disbhist.ntotaleA + ;
								disbhist.ntotaleB + ;
								disbhist.nmktgexp) AS nExpense,  ;
							SUM(disbhist.nSevTaxes) AS nSevTaxes, ;
							SUM(disbhist.nNetCheck) AS nNetCheck, ;
							disbhist.hyear,    ;
							disbhist.hperiod, ;
							disbhist.cProgCode, ;
							SUM(disbhist.nGather) AS nGather, ;
							SUM(disbhist.nCompress) AS nCompress, ;
							wells.cWellName ;
						FROM disbhist, wells, investor ;
						WHERE EMPTY(csusptype) ;
							AND disbhist.crunyear + PADL(TRANSFORM(disbhist.nrunno), 3, '0') + disbhist.crectype IN ;
							(SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + cTypeClose ;
								 FROM sysctl ;
								 WHERE BETWEEN(dAcctDate, tdDate1, tdDate2)) ;
							AND disbhist.cWellID in (SELECT cid FROM selected) ;
							AND IIF(tcGroup <> '**', disbhist.cgroup = tcGroup, .T.) ;
							AND investor.cOwnerID = disbhist.cOwnerID  ;
							AND wells.cWellID = disbhist.cWellID ;
							AND disbhist.crectype # 'P' ;
							AND (lManual = .F. OR ;
							  (lManual = .T. ;
								AND crunyear_in + PADL(TRANSFORM(nrunno_in), 3, '0') ;
								NOT IN (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
											FROM sysctl ;
											WHERE EMPTY(cversion) ;
												AND cTypeClose = 'R'))) ;
							AND NOT investor.ldummy  ;
						INTO CURSOR disbchk READWRITE  ;
						ORDER BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt;
						GROUP BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt, disbhist.cDirect
		
					SELECT  disbhist.cOwnerID, ;
							investor.cOwnName, ;
							disbhist.cWellID, ;
							SUM(disbhist.nIncome) AS nIncome, ;
							SUM(nOilRev) AS nOilRev, ;
							SUM(nGasRev) AS nGasRev, ;
							SUM(disbhist.nTrpRev + disbhist.nMiscRev1 + disbhist.nMiscRev2 + disbhist.nothrev + disbhist.nFlatRate) AS nOtherRev, ;
							disbhist.cDirect,  ;
							disbhist.cTypeInv, ;
							disbhist.cTypeInt, ;
							SUM(disbhist.nExpense + ;
								disbhist.nTotale1 + ;
								disbhist.nTotale2 + ;
								disbhist.nTotale3 + ;
								disbhist.nTotale4 + ;
								disbhist.nTotale5 + ;
								disbhist.ntotaleA + ;
								disbhist.ntotaleB + ;
								disbhist.nmktgexp) AS nExpense,  ;
							SUM(disbhist.nSevTaxes) AS nSevTaxes, ;
							SUM(disbhist.nNetCheck) AS nNetCheck, ;
							disbhist.hyear,    ;
							disbhist.hperiod, ;
							disbhist.cProgCode, ;
							SUM(disbhist.nGather) AS nGather, ;
							SUM(disbhist.nCompress) AS nCompress, ;
							wells.cWellName ;
						FROM disbhist, wells, investor ;
						WHERE NOT EMPTY(csusptype) ;
							AND disbhist.crunyear_in + PADL(TRANSFORM(disbhist.nrunno_in), 3, '0') + disbhist.crectype IN ;
							(SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + cTypeClose ;
								 FROM sysctl ;
								 WHERE BETWEEN(dAcctDate, tdDate1, tdDate2)) ;
							AND disbhist.cWellID in (SELECT cid FROM selected) ;
							AND IIF(tcGroup <> '**', disbhist.cgroup = tcGroup, .T.) ;
							AND investor.cOwnerID = disbhist.cOwnerID  ;
							AND wells.cWellID = disbhist.cWellID ;
							AND disbhist.crectype # 'P' ;
							AND (lManual = .F. OR ;
							  (lManual = .T. ;
								AND crunyear_in + PADL(TRANSFORM(nrunno_in), 3, '0') ;
								NOT IN (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
											FROM sysctl ;
											WHERE EMPTY(cversion) ;
												AND cTypeClose = 'R'))) ;
							AND NOT investor.ldummy  ;
						INTO CURSOR disbchk1  ;
						ORDER BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt;
						GROUP BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt, disbhist.cDirect
		
					SELECT  suspense.cOwnerID, ;
							investor.cOwnName, ;
							suspense.cWellID, ;
							.T. AS lSuspense,  ;
							SUM(suspense.nIncome) AS nIncome, ;
							SUM(nOilRev) AS nOilRev, ;
							SUM(nGasRev) AS nGasRev, ;
							SUM(suspense.nTrpRev + suspense.nMiscRev1 + suspense.nMiscRev2 + suspense.nothrev + suspense.nFlatRate) AS nOtherRev, ;
							suspense.cDirect,  ;
							suspense.cTypeInv, ;
							suspense.cTypeInt, ;
							SUM(suspense.nExpense + ;
								suspense.nTotale1 + ;
								suspense.nTotale2 + ;
								suspense.nTotale3 + ;
								suspense.nTotale4 + ;
								suspense.nTotale5 + ;
								suspense.ntotaleA + ;
								suspense.ntotaleB + ;
								suspense.nmktgexp) AS nExpense,  ;
							SUM(suspense.nSevTaxes) AS nSevTaxes, ;
							SUM(suspense.nNetCheck) AS nNetCheck, ;
							suspense.hyear,    ;
							suspense.hperiod, ;
							suspense.cProgCode, ;
							SUM(suspense.nGather) AS nGather, ;
							SUM(suspense.nCompress) AS nCompress, ;
							wells.cWellName ;
						FROM suspense, wells, investor ;
						WHERE suspense.crunyear_in + PADL(TRANSFORM(suspense.nrunno_in), 3, '0') + suspense.crectype IN ;
							(SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + cTypeClose ;
								 FROM sysctl ;
								 WHERE BETWEEN(dAcctDate, tdDate1, tdDate2)) ;
							AND suspense.cWellID in (SELECT cid FROM selected) ;
							AND IIF(tcGroup <> '**', suspense.cgroup = tcGroup, .T.) ;
							AND investor.cOwnerID = suspense.cOwnerID  ;
							AND wells.cWellID = suspense.cWellID ;
							AND suspense.crectype # 'P' ;
							AND (lManual = .F. OR ;
							  (lManual = .T. ;
								AND crunyear_in + PADL(TRANSFORM(nrunno_in), 3, '0') ;
								NOT IN (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
											FROM sysctl ;
											WHERE EMPTY(cversion) ;
												AND cTypeClose = 'R'))) ;
							AND NOT investor.ldummy  ;
						INTO CURSOR disbchk2 READWRITE  ;
						ORDER BY suspense.cWellID, suspense.cTypeInv, suspense.cOwnerID, suspense.cTypeInt;
						GROUP BY suspense.cWellID, suspense.cTypeInv, suspense.cOwnerID, suspense.cTypeInt, suspense.cDirect
		
		        ELSE
					SELECT  disbhist.cOwnerID, ;
							investor.cOwnName, ;
							disbhist.cWellID, ;
							SUM(disbhist.nIncome) AS nIncome, ;
							IIF(cDirect <> 'O', IIF(cDirect <> 'B', SUM(nOilRev), 000000.00), 000000.00) AS nOilRev, ;
							IIF(cDirect <> 'G', IIF(cDirect <> 'B', SUM(nGasRev), 000000.00), 000000.00) AS nGasRev, ;
							SUM(disbhist.nTrpRev + disbhist.nMiscRev1 + disbhist.nMiscRev2 + disbhist.nothrev + disbhist.nFlatRate) AS nOtherRev, ;
							disbhist.cDirect,  ;
							disbhist.cTypeInv, ;
							disbhist.cTypeInt, ;
							SUM(disbhist.nExpense + ;
								disbhist.nTotale1 + ;
								disbhist.nTotale2 + ;
								disbhist.nTotale3 + ;
								disbhist.nTotale4 + ;
								disbhist.nTotale5 + ;
								disbhist.ntotaleA + ;
								disbhist.ntotaleB + ;
								disbhist.nmktgexp) AS nExpense,  ;
							SUM(disbhist.nSevTaxes) AS nSevTaxes, ;
							SUM(disbhist.nNetCheck) AS nNetCheck, ;
							disbhist.hyear,    ;
							disbhist.hperiod, ;
							disbhist.cProgCode, ;
							SUM(disbhist.nGather) AS nGather, ;
							SUM(disbhist.nCompress) AS nCompress, ;
							wells.cWellName ;
						FROM disbhist, wells, investor ;
						WHERE EMPTY(disbhist.csusptype) ;
							AND disbhist.crunyear + PADL(TRANSFORM(disbhist.nrunno), 3, '0') + disbhist.crectype IN ;
							(SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + cTypeClose ;
								 FROM sysctl ;
								 WHERE BETWEEN(dAcctDate, tdDate1, tdDate2)) ;
							AND disbhist.cWellID in (SELECT cid FROM selected) ;
							AND IIF(tcGroup <> '**', disbhist.cgroup = tcGroup, .T.) ;
							AND investor.cOwnerID = disbhist.cOwnerID  ;
							AND wells.cWellID = disbhist.cWellID ;
							AND disbhist.crectype # 'P' ;
							AND (lManual = .F. OR ;
							  (lManual = .T. ;
								AND crunyear_in + PADL(TRANSFORM(nrunno_in), 3, '0') ;
								NOT IN (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
											FROM sysctl ;
											WHERE EMPTY(cversion) ;
												AND cTypeClose = 'R'))) ;
							AND NOT investor.ldummy  ;
						INTO CURSOR disbchk READWRITE  ;
						ORDER BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt;
						GROUP BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt, disbhist.cDirect
		
					SELECT  disbhist.cOwnerID, ;
							investor.cOwnName, ;
							disbhist.cWellID, ;
							SUM(disbhist.nIncome) AS nIncome, ;
							IIF(cDirect <> 'O', IIF(cDirect <> 'B', SUM(nOilRev), 000000.00), 000000.00) AS nOilRev, ;
							IIF(cDirect <> 'G', IIF(cDirect <> 'B', SUM(nGasRev), 000000.00), 000000.00) AS nGasRev, ;
							SUM(disbhist.nTrpRev + disbhist.nMiscRev1 + disbhist.nMiscRev2 + disbhist.nothrev + disbhist.nFlatRate) AS nOtherRev, ;
							disbhist.cDirect,  ;
							disbhist.cTypeInv, ;
							disbhist.cTypeInt, ;
							SUM(disbhist.nExpense + ;
								disbhist.nTotale1 + ;
								disbhist.nTotale2 + ;
								disbhist.nTotale3 + ;
								disbhist.nTotale4 + ;
								disbhist.nTotale5 + ;
								disbhist.ntotaleA + ;
								disbhist.ntotaleB + ;
								disbhist.nmktgexp) AS nExpense,  ;
							SUM(disbhist.nSevTaxes) AS nSevTaxes, ;
							SUM(disbhist.nNetCheck) AS nNetCheck, ;
							disbhist.hyear,    ;
							disbhist.hperiod, ;
							disbhist.cProgCode, ;
							SUM(disbhist.nGather) AS nGather, ;
							SUM(disbhist.nCompress) AS nCompress, ;
							wells.cWellName ;
						FROM disbhist, wells, investor ;
						WHERE NOT EMPTY(disbhist.csusptype) ;
							AND disbhist.crunyear_in + PADL(TRANSFORM(disbhist.nrunno_in), 3, '0') + disbhist.crectype IN ;
							(SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + cTypeClose ;
								 FROM sysctl ;
								 WHERE BETWEEN(dAcctDate, tdDate1, tdDate2)) ;
							AND disbhist.cWellID in (SELECT cid FROM selected) ;
							AND IIF(tcGroup <> '**', disbhist.cgroup = tcGroup, .T.) ;
							AND investor.cOwnerID = disbhist.cOwnerID  ;
							AND wells.cWellID = disbhist.cWellID ;
							AND disbhist.crectype # 'P' ;
							AND (lManual = .F. OR ;
							  (lManual = .T. ;
								AND crunyear_in + PADL(TRANSFORM(nrunno_in), 3, '0') ;
								NOT IN (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
											FROM sysctl ;
											WHERE EMPTY(cversion) ;
												AND cTypeClose = 'R'))) ;
							AND NOT investor.ldummy  ;
						INTO CURSOR disbchk1  ;
						ORDER BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt;
						GROUP BY disbhist.cWellID, disbhist.cTypeInv, disbhist.cOwnerID, disbhist.cTypeInt, disbhist.cDirect
		
					SELECT  suspense.cOwnerID, ;
							investor.cOwnName, ;
							suspense.cWellID, ;
							.T. AS lSuspense,  ;
							SUM(suspense.nIncome) AS nIncome, ;
							IIF(cDirect <> 'O', IIF(cDirect <> 'B', SUM(nOilRev), 000000.00), 000000.00) AS nOilRev, ;
							IIF(cDirect <> 'G', IIF(cDirect <> 'B', SUM(nGasRev), 000000.00), 000000.00) AS nGasRev, ;
							SUM(suspense.nTrpRev + suspense.nMiscRev1 + suspense.nMiscRev2 + suspense.nothrev + suspense.nFlatRate) AS nOtherRev, ;
							suspense.cDirect,  ;
							suspense.cTypeInv, ;
							suspense.cTypeInt, ;
							SUM(suspense.nExpense + ;
								suspense.nTotale1 + ;
								suspense.nTotale2 + ;
								suspense.nTotale3 + ;
								suspense.nTotale4 + ;
								suspense.nTotale5 + ;
								suspense.ntotaleA + ;
								suspense.ntotaleB + ;
								suspense.nmktgexp) AS nExpense,  ;
							SUM(suspense.nSevTaxes) AS nSevTaxes, ;
							SUM(suspense.nNetCheck) AS nNetCheck, ;
							suspense.hyear,    ;
							suspense.hperiod, ;
							suspense.cProgCode, ;
							SUM(suspense.nGather) AS nGather, ;
							SUM(suspense.nCompress) AS nCompress, ;
							wells.cWellName ;
						FROM suspense, wells, investor ;
						WHERE suspense.crunyear_in + PADL(TRANSFORM(suspense.nrunno_in), 3, '0') + suspense.crectype IN ;
							(SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') + cTypeClose ;
								 FROM sysctl ;
								 WHERE BETWEEN(dAcctDate, tdDate1, tdDate2)) ;
							AND suspense.cWellID in (SELECT cid FROM selected) ;
							AND IIF(tcGroup <> '**', suspense.cgroup = tcGroup, .T.) ;
							AND investor.cOwnerID = suspense.cOwnerID  ;
							AND wells.cWellID = suspense.cWellID ;
							AND suspense.crectype # 'P' ;
							AND (lManual = .F. OR ;
							  (lManual = .T. ;
								AND crunyear_in + PADL(TRANSFORM(nrunno_in), 3, '0') ;
								NOT IN (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
											FROM sysctl ;
											WHERE EMPTY(cversion) ;
												AND cTypeClose = 'R'))) ;
							AND NOT investor.ldummy  ;
						INTO CURSOR disbchk2 ;
						ORDER BY suspense.cWellID, suspense.cTypeInv, suspense.cOwnerID, suspense.cTypeInt;
						GROUP BY suspense.cWellID, suspense.cTypeInv, suspense.cOwnerID, suspense.cTypeInt, suspense.cDirect
		
		        ENDIF
		ENDCASE
		
		lnMax   = _TALLY
		lnCount = 1
		
		oProgress.SetProgressRange(0, lnMax)
		
		SELECT disbchk
		IF USED('disbchk1')
		   APPEND FROM DBF('disbchk1')
		ENDIF    
		IF USED('disbchk2')
		   APPEND FROM DBF('disbchk2')
		ENDIF    
		
		SCAN
		    SCATTER MEMVAR
		    IF llDirTot
		        DO CASE
		            CASE m.cDirect = 'O'
		                m.nNetCheck = m.nNetCheck + m.nOilRev
		            CASE m.cDirect = 'G'
		                m.nNetCheck = m.nNetCheck + m.nGasRev
		            CASE m.cDirect = 'B'
		                m.nNetCheck = m.nNetCheck + m.nOilRev + m.nGasRev
		        ENDCASE
		    ENDIF
		    oProgress.UpdateProgress(lnCount)
		    lnCount = lnCount + 1
		    IF nIncome = 0 AND ;
		            nExpense = 0 AND ;
		            nNetCheck = 0
		        DELETE NEXT 1
		        LOOP
		    ENDIF
		    swselect('programs')
		    SET ORDER TO cProgCode
		    SEEK m.cProgCode
		    IF FOUND()
		        m.cProgName = cProgName
		    ELSE
		        m.cProgCode = 'None'
		        m.cProgName = 'Non Program Wells'
		    ENDIF
		    INSERT INTO disbchks FROM MEMVAR
		ENDSCAN
		
		
		*  If the direct paid status changed during the range of time the report is being run for,
		*  it can make the income numbers screwy.  Changed to group by cdirect in all the selct
		*  statements above, and then we'll re-sum everything here, not grouping by cdirect
		SELECT  cOwnerID, cOwnName, CMONTH, cWellID, lSuspense, lIncSusp, SUM(nIncome) AS nIncome,  ;
				SUM(nOilRev) AS nOilRev, SUM(nGasRev) AS nGasRev, cDirect, SUM(nOtherRev) AS nOtherRev,  ;
				cTypeInv, cTypeInt, SUM(nExpense) AS nExpense, SUM(nSevTaxes) AS nSevTaxes,   ;
				SUM(nNetCheck) AS nNetCheck, SUM(nGather) AS nGather, SUM(nCompress) AS nCompress,  ;
				hyear, hperiod, cProgCode, cProgName, cWellName  ;
			FROM disbchks  ;
			INTO CURSOR disbchksx READWRITE ;
			GROUP BY cWellID, cTypeInv, cOwnerID, cTypeInt
		
		USE IN disbchks
		USE DBF('disbchksx') AGAIN IN 0 ALIAS disbchks
		
		SELECT disbchks
		IF THISFORM.opgSortBy.VALUE = 2  &&  Well Name
		    INDEX ON cWellName + cTypeInv + cOwnerID TAG wellinv
		ELSE
		    INDEX ON cWellID + cTypeInv + cOwnerID TAG wellinv
		ENDIF
		
		oProgress.CloseProgress()
		
		SELECT disbchks
		SET ORDER TO wellinv
		
		IF RECC() > 0
		    RETURN .T.
		ELSE
		    RETURN .F.
		ENDIF
		
		
		
		
	ENDPROC

	PROCEDURE Init
		DODEFAULT()
		
		SELECT wells
		SET ORDER TO cWellID
		
		GO TOP
		THISFORM.swrptlook1.txtBegName.VALUE = cwellname
		THISFORM.swrptlook1.txtBegID.VALUE = cWellID
		
		GO BOTTOM
		THISFORM.swrptlook1.txtEndName.VALUE = cwellname
		THISFORM.swrptlook1.txtEndID.VALUE = cWellID
		
		THISFORM.txtdate1.ENABLED = .F.
		THISFORM.txtdate2.ENABLED = .F.
		
		THISFORM.swPeriod1.value = '01'
		
		THISFORM.chklDirTot.value = .F.
		
		
		
	ENDPROC

	PROCEDURE chkDataEarned.Click
		IF this.Value
		   thisform.chklSuspense.Value = .f.
		ENDIF 
	ENDPROC

	PROCEDURE chkSelected.Click
		IF this.Value
		   DO FORM commonsource\selected-ids WITH 'WELL' LINKED 
		   lnCount = RECCOUNT('selected')
		   thisform.lblselected.Caption = TRANSFORM(lnCount) + ' Wells Selected'
		   thisform.lblselected.Visible = .T.
		   thisform.lblbegID.Visible = .F.
		   thisform.lblendID.Visible = .F.
		   thisform.swrptlook1.Visible = .F.
		ELSE
		   thisform.lblselected.Visible = .F.
		   thisform.lblbegID.Visible = .T.
		   thisform.lblendID.Visible = .T.
		   thisform.swrptlook1.Visible = .T.
		ENDIF 
	ENDPROC

	PROCEDURE opgRange.AccDate.Click
		THISFORM.swyear1.enabled = .f.
		THISFORM.swyear2.enabled = .f.
		THISFORM.swperiod1.enabled = .f.
		THISFORM.swperiod2.enabled = .f.
		THISFORM.txtdate1.enabled = .t.
		THISFORM.txtdate2.enabled = .t.
		
		
	ENDPROC

	PROCEDURE opgRange.AccDate.GotFocus
		THISFORM.opgRange.VALUE = 3
		THIS.CLICK()
		
	ENDPROC

	PROCEDURE opgRange.AccYear.Click
		THISFORM.swyear1.enabled = .t.
		THISFORM.swyear2.enabled = .t.
		THISFORM.swperiod1.enabled = .t.
		THISFORM.swperiod2.enabled = .t.
		THISFORM.txtdate1.enabled = .f.
		THISFORM.txtdate2.enabled = .f.
		
		
	ENDPROC

	PROCEDURE opgRange.AccYear.GotFocus
		THISFORM.opgRange.VALUE = 2
		THIS.CLICK()
		
	ENDPROC

	PROCEDURE opgRange.ProdYear.Click
		THISFORM.swyear1.enabled = .t.
		THISFORM.swyear2.enabled = .t.
		THISFORM.swperiod1.enabled = .t.
		THISFORM.swperiod2.enabled = .t.
		THISFORM.txtdate1.enabled = .f.
		THISFORM.txtdate2.enabled = .f.
		
		
	ENDPROC

	PROCEDURE opgRange.ProdYear.GotFocus
		THISFORM.opgRange.VALUE = 1
		THIS.CLICK()
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cwellid,cwellname,cgroup,cwellstat'
		DO FORM ..\custom\picklist WITH 'Wells', lcList, thisform.swrptlook1.txtbegid.value, 4
		
		IF llOK
		   thisform.swrptlook1.txtBegId.value = cwellid
		   thisform.swrptlook1.txtBegName.value = cwellname
		   thisform.swrptlook1.txtBegId.refresh()
		   thisform.swrptlook1.txtBegName.refresh()
		ENDIF   
		
		thisform.setnextcontrol(thisform.swrptlook1.txtBegId)
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cwellid,cwellname,cgroup,cwellstat'
		DO FORM ..\custom\picklist WITH 'Wells', lcList, thisform.swrptlook1.txtendid.value, 4
		
		IF llOK
		   thisform.swrptlook1.txtEndId.value = cwellid
		   thisform.swrptlook1.txtEndName.value = cwellname
		   thisform.swrptlook1.txtEndId.refresh()
		   thisform.swrptlook1.txtEndName.refresh()
		ENDIF   
		
		thisform.setnextcontrol(thisform.swrptlook1.txtEndId)
		
	ENDPROC

ENDDEFINE
