*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="hgdelimport.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 535
	Left = 40
	Name = "Dataenvironment"
	Top = 235
	Width = 719

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "gasuse", ;
		BufferModeOverride = 5, ;
		CursorSource = "gasuse", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "gasinv", ;
		BufferModeOverride = 5, ;
		CursorSource = "gasinv", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 430, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "expense", ;
		BufferModeOverride = 5, ;
		CursorSource = "expense", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 570, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "expsusp", ;
		BufferModeOverride = 5, ;
		CursorSource = "expsusp", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 262, ;
		Name = "Cursor4", ;
		Top = 223, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "glmaster", ;
		BufferModeOverride = 5, ;
		CursorSource = "glmaster", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 202, ;
		Name = "Cursor5", ;
		Top = 20, ;
		Width = 124
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor7' AS cursor WITH ;
		Alias = "coabal", ;
		BufferModeOverride = 5, ;
		CursorSource = "coabal", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor7", ;
		Top = 260, ;
		Width = 124
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formhgdelimport AS frmformcustom OF "..\..\custom\cforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="cboimpdate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cmdcommandbuttoncustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cmdcommandbuttoncustom2" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: delimport
	*</DefinedPropArrayMethod>

	Caption = "Delete Imported House Gas Readings"
	DoCreate = .T.
	Height = 162
	Name = "FormHGDelImport"
	Width = 465

	ADD OBJECT 'cboimpdate' AS cbocomboboxcustom WITH ;
		BoundColumn = 1, ;
		Height = 22, ;
		Left = 132, ;
		Name = "cboimpdate", ;
		Top = 48, ;
		Width = 198
		*< END OBJECT: ClassLib="..\..\custom\ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Cmdcommandbuttoncustom1' AS cmdcommandbuttoncustom WITH ;
		Caption = "\<Delete", ;
		Height = 36, ;
		Left = 133, ;
		Name = "Cmdcommandbuttoncustom1", ;
		Top = 108, ;
		Width = 75
		*< END OBJECT: ClassLib="..\..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Cmdcommandbuttoncustom2' AS cmdcommandbuttoncustom WITH ;
		Caption = "E\<xit", ;
		Height = 36, ;
		Left = 241, ;
		Name = "Cmdcommandbuttoncustom2", ;
		Top = 108, ;
		Width = 75
		*< END OBJECT: ClassLib="..\..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Delete Readings/Invoices with Invoice Date:", ;
		Left = 61, ;
		Name = "Lbllabelcustom1", ;
		Top = 29
		*< END OBJECT: ClassLib="..\..\custom\ccontrol.vcx" BaseClass="label" />
	
	PROCEDURE delimport
		LOCAL llReturn
		
		llReturn = .T.
		
		IF THISFORM.omessage.CONFIRM('Are you sure you want to delete these imported House Gas Readings?') = .F.
		   RETURN
		ENDIF
		
		lcdatapath = ALLT(m.goapp.cdatafilepath)
		IF EMPTY(lcdatapath)
		   lcdatapath = 'Data\'
		ENDIF
		
		swselect('glmaster')
		swselect('gasuse')
		swselect('gasinv')
		swselect('expsusp')
		swselect('expense')
		
		ldInvDate = CTOD(THISFORM.cboimpdate.VALUE)
		
		WAIT WIND NOWAIT 'Deleting Imported Data...'
		
		SELECT gasuse
		SCAN FOR dinvdate == ldInvDate
		   lcInvToken = cInvToken
		  
		   SELECT expense
		   LOCATE FOR cbatch == lcInvToken AND (nrunnorev # 0 OR nrunnojib # 0)
		   IF FOUND()
		      MESSAGEBOX('House Gas net entries have been allocated to the owner and processed from this import. It cannot be deleted',16,'Delete HG Import')
		      llReturn = .F.
		      EXIT
		   ENDIF
		
		   SELECT glmaster
		   DELETE FOR cbatch == lcInvToken
		   SELECT gasinv
		   DELETE FOR cidgasinv == lcInvToken
		   SELECT expsusp
		   DELETE FOR cbatch == lcInvToken
		   
		   SELECT gasuse
		   lcOwner = cOwnerID
		   lcMeter = cMeterNo
		   lcLast  = cLast
		   swselect('gasown')
		   SET ORDER TO cOwnerID   && COWNERID+CMETERNO
		   IF SEEK(lcOwner+lcMeter)
		      REPLACE cLast WITH lcLast, ;
		              nUsed WITH nUsed - gasuse.nused
		   ENDIF
		   SELECT gasuse
		   DELETE NEXT 1
		ENDSCAN
		
		WAIT CLEAR
		BEGIN TRANSACTION
		IF llReturn
		   llReturn = TABLEUPDATE(.T.,.F.,'glmaster')
		   IF llReturn
		      llReturn = TABLEUPDATE(.T.,.F.,'gasuse')
		      IF llReturn
		         llReturn = TABLEUPDATE(.T.,.F.,'gasinv')
		         IF llReturn
		            llReturn = TABLEUPDATE(.T.,.F.,'expsusp')
		            IF llReturn
		               llReturn = TABLEUPDATE(.T.,.F.,'expense')
		            ELSE
		               ROLLBACK    
		            ENDIF
		         ELSE
		            ROLLBACK    
		         ENDIF
		      ELSE
		         ROLLBACK    
		      ENDIF
		   ELSE
		      ROLLBACK    
		   ENDIF
		ENDIF
		
		IF llReturn
		   END TRANSACTION
		   THISFORM.cboimpdate.REQUERY()
		   THISFORM.omessage.DISPLAY('Deletion of imported data completed...')
		ELSE
		   ROLLBACK
		   THISFORM.omessage.DISPLAY('There was a problem deleting the imported House Gas Readings...')
		ENDIF
		
		
	ENDPROC

	PROCEDURE cboimpdate.Init
		this.Requery()
	ENDPROC

	PROCEDURE cboimpdate.Requery
		lcdatapath = ALLT(m.goapp.cdatafilepath)
		IF EMPTY(lcdatapath)
		   lcdatapath = 'Data\'
		ENDIF
		
		IF NOT USED('gasuse')
		   USE (lcdatapath+'gasuse') IN 0
		ENDIF
		
		this.Clear()
		
		sele DTOC(dInvDate) as dinvdate from gasuse order by dinvdate desc group by dinvdate into cursor tempreading
		if _tally > 0
		   lnx = 1
		   sele tempreading
		   scan
		      scatter memvar
		      this.addlistitem(m.dinvdate,lnx,1)
		      lnx = lnx + 1
		   ENDSCAN
		ELSE
		   this.AddListItem(' ',1,1)
		 endif
		
		this.listitemid = 1
		
		dodefault()      
	ENDPROC

	PROCEDURE Cmdcommandbuttoncustom1.Click
		thisform.delimport()
	ENDPROC

	PROCEDURE Cmdcommandbuttoncustom2.Click
		thisform.release()
	ENDPROC

ENDDEFINE
