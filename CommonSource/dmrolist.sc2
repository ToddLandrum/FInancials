*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="dmrolist.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 333
	Left = 4
	Name = "Dataenvironment"
	Top = 279
	Width = 520

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "investor", ;
		CursorSource = "investor", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Order = "cownerid", ;
		Top = 19, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "programs", ;
		CursorSource = "programs", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "wellinv", ;
		CursorSource = "wellinv", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 11, ;
		Name = "Cursor4", ;
		Top = 140, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "doidecks", ;
		CursorSource = "doidecks", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 268, ;
		Name = "Cursor5", ;
		Top = 181, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formdmrolist AS frmrptcriteria OF "..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="ChkInterests" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="ChkSeparate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptownerid_ownername1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEndID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBegID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklNotes" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblSortOrder" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkDirectDeposit" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklNoSSN" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkActive" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSelected" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSelected" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDeck" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboDeck" UniqueID="" Timestamp="" />

	Caption = "Owner/Interest Listing"
	DataSession = 2
	DoCreate = .T.
	Height = 592
	HelpContextID = 215
	Name = "FormDmrolist"
	Width = 733
	Swrptcriteriabuttons1.BackStyle = 0
	Swrptcriteriabuttons1.CHKEXPORT.Alignment = 0
	Swrptcriteriabuttons1.CHKEXPORT.Name = "CHKEXPORT"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.cmdPreview.Name = "cmdPreview"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 249
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 16
	Swrptcriteriabuttons1.Top = 504
	Swrptcriteriabuttons1.ZOrderSet = 0

	ADD OBJECT 'cboDeck' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		ControlSource = "doidecks.cdeck", ;
		Enabled = .F., ;
		Height = 22, ;
		Left = 321, ;
		Name = "cboDeck", ;
		Style = 0, ;
		TabIndex = 14, ;
		Top = 432, ;
		Width = 120
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'chkActive' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Only Include Active Wells", ;
		Enabled = .F., ;
		Height = 16, ;
		Left = 420, ;
		lenabled = .T., ;
		Name = "chkActive", ;
		TabIndex = 13, ;
		Top = 367, ;
		Value = .F., ;
		Width = 140, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkDirectDeposit' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Only Include Direct Deposit Owners", ;
		Enabled = .T., ;
		Height = 16, ;
		Left = 168, ;
		lenabled = .T., ;
		Name = "chkDirectDeposit", ;
		TabIndex = 8, ;
		Top = 283, ;
		Value = .F., ;
		Width = 190, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'ChkInterests' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Include Well Interests", ;
		Height = 16, ;
		Left = 168, ;
		Name = "ChkInterests", ;
		Style = 0, ;
		TabIndex = 10, ;
		Top = 367, ;
		Value = .F., ;
		Width = 120, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklNoSSN' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Mask Tax ID Numbers on Report", ;
		Height = 16, ;
		Left = 420, ;
		Name = "chklNoSSN", ;
		Style = 0, ;
		TabIndex = 11, ;
		Top = 284, ;
		Value = .F., ;
		Width = 172, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklNotes' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Include Notes", ;
		Enabled = .T., ;
		Height = 16, ;
		Left = 168, ;
		lenabled = .T., ;
		Name = "chklNotes", ;
		TabIndex = 9, ;
		Top = 325, ;
		Value = .F., ;
		Width = 83, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSelected' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Choose Selected Owners", ;
		Left = 292, ;
		Name = "chkSelected", ;
		TabIndex = 3, ;
		Top = 99, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'ChkSeparate' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Start a New Page for Each Owner", ;
		Enabled = .F., ;
		Height = 16, ;
		Left = 420, ;
		lenabled = .T., ;
		Name = "ChkSeparate", ;
		TabIndex = 12, ;
		Top = 326, ;
		Value = .F., ;
		Width = 184, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'lblBegID' AS lbllabelcustom WITH ;
		Caption = "First Owner:", ;
		Height = 16, ;
		Left = 209, ;
		Name = "lblBegID", ;
		TabIndex = 5, ;
		Top = 134, ;
		Width = 63, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblDeck' AS lbllabelcustom WITH ;
		Caption = "Deck:", ;
		Enabled = .F., ;
		Left = 285, ;
		Name = "lblDeck", ;
		TabIndex = 15, ;
		Top = 435
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblEndID' AS lbllabelcustom WITH ;
		Caption = "Last Owner:", ;
		Height = 16, ;
		Left = 209, ;
		Name = "lblEndID", ;
		TabIndex = 7, ;
		Top = 184, ;
		Width = 63, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSelected' AS lbllabelcustom WITH ;
		Caption = "All Owners Selected", ;
		ForeColor = 0,0,255, ;
		Left = 310, ;
		Name = "lblSelected", ;
		TabIndex = 6, ;
		Top = 157, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblSortOrder' AS lbllabelcustom WITH ;
		Caption = "Sort By:", ;
		Height = 16, ;
		Left = 231, ;
		Name = "LblSortOrder", ;
		TabIndex = 2, ;
		Top = 44, ;
		Width = 41, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		BackStyle = 0, ;
		Left = 288, ;
		Name = "Swrptlook1", ;
		TabIndex = 4, ;
		Top = 132, ;
		ZOrderSet = 3, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		txtBegID.clistexpression = investor.cownerid, ;
		txtBegID.clistworkarea = investor, ;
		txtBegID.Name = "txtBegID", ;
		TxtBegName.Name = "TxtBegName", ;
		txtEndID.clistexpression = investor.cownerid, ;
		txtEndID.clistworkarea = investor, ;
		txtEndID.Name = "txtEndID", ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />

	ADD OBJECT 'Swrptownerid_ownername1' AS swrptownerid_ownername WITH ;
		BackStyle = 0, ;
		Left = 284, ;
		Name = "Swrptownerid_ownername1", ;
		TabIndex = 1, ;
		Top = 38, ;
		ZOrderSet = 3, ;
		OwnerID.Left = 5, ;
		OwnerID.Name = "OwnerID", ;
		OwnerID.Top = 5, ;
		OwnerID.Value = 1, ;
		OwnerName.Left = 5, ;
		OwnerName.Name = "OwnerName", ;
		OwnerName.Top = 28
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="optiongroup" />
	
	PROCEDURE builddata
		LOCAL lcBegID, lcBegName, lcBetween, lcEndID, lcEndName, lcOrderBy, lcReportName, lcSelectCriteria
		LOCAL lcSortOrder, llActive, llNoSSN, llNotes, llReturn, loError
		LOCAL llInterests, llSeparate, llSelected
		
		llReturn = .T.
		
		TRY
		
		   lcBegID     = THISFORM.swrptlook1.txtBegID.VALUE
		   lcEndID     = THISFORM.swrptlook1.txtEndID.VALUE
		   lcBegName   = ALLTRIM(THISFORM.swrptlook1.txtBegName.VALUE)
		   lcEndName   = ALLTRIM(THISFORM.swrptlook1.txtEndName.VALUE)
		   llNotes     = THISFORM.chklNotes.VALUE
		   llNoSSN     = THISFORM.chklnoSSN.VALUE
		   llActive    = THISFORM.chkActive.VALUE
		   llInterests = THISFORM.chkinterests.VALUE
		   llSeparate  = THISFORM.chkseparate.VALUE
		   lnSelect    = thisform.swrptownerid_ownername1.Value 
		   llSelected  = thisform.chkselected.Value 
		   lcDeck      = thisform.cboDeck.Value 
		   llAllDecks = 'All Decks' $ lcDeck
		   
		   IF NOT llSelected
		      SELECT cownerid AS cid FROM investor ;
		         INTO CURSOR SELECTED ;
		         WHERE BETWEEN(cownerid,lcBegID,lcEndID) ;
		         ORDER BY cid
		   ENDIF
		
		   IF !m.goapp.oSecurity.HasPrivilege('Tax Ids')
		      llNoSSN = .t.
		   ENDIF 
		   
		   
		*   Builds the cursor needed by the report by using
		*   the criteria given in the form
		
		   swclose('ownlist')
		
		******************************************************************************
		*  If neither the Interests or Separate Page box is chosen
		******************************************************************************
		
		   IF llInterests = .F. 
		
		      IF lnSelect = 1  && Sort by ID
		         lcSortOrder      = 'Owner ID'
		         lcSelectCriteria = 'Owner ID: ' + lcBegID + ' - ' + lcEndID
		         lcBetween        = 'investor.cownerid in (select cid from selected)'
		         lcOrderBy        = 'investor.cOwnerID'
		      ELSE  &&  Sort By Name
		         lcSortOrder      = 'Owner Name'
		         lcSelectCriteria = 'Owner Name:  ' + lcBegName + ' - ' + lcEndName
		         lcBetween        = 'investor.cownerid in (select cid from selected)'
		         lcOrderBy        = 'investor.cSortField, investor.cOwnerID'
		      ENDIF
		
			  SELECT  SPACE(10) as cPageBreak, ;
			          investor.cOwnerID,  ;
					  investor.cSortField AS cOwnname,  ;
					  investor.cSortField, ;
					  investor.cOwnName1, ;
					  investor.caddress1a,  ;
					  investor.caddress1b,  ;
					  investor.ccity1,  ;
					  investor.cstate1,  ;
					  investor.czip1,  ;
					  investor.cphoneh,  ;
					  investor.cphonew,  ;
					  investor.cemail,  ;
					  investor.lHold,  ;
					  llNotes as lNotes, ;
					  IIF(llNoSSN, '*******', cmEncrypt(ALLTRIM(investor.ctaxid),m.goApp.cEncryptionKey)) AS ctaxid,   ;
					  investor.mnotes, ;
					  ' ' AS temp ;
				  FROM investor  ;
				  WHERE &lcBetween  ;
					  AND IIF(THISFORM.chkDirectDeposit.VALUE, investor.ldirectdep = .T., .T.) ;
				  ORDER BY &lcOrderBy  ;
				  INTO CURSOR ownlist
		      THISFORM.cTitle1         = 'Owner Listing'
		      THISFORM.cTitle2         = ''
		      THISFORM.cSelectCriteria = lcSelectCriteria
		      THISFORM.cSortOrder      = lcSortOrder
		      THISFORM.cReportName     = 'dmroown'
		
		   ENDIF
		
		*****************************************************
		*  If the interests box is chosen, and possibly the separate page box
		*****************************************************
		
		   IF llInterests = .T.
		
		      IF THISFORM.swrptownerid_ownername1.VALUE = 1  && Sort by ID
		         lcSortOrder      = 'Owner ID'
		         lcSelectCriteria = 'Owner ID: ' + lcBegID + ' - ' + lcEndID + ' + Well Interests'
		         lcBetween        = 'investor.cownerid in (select cid from selected)'
		         lcOrderBy        = 'investor.cOwnerID,wells.cwellid, wellinv.cdeck'
		         IF m.goapp.lPartnershipMod
		            lcReportName     = IIF(llSeparate, 'commonsource\dmrownint2u', 'commonsource\dmrownint1u')  &&  Determining whether separate page has been chosen
		         ELSE
		            lcReportName     = IIF(llSeparate, 'commonsource\dmrownint2', 'commonsource\dmrownint1')  &&  Determining whether separate page has been chosen   
		         ENDIF    
		      ELSE  &&  Sort By Name
		         lcSortOrder      = 'Owner Name'
		         lcSelectCriteria = 'Owner Name:  ' + lcBegName + ' - ' + lcEndName + ' + Well Interests'
		         lcBetween        = 'investor.cownerid in (select cid from selected)'
		         lcOrderBy        = 'investor.cSortField,investor.cOwnerID,wells.cwellid, wellinv.cdeck'
		         IF m.goapp.lPartnershipMod
		            lcReportName     = IIF(llSeparate, 'commonsource\dmrownint2u', 'commonsource\dmrownint1u')  &&  Determining whether separate page has been chosen
		         ELSE
		            lcReportName     = IIF(llSeparate, 'commonsource\dmrownint2', 'commonsource\dmrownint1')  &&  Determining whether separate page has been chosen
		         ENDIF       
		      ENDIF
		
			  SELECT  SPACE(10) as cPageBreak, ;
			          wells.cwellid,  ;
					  wells.cwellname,  ;
					  wellinv.cOwnerID,  ;
					  wellinv.cdeck, ;
					  investor.cSortField AS cOwnname,  ;
					  investor.cOwnName1, ;
					  investor.ndisbfreq, ;
					  investor.lHold, ;
					  wellinv.ctypeinv,  ;
					  wellinv.ctypeint,  ;
					  wellinv.cdirect,  ;
					  IIF(wellinv.lflat, 'Y', 'N') AS cFlat,  ;
					  wellinv.lflat, ;
					  wellinv.nflatrate,  ;
					  wellinv.nFlatBBL,  ;
					  wellinv.nFlatMCF,  ;
					  wellinv.ljib,  ;
					  wellinv.cprogcode,  ;
					  wellinv.lOnHold,  ;
					  wellinv.nrevoil,  ;
					  wellinv.nrevgas,  ;
					  wellinv.nWorkint,  ;
					  wellinv.nrevtrp,  ;
					  wellinv.nrevmisc1,  ;
					  wellinv.nrevmisc2,  ;
					  wellinv.nintclass1,  ;
					  wellinv.nintclass2,  ;
					  wellinv.nintclass3,  ;
					  wellinv.nintclass4,  ;
					  wellinv.nintclass5,  ;
		           wellinv.nplugpct, ;
		           wellinv.nrevtax1 as noiltax1, ;
		           wellinv.nrevtax2 as noiltax2, ;
		           wellinv.nrevtax3 as noiltax3, ;
		           wellinv.nrevtax4 as noiltax4, ;
		           wellinv.nrevtax5 as ngastax1, ;
		           wellinv.nrevtax6 as ngastax2, ;
		           wellinv.nrevtax7 as ngastax3, ;
		           wellinv.nrevtax8 as ngastax4, ;
		           wellinv.nrevtax9 as nothtax1, ;
		           wellinv.nrevtax10 as nothtax2, ;
		           wellinv.nrevtax11 as nothtax3, ;
		           wellinv.nrevtax12 as nothtax4, ;
		           wellinv.nunits, ;
					  wellinv.lprogram,  ;
					  wellinv.nrevtax1,  ;
					  wellinv.nrevtax2 ;
				  FROM wells, wellinv, investor ;
				  WHERE &lcBetween  ;
				      AND IIF(NOT llAllDecks,cDeck = lcDeck,.T.) ;
					  AND wells.cwellid = wellinv.cwellid  ;
					  AND wellinv.cOwnerID == investor.cOwnerID  ;
					  AND IIF(llActive, wells.cWellStat = 'A', .T.)  ;
				  INTO CURSOR ownlist READWRITE ;
				  ORDER BY &lcOrderBy
		      THISFORM.cTitle1         = 'Owner Interest Listing'
		      THISFORM.cTitle2         = ''
		      THISFORM.cSelectCriteria = lcSelectCriteria
		      THISFORM.cSortOrder      = lcSortOrder
		      THISFORM.cReportName     = lcReportName
		
		      SELECT ownlist
		      SCAN FOR lflat
		         IF nflatrate = 0 AND nFlatMCF <> 0
		            REPLACE nflatrate WITH nFlatMCF
		         ENDIF
		         IF nflatrate = 0 AND nFlatBBL <> 0
		            REPLACE nflatrate WITH nFlatBBL
		         ENDIF
		      ENDSCAN
		      
		      llReturn = DecimalInts('ownlist')
		
		   ENDIF
		
		   SELECT ownlist
		   IF RECC() > 0
		      llReturn = .T.
		   ELSE
		      llReturn = .F.
		   ENDIF
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'BuildData', loError.LINENO, 'Owner Listing', loError.ERRORNO, loError.MESSAGE, '', loError
		   MESSAGEBOX('Unable to process the report at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
	ENDPROC

	PROCEDURE Init
		IF DODEFAULT()
		   SELECT investor
		   SET ORDER TO cOwnerID
		
		   GO TOP
		   THISFORM.swrptlook1.txtBegName.VALUE = cSortField
		   THISFORM.swrptlook1.txtBegID.VALUE = cOwnerID
		
		   GO BOTTOM
		   THISFORM.swrptlook1.txtEndName.VALUE = cSortField
		   THISFORM.swrptlook1.txtEndID.VALUE = cOwnerID
		
		   * Only show the direct deposit inclusion if the direct deposit module is active.
		   IF m.goapp.ldirdmdep
		      THISFORM.chkDirectDeposit.VISIBLE = .T.
		   ELSE
		      THISFORM.chkDirectDeposit.VISIBLE = .F.
		   ENDIF
		
		ENDIF
		
	ENDPROC

	PROCEDURE cboDeck.Init
		IF DODEFAULT()
		   this.Requery()
		ENDIF    
	ENDPROC

	PROCEDURE cboDeck.Requery
		LPARAMETERS lcDeck, lcBegID, lcEndID, llSelected, lcWellID, lnIndex, lnX
		
		IF DODEFAULT()
			THIS.CLEAR()
		
		    lcBegID = thisform.swrpTLOOK1.txtbegID.Value
		    lcEndID = thisform.swrptlook1.txtendID.Value 
		    llSelected = thisform.chkSelected.Value 
		    
		    IF VARTYPE(lcDeck) # 'C'
		       lcDeck = this.Value
		    ENDIF 
		    
		    IF NOT llSelected
		      SELECT cwellid AS cid FROM wells ;
		         INTO CURSOR SELECTED ;
		         WHERE BETWEEN(cwellid,lcBegID,lcEndID) ;
		         ORDER BY cid
		   ENDIF
		       
		    lnIndex = 1
		    
			SELECT cdeck, ldefault FROM doidecks ;
				INTO CURSOR temp ;
				WHERE cwellid in (SELECT cid FROM selected) ;
				ORDER BY cdeck DESC  ;
				GROUP BY cdeck
				
			this.AddListItem('All Decks',1,1)
			this.AddListItem('All Decks',2,1)
		
			lnx = 2
			IF _TALLY > 0
				SELECT temp
				SCAN
					SCATTER MEMVAR
					IF EMPTY(m.cdeck)
					   m.cdeck = '(blank)'
					ENDIF 
					THIS.ADDLISTITEM(m.cdeck,lnx,1)
					THIS.ADDLISTITEM(m.cdeck,lnx,2)
					lnx = lnx + 1 
				ENDSCAN
			ENDIF
		    this.ListItemId = 1
		ENDIF
		
	ENDPROC

	PROCEDURE cboDeck.Valid
		RETURN .t.
	ENDPROC

	PROCEDURE chkDirectDeposit.Click
		IF this.Value
		   thisform.chkinterests.Value   = .f.
		   thisform.chkseparate.Enabled  = .f.
		   thisform.chkseparate.Value    = .f.
		ELSE
		   thisform.chkInterests.Enabled = .t.
		   thisform.chkseparate.Enabled  = .t.
		ENDIF 
	ENDPROC

	PROCEDURE ChkInterests.Click
		IF THIS.VALUE = .t.
		   THISFORM.chkSeparate.enabled = .t.
		   THISFORM.chkSeparate.VALUE = .f.
		   thisform.chklNotes.enabled = .f.
		   thisform.chklNotes.value = .f.
		   thisform.chkDirectDeposit.Value = .f.
		   thisform.chkdirectDeposit.Enabled = .f.
		   thisform.chklnoSSN.Value = .f.
		   thisform.chklnoSSN.Enabled = .f.
		   thisform.chkActive.Value = .f.
		   thisform.chkActive.Enabled = .t.
		   thisform.cboDeck.Enabled = .t.
		ELSE
		   THISFORM.chkSeparate.enabled = .f.
		   THISFORM.chkSeparate.VALUE = .f.
		   thisform.chklNotes.enabled = .t.
		   thisform.chkDirectDeposit.enabled = .t.
		   thisform.chklnoSSN.Enabled = .t.
		   thisform.chkActive.Value = .f.
		   thisform.chkActive.Enabled = .f.
		   thisform.cboDeck.Enabled = .f.
		ENDIF
		   
	ENDPROC

	PROCEDURE chklNotes.Click
		IF this.Value
		   thisform.chkinterests.Value   = .f.
		   thisform.chkseparate.Enabled  = .f.
		   thisform.chkseparate.Value    = .f.
		ELSE
		   thisform.chkInterests.Enabled = .t.
		   thisform.chkseparate.Enabled  = .t.
		ENDIF 
	ENDPROC

	PROCEDURE chkSelected.Click
		IF this.Value
		   DO FORM commonsource\selected-ids WITH 'OWNER' LINKED 
		   lnCount = RECCOUNT('selected')
		   thisform.lblselected.Caption = TRANSFORM(lnCount) + ' Owners Selected'
		   thisform.lblselected.Visible = .T.
		   thisform.lblbegID.Visible = .F.
		   thisform.lblendID.Visible = .F.
		   thisform.swrptlook1.Visible = .F.
		ELSE
		   thisform.lblselected.Visible = .F.
		   thisform.lblbegID.Visible = .T.
		   thisform.lblendID.Visible = .T.
		   thisform.swrptlook1.Visible = .T.
		ENDIF 
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cownerid,csortfield'
		
		DO FORM ..\custom\picklist WITH 'Investor', lcList, thisform.swrptlook1.txtbegid.value, 2
		
		IF llOK
		   thisform.swrptlook1.txtBegId.value = cOwnerID
		   thisform.swrptlook1.txtBegName.value = cSortField
		   thisform.swrptlook1.txtBegId.SetFocus()
		   thisform.swrptlook1.txtBegId.refresh()
		   thisform.swrptlook1.txtBegName.refresh()
		ENDIF   
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cownerid,csortfield'
		
		DO FORM ..\custom\picklist WITH 'Investor', lcList, thisform.swrptlook1.txtendid.value, 2
		
		IF llOK
		   thisform.swrptlook1.txtEndId.value = cOwnerID
		   thisform.swrptlook1.txtEndName.value = cSortField
		   thisform.swrptlook1.txtEndId.SetFocus()
		   thisform.swrptlook1.txtEndId.refresh()
		   thisform.swrptlook1.txtEndName.refresh()
		ENDIF   
	ENDPROC

	PROCEDURE Swrptownerid_ownername1.OwnerID.Click
		*
	ENDPROC

	PROCEDURE Swrptownerid_ownername1.OwnerName.Click
		*
	ENDPROC

ENDDEFINE
