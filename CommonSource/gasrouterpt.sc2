*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="gasrouterpt.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor10" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor11" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 619
	Left = 81
	Name = "Dataenvironment"
	Top = 212
	Width = 981

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "investor", ;
		CursorSource = "investor", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor10' AS cursor WITH ;
		Alias = "arpmthdr1", ;
		CursorSource = "arpmthdr", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor10", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor11' AS cursor WITH ;
		Alias = "groups", ;
		CursorSource = "groups", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 430, ;
		Name = "Cursor11", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "gasown", ;
		CursorSource = "gasown", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Top = 19, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "gasopt", ;
		CursorSource = "gasopt", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 19, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "gasinv", ;
		CursorSource = "gasinv", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 430, ;
		Name = "Cursor4", ;
		Top = 21, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "gasuse", ;
		CursorSource = "gasuse", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 570, ;
		Name = "Cursor5", ;
		Top = 19, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "custown", ;
		CursorSource = "custown", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 710, ;
		Name = "Cursor6", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor7' AS cursor WITH ;
		Alias = "arpmtdet", ;
		CursorSource = "arpmtdet", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 850, ;
		Name = "Cursor7", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor8' AS cursor WITH ;
		Alias = "arpmtdet1", ;
		CursorSource = "arpmtdet", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor8", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor9' AS cursor WITH ;
		Alias = "arpmthdr", ;
		CursorSource = "arpmthdr", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor9", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formgasrouterpt AS frmrptcriteria OF "..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="LblBegID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblEndID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcBegMeterNo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcBegDescription" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcEndMeterNo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcEndDescription" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBegMeter" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEndMeter" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboRoute" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblRoute" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swgroup" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblGroup" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSelected" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSelected" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: ownerlisting
		*m: ownerproduction
		*m: ownerroute
		*m: ownerstatement
		*p: cwhichrpt
	*</DefinedPropArrayMethod>

	Caption = "House Gas Route Report"
	DataSession = 2
	DoCreate = .T.
	FontSize = 8
	Height = 432
	HelpContextID = 166
	Name = "FormGasRouteRpt"
	Width = 498
	Swrptcriteriabuttons1.chkExport.Alignment = 0
	Swrptcriteriabuttons1.chkExport.Name = "chkExport"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.cmdPreview.Name = "cmdPreview"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 131
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 32
	Swrptcriteriabuttons1.Top = 336
	Swrptcriteriabuttons1.ZOrderSet = 1

	ADD OBJECT 'cboRoute' AS cbocomboboxcustom WITH ;
		BoundColumn = 1, ;
		ColumnCount = 1, ;
		Height = 20, ;
		Left = 162, ;
		Name = "cboRoute", ;
		TabIndex = 26, ;
		Top = 288, ;
		Width = 132, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'chkSelected' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Choose Selected Owners", ;
		Left = 163, ;
		Name = "chkSelected", ;
		TabIndex = 7, ;
		Top = 31, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'LblBegID' AS lbllabelcustom WITH ;
		Caption = "First Owner:", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 92, ;
		Name = "LblBegID", ;
		TabIndex = 14, ;
		Top = 62, ;
		Width = 63, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblBegMeter' AS lbltextcustom WITH ;
		Caption = "Meter Description:", ;
		Left = 66, ;
		Name = "lblBegMeter", ;
		TabIndex = 17, ;
		Top = 106, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblEndID' AS lbllabelcustom WITH ;
		Caption = "Last Owner:", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 92, ;
		Name = "LblEndID", ;
		TabIndex = 18, ;
		Top = 146, ;
		Width = 63, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblEndMeter' AS lbltextcustom WITH ;
		Caption = "Meter Description:", ;
		Left = 66, ;
		Name = "lblEndMeter", ;
		TabIndex = 21, ;
		Top = 190, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblGroup' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Group:", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 120, ;
		Name = "LblGroup", ;
		TabIndex = 25, ;
		Top = 231, ;
		Width = 35, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblRoute' AS lbltextcustom WITH ;
		Caption = "Route:", ;
		Left = 122, ;
		Name = "lblRoute", ;
		TabIndex = 27, ;
		Top = 290, ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSelected' AS lbllabelcustom WITH ;
		Caption = "All Owners Selected", ;
		ForeColor = 0,0,255, ;
		Left = 162, ;
		Name = "lblSelected", ;
		TabIndex = 32, ;
		Top = 89, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Swgroup' AS swgroup WITH ;
		Left = 162, ;
		Name = "Swgroup", ;
		TabIndex = 24, ;
		Top = 228, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		Height = 141, ;
		Left = 162, ;
		Name = "Swrptlook1", ;
		TabIndex = 13, ;
		Top = 59, ;
		Width = 243, ;
		ZOrderSet = 4, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton2.Left = 87, ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		Swlookupbutton2.Top = 84, ;
		TxtBegID.clistexpression = gasown.cownerid, ;
		TxtBegID.clistworkarea = gasown, ;
		TxtBegID.Height = 20, ;
		TxtBegID.InputMask = "", ;
		TxtBegID.MaxLength = 10, ;
		TxtBegID.Name = "TxtBegID", ;
		TxtBegName.Height = 20, ;
		TxtBegName.Left = 0, ;
		TxtBegName.Name = "TxtBegName", ;
		TxtBegName.Top = 22, ;
		TxtBegName.Width = 243, ;
		TxtEndID.clistexpression = gasown.cownerid, ;
		TxtEndID.clistworkarea = gasown, ;
		TxtEndID.Height = 20, ;
		TxtEndID.Left = 0, ;
		TxtEndID.Name = "TxtEndID", ;
		TxtEndID.Top = 84, ;
		TxtEndName.Height = 20, ;
		TxtEndName.Left = 0, ;
		TxtEndName.Name = "TxtEndName", ;
		TxtEndName.Top = 105, ;
		TxtEndName.Width = 243
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />

	ADD OBJECT 'txtcBegDescription' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 276, ;
		Name = "txtcBegDescription", ;
		ReadOnly = .T., ;
		TabIndex = 16, ;
		Top = 104, ;
		Width = 129, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcBegMeterNo' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 162, ;
		Name = "txtcBegMeterNo", ;
		ReadOnly = .T., ;
		TabIndex = 15, ;
		Top = 104, ;
		Width = 110, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcEndDescription' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 276, ;
		Name = "txtcEndDescription", ;
		ReadOnly = .T., ;
		TabIndex = 20, ;
		Top = 188, ;
		Width = 129, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcEndMeterNo' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 162, ;
		Name = "txtcEndMeterNo", ;
		ReadOnly = .T., ;
		TabIndex = 19, ;
		Top = 188, ;
		Width = 110, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE builddata
		LOCAL lnCount
		
		WAIT WINDOW NOWAIT 'Processing Request...'
		
		IF USED('owntemp')
		   USE IN owntemp
		ENDIF
		IF USED('temp')
		   USE IN temp
		ENDIF
		
		DO CASE
		   CASE THISFORM.cWhichRpt = 'OL'  &&  Owner Listing Report
		      THISFORM.ownerlisting()
		
		   CASE THISFORM.cWhichRpt = 'OS'  &&  Owner statements
		      THISFORM.ownerstatement()
		
		
		   CASE THISFORM.cWhichRpt = 'OR'  &&  Owner Route Report
		      THISFORM.ownerroute()
		
		   CASE THISFORM.cWhichRpt = 'OP'  &&  Production Report
		      THISFORM.ownerproduction()
		
		ENDCASE
		
		WAIT CLEAR
		
		IF USED('owntemp')
		   SELECT owntemp
		   SET DELETED ON
		   COUNT FOR NOT DELETED() TO lnCount
		ELSE
		   lnCount = 0
		ENDIF
		
		IF lnCount > 0
		   RETURN .T.
		ELSE
		   RETURN .F.
		ENDIF
		
		
	ENDPROC

	PROCEDURE Init
		PARA cWhichRpt
		
		DODEFAULT()
		
		IF TYPE('cWhichRpt') <> 'C'
		   cWhichRpt = 'OS'
		ENDIF
		
		swselect('gasuse')  && Fill in invoice date if it's blank
		SCAN FOR EMPTY(dinvdate)
		   REPLACE dinvdate WITH ddate
		ENDSCAN
		
		THISFORM.cWhichRpt = cWhichRpt
		
		
		THISFORM.CAPTION = 'House Gas Route Report'
		THISFORM.lblRoute.VISIBLE = .T.
		THISFORM.cboRoute.VISIBLE = .T.
		
		swselect('gasown')
		SET ORDER TO cOwnerID
		GO TOP
		THISFORM.txtcBegMeterNo.SET('value',gasown.cMeterNo)
		THISFORM.txtcBegDescription.SET('value',gasown.cDescription)
		
		swselect('investor')
		LOCATE FOR cOwnerID = gasown.cOwnerID
		IF FOUND()
		   THISFORM.swrptlook1.txtBegName.VALUE = cSortField
		   THISFORM.swrptlook1.txtBegID.VALUE = cOwnerID
		ENDIF
		
		swselect('gasown')
		SET ORDER TO cOwnerID
		GO BOTT
		THISFORM.txtcBegMeterNo.SET('value',gasown.cMeterNo)
		THISFORM.txtcBegDescription.SET('value',gasown.cDescription)
		swselect('investor')
		LOCATE FOR cOwnerID = gasown.cOwnerID
		IF FOUND()
		   THISFORM.swrptlook1.txtEndName.VALUE = cSortField
		   THISFORM.swrptlook1.txtEndID.VALUE = cOwnerID
		ENDIF
		
		swselect('gasown')
		GO BOTTOM
		THISFORM.txtcEndMeterNo.SET('value',gasown.cMeterNo)
		THISFORM.txtcEndDescription.SET('value',gasown.cDescription)
		
		* If we're in demo mode, tell the user that this is an optional module
		IF m.goapp.ldemo
		   THISFORM.omessage.warning('The House Gas module is an optional module that can be purchased separately.' + ;
		      ' It is included in the demo for evaluation purposes.')
		ENDIF
		
		
	ENDPROC

	PROCEDURE ownerlisting
	ENDPROC

	PROCEDURE ownerproduction
	ENDPROC

	PROCEDURE ownerroute
		LOCAL lcBegID, lcEndID, lcGroup, lcRouteNo
		LOCAL lcGroupDesc, llReturn, loError
		
		llReturn = .T.
		
		TRY
		    lcBegID = THISFORM.Swrptlook1.TxtBegID.VALUE
		    lcEndID = THISFORM.Swrptlook1.TxtEndID.VALUE
		
		    lcGroupDesc = THISFORM.swGroup.VALUE
		    lcGroup     = LEFT(lcGroupDesc, 2)
		    lcRouteNo   = THISFORM.cboRoute.VALUE
		    llSelected  = thisform.chkselected.Value
		   
		   IF NOT llSelected
		      SELECT cownerid AS cid FROM gasown ;
		         INTO CURSOR SELECTED ;
		         WHERE BETWEEN(cownerid,lcBegID,lcEndID) ;
		         ORDER BY cid
		   ENDIF
		
			SELECT  gasown.cownerid,  ;
					investor.cOwnName,  ;
					ALLT(investor.cAddress1a) + ' ' + ALLT(investor.cAddress1b) + ' ' + ALLT(cCity1) + ', ' + cState1 + '  ' + cZip1 AS cAddress,  ;
					cPhoneH AS cPhoneNo,  ;
					cMeterNo,  ;
					cRouteNo,  ;
					cGroup, ;
					nSequence,  ;
					gasown.cLast,  ;
					gasown.nPressure,  ;
					gasown.mNotes,  ;
					{} AS dLast,  ;
					ctype as metertype, ;
					cratetype as ratetype ;
			   FROM gasown, investor  ;
			   INTO CURSOR owntemp READWRITE   ;
			   WHERE gasown.cownerid = investor.cownerid  ;
				   AND gasown.cownerid in (select cid FROM selected)  ;
				   AND IIF(lcGroup <> '**', gasown.cGroup = lcGroup, .T.)  ;
				   AND IIF(LEFT(lcRouteNo, 1) <> '*', cRouteNo = lcRouteNo, .T.)  ;
			   ORDER BY cRouteNo, nSequence, cMeterNo
		
		    IF _TALLY > 0
		        SELECT owntemp
		        SCAN
		            SELECT gasuse
		            SET ORDER TO ddate DESC
		            LOCATE FOR cownerid = owntemp.cownerid
		            IF FOUND()
		                REPLACE owntemp.dLast WITH gasuse.ddate
		            ENDIF
		        ENDSCAN
		    ENDIF
		
		    THISFORM.cReportName = 'dmgasroute'
		CATCH TO loError
		    llReturn = .F.
		    DO errorlog WITH 'OwnerRoute', loError.LINENO, 'House Gas Owner Route', loError.ERRORNO, loError.MESSAGE, '', loError
		    MESSAGEBOX('Unable to process the report at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		          'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
	ENDPROC

	PROCEDURE ownerstatement
	ENDPROC

	PROCEDURE cboRoute.Init
		LOCAL lnCount
		
		*
		*  Add the detail lines to the combo box
		*
		SELECT cRouteNo DISTINCT FROM gasown INTO ARRAY laRoute ORDER BY cRouteNo
		lnCount = _TALLY
		
		THIS.ADDLISTITEM('** - All Routes',1)
		
		IF lnCount > 0
		   FOR lnX = 1 TO lnCount
		      THIS.ADDLISTITEM(laRoute[lnX],lnX+1)
		   ENDFOR
		ENDIF
		
		THIS.LISTITEMID = 1
		
		swselect('gasown')
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE chkSelected.Click
		IF this.Value
		   DO FORM commonsource\selected-ids WITH 'OWNER' LINKED 
		   lnCount = RECCOUNT('selected')
		   thisform.lblselected.Caption = TRANSFORM(lnCount) + ' Owners Selected'
		   thisform.lblselected.Visible = .T.
		   thisform.lblbegID.Visible = .F.
		   thisform.lblendID.Visible = .F.
		   thisform.swrptlook1.Visible = .F.
		   thisform.lblbegMeter.Visible = .f.
		   thisform.txtcbegDescription.Visible = .f.
		   thisform.txtcbegMeterNo.Visible = .f.
		   thisform.txtcendDescription.Visible = .f.
		   thisform.txtcendMeterNo.Visible = .f.
		   thisform.lblendMeter.Visible = .f.
		ELSE
		   thisform.lblselected.Visible = .F.
		   thisform.lblbegID.Visible = .T.
		   thisform.lblendID.Visible = .T.
		   thisform.swrptlook1.Visible = .T.
		   thisform.lblbegMeter.Visible  = .T.
		   thisform.txtcbegDescription.Visible = .T.
		   thisform.txtcbegMeterNo.Visible = .T.
		   thisform.txtcendDescription.Visible = .T.
		   thisform.txtcendMeterNo.Visible = .T.
		   thisform.lblendMeter.Visible = .T.
		ENDIF 
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		IF USED('temp')
		    USE IN temp
		ENDIF
		IF USED('temp1')
		    USE IN temp1
		ENDIF
		
		SELECT  gasown.cOwnerID, investor.cSortField, investor.cOwnName, gasown.cmeterno, gasown.cDescription, gasown.cGroup ;
		   FROM gasown, investor  ;
		   WHERE gasown.cOwnerID = investor.cOwnerID ;
		   INTO CURSOR temp1
		
		USE DBF('temp1') AGAIN IN 0 ALIAS temp
		SELECT temp
		INDEX ON cOwnerID TAG cOwnerID
		INDEX ON cSortField TAG cSortField
		INDEX ON cDescription TAG cDescrip
		INDEX ON cmeterno TAG cmeterno
		
		llOK   = .F.
		lcList = 'cownerid\Owner ID,csortfield\Name,cmeterno\Meter No.,cdescription/cdescrip\Description,cgroup\Group'
		
		DO FORM ..\CUSTOM\picklist WITH 'temp', lcList, THIS.PARENT.TxtBegID.VALUE, 5, .T., .T.
		
		IF llOK
		    THISFORM.txtcBegMeterNo.SET('value', temp.cmeterno)
		    THISFORM.txtcBegDescription.SET('value', temp.cDescription)
		    THIS.PARENT.TxtBegID.SET('value', temp.cOwnerID)
		    THIS.PARENT.TxtBegName.SET('VALUE', temp.cOwnName)
		    THISFORM.setnextcontrol(THIS.PARENT.TxtBegID)
		ENDIF
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		IF USED('temp')
		    USE IN temp
		ENDIF
		IF USED('temp1')
		    USE IN temp1
		ENDIF
		
		SELECT  gasown.cOwnerID, investor.cSortField, investor.cOwnName, gasown.cmeterno, gasown.cDescription, gasown.cGroup ;
		   FROM gasown, investor  ;
		   WHERE gasown.cOwnerID = investor.cOwnerID ;
		   INTO CURSOR temp1
		
		USE DBF('temp1') AGAIN IN 0 ALIAS temp
		SELECT temp
		INDEX ON cOwnerID TAG cOwnerID
		INDEX ON cSortField TAG cSortField
		INDEX ON cDescription TAG cDescrip
		INDEX ON cmeterno TAG cmeterno
		
		llOK   = .F.
		lcList = 'cownerid\Owner ID,csortfield\Name,cmeterno\Meter No.,cdescription/cdescrip\Description,cgroup\Group'
		
		DO FORM ..\CUSTOM\picklist WITH 'temp', lcList, THIS.PARENT.TxtEndID.VALUE, 5, .T., .T.
		
		IF llOK
		    THISFORM.txtcEndMeterNo.SET('value', temp.cmeterno)
		    THISFORM.txtcEndDescription.SET('value', temp.cDescription)
		    THIS.PARENT.TxtEndID.SET('value', temp.cOwnerID)
		    THIS.PARENT.TxtEndName.SET('VALUE', temp.cOwnName)
		    THISFORM.setnextcontrol(THIS.PARENT.TxtEndID)
		ENDIF
	ENDPROC

	PROCEDURE Swrptlook1.TxtBegID.InteractiveChange
		IF DODEFAULT()
		   swselect('gasown')
		   LOCATE FOR cownerid == this.value
		   IF found()
		      swselect('investor')
		      LOCATE FOR cownerid == this.value
		      IF FOUND()
		         thisform.swRPTLOOK1.txtBEGNAME.Value = investor.csortfield
		         thisform.txtcbegDescription.Value = gasown.cdescription
		         thisform.txtcbegMeterNo.Value = gasown.cmeterno
		         thisform.swRPTLOOK1.txtENDNAME.Value = investor.csortfield
		         thisform.txtcendDescription.Value = gasown.cdescription
		         thisform.txtcendMeterNo.Value = gasown.cmeterno
		      ENDIF
		   ENDIF    
		ENDIF    
	ENDPROC

	PROCEDURE Swrptlook1.TxtBegID.Valid
		swselect('gasown')
		SET ORDER TO cownerid
		
		IF NOT SEEK(THIS.VALUE) AND NOT MDOWN()
		    THISFORM.oMessage.Warning('This owner is not a valid house gas owner.  Please select another owner.')
		    RETURN 0
		ELSE
		    THISFORM.txtcBegMeterNo.SET('value', gasown.cMeterNo)
		    THISFORM.txtcBegDescription.SET('value', gasown.cDescription)
		ENDIF
		
		DODEFAULT()
		
		
		
		
	ENDPROC

	PROCEDURE Swrptlook1.TxtEndID.InteractiveChange
		IF DODEFAULT()
		   swselect('gasown')
		   LOCATE FOR cownerid == this.value
		   IF found()
		      swselect('investor')
		      LOCATE FOR cownerid == this.value
		      IF FOUND()
		         thisform.swRPTLOOK1.txtENDNAME.Value = investor.csortfield
		         thisform.txtcendDescription.Value = gasown.cdescription
		         thisform.txtcendMeterNo.Value = gasown.cmeterno
		      ENDIF
		   ENDIF    
		ENDIF    
	ENDPROC

	PROCEDURE Swrptlook1.TxtEndID.Valid
		swselect('gasown')
		SET ORDER TO cownerid
		IF NOT SEEK(THIS.VALUE) AND NOT MDOWN()
		    THISFORM.oMessage.Warning('This owner is not a valid house gas owner.  Please select another owner.')
		    RETURN 0
		ELSE
		    THISFORM.txtcEndMeterNo.SET('value', gasown.cMeterNo)
		    THISFORM.txtcEndDescription.SET('value', gasown.cDescription)
		ENDIF
		
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtcBegDescription.When
		return .f.
		
	ENDPROC

	PROCEDURE txtcBegMeterNo.When
		return .f.
		
	ENDPROC

	PROCEDURE txtcEndDescription.When
		return .f.
		
	ENDPROC

	PROCEDURE txtcEndMeterNo.When
		return .f.
		
	ENDPROC

ENDDEFINE
