*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="dmrwdivord.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "..\source\appdefs.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Relation1" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 352
	Left = 4
	Name = "Dataenvironment"
	Top = 433
	Width = 707

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "groups", ;
		CursorSource = "groups", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 118, ;
		Name = "Cursor2", ;
		Top = 23, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "wellinv", ;
		CursorSource = "wellinv", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 224, ;
		Name = "Cursor3", ;
		Top = 23, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "investor", ;
		CursorSource = "investor", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 331, ;
		Name = "Cursor4", ;
		Top = 22, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "sysctl", ;
		CursorSource = "sysctl", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor5", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "disbhist", ;
		CursorSource = "disbhist", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor6", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Relation1' AS relation WITH ;
		ChildAlias = "disbhist", ;
		ChildOrder = "cownerid", ;
		Name = "Relation1", ;
		ParentAlias = "investor", ;
		RelationalExpr = "cownerid"
		*< END OBJECT: BaseClass="relation" />

ENDDEFINE

DEFINE CLASS formdivord AS frmrptcriteria OF "..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="chksingle" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtdEffective" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkBoxOil" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkInterests" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEndID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkNRI" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBegID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSelected" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSelected" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: checksupportexp
		*m: getformats
	*</DefinedPropArrayMethod>

	Caption = "Division Orders"
	DataSession = 2
	DoCreate = .T.
	Height = 426
	HelpContextID = 736
	Name = "FormDivOrd"
	Width = 493
	Swrptcriteriabuttons1.chkExport.Alignment = 0
	Swrptcriteriabuttons1.chkExport.Name = "chkExport"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.CMDPREVIEW.Name = "CMDPREVIEW"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 129
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 10
	Swrptcriteriabuttons1.Top = 348
	Swrptcriteriabuttons1.ZOrderSet = 0

	ADD OBJECT 'chkBoxOil' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Use Oil Revenue Pct for Royalties", ;
		Left = 161, ;
		Name = "chkBoxOil", ;
		TabIndex = 6, ;
		Top = 214, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkInterests' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Show Interests as Decimal Interests", ;
		Left = 161, ;
		Name = "chkInterests", ;
		TabIndex = 7, ;
		Top = 241, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkNRI' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Show Work Interest's NRI In Royalty Column", ;
		Left = 161, ;
		Name = "chkNRI", ;
		TabIndex = 8, ;
		Top = 268, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSelected' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Choose Selected Wells", ;
		Left = 164, ;
		Name = "chkSelected", ;
		TabIndex = 2, ;
		Top = 38, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chksingle' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Put each interest on a page", ;
		Left = 161, ;
		Name = "chksingle", ;
		TabIndex = 9, ;
		Top = 295, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'lblBegID' AS lbllabelcustom WITH ;
		Caption = "First Well:", ;
		Height = 16, ;
		Left = 95, ;
		Name = "lblBegID", ;
		TabIndex = 1, ;
		Top = 67, ;
		Width = 49, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblEndID' AS lbllabelcustom WITH ;
		Caption = "Last Well:", ;
		Height = 16, ;
		Left = 95, ;
		Name = "lblEndID", ;
		TabIndex = 4, ;
		Top = 118, ;
		Width = 49, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Effective Date", ;
		Height = 16, ;
		Left = 72, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 11, ;
		Top = 168
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSelected' AS lbllabelcustom WITH ;
		Caption = "All IDs Selected", ;
		ForeColor = 0,0,255, ;
		Left = 163, ;
		Name = "lblSelected", ;
		TabIndex = 12, ;
		Top = 103, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		Left = 161, ;
		Name = "Swrptlook1", ;
		TabIndex = 3, ;
		Top = 64, ;
		ZOrderSet = 5, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		txtBegID.clistexpression = wells.cwellid, ;
		txtBegID.clistworkarea = wells, ;
		txtBegID.Name = "txtBegID", ;
		TxtBegName.Name = "TxtBegName", ;
		txtEndID.clistexpression = wells.cwellid, ;
		txtEndID.clistworkarea = wells, ;
		txtEndID.Name = "txtEndID", ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />

	ADD OBJECT 'txtdEffective' AS dpk WITH ;
		Left = 161, ;
		Name = "txtdEffective", ;
		TabIndex = 5, ;
		Top = 168
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />
	
	PROCEDURE builddata
		LOCAL llNotes, ldEffective
		
		lcWellID1   = thisform.swrptlook1.txtbegID.Value
		lcWellID2   = thisform.swrptlook1.txtendID.Value 
		ldEffective = THISFORM.txtDeffective.VALUE
		llSelected = thisform.chkselected.Value 
		
		IF NOT llSelected
		   SELECT cwellid as cid FROM wells WHERE BETWEEN(cwellid,lcWellID1,lcWellID2) INTO CURSOR selected
		ENDIF 
		
		IF EMPTY(ldEffective)
		   ldEffective = ''
		ENDIF
		
		IF USED('wellrel')
		   USE IN wellrel
		ENDIF
		
		TRY
		   IF NOT FILE(m.goapp.crptsfolder + 'divorder.frx')
		      THISFORM.getformats()
		   ENDIF
		CATCH
		ENDTRY
		
		IF NOT FILE(m.goapp.crptsfolder + 'divorder.frx')
		   MESSAGEBOX('The report formats cannot be downloaded at this time. Please contact SherWare support for assistance.', 16, 'Missing Report Formats')
		   RETURN
		ENDIF
		
		CREATE CURSOR wellrel ;
		   (cwellid    c(10), ;
		     cwellname  c(30), ;
		     cpermit1   c(15), ;
		     deffective d, ;
		     ccustid    c(10), ;
		     ctownship  c(30), ;
		     ccounty    c(30), ;
		     cstate     c(2), ;
		     cownerid   c(10), ;
		     cownname   c(60), ;
		     cownname1  c(60), ;
		     caddress1  c(60), ;
		     caddress1b c(60), ;
		     caddress2  c(60), ;
		     nroyint    N(11, 7), ;
		     nworkint   N(11, 7), ;
		     ctypeinv   c(1))
		INDEX ON cwellid TAG cwellid
		
		IF THISFORM.chkinterests.VALUE = .F. OR m.goapp.oOptions.lDecimalInts
		   lnDiv = 1
		ELSE
		   lnDiv = 100
		ENDIF
		
		SELECT  wells.cwellid,  ;
				wells.cwellname,  ;
				wells.cpermit1, ;
				ldEffective AS deffective, ;
				wells.cidpumper AS ccustid, ;
				wells.ctownship, ;
				wells.ccounty, ;
				wells.cstate, ;
				investor.cownerid,  ;
				investor.cownname,  ;
				investor.cownname1,  ;
				investor.caddress1a AS caddress1, ;
				investor.caddress1b, ;
				ALLT(investor.ccity1) + '  ' + ALLT(investor.cstate1) + '  ' + ALLT(investor.czip1) AS caddress2, ;
				wellinv.nrevoil, ;
				wellinv.nrevgas,  ;
				wellinv.ctypeinv, ;
				wellinv.nworkint AS nworkint  ;
			FROM wells, investor, wellinv  ;
			INTO CURSOR wellrel1;
			WHERE wellinv.cwellid in (SELECT cid from selected) ;
				AND investor.cownerid = wellinv.cownerid ;
				AND wells.cwellid = wellinv.cwellid  ;
			ORDER BY wells.cwellid, wellinv.ctypeinv, wellinv.cownerid
		
		SELECT cwellid, SUM(nrevoil) AS oilbal, SUM(nrevgas) AS gasbal FROM wellrel1 INTO CURSOR temp ORDER BY cwellid GROUP BY cwellid
		
		SELECT wellrel1
		SCAN
		   SCATTER MEMVAR
		   SELECT temp
		   LOCATE FOR cwellid == m.cwellid
		
		   IF m.ctypeinv # 'W'
		      IF THISFORM.chkBoxOil.VALUE AND temp.oilbal # 0
		         m.nroyint  = m.nrevoil / lnDiv
		         m.nworkint = 0
		      ELSE
		         m.nroyint  = m.nrevgas / lnDiv
		         m.nworkint = 0
		      ENDIF
		      IF THISFORM.chkBoxOil.VALUE = .F. AND temp.gasbal # 0
		         m.nroyint  = m.nrevgas / lnDiv
		         m.nworkint = 0
		      ELSE
		         m.nroyint  = m.nrevoil / lnDiv
		         m.nworkint = 0
		      ENDIF
		   ELSE
		      IF THIS.chknRI.VALUE
		         IF THISFORM.chkBoxOil.VALUE AND temp.oilbal # 0
		            m.nroyint	= m.nrevoil / lnDiv
		         ELSE
		            m.nroyint	= m.nrevgas / lnDiv
		         ENDIF
		         IF THISFORM.chkBoxOil.VALUE = .F. AND temp.gasbal # 0
		            m.nroyint	= m.nrevgas / lnDiv
		         ELSE
		            m.nroyint	= m.nrevoil / lnDiv
		         ENDIF
		      ELSE
		         m.nroyint	 = 0
		      ENDIF
		      m.nworkint = m.nworkint / lnDiv
		   ENDIF
		
		   INSERT INTO wellrel FROM MEMVAR
		ENDSCAN
		
		 * Change the interests to decimal interests if preference set
		 llReturn = DecimalInts('wellrel')
		
		IF NOT THISFORM.chksingle.VALUE
		   THISFORM.creportname = m.goapp.crptsfolder + 'divorder.frx'
		
		   CREATE CURSOR wellsig ;
		      (cwellid c(10), cownerid c(10))
		   INDEX ON cwellid TAG cwellid
		
		   SELECT  cwellid, ;
				   cwellname, ;
				   cpermit1, ;
				   ccounty, ;
				   ctownship, ;
				   cstate, ;
				   deffective ;
			   FROM wellrel ;
			   INTO CURSOR tempwell ;
			   ORDER BY cwellid ;
			   GROUP BY cwellid
		   SCAN
		      m.cwellid = cwellid
		      SCATTER MEMVAR
		      INSERT INTO wellsig FROM MEMVAR
		   ENDSCAN
		   SELECT wellrel
		   SET RELATION TO cwellid INTO wellsig
		   GO TOP
		   SET SKIP TO wellsig 
		   TRY
		      IF NOT FILE(m.goapp.crptsfolder + 'divorder.frx')
		         THISFORM.getformats()
		      ENDIF
		      USE (m.goapp.crptsfolder + 'divorder.frx') IN 0 ALIAS divrpt
		      SELECT divrpt
		      REPLACE PICTURE WITH '' FOR ALLTRIM(EXPR) = 'nworkint'
		      REPLACE PICTURE WITH '' FOR ALLTRIM(EXPR) = 'nroyint'
		      USE
		   CATCH
		   ENDTRY
		ELSE
		   TRY
		      THISFORM.creportname = m.goapp.crptsfolder + 'divorder_single.frx'
		      IF NOT FILE(m.goapp.crptsfolder + 'divorder_single.frx')
		         THISFORM.getformats()
		      ENDIF
		      USE (m.goapp.crptsfolder + 'divorder_single.frx') IN 0 ALIAS divrpt
		      SELECT divrpt
		      REPLACE PICTURE WITH '' FOR ALLTRIM(EXPR) = 'nworkint'
		      REPLACE PICTURE WITH '' FOR ALLTRIM(EXPR) = 'nroyint'
		      USE
		   CATCH
		   ENDTRY
		ENDIF
		
		SELECT wellrel
		
		IF RECC() > 0
		   RETURN .T.
		ELSE
		   RETURN .F.
		ENDIF
		
		
		
		
		
		
	ENDPROC

	PROCEDURE checksupportexp
		*********************
		LOCAL lcCode, lcClient, lnCode, lnClient, oRegCode
		SET PROCEDURE TO swregcode ADDITIVE
		* Start the regcode object
		oRegCode = CREATEOBJECT('swregcode',SYS(5)+CURDIR()+'datafiles\')
		
		* If demo mode bail out
		IF NOT oRegCode.GetOpt(5)
		   RETURN .T.
		ENDIF
		
		lnClient = oRegCode.GetCode(1)
		lcCode   = oRegCode.GetCode(2)
		
		* Get the support expiration date
		ldExpDate = oRegCode.Checksum(lnClient, lcCode, .F., .T.)
		
		IF ldExpDate >= DATE()
		   RETURN .T.
		ELSE
		   RETURN .F.
		ENDIF
		
		
	ENDPROC

	PROCEDURE getformats
		LOCAL lcLibrary
		
		lcLibrary = SET('library')
		
		llSupport = THISFORM.checksupportexp()
		
		IF NOT llSupport
		    RETURN
		ENDIF
		
		IF MESSAGEBOX('This utility will download new report formats for the division orders.' + CHR(10) + CHR(10) + ;
		          'Do you want to continue?', 36, 'Download Division Order') = 7
		    RETURN
		ENDIF
		
		lcSourceFile  = 'divord.zip'
		lcTargetFile  = m.goapp.cCommonFolder + 'divord.zip'
		lcDescription = "Division Order report formats"
		
		loUpdate              = m.goapp.oUpdate
		loUpdate.cSourceFile  = lcSourceFile
		loUpdate.cTargetFile  = lcTargetFile
		loUpdate.cDescription = lcDescription
		loUpdate.cUnzipTo     = m.goapp.cRptsFolder
		llReturn              = loUpdate.GetUpdate()
		
		IF NOT EMPTY(loUpdate.cErrorMessage)
		    MESSAGEBOX(loUpdate.cErrorMessage, 0, 'Update Files')
		ENDIF
		
		
	ENDPROC

	PROCEDURE Init
		SELECT wells
		SET ORDER TO cWellID
		GO TOP
		
		THISFORM.swrptlook1.txtBegName.VALUE = cwellname
		THISFORM.swrptlook1.txtBegID.VALUE = cWellID
		GO BOTTOM
		
		THISFORM.swrptlook1.txtEndName.VALUE = cwellname
		THISFORM.swrptlook1.txtEndID.VALUE = cWellID
		
		IF FILE('datafiles\divwhole.txt')
		   thisform.chkInterests.Value = .t.
		ELSE
		   thisform.chkInterests.Value = .f.
		ENDIF 
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE chkSelected.Click
		IF this.Value
		   DO FORM commonsource\selected-ids WITH 'WELL' LINKED 
		   lnCount = RECCOUNT('selected')
		   thisform.lblselected.Caption = TRANSFORM(lnCount) + ' Wells Selected'
		   thisform.lblselected.Visible = .T.
		   thisform.lblbegID.Visible = .F.
		   thisform.lblendID.Visible = .F.
		   thisform.swrptlook1.Visible = .F.
		ELSE
		   thisform.lblselected.Visible = .F.
		   thisform.lblbegID.Visible = .T.
		   thisform.lblendID.Visible = .T.
		   thisform.swrptlook1.Visible = .T.
		ENDIF 
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cwellid,cwellname,cgroup,cwellstat'
		DO FORM ..\custom\picklist WITH 'Wells', lcList, thisform.swrptlook1.txtbegid.value, 4
		
		IF llOK
		   thisform.swrptlook1.txtBegId.value = cwellid
		   thisform.swrptlook1.txtBegName.value = cwellname
		   thisform.swrptlook1.txtBegId.refresh()
		   thisform.swrptlook1.txtBegName.refresh()
		ENDIF   
		
		thisform.setnextcontrol(thisform.swrptlook1.txtBegId)
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cwellid,cwellname,cgroup,cwellstat'
		DO FORM ..\custom\picklist WITH 'Wells', lcList, thisform.swrptlook1.txtendid.value, 4
		
		IF llOK
		   thisform.swrptlook1.txtEndId.value = cwellid
		   thisform.swrptlook1.txtEndName.value = cwellname
		   thisform.swrptlook1.txtEndId.refresh()
		   thisform.swrptlook1.txtEndName.refresh()
		ENDIF   
		
		thisform.setnextcontrol(thisform.swrptlook1.txtEndId)
		
	ENDPROC

ENDDEFINE
