*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="dmrolab.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 333
	Left = 4
	Name = "Dataenvironment"
	Top = 279
	Width = 520

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "investor", ;
		CursorSource = "investor", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Order = "cownerid", ;
		Top = 19, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Order = "cwellid", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "checks", ;
		CursorSource = "checks", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "wellinv", ;
		CursorSource = "wellinv", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 11, ;
		Name = "Cursor4", ;
		Top = 140, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "sysctl", ;
		CursorSource = "sysctl", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 151, ;
		Name = "Cursor5", ;
		Top = 140, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formdmrolab AS frmrptcriteria OF "..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="opgSelect" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblLastOwner" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblFirstOwner" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblSortOrder" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="opgOwnerType" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblOwnerType" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="opgOrderBy" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Runcombo1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklHold" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklSelected" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="OpgType" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkIncludeReturn" UniqueID="" Timestamp="" />

	Caption = "Owner Labels/Envelopes"
	DataSession = 2
	DoCreate = .T.
	Height = 575
	HelpContextID = 216
	Name = "FormDMROLab"
	Width = 557
	Swrptcriteriabuttons1.BackStyle = 0
	Swrptcriteriabuttons1.CHKEXPORT.Alignment = 0
	Swrptcriteriabuttons1.CHKEXPORT.Name = "CHKEXPORT"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.cmdPreview.Name = "cmdPreview"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 140
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 16
	Swrptcriteriabuttons1.Top = 486
	Swrptcriteriabuttons1.ZOrderSet = 0

	ADD OBJECT 'chkIncludeReturn' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Include Return Address", ;
		Left = 334, ;
		Name = "chkIncludeReturn", ;
		Top = 45, ;
		Value = .T., ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklHold' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Exclude Owners on Hold or Any Owner With Interests on Hold", ;
		Height = 30, ;
		Left = 206, ;
		Name = "chklHold", ;
		TabIndex = 15, ;
		Top = 426, ;
		Value = .F., ;
		Width = 212, ;
		WordWrap = .T.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklSelected' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Print Selected Owners", ;
		Left = 204, ;
		Name = "chklSelected", ;
		TabIndex = 5, ;
		Top = 192, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'LblFirstOwner' AS lbllabelcustom WITH ;
		Caption = "First Owner:", ;
		Height = 16, ;
		Left = 105, ;
		Name = "LblFirstOwner", ;
		TabIndex = 9, ;
		Top = 250, ;
		Width = 63, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Print", ;
		Left = 105, ;
		Name = "Lbllabelcustom1", ;
		Top = 21
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblLastOwner' AS lbllabelcustom WITH ;
		Caption = "Last Owner:", ;
		Height = 16, ;
		Left = 105, ;
		Name = "LblLastOwner", ;
		TabIndex = 10, ;
		Top = 300, ;
		Width = 63, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblOwnerType' AS lbltextcustom WITH ;
		Caption = "Print Labels for:", ;
		Left = 105, ;
		Name = "lblOwnerType", ;
		TabIndex = 12, ;
		Top = 358, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblSortOrder' AS lbllabelcustom WITH ;
		Caption = "Print Owner Labels:", ;
		Height = 16, ;
		Left = 105, ;
		Name = "LblSortOrder", ;
		TabIndex = 2, ;
		Top = 80, ;
		Width = 98, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom2' AS lbltextcustom WITH ;
		AutoSize = .T., ;
		Caption = "Run Number:", ;
		Left = 105, ;
		Name = "Lbltextcustom2", ;
		TabIndex = 7, ;
		Top = 223
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom3' AS lbltextcustom WITH ;
		Caption = "Sort by:", ;
		Left = 105, ;
		Name = "Lbltextcustom3", ;
		TabIndex = 4, ;
		Top = 147
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'opgOrderBy' AS opgoptiongroupcustom WITH ;
		AutoSize = .T., ;
		BorderStyle = 0, ;
		ButtonCount = 2, ;
		Left = 217, ;
		Name = "opgOrderBy", ;
		TabIndex = 3, ;
		Top = 141, ;
		Value = 1, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "Owner ID", ;
		Option1.FontSize = 8, ;
		Option1.Height = 16, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Top = 5, ;
		Option1.Value = 1, ;
		Option1.Width = 64, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "Owner Name", ;
		Option2.FontSize = 8, ;
		Option2.Height = 16, ;
		Option2.Left = 5, ;
		Option2.Name = "Option2", ;
		Option2.Top = 24, ;
		Option2.Width = 82
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'opgOwnerType' AS opgoptiongroupcustom WITH ;
		AutoSize = .T., ;
		BorderStyle = 0, ;
		ButtonCount = 3, ;
		Enabled = .T., ;
		Left = 198, ;
		Name = "opgOwnerType", ;
		TabIndex = 11, ;
		Top = 354, ;
		Value = 1, ;
		Visible = .F., ;
		Option1.AutoSize = .T., ;
		Option1.Caption = " All Owners", ;
		Option1.FontSize = 8, ;
		Option1.Height = 16, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Top = 5, ;
		Option1.Value = 1, ;
		Option1.Width = 76, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = " Royalty Owners", ;
		Option2.FontSize = 8, ;
		Option2.Height = 16, ;
		Option2.Left = 5, ;
		Option2.Name = "Option2", ;
		Option2.Top = 24, ;
		Option2.Width = 100, ;
		Option3.AutoSize = .T., ;
		Option3.Caption = " Working Interest Owners", ;
		Option3.FontSize = 8, ;
		Option3.Height = 16, ;
		Option3.Left = 5, ;
		Option3.Name = "Option3", ;
		Option3.Top = 43, ;
		Option3.Width = 142
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'opgSelect' AS opgoptiongroupcustom WITH ;
		AutoSize = .T., ;
		BorderStyle = 0, ;
		ButtonCount = 3, ;
		Left = 216, ;
		Name = "opgSelect", ;
		TabIndex = 1, ;
		Top = 74, ;
		Value = 1, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "For a Range of Owners", ;
		Option1.FontSize = 8, ;
		Option1.Height = 16, ;
		Option1.Left = 5, ;
		Option1.Name = "Range", ;
		Option1.Top = 5, ;
		Option1.Value = 1, ;
		Option1.Width = 133, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "For a Range of Wells", ;
		Option2.FontSize = 8, ;
		Option2.Height = 16, ;
		Option2.Left = 5, ;
		Option2.Name = "Well", ;
		Option2.Top = 24, ;
		Option2.Width = 119, ;
		Option3.AutoSize = .T., ;
		Option3.Caption = "For a Specific Run Number", ;
		Option3.FontSize = 8, ;
		Option3.Height = 16, ;
		Option3.Left = 5, ;
		Option3.Name = "Period", ;
		Option3.Top = 43, ;
		Option3.Width = 147
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'OpgType' AS opgoptiongroupcustom WITH ;
		AutoSize = .T., ;
		BorderStyle = 0, ;
		ButtonCount = 2, ;
		Height = 26, ;
		Left = 217, ;
		Name = "OpgType", ;
		TabIndex = 8, ;
		Top = 14, ;
		Value = 1, ;
		Width = 189, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "Labels", ;
		Option1.FontSize = 8, ;
		Option1.Height = 16, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Top = 5, ;
		Option1.Value = 1, ;
		Option1.Width = 50, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "Envelopes", ;
		Option2.FontSize = 8, ;
		Option2.Height = 16, ;
		Option2.Left = 116, ;
		Option2.Name = "Option2", ;
		Option2.Top = 5, ;
		Option2.Width = 68
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'Runcombo1' AS runcombo WITH ;
		cshowwhat = R, ;
		Enabled = .F., ;
		Height = 20, ;
		Left = 186, ;
		lshownew = .F., ;
		Name = "Runcombo1", ;
		TabIndex = 6, ;
		Top = 219, ;
		Width = 244
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		BackStyle = 0, ;
		Left = 186, ;
		Name = "Swrptlook1", ;
		TabIndex = 8, ;
		Top = 247, ;
		ZOrderSet = 4, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		TxtBegID.clistexpression = investor.cOwnerID, ;
		TxtBegID.clistworkarea = investor, ;
		TxtBegID.MaxLength = 10, ;
		TxtBegID.Name = "TxtBegID", ;
		TxtBegName.Name = "TxtBegName", ;
		TxtEndID.clistexpression = investor.cOwnerID, ;
		TxtEndID.clistworkarea = investor, ;
		TxtEndID.MaxLength = 10, ;
		TxtEndID.Name = "TxtEndID", ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />
	
	PROCEDURE builddata
		lcBegID    = THISFORM.swrptlook1.txtBegID.VALUE
		lcEndID    = THISFORM.swrptlook1.txtEndID.VALUE
		lcBegName  = ALLTRIM(THISFORM.swrptlook1.txtBegName.VALUE)
		lcEndName  = ALLTRIM(THISFORM.swrptlook1.txtEndName.VALUE)
		lcRunYear  = THISFORM.runcombo1.LISTITEM[thisform.runcombo1.ListItemId,2]
		lnRunNo    = VAL(THISFORM.runcombo1.LISTITEM[thisform.runcombo1.ListItemId,3])
		lcGroup    = THISFORM.runcombo1.LISTITEM[thisform.runcombo1.ListItemId,4]
		lnReportOn = THISFORM.opgOwnerType.VALUE
		llHold     = THISFORM.chklHold.VALUE
		
		*
		*   Builds the cursor needed by the report by using
		*   the criteria given in the form
		*
		
		lcExact = SET("exact")
		SET EXACT ON
		
		IF THISFORM.opgtype.VALUE = 1
		   CREATE CURSOR invlab  ;
		      (cID         c(10),  ;
		      cSortField   c(40),  ;
		      cName        c(40),  ;
		      cName2       c(40),  ;
		      cAddress1    c(40),  ;
		      cAddress2    c(40),  ;
		      cAddress3    c(40))
		ELSE
		   CREATE CURSOR invlab  ;
		      (cid          c(10), ;
		      cName1        c(60),  ;
		      cName2        c(60), ;
		      cAddress1     c(60), ;
		      cAddress2     c(60),  ;
		      cCity         c(40), ;
		      cState        c(2), ;
		      czipcode      c(10), ;
		      ccompname     c(60), ;
		      cCompAddr1    c(60), ;
		      cCompAddr2    c(60), ;
		      cCompCity     c(40), ;
		      cCompState    c(2), ;
		      cCompZip      c(10))
		ENDIF
		
		IF thisform.opgType.value = 2 
		   IF NOT FILE(m.goapp.cRptsFolder+'envelope10.frx')
		      GetEnvelope()
		   ENDIF 
		   IF thisform.chkINCLUDERETURN.value
		      m.ccompname  = m.goapp.cCompanyName
		      m.cCompAddr1 = m.goapp.cAddress1
		      m.cCompAddr2 = ""
		      m.cCompCity  = m.goapp.cCity
		      m.cCompState = m.goapp.cState
		      m.cCompZip   = m.goapp.czip
		   ELSE
		      m.ccompname  = ""
		      m.cCompAddr1 = ""
		      m.cCompAddr2 = ""
		      m.cCompCity  = ""
		      m.cCompState = ""
		      m.cCompZip   = ""
		   ENDIF
		ENDIF    
		
		IF THISFORM.opgOrderBy.VALUE = 1  &&  Owner ID
		   INDEX ON cID TAG cName
		ELSE  &&  Owner Name
		   INDEX ON cSortField TAG cName
		ENDIF
		
		DO CASE
		   CASE THISFORM.opgSelect.VALUE = 1  &&  If range of owners is selected
		
		      IF THISFORM.chklSelected.VALUE = .T.
		         SELECT cOwnName AS cName,  ;  &&  Owners who do not have "use second address" chosen
		         cOwnName1 AS cName2,  ;
		            cSortField,  ;
		            cownerid AS cID,  ;
		            cAddress1a AS cAddress1,  ;
		            cAddress1b AS cAddress2,  ;
		            ccity1, cstate1, czip1, ;
		            ALLTRIM(ccity1) + ', ' + ALLTRIM(cstate1) + '  ' + ALLTRIM(czip1) AS cAddress3  ;
		            FROM investor  ;
		            WHERE lchktosec = .F.  ;
		            AND cownerid IN(SELECT cownerid FROM usersel)  ;
		            INTO CURSOR labtmp READWRITE
		
		         SELECT cOwnName AS cName,  ;  &&  Owners who have "use second address" chosen
		         cOwnName2 AS cName2,  ;
		            cSortField,  ;
		            cownerid AS cID,  ;
		            cAddress2a AS cAddress1,  ;
		            cAddress2b AS cAddress2,  ;
		            ccity2, cstate2, czip2, ;
		            ALLTRIM(ccity2) + ', ' + ALLTRIM(cstate2) + '  ' + ALLTRIM(czip2) AS cAddress3  ;
		            FROM investor  ;
		            WHERE lchktosec = .T.  ;
		            AND cownerid IN(SELECT cownerid FROM usersel)  ;
		            INTO CURSOR labtmp2
		
		         SELECT labtmp
		         APPEND FROM DBF('labtmp2')
		
		      ELSE
		         SELECT cOwnName AS cName,  ;  &&  Owners who do not have "use second address" chosen
		         cOwnName1 AS cName2,  ;
		            cSortField,  ;
		            cownerid AS cID,  ;
		            cAddress1a AS cAddress1,  ;
		            cAddress1b AS cAddress2,  ;
		            ccity1, cstate1, czip1, ;
		            ALLTRIM(ccity1) + ', ' + ALLTRIM(cstate1) + '  ' + ALLTRIM(czip1) AS cAddress3  ;
		            FROM investor  ;
		            WHERE lchktosec = .F.  ;
		            AND IIF(llHold,NOT lHold,.T.)  ;
		            INTO CURSOR labtmp READWRITE
		
		         SELECT cOwnName AS cName,  ;  &&  Owners who have "use second address" chosen
		         cOwnName2 AS cName2,  ;
		            cSortField,  ;
		            cownerid AS cID,  ;
		            cAddress2a AS cAddress1,  ;
		            cAddress2b AS cAddress2,  ;
		            ccity2 AS ccity1, cstate2 AS cstate1, czip2 AS czip1, ;
		            ALLTRIM(ccity2) + ', ' + ALLTRIM(cstate2) + '  ' + ALLTRIM(czip2) AS cAddress3  ;
		            FROM investor  ;
		            WHERE lchktosec = .T.  ;
		            AND IIF(llHold,NOT lHold,.T.)  ;
		            INTO CURSOR labtmp2
		
		         SELECT labtmp
		         APPEND FROM DBF('labtmp2')
		         DELETE FOR NOT BETWEEN(cID,lcBegID,lcEndID)
		         SELECT invlab
		         IF llHold  &&  Remove holds
		            SCAN FOR NOT DELETED()
		               SELECT wellinv
		               LOCATE FOR cownerid == invlab.cID AND lOnHold  &&  Look for any interests on hold, which will remove them
		               IF FOUND()
		                  SELECT invlab
		                  DELETE NEXT 1
		               ENDIF
		            ENDSCAN
		         ENDIF
		      ENDIF
		      SELECT invlab
		      SET ORDER TO cName
		
		   CASE THISFORM.opgSelect.VALUE = 2  &&  If range of wells is selected
		
		      SELECT cOwnName AS cName,  ;  &&  Owners who do not have "use second address" chosen
		      cOwnName1 AS cName2,  ;
		         cSortField,  ;
		         wellinv.cownerid AS cID,  ;
		         cAddress1a AS cAddress1,  ;
		         cAddress1b AS cAddress2,  ;
		         ccity1, cstate1, czip1, ;
		         ALLTRIM(ccity1) + ', ' + ALLTRIM(cstate1) + '  ' + ALLTRIM(czip1) AS cAddress3  ;
		         FROM wellinv JOIN investor ON wellinv.cownerid == investor.cownerid  ;
		         WHERE lchktosec = .F.  ;
		         AND BETWEEN(wellinv.cwellid,lcBegID,lcEndID)  ;
		         AND IIF(lnReportOn = 3,wellinv.cTypeInv = 'W',IIF(lnReportOn = 2,wellinv.cTypeInv<>'W',.T.))  ;
		         AND IIF(llHold,NOT lHold AND NOT lOnHold,.T.)  ;
		         INTO CURSOR labtmp READWRITE  ;
		         GROUP BY wellinv.cownerid
		
		      SELECT cOwnName AS cName,  ;  &&  Owners who have "use second address" chosen
		      cOwnName2 AS cName2,  ;
		         cSortField,  ;
		         wellinv.cownerid AS cID,  ;
		         cAddress2a AS cAddress1,  ;
		         cAddress2b AS cAddress2,  ;
		         ccity2 AS ccity1, cstate2 AS cstate1, czip2 AS czip1, ;
		         ALLTRIM(ccity2) + ', ' + ALLTRIM(cstate2) + '  ' + ALLTRIM(czip2) AS cAddress3  ;
		         FROM wellinv JOIN investor ON wellinv.cownerid == investor.cownerid  ;
		         WHERE lchktosec = .T.  ;
		         AND BETWEEN(wellinv.cwellid,lcBegID,lcEndID)  ;
		         AND IIF(lnReportOn = 3,wellinv.cTypeInv = 'W',IIF(lnReportOn = 2,wellinv.cTypeInv<>'W',.T.))  ;
		         AND IIF(llHold,NOT lHold AND NOT lOnHold,.T.)  ;
		         INTO CURSOR labtmp2  ;
		         GROUP BY wellinv.cownerid
		
		      SELECT labtmp
		      APPEND FROM DBF('labtmp2')
		      SET ORDER TO cName
		
		   CASE THISFORM.opgSelect.VALUE = 3  &&  If a run number is selected
		
		      SELECT sysctl
		      SET DELETED ON
		      LOCATE FOR crunyear = lcRunYear AND nrunno = lnRunNo AND cGroup = lcGroup AND cTypeClose = 'R'
		      IF NOT FOUND()
		         THISFORM.oMessage.DISPLAY('This run is not closed for this group, so no labels can be printed.')
		         RETURN  .F.
		      ELSE
		         lcBatch = sysctl.cdmbatch
		         SELECT cOwnName AS cName,  ;  &&  Owners who do not have "use second address" chosen
		         cOwnName1 AS cName2,  ;
		            cSortField,  ;
		            checks.cID,  ;
		            cAddress1a AS cAddress1,  ;
		            cAddress1b AS cAddress2,  ;
		            ccity1, cstate1, czip1, ;
		            ALLTRIM(ccity1) + ', ' + ALLTRIM(cstate1) + '  ' + ALLTRIM(czip1) AS cAddress3  ;
		            FROM investor,checks  ;
		            WHERE lchktosec = .F.  ;
		            AND checks.cBatch = lcBatch ;
		            AND checks.cID == investor.cownerid  ;
		            AND IIF(llHold,NOT lHold,.T.)  ;
		            INTO CURSOR labtmp READWRITE
		
		         SELECT cOwnName AS cName,  ;  &&  Owners who have "use second address" chosen
		         cOwnName2 AS cName2,  ;
		            cSortField,  ;
		            checks.cID,  ;
		            cAddress2a AS cAddress1,  ;
		            cAddress2b AS cAddress2,  ;
		            ccity2 AS ccity1, cstate2 AS cstate1, czip2 AS czip1, ;
		            ALLTRIM(ccity2) + ', ' + ALLTRIM(cstate2) + '  ' + ALLTRIM(czip2) AS cAddress3  ;
		            FROM investor,checks  ;
		            WHERE lchktosec = .T.  ;
		            AND checks.cBatch = lcBatch  ;
		            AND checks.cID == investor.cownerid  ;
		            AND IIF(llHold,NOT lHold,.T.)  ;
		            INTO CURSOR labtmp2
		
		         SELECT labtmp
		         APPEND FROM DBF('labtmp2')
		         SELECT invlab
		         IF llHold  &&  Remove holds
		            SCAN FOR NOT DELETED()
		               SELECT wellinv
		               LOCATE FOR cownerid == invlab.cID AND lOnHold  &&  Look for any interests on hold, which will remove them
		               IF FOUND()
		                  SELECT invlab
		                  DELETE NEXT 1
		               ENDIF
		            ENDSCAN
		         ENDIF
		         SELECT invlab
		         SET ORDER TO cName
		      ENDIF
		ENDCASE
		
		IF THISFORM.opgtype.VALUE = 1
		   SELECT invlab
		   APPEND FROM DBF('labtmp')
		ELSE
		   SELECT labtmp
		   SCAN
		      SCATTER MEMVAR
		      m.cName1 = m.cName
		      m.cCity  = m.ccity1
		      m.cState = m.cstate1
		      m.czipcode   = m.czip1
		      INSERT INTO invlab FROM MEMVAR
		   ENDSCAN
		ENDIF
		
		IF thisform.opgtype.Value = 1
		   THISFORM.cReportName = m.goapp.cRptsFolder+'ownlabl.lbx'
		ELSE
		   THISFORM.cReportName = m.goapp.cRptsFolder+'envelope10.frx'
		ENDIF 
		
		SET EXACT &lcExact
		
		SELECT invlab
		COUNT FOR NOT DELETED() TO x
		IF x > 0
		   RETURN .T.
		ELSE
		   RETURN .F.
		ENDIF
		
	ENDPROC

	PROCEDURE Init
		IF DODEFAULT()
		   SELECT investor
		   SET ORDER TO cOwnerID
		
		   GO TOP
		   THISFORM.swrptlook1.txtBegName.VALUE = cSortField
		   THISFORM.swrptlook1.txtBegID.VALUE = cOwnerID
		
		   GO BOTTOM
		   THISFORM.swrptlook1.txtEndName.VALUE = cSortField
		   THISFORM.swrptlook1.txtEndID.VALUE = cOwnerID
		
		ENDIF
		
	ENDPROC

	PROCEDURE chklSelected.Click
		IF this.Value = .t.
		   thisform.swrptlook1.Enabled = .f.
		   thisform.swrptlook1.txtBegID.Enabled = .f.
		   thisform.swrptlook1.txtEndID.Enabled = .f.
		   thisform.chklHold.Enabled = .f.
		   thisform.chklHold.Value = .f.
		   DO FORM commonsource\dmownersel NAME ownersel linked
		   RELEASE ownersel 
		ELSE
		   IF USED('usersel')
		      USE IN usersel
		   ENDIF
		   thisform.swrptlook1.Enabled = .t.
		   thisform.swrptlook1.txtBegID.Enabled = .t.
		   thisform.swrptlook1.txtEndID.Enabled = .t.
		   thisform.chklHold.Enabled = .t.
		ENDIF
		
		DODEFAULT()
	ENDPROC

	PROCEDURE opgSelect.Init
		this.value = 1
	ENDPROC

	PROCEDURE opgSelect.Period.Click
		THISFORM.swrptlook1.txtBegID.SET('enabled',.F.)
		THISFORM.swrptlook1.txtBegName.SET('enabled',.F.)
		
		THISFORM.swrptlook1.txtEndID.SET('enabled',.F.)
		THISFORM.swrptlook1.txtEndName.SET('enabled',.F.)
		
		THISFORM.swrptlook1.swlookupbutton1.SET('enabled',.F.)
		THISFORM.swrptlook1.swlookupbutton2.SET('enabled',.F.)
		
		THISFORM.runcombo1.set('enabled',.t.)
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE opgSelect.Range.Click
		THISFORM.swrptlook1.txtBegID.SET('enabled',.T.)
		THISFORM.swrptlook1.txtBegName.SET('enabled',.T.)
		
		THISFORM.swrptlook1.txtEndID.SET('enabled',.T.)
		THISFORM.swrptlook1.txtEndName.SET('enabled',.T.)
		
		THISFORM.swrptlook1.swlookupbutton1.SET('enabled',.T.)
		THISFORM.swrptlook1.swlookupbutton2.SET('enabled',.T.)
		
		THISFORM.lblFirstOwner.CAPTION = 'First Owner'
		THISFORM.lblFirstOwner.REFRESH()
		THISFORM.lblLastOwner.CAPTION = 'Last Owner'
		THISFORM.lblLastOwner.REFRESH()
		
		SELECT investor
		GO TOP
		THISFORM.swrptlook1.txtBegID.VALUE = cownerid
		THISFORM.swrptlook1.txtBegID.REFRESH()
		THISFORM.swrptlook1.txtBegName.VALUE = cownname
		THISFORM.swrptlook1.txtBegName.REFRESH()
		
		GO BOTTOM
		THISFORM.swrptlook1.txtEndID.VALUE = cownerid
		THISFORM.swrptlook1.txtEndID.REFRESH()
		THISFORM.swrptlook1.txtEndName.VALUE = cownname
		THISFORM.swrptlook1.txtEndName.REFRESH()
		
		THISFORM.runcombo1.SET('enabled',.F.)
		
		thisform.swrptlook1.txtBegID.cListWorkArea = 'investor'
		thisform.swrptlook1.txtBegID.cListExpression = 'investor.cOwnerID'
		thisform.swrptlook1.txtEndID.cListWorkArea = 'investor'
		thisform.swrptlook1.txtEndID.cListExpression = 'investor.cOwnerID'
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE opgSelect.Valid
		IF THIS.VALUE = 2  &&  Range of Wells
		   THISFORM.lblOwnerType.VISIBLE = .T.
		   THISFORM.opgOwnerType.VISIBLE = .T.
		ELSE
		   THISFORM.lblOwnerType.VISIBLE = .F.
		   THISFORM.opgOwnerType.VISIBLE = .F.
		ENDIF
		
		IF this.Value = 1
		   thisform.chklSelected.Visible = .t.
		ELSE
		   thisform.chklSelected.Visible = .f.
		   thisform.chklSelected.Value = .f.
		ENDIF 
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE opgSelect.Well.Click
		THISFORM.swrptlook1.txtBegID.SET('enabled',.T.)
		THISFORM.swrptlook1.txtBegName.SET('enabled',.T.)
		
		THISFORM.swrptlook1.txtEndID.SET('enabled',.T.)
		THISFORM.swrptlook1.txtEndName.SET('enabled',.T.)
		
		THISFORM.swrptlook1.swlookupbutton1.SET('enabled',.T.)
		THISFORM.swrptlook1.swlookupbutton2.SET('enabled',.T.)
		
		THISFORM.lblFirstOwner.CAPTION = 'First Well'
		THISFORM.lblFirstOwner.REFRESH()
		THISFORM.lblLastOwner.CAPTION = 'Last Well'
		THISFORM.lblLastOwner.REFRESH()
		
		SELECT wells
		GO TOP
		THISFORM.swrptlook1.txtBegID.VALUE = cwellid
		THISFORM.swrptlook1.txtBegID.REFRESH()
		THISFORM.swrptlook1.txtBegName.VALUE = cwellname
		THISFORM.swrptlook1.txtBegName.REFRESH()
		
		GO BOTTOM
		THISFORM.swrptlook1.txtEndID.VALUE = cwellid
		THISFORM.swrptlook1.txtEndID.REFRESH()
		THISFORM.swrptlook1.txtEndName.VALUE = cwellname
		THISFORM.swrptlook1.txtEndName.REFRESH()
		
		THISFORM.runcombo1.SET('enabled',.F.)
		
		thisform.swrptlook1.txtBegID.cListWorkArea = 'wells'
		thisform.swrptlook1.txtBegID.cListExpression = 'wells.cWellID'
		thisform.swrptlook1.txtEndID.cListWorkArea = 'wells'
		thisform.swrptlook1.txtEndID.cListExpression = 'wells.cWellID'
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE OpgType.Init
		THIS.VALUE = 1
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE OpgType.Valid
		IF DODEFAULT()
		   IF this.Value = 2
		      thisform.chkIncludeReturn.visible = .t.
		   ELSE
		      thisform.chkIncludeReturn.visible = .f.
		   ENDIF 
		ENDIF 
	ENDPROC

	PROCEDURE Runcombo1.Init
		IF DODEFAULT()
		   this.listitemid = 1
		ENDIF   
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		
		IF thisform.opgSelect.value <> 2
		   lcList = 'cownerid,csortfield'
		   DO FORM ..\custom\picklist WITH 'Investor', lcList, thisform.swrptlook1.txtbegid.value, 2
		   IF llOK
		      thisform.swrptlook1.txtBegId.value = cownerid
		      thisform.swrptlook1.txtBegName.value = cSortField
		      thisform.swrptlook1.txtBegId.refresh()
		      thisform.swrptlook1.txtBegName.refresh()
		   ENDIF   
		ELSE
		   lcList = 'cwellid,cwellname'
		   DO FORM ..\custom\picklist WITH 'wells', lcList, thisform.swrptlook1.txtbegid.value, 2
		   IF llOK
		      thisform.swrptlook1.txtBegId.value = cwellid
		      thisform.swrptlook1.txtBegName.value = cwellname
		      thisform.swrptlook1.txtBegId.refresh()
		      thisform.swrptlook1.txtBegName.refresh()
		   ENDIF   
		ENDIF   
		
		thisform.setnextcontrol(thisform.swrptlook1.txtBegId)
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		
		IF thisform.opgSelect.value <> 2
		   lcList = 'cownerid,csortfield'
		   DO FORM ..\custom\picklist WITH 'Investor', lcList, thisform.swrptlook1.txtendid.value, 2
		   IF llOK
		      thisform.swrptlook1.txtEndId.value = cownerid
		      thisform.swrptlook1.txtEndName.value = cownname
		      thisform.swrptlook1.txtEndId.refresh()
		      thisform.swrptlook1.txtEndName.refresh()
		   ENDIF   
		ELSE
		   lcList = 'cwellid,cwellname'
		   DO FORM ..\custom\picklist WITH 'wells', lcList, thisform.swrptlook1.txtendid.value, 2
		   IF llOK
		      thisform.swrptlook1.txtEndId.value = cwellid
		      thisform.swrptlook1.txtEndName.value = cwellname
		      thisform.swrptlook1.txtEndId.refresh()
		      thisform.swrptlook1.txtEndName.refresh()
		   ENDIF   
		ENDIF   
		
		thisform.setnextcontrol(thisform.swrptlook1.txtEndId)
		
	ENDPROC

ENDDEFINE
