*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="dmannprodrpt.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 174
	Left = 28
	Name = "Dataenvironment"
	Top = 363
	Width = 676

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "annprod", ;
		CursorSource = "annprod", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "Form6s", ;
		CursorSource = "Form6s", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 19, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "revsrc", ;
		CursorSource = "revsrc", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 430, ;
		Name = "Cursor4", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formdmannprodrpt AS frmrptcriteria OF "..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="LblProdYear" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBegID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEndID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swyear1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklCollate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSelected" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSelected" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: getformats
		*m: makecursor
		*p: cstate
		*p: cyear
		*p: lmagnetic
	*</DefinedPropArrayMethod>

	Caption = "Annual Statement of Production"
	DataSession = 2
	DoCreate = .T.
	Height = 448
	HelpContextID = 604
	Name = "FormDmannprodrpt"
	Width = 494
	Swrptcriteriabuttons1.chkExport.Alignment = 0
	Swrptcriteriabuttons1.chkExport.Name = "chkExport"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.cmdPreview.Name = "cmdPreview"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 129
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 8
	Swrptcriteriabuttons1.Top = 372

	ADD OBJECT 'chklCollate' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Collate the Forms", ;
		Left = 199, ;
		Name = "chklCollate", ;
		TabIndex = 7, ;
		Top = 312, ;
		Value = .T.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSelected' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Choose Selected Wells", ;
		Left = 151, ;
		Name = "chkSelected", ;
		TabIndex = 3, ;
		Top = 141, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'lblBegID' AS lbllabelcustom WITH ;
		Caption = "First Well:", ;
		Height = 16, ;
		Left = 94, ;
		Name = "lblBegID", ;
		TabIndex = 5, ;
		Top = 172, ;
		Width = 49
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblEndID' AS lbllabelcustom WITH ;
		Caption = "Last Well:", ;
		Height = 16, ;
		Left = 94, ;
		Name = "lblEndID", ;
		TabIndex = 6, ;
		Top = 224, ;
		Width = 49
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblProdYear' AS lbllabelcustom WITH ;
		Caption = "Year:", ;
		Height = 16, ;
		Left = 114, ;
		Name = "LblProdYear", ;
		TabIndex = 2, ;
		Top = 95, ;
		Width = 29
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSelected' AS lbllabelcustom WITH ;
		Caption = "All IDs Selected", ;
		ForeColor = 0,0,255, ;
		Left = 150, ;
		Name = "lblSelected", ;
		TabIndex = 9, ;
		Top = 213, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		Left = 151, ;
		Name = "Swrptlook1", ;
		TabIndex = 4, ;
		Top = 172, ;
		Width = 216, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		TxtBegID.clistexpression = wells.cwellid, ;
		TxtBegID.clistworkarea = wells, ;
		TxtBegID.Name = "TxtBegID", ;
		TxtBegName.Name = "TxtBegName", ;
		TxtEndID.clistexpression = wells.cwellid, ;
		TxtEndID.clistworkarea = wells, ;
		TxtEndID.Name = "TxtEndID", ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />

	ADD OBJECT 'Swyear1' AS swyear WITH ;
		Left = 151, ;
		Name = "Swyear1", ;
		TabIndex = 1, ;
		Top = 92
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE builddata
		LOCAL llReturn, lnCount, lcFileName, lcBegID, lcEndID, m.cemail
		
		lcBegID = THISFORM.Swrptlook1.TxtBegID.VALUE
		lcEndID = THISFORM.Swrptlook1.TxtEndID.VALUE
		llSelected = THISFORM.chkselected.VALUE
		
		IF NOT llSelected
		   SELECT cwellid AS cid FROM wells WHERE BETWEEN(cwellid,lcBegID,lcEndID) INTO CURSOR SELECTED
		ENDIF
		
		* Get the email address from the global object
		m.cemail = m.goapp.cemail
		
		DO CASE
		   CASE THIS.cstate = 'OH'
		      SELECT annprod
		      THISFORM.makecursor()
		      SELE annprod
		      SCAN FOR cwellstate = 'OH' AND cYear = THISFORM.swYear1.VALUE AND NOT DELETED()
		         SCATTER MEMVAR
		         SELECT SELECTED
		         LOCATE FOR cid = m.cwellid
		         IF NOT FOUND()
		            LOOP
		         ENDIF
		         SELE wells
		         LOCATE FOR cwellid = m.cwellid
		         IF FOUND()
		            m.csection = csection
		            m.cLot = cLot
		         ENDIF
		         INSERT INTO temp FROM MEMVAR
		      ENDSCAN
		      SELE temp
		      IF RECC() > 0
		         THIS.creportname = m.goapp.cRptsFolder+'OHFORM10.FRX'
		         RETURN .T.
		      ELSE
		         RETURN .F.
		      ENDIF
		   CASE THIS.cstate = 'WV'
		      THISFORM.makecursor()
		
		      SELECT annprod
		      SCAN FOR  cwellstate = 'WV' AND cYear = THISFORM.swYear1.VALUE
		         m.cwellid = cwellid
		         SCATTER MEMVAR
		         SELECT SELECTED
		         LOCATE FOR cid = m.cwellid
		         IF NOT FOUND()
		            LOOP
		         ENDIF
		         INSERT INTO temp FROM MEMVAR
		         SELECT form6s
		         SCAN FOR cYear = THISFORM.swYear1.VALUE AND cwellid = m.cwellid
		            REPLACE cnra WITH m.cnra
		         ENDSCAN
		      ENDSCAN
		      SELE temp
		      IF RECC() > 0
		         RETURN .T.
		      ELSE
		         RETURN .F.
		      ENDIF
		   CASE THIS.cstate = 'PA'
		      THISFORM.makecursor()
		      SELECT annprod
		      SCAN FOR  cwellstate = 'PA' AND cYear = THISFORM.swYear1.VALUE
		         SCATTER MEMVAR
		         SELECT SELECTED
		         LOCATE FOR cid = m.cwellid
		         IF NOT FOUND()
		            LOOP
		         ENDIF
		         INSERT INTO temp FROM MEMVAR
		      ENDSCAN
		      SELE temp
		      IF RECC() > 0
		         THIS.creportname = m.goapp.cRptsFolder+'PAPROD.FRX'
		         RETURN .T.
		      ELSE
		         RETURN .F.
		      ENDIF
		   CASE THIS.cstate = 'NY'
		      THISFORM.makecursor()
		      SELECT annprod
		      lnCount = 0
		      SCAN FOR cwellstate = 'NY' AND cYear = THISFORM.swYear1.VALUE
		         m.cwellid = cwellid
		         SELECT SELECTED
		         LOCATE FOR cid = m.cwellid
		         IF NOT FOUND()
		            LOOP
		         ENDIF
		         lnCount = lnCount + 1
		      ENDSCAN
		
		      IF lnCount > 0
		         SELECT annprod
		         SCAN FOR cwellstate = 'NY' AND cYear = THISFORM.swYear1.VALUE
		            SCATTER MEMVAR
		            SELECT SELECTED
		            LOCATE FOR cid = m.cwellid
		            IF NOT FOUND()
		               LOOP
		            ENDIF
		            IF NOT EMPTY(crevbbl)
		               SELECT revsrc
		               SET ORDER TO crevkey
		               IF SEEK(m.crevbbl)
		                  m.cbblpurch = revsrc.crevname
		               ELSE
		                  m.cbblpurch = ''
		               ENDIF
		            ELSE
		               m.cbblpurch = ''
		            ENDIF
		            IF NOT EMPTY(crevmcf)
		               SELECT revsrc
		               SET ORDER TO crevkey
		               IF SEEK(m.crevmcf)
		                  m.cmcfpurch = revsrc.crevname
		               ELSE
		                  m.cmcfpurch = revsrc.crevname
		               ENDIF
		            ELSE
		               m.cmcfpurch = ''
		            ENDIF
		            INSERT INTO temp FROM MEMVAR
		         ENDSCAN
		         SELECT temp
		         INDEX ON ccounty+ctownship+cfield+cformation TAG pk
		         THIS.creportname = m.goapp.cRptsFolder+'NYPROD.FRX'
		         RETURN .T.
		      ELSE
		         RETURN .F.
		      ENDIF
		ENDCASE
		
	ENDPROC

	PROCEDURE getformats
	ENDPROC

	PROCEDURE Init
		LPARA tcState
		DODEFAULT()
		IF EMPTY(tcstate)
		   tcState = 'WV'
		ENDIF 
		THIS.cstate = tcState
		SELECT annprod
		SET ORDER TO cyear desc
		GO top
		LOCATE FOR cWellState = tcState
		IF FOUND()
		   THISFORM.swyear1.VALUE = annprod.cyear
		else
		   thisform.swyear1.value = allt(str(year(date())))
		ENDIF
		
		THIS.cyear = ALLTRIM(THISFORM.swyear1.VALUE)
		
		SELECT wells
		SET ORDER TO cWellID
		GO TOP
		
		THISFORM.swrptlook1.txtBegName.VALUE = cwellname
		THISFORM.swrptlook1.txtBegID.VALUE = cWellID
		GO BOTTOM
		
		THISFORM.swrptlook1.txtEndName.VALUE = cwellname
		THISFORM.swrptlook1.txtEndID.VALUE = cWellID
		
		IF THIS.cstate = 'WV'
		   THISFORM.chklCollate.VISIBLE = .T.
		ELSE
		   THISFORM.chklCollate.VISIBLE = .F.
		ENDIF
		
		DO CASE
		   CASE tcState = 'OH'
		      THIS.CAPTION = 'Print OH Form 10 Report'
		      thisform.HelpContextID = 607
		   CASE tcState = 'NY'
		      THIS.CAPTION = 'Print NY Annual Production File'
		      thisform.HelpContextID = 604
		   CASE tcState = 'PA'
		      THIS.CAPTION = 'Print PA Annual Statement of Production'
		      thisform.HelpContextID = 617
		   CASE tcState = 'WV'
		      THIS.CAPTION = 'Print Producer/Operator Return'
		      thisform.HelpContextID = 625
		ENDCASE
		
	ENDPROC

	PROCEDURE makecursor
		   CREATE CURSOR temp ;
		     (cidannp        C(8), ;
		      cwellid        C(10), ;
		      cwellname      C(30), ;
		      cYear          C(4), ;
		      cTaxYear       C(4), ;
		      crptgroup      C(1), ;
		      ctaxid         C(20), ;
		      cwellstatus    C(1),  ;
		      nwellcount     N(5), ;
		      cpermit        C(20), ;
		      cfacility      C(20), ;
		      cfacpermit     C(20), ;
		      ccounty        C(25), ;
		      ctownship      C(25), ;
		      cparcel        C(10), ;
		      csection       C(20), ;
		      cLot           c(20),  ;
		      nacres         N(12,2), ;
		      dproddate      d,  ;
		      noilbbl        N(12,2), ;
		      ngasmcf        N(12,2), ;
		      nmonths        N(2), ;
		      ndayson        N(3), ;
		      nsaltbbl       N(7), ;
		      cownerno       C(10), ;
		      crevbbl        C(8), ;
		      cbblpurch      C(30), ;
		      crevmcf        C(8), ;
		      cmcfpurch      C(30), ;
		      cproducer      C(40), ;
		      caddress       C(40), ;
		      ccity          C(25), ;
		      cwellstate     C(2), ;
		      cstate         C(2), ;
		      czip           C(10), ;
		      ccontact       C(40), ;
		      cemail         c(80), ;
		      cfield         C(30), ;
		      cformation     C(30), ;
		      cmeterid       C(4),  ;
		      ctelephone     C(15), ;
		      cnra           C(20), ;
		      nworkoil       N(12,2), ;
		      nworkgas       N(12,2), ;
		      noilinc        N(12,2), ;
		      ngasinc        N(12,2), ;
		      nflatgas       N(12,2), ;
		      nflatoil       N(12,2), ;
		      nworkint       N(12,2), ;
		      lhousegas      L, ;
		      cwastecode     C(5), ;
		      cdispcode      C(4), ;
		      cqtrtwp        C(10), ;
		      cprodyr       C(4))
		
	ENDPROC

	PROCEDURE report
		LPARAMETERS cbutton
		
		lcFirstWell = THISFORM.swrptlook1.txtbegid.VALUE
		lcLastWell  = THISFORM.swrptlook1.txtendid.VALUE
		lcYear      = THISFORM.swyear1.VALUE
		
		IF TYPE('m.goApp') = 'O'
		   IF m.goApp.lDemo
		      m.cProducer = 'Demo Version of Software'
		      m.cGrpName  = m.cProducer
		   ENDIF
		   m.cProducer = m.goApp.cCompanyName
		   m.cAgent    = m.goApp.cAgentName
		ELSE
		   m.cProducer = 'Development Company, Inc.'
		ENDIF
		
		GetStateFormats(thisform.cState)
		
		IF THISFORM.cState <> 'WV'
		   DODEFAULT(cbutton)
		ELSE
		   SET REPORTBEHAVIOR 90
		
		   *  Do clean-up on the wvannret1 report format, to make sure the cwellid data grouping is set to start on a new page
		   IF FILE(m.goApp.cRptsFolder+'wvannret1.frx')
		      USE m.goApp.cRptsFolder+'wvannret1.frx' IN 0
		      SELECT wvannret1
		      LOCATE FOR UPPER(EXPR) = 'CWELLID' AND objtype = 9
		      IF FOUND()
		         TRY
		            REPLACE pagebreak WITH .T., resetpage WITH .T.
		         CATCH
		         ENDTRY
		      ENDIF
		      USE IN wvannret1
		   ENDIF
		
		   *  Insert a dummy record in form6s for collating purposes
		   IF THISFORM.chklCollate.VALUE
		      SELECT form6s
		      LOCATE FOR EMPTY(cwellid) AND cyear = lcYear
		      IF NOT FOUND()
		         SCATTER MEMVAR BLANK
		         m.cyear = lcYear
		         m.cState = 'WV'
		         m.cidstown = THISFORM.oRegistry.IncrementCounter('%Shared.Counters.form6s')
		         *      INSERT INTO form6s FROM MEMVAR
		      ENDIF
		   ENDIF
		
		   *
		   *  Send the report to the proper location based upon the button pressed.
		   *
		   SELECT cnra FROM annprod INTO CURSOR tmpwells ;
		      WHERE cyear = lcYear ;
		      AND cWellState = 'WV' ;
		      AND BETWEEN(cwellid,lcFirstWell,lcLastWell)  ;
		      GROUP BY cnra
		
		   IF _TALLY > 0
		      IF NOT THISFORM.chklCollate.VALUE  &&  If not collating, just send all the first pages, then all the second pages
		         SELECT temp
		         DO CASE
		            CASE m.cbutton = 'P'  &&  Print
		               REPORT FORM (m.goApp.cRptsFolder+'wvannret.frx') TO PRINTER PROMPT NOCONSOLE
		               SELECT form6s
		               SET ORDER to cnra
		               SET FILTER TO cyear = lcYear AND cState = 'WV' AND BETWEEN(cwellid,lcFirstWell,lcLastWell)
		               REPORT FORM (m.goApp.cRptsFolder+'wvannret1.frx') TO PRINTER PROMPT NOCONSOLE
		            CASE m.cbutton = 'S'  &&  Preview
		               REPORT FORM (m.goApp.cRptsFolder+'wvannret.frx') TO PRINTER PROMPT PREVIEW
		               SELECT form6s
		               SET FILTER TO cyear = lcYear AND cState = 'WV' AND BETWEEN(cwellid,lcFirstWell,lcLastWell)
		               REPORT FORM (m.goApp.cRptsFolder+'wvannret1.frx') TO PRINTER PROMPT PREVIEW
		         ENDCASE
		      ELSE  &&  Collating, so send the first page for the first well, then the second page for the first well, etc.
		         SELECT tmpwells
		         lnCount = 1
		         lnMax = RECCOUNT()
		         llError = .F.
		         TRY
		            oprogress = THISFORM.omessage.progressbarex('Building WV Annual Return...')
		            oprogress.setprogressrange(0,lnMax)
		            SELECT tmpwells
		            SCAN
		               lcNRA = cNRA
		               oprogress.updateprogress(lnCount)
		               oprogress.setprogressmessage('Processing NRA: ' + lcNRA)
		               SELECT annprod
		               SET FILTER TO cNRA = lcNRA AND cWellState = 'WV' AND cyear = lcYear
		               m.cemail = m.goapp.cemail
		               DO CASE
		                  CASE m.cbutton = 'P'  &&  Print
		                     DO CASE
		                        CASE lnMax = 1 && There's only 1 well to print
		                           oprogress.closeprogress()
		                           RELEASE oprogress
		                           REPORT FORM (m.goApp.cRptsFolder+'wvannret.frx') TO PRINTER PROMPT NODIALOG NOCONSOLE NOPAGEEJECT
		                           SELECT form6s
		                           SCAN FOR cNRA = lcNRA AND cyear = lcYear AND cState = 'WV'
		                              SET FILTER TO cnra = lcnra AND cyear = lcYear AND cState = 'WV'
		                              SET ORDER to croyname
		                              REPORT FORM (m.goApp.cRptsFolder+'wvannret1.frx') TO PRINTER NODIALOG NOCONSOLE
		                           ENDSCAN
		                        CASE lnCount = 1  && More than 1 well and we're on the 1st well
		                           REPORT FORM (m.goApp.cRptsFolder+'wvannret.frx') TO PRINTER PROMPT NODIALOG NOCONSOLE NOPAGEEJECT
		                           SELECT form6s
		                           SCAN FOR cNRA = lcNRA AND cyear = lcYear AND cState = 'WV'
		                              SET FILTER TO cnra = lcnra AND cyear = lcYear AND cState = 'WV'
		                              SET ORDER to croyname
		                              REPORT FORM (m.goApp.cRptsFolder+'wvannret1.frx') TO PRINTER NODIALOG NOCONSOLE NOPAGEEJECT
		                           ENDSCAN
		                        CASE lnCount <> lnMax && Somewhere in the middle
		                           REPORT FORM (m.goApp.cRptsFolder+'wvannret.frx') TO PRINTER NODIALOG NOCONSOLE NOPAGEEJECT
		                           SELECT form6s
		                           SCAN FOR cNRA = lcNRA AND cyear = lcYear AND cState = 'WV'
		                              SET FILTER TO cnra = lcnra AND cyear = lcYear AND cState = 'WV'
		                              SET ORDER to croyname
		                              REPORT FORM (m.goApp.cRptsFolder+'wvannret1.frx') TO PRINTER NODIALOG NOCONSOLE NOPAGEEJECT
		                           ENDSCAN
		                        OTHERWISE  && At the last well
		                           oprogress.closeprogress()
		                           RELEASE oprogress
		                           SELECT form6s
		                           SCAN FOR cNRA = lcNRA AND cyear = lcYear AND cState = 'WV'
		                              SELECT annprod
		                              REPORT FORM (m.goApp.cRptsFolder+'wvannret.frx') TO PRINTER NODIALOG NOCONSOLE NOPAGEEJECT
		                              SELECT form6s
		                              SET FILTER TO cnra = lcnra AND cyear = lcYear AND cState = 'WV'
		                              SET ORDER to croyname
		                           ENDSCAN 
		                     ENDCASE
		                  CASE m.cbutton = 'S'  &&  Preview
		                     DO CASE
		                        CASE lnMax = 1 && There's only 1 well to print
		                           oprogress.closeprogress()
		                           RELEASE oprogress
		                           REPORT FORM (m.goApp.cRptsFolder+'wvannret.frx') TO PRINTER PROMPT PREVIEW NODIALOG NOCONSOLE NOPAGEEJECT
		                           SELECT * FROM form6s INTO CURSOR temp6s WHERE cnra = lcnra AND cyear = lcYear AND cState = 'WV' ;
		                               ORDER BY cnra, ctypeinv, croyname
		                              REPORT FORM (m.goApp.cRptsFolder+'wvannret1.frx') TO PRINTER PREVIEW NODIALOG NOCONSOLE
		                        CASE lnCount = 1  && More than 1 well and we're on the 1st well
		                           REPORT FORM (m.goApp.cRptsFolder+'wvannret.frx') TO PRINTER PROMPT PREVIEW NODIALOG NOCONSOLE NOPAGEEJECT
		                           SELECT * FROM form6s INTO CURSOR temp6s WHERE cnra = lcnra AND cyear = lcYear AND cState = 'WV' ;
		                               ORDER BY cnra, ctypeinv, croyname
		                              REPORT FORM (m.goApp.cRptsFolder+'wvannret1.frx') TO PRINTER PROMPT PREVIEW NODIALOG NOCONSOLE NOPAGEEJECT
		                        CASE lnCount <> lnMax && Somewhere in the middle
		                           REPORT FORM (m.goApp.cRptsFolder+'wvannret.frx') TO PRINTER PROMPT PREVIEW NODIALOG NOCONSOLE NOPAGEEJECT
		                           SELECT * FROM form6s INTO CURSOR temp6s WHERE cnra = lcnra AND cyear = lcYear AND cState = 'WV' ;
		                               ORDER BY cnra, ctypeinv, croyname
		                              REPORT FORM (m.goApp.cRptsFolder+'wvannret1.frx') TO PRINTER PROMPT PREVIEW NODIALOG NOCONSOLE NOPAGEEJECT
		                        OTHERWISE  && At the last well
		                           oprogress.closeprogress()
		                           RELEASE oprogress
		                           SELECT form6s
		                              SELECT annprod
		                              REPORT FORM (m.goApp.cRptsFolder+'wvannret.frx') TO PRINTER PROMPT PREVIEW NODIALOG NOCONSOLE NOPAGEEJECT
		                              SELECT * FROM form6s INTO CURSOR temp6s WHERE cnra = lcnra AND cyear = lcYear AND cState = 'WV' ;
		                               ORDER BY cnra, ctypeinv, croyname
		                              REPORT FORM (m.goApp.cRptsFolder+'wvannret1.frx') TO PRINTER PROMPT PREVIEW NODIALOG NOCONSOLE
		                     ENDCASE
		               ENDCASE
		               lnCount = lnCount + 1
		            ENDSCAN
		         CATCH TO loError
		            llError = .T.
		         ENDTRY
		         IF llError
		            MESSAGEBOX('There was a problem encountered trying to print/preview the WV Annual Return. Additional info: ' + loError.MESSAGE,48,'Problem Encountered')
		         ENDIF
		      ENDIF
		      SELECT annprod
		      SET FILTER TO
		      SELECT form6s
		      SET FILTER TO
		   ENDIF
		ENDIF
		
	ENDPROC

	PROCEDURE chkSelected.Click
		IF this.Value
		   DO FORM commonsource\selected-ids WITH 'WELL' LINKED 
		   lnCount = RECCOUNT('selected')
		   thisform.lblselected.Caption = TRANSFORM(lnCount) + ' Wells Selected'
		   thisform.lblselected.Visible = .T.
		   thisform.lblbegID.Visible = .F.
		   thisform.lblendID.Visible = .F.
		   thisform.swrptlook1.Visible = .F.
		ELSE
		   thisform.lblselected.Visible = .F.
		   thisform.lblbegID.Visible = .T.
		   thisform.lblendID.Visible = .T.
		   thisform.swrptlook1.Visible = .T.
		ENDIF 
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cwellid,cwellname,cgroup,cwellstat'
		DO FORM ..\custom\picklist WITH 'Wells', lcList, thisform.swrptlook1.txtbegid.value, 4
		
		IF llOK
		   thisform.swrptlook1.txtBegId.value = cwellid
		   thisform.swrptlook1.txtBegName.value = cwellname
		   thisform.swrptlook1.txtBegId.refresh()
		   thisform.swrptlook1.txtBegName.refresh()
		ENDIF   
		
		thisform.setnextcontrol(thisform.swrptlook1.txtBegId)
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cwellid,cwellname,cgroup,cwellstat'
		DO FORM ..\CUSTOM\picklist WITH 'Wells', lcList, thisform.swrptlook1.txtendid.value, 4
		
		IF llOK
		   THISFORM.swrptlook1.txtEndId.VALUE = cwellid
		   THISFORM.swrptlook1.txtEndName.VALUE = cwellname
		   THISFORM.swrptlook1.txtEndId.REFRESH()
		   THISFORM.swrptlook1.txtEndName.REFRESH()
		ENDIF
		
		THISFORM.setnextcontrol(THISFORM.swrptlook1.txtEndId)
		
	ENDPROC

ENDDEFINE
