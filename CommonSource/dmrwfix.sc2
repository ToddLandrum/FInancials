*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="dmrwfix.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 515
	Left = 40
	Name = "Dataenvironment"
	Top = 235
	Width = 776

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "expense", ;
		CursorSource = "expense", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "investor", ;
		CursorSource = "investor", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "options", ;
		CursorSource = "options", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor4", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "groups", ;
		CursorSource = "groups", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor5", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "glopt", ;
		CursorSource = "glopt", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 292, ;
		Name = "Cursor6", ;
		Top = 141, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formdmrwfix AS frmrptcriteria OF "..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Runcombo1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="swgroup1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtPeriod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtYear" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="opgSelect" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSlash" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblYearPeriod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBegID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEndID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblGroup" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAcctDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAcctDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="opgOrderBy" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSelected" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSelected" UniqueID="" Timestamp="" />

	Caption = "Fixed Well Expenses"
	DataSession = 2
	DoCreate = .T.
	Height = 489
	HelpContextID = 196
	Name = "FormDmrwfix"
	Width = 523
	Swrptcriteriabuttons1.chkExport.Alignment = 0
	Swrptcriteriabuttons1.chkExport.Name = "chkExport"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.cmdPreview.Name = "cmdPreview"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 144
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 19
	Swrptcriteriabuttons1.Top = 408

	ADD OBJECT 'chkSelected' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Choose Selected Wells", ;
		Left = 183, ;
		Name = "chkSelected", ;
		TabIndex = 12, ;
		Top = 223, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Label1' AS label WITH ;
		AutoSize = .T., ;
		Caption = "Report By:", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 117, ;
		Name = "Label1", ;
		TabIndex = 20, ;
		Top = 12, ;
		Width = 53
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblAcctDate' AS lbllabelcustom WITH ;
		Caption = "Accounting Date:", ;
		Left = 85, ;
		Name = "lblAcctDate", ;
		TabIndex = 9, ;
		Top = 193, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblBegID' AS lbltextcustom WITH ;
		BackStyle = 0, ;
		Caption = "First Well:", ;
		Left = 121, ;
		Name = "lblBegID", ;
		TabIndex = 14, ;
		Top = 249
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblEndID' AS lbltextcustom WITH ;
		BackStyle = 0, ;
		Caption = "Last Well:", ;
		Left = 121, ;
		Name = "lblEndID", ;
		TabIndex = 15, ;
		Top = 300
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblGroup' AS lbllabelcustom WITH ;
		Caption = "Group:", ;
		Left = 135, ;
		Name = "lblGroup", ;
		TabIndex = 17, ;
		Top = 364
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSelected' AS lbllabelcustom WITH ;
		Caption = "All IDs Selected", ;
		ForeColor = 0,0,255, ;
		Left = 182, ;
		Name = "lblSelected", ;
		TabIndex = 18, ;
		Top = 283, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSlash' AS lbltextcustom WITH ;
		AutoSize = .T., ;
		Caption = "/", ;
		FontSize = 10, ;
		Left = 222, ;
		Name = "lblSlash", ;
		TabIndex = 10, ;
		Top = 194
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom1' AS lbltextcustom WITH ;
		BackStyle = 0, ;
		Caption = "Run Number:", ;
		Left = 106, ;
		Name = "Lbltextcustom1", ;
		TabIndex = 5, ;
		Top = 159
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom2' AS lbltextcustom WITH ;
		BackStyle = 0, ;
		Caption = "Sort By:", ;
		Left = 129, ;
		Name = "Lbltextcustom2", ;
		TabIndex = 3, ;
		Top = 100
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblYearPeriod' AS lbltextcustom WITH ;
		BackStyle = 0, ;
		Caption = "Year/Period:", ;
		Left = 108, ;
		Name = "lblYearPeriod", ;
		TabIndex = 11, ;
		Top = 195
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'opgOrderBy' AS opgoptiongroupcustom WITH ;
		BorderStyle = 0, ;
		ButtonCount = 2, ;
		Left = 179, ;
		Name = "opgOrderBy", ;
		TabIndex = 2, ;
		Top = 94, ;
		Value = 1, ;
		Option1.Caption = " Well", ;
		Option1.FontSize = 8, ;
		Option1.Height = 17, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Top = 5, ;
		Option1.Value = 1, ;
		Option1.Width = 61, ;
		Option2.Caption = " Vendor", ;
		Option2.FontSize = 8, ;
		Option2.Height = 17, ;
		Option2.Left = 5, ;
		Option2.Name = "Option2", ;
		Option2.Top = 24, ;
		Option2.Width = 61
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'opgSelect' AS opgoptiongroupcustom WITH ;
		AutoSize = .T., ;
		BorderStyle = 0, ;
		ButtonCount = 3, ;
		Left = 179, ;
		Name = "opgSelect", ;
		TabIndex = 1, ;
		Top = 6, ;
		Value = 1, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "Listing", ;
		Option1.FontSize = 8, ;
		Option1.Height = 16, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Top = 5, ;
		Option1.Value = 1, ;
		Option1.Width = 49, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "Expenses for a Year/Period", ;
		Option2.FontSize = 8, ;
		Option2.Height = 16, ;
		Option2.Left = 5, ;
		Option2.Name = "Option2", ;
		Option2.Top = 29, ;
		Option2.Width = 152, ;
		Option3.AutoSize = .T., ;
		Option3.Caption = "Expenses for Run Number", ;
		Option3.FontSize = 8, ;
		Option3.Height = 16, ;
		Option3.Left = 5, ;
		Option3.Name = "Option3", ;
		Option3.Top = 53, ;
		Option3.Width = 145
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'Runcombo1' AS runcombo WITH ;
		ColumnWidths = "230,0,0", ;
		cshowwhat = B, ;
		Enabled = .F., ;
		Height = 20, ;
		Left = 182, ;
		Name = "Runcombo1", ;
		TabIndex = 4, ;
		Top = 157, ;
		Width = 257, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'swgroup1' AS swgroup WITH ;
		Left = 183, ;
		Name = "swgroup1", ;
		TabIndex = 16, ;
		Top = 362
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		Left = 182, ;
		Name = "Swrptlook1", ;
		TabIndex = 13, ;
		Top = 245, ;
		ZOrderSet = 5, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		txtBegID.clistexpression = wells.cwellid, ;
		txtBegID.clistworkarea = wells, ;
		txtBegID.Name = "txtBegID", ;
		TxtBegName.Name = "TxtBegName", ;
		txtEndID.clistexpression = wells.cwellid, ;
		txtEndID.clistworkarea = wells, ;
		txtEndID.Name = "txtEndID", ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />

	ADD OBJECT 'txtAcctDate' AS dpk WITH ;
		ControlSource = "", ;
		Height = 20, ;
		Left = 182, ;
		Name = "txtAcctDate", ;
		TabIndex = 7, ;
		Top = 191, ;
		Visible = .F., ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtPeriod' AS swperiod WITH ;
		Enabled = .F., ;
		Left = 230, ;
		lenabled = .F., ;
		Name = "txtPeriod", ;
		TabIndex = 8, ;
		Top = 191
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtYear' AS swyear WITH ;
		Enabled = .F., ;
		Left = 182, ;
		lenabled = .F., ;
		Name = "txtYear", ;
		TabIndex = 6, ;
		Top = 191
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE builddata
		LOCAL tcWell1, tcWell2, tcGroup, tnSort, tcYear, tcPeriod, tcRunYear, tnRunNo, tcType, tdDate, tnOrderBy, tcOrder
		
		tcWell1   = ALLTRIM(THISFORM.swrptlook1.txtBegID.VALUE)
		tcWell2   = ALLTRIM(THISFORM.swrptlook1.txtEndID.VALUE)
		tcGroup   = SUBSTR(THISFORM.swgroup1.VALUE, 1, 2)
		tnSort    = THISFORM.opgSelect.VALUE
		tcYear    = THISFORM.txtYear.VALUE
		tcPeriod  = THISFORM.txtPeriod.VALUE
		tcRunYear = THISFORM.runcombo1.LISTITEM(THISFORM.runcombo1.LISTITEMID, 2)
		tnRunNo   = VAL(THISFORM.runcombo1.LISTITEM(THISFORM.runcombo1.LISTITEMID, 3))
		tcType    = THISFORM.runcombo1.LISTITEM(THISFORM.runcombo1.LISTITEMID, 6)
		tdAcctDate= CTOD(THISFORM.runcombo1.LISTITEM(THISFORM.runcombo1.LISTITEMID, 7))
		tdDate    = THISFORM.txtacctDate.VALUE
		tnOrderBy = THISFORM.opgOrderBy.VALUE
		llSelected = thisform.chkselected.value
		
		IF EMPTY(tcRunYear)
		   tcRunYear = '    '
		ENDIF 
		
		IF NOT llSelected
		   SELECT cwellid as cid FROM wells ;
		      INTO CURSOR selected ;
		      WHERE BETWEEN(cwellid,tcWell1,tcWell2) ;
		      ORDER BY cid
		ENDIF 
		
		
		IF EMPTY(tcType)
		    tcType = 'R'
		ENDIF
		IF tnSort = 3 AND tnRunNo <> 0  &&  Closed run Number, so get the group
		    tcGroup = THISFORM.runcombo1.LISTITEM(THISFORM.runcombo1.LISTITEMID, 4)
		ENDIF
		
		THISFORM.cTitle1 = 'Fixed Well Expenses'
		DO CASE
		    CASE tnSort = 1  &&  Listing
		        THISFORM.cTitle2 = ''
		    CASE tnSort = 2  &&  For a year/period
		        THISFORM.cTitle2 = 'For Year/Period: ' + ALLTRIM(tcYear) + '/' + tcPeriod
		    CASE tnSort = 3  &&  Run #
		        THISFORM.cTitle2 = 'For Year/Period: ' + ALLTRIM(tcYear) + '/' + tcPeriod
		        IF tnRunNo = 0
		            THISFORM.cTitle2 = 'New Run - Group: ' + tcGroup
		        ELSE
		            IF tcType = 'R'
		                THISFORM.cTitle2 = 'Rev Run No: ' + PADL(ALLT(STR(tnRunNo)), 3, '0') + '/' + tcRunYear + ' Group: ' + tcGroup
		            ELSE
		                THISFORM.cTitle2 = 'JIB Run No: ' + PADL(ALLT(STR(tnRunNo)), 3, '0') + '/' + tcRunYear + ' Group: ' + tcGroup
		            ENDIF
		        ENDIF
		ENDCASE
		
		IF tnOrderBy = 1  &&  Ordering by Well ID
		    tcOrder              = 'expense.cwellid, expense.cvendorid, expense.ccateg'
		    THISFORM.cReportName = '..\commonsource\dmrwfix1'
		    THISFORM.cSortOrder  = 'Well ID'
		ELSE              &&  Ordering by Vendor ID
		    tcOrder              = 'expense.cVendorID, expense.cWellID, expense.ccateg'
		    THISFORM.cReportName = '..\commonsource\dmrwfix2'
		    THISFORM.cSortOrder  = 'Vendor ID'
		ENDIF
		
		
		CREATE CURSOR welltmp ;
		    (cwellid   C(10), ;
		      cwellname C(30), ;
		      cDeck     C(10), ;
		      cpayee    C(30), ;
		      lNotListing  L,  ;
		      nnetamount  N(12, 2), ;
		      namount   N(12, 2), ;
		      cvendorid C(10), ;
		      cYear     C(4),  ;
		      cPeriod   C(2),  ;
		      cexpclass C(1), ;
		      crefid    C(30), ;
		      ccateg    C(30), ;
		      ccatcode  C(4), ;
		      cownerid C(10), ;
		      cownname  C(30))
		
		DO CASE
		
		    CASE tnSort = 1  &&  Fixed Expense Listing (no year or period specified)
		        IF tcGroup = '**'   && All Groups
					SELECT  expense.cwellid, ;
							wells.cwellname, ;
							SPACE(10) as cDeck, ;
							expense.cpayee,  ;
							expense.namount, ;
							expense.cvendorid, ;
							expense.crefid,  ;
							expense.cYear,  ;
							.F. AS lNotListing,  ;
							expense.cPeriod,  ;
							expense.ccateg, ;
							expense.cexpclass, ;
							expense.ccatcode, ;
							expense.cownerid ;
						FROM expense, wells ;
						WHERE expense.cwellid in (select cid from selected)   ;
							AND expense.cwellid = wells.cwellid   ;
							AND expense.cYear   = 'FIXD' ;
						INTO CURSOR tmp ;
						ORDER BY &tcOrder
		            THISFORM.cSelectCriteria = 'Wells: ' + tcWell1 + ' - ' + tcWell2 + ' in All Groups'
		        ELSE  &&  If a group is specified
					SELECT  expense.cwellid, ;
							wells.cwellname, ;
							SPACE(10) as cDeck, ;
							expense.cpayee,  ;
							expense.namount, ;
							expense.cvendorid, ;
							expense.cYear,  ;
							expense.cPeriod,  ;
							.F. AS lNotListing,  ;
							expense.crefid,  ;
							expense.ccateg, ;
							expense.cexpclass, ;
							expense.ccatcode, ;
							expense.cownerid ;
						FROM expense, wells ;
						WHERE expense.cwellid in (select cid from selected)   ;
							AND wells.cwellid = expense.cwellid  ;
							AND wells.cGROUP    = tcGroup        ;
							AND expense.cYear   = 'FIXD' ;
						INTO CURSOR tmp ;
						ORDER BY &tcOrder
		            THISFORM.cSelectCriteria = 'Wells: ' + tcWell1 + ' - ' + tcWell2 + ' in Group ' + tcGroup
		        ENDIF
		        SELECT welltmp
		        APPEND FROM DBF('tmp')
		        SCAN
		            m.cownerid  = cownerid
		            m.namount   = namount
		            lnNet       = namount
		            m.cwellid   = cwellid
		            m.cCatCode  = cCatCode
		            m.cexpclass = cexpclass
		            m.cDeck     = cDeck
		            IF NOT EMPTY(m.cownerid) OR m.ccatcode = 'MKTG'  &&  Don't net out anything if it's a one-man item - BH 8/26/04 or a MKTG Expense - PWS 12/1/05
		                IF ccatcode = 'MKTG'  &&  If MKTG, net it down using the gasrev percentage - BH 8/9/06
		                    lnNet = swNetRevenue(m.cwellid, m.namount, 'G', .F., .T., .F., m.cownerid, .F., .F., .F., m.cDeck)
		                ELSE
		                    swselect('investor')
		                    SET ORDER TO cownerid
		                    IF SEEK(m.cownerid) AND NOT lDummy
		                        lnNet = m.namount
		                    ELSE
		                        lnNet = 0
		                    ENDIF
		                ENDIF
		            ELSE
		                IF tcType = 'J'
		                   lnNet = swNetExp(m.namount, m.cwellid, .T., m.cexpclass, 'J', .F., m.cownerid, m.ccatcode, m.cDeck)
		                ELSE
		                   lnNet = swNetExp(m.namount, m.cwellid, .T., m.cexpclass, 'N', .F., m.cownerid, m.cCatcode, m.cDeck)
		                ENDIF    
		            ENDIF
		
		            IF NOT EMPTY(m.cownerid)
		                SELECT investor
		                SET ORDER TO cownerid
		                IF SEEK(m.cownerid)
		                    m.cownname = cownname
		                ELSE
		                    m.cownname = ' '
		                ENDIF
		            ELSE
		                m.cownname = ' '
		            ENDIF
		            SELECT welltmp
		            REPLACE cownname  WITH m.cownname, ;
		                nNetamount   WITH lnNet
		        ENDSCAN
		
		    CASE tnSort = 2  &&  If a year and period is specified
		        IF tcGroup = '**'   && All Groups
					SELECT  expense.cwellid, ;
							wells.cwellname, ;
							expense.cDeck, ;
							expense.cpayee,  ;
							expense.namount, ;
							expense.cvendorid, ;
							expense.cYear,  ;
							expense.cPeriod,  ;
							.T. AS lNotListing,  ;
							expense.crefid,  ;
							expense.ccateg, ;
							expense.cexpclass, ;
							expense.ccatcode, ;
							expense.cownerid ;
						FROM expense, wells ;
						WHERE expense.cwellid in (select cid from selected)   ;
							AND expense.cwellid = wells.cwellid   ;
							AND expense.cYear   = tcYear ;
							AND expense.cPeriod = tcPeriod ;
							AND expense.lFixed = .T. ;
						INTO CURSOR tmp ;
						ORDER BY &tcOrder
		            THISFORM.cSelectCriteria = 'Wells: ' + tcWell1 + ' - ' + tcWell2 + ' in All Groups'
		        ELSE  &&  If a group is specified
					SELECT  expense.cwellid, ;
							wells.cwellname, ;
							expense.cDeck, ;
							expense.cpayee,  ;
							expense.namount, ;
							expense.cvendorid, ;
							expense.cYear,  ;
							expense.cPeriod,  ;
							.T. AS lNotListing,  ;
							expense.crefid,  ;
							expense.ccateg, ;
							expense.cexpclass, ;
							expense.ccatcode, ;
							expense.cownerid ;
						FROM expense, wells ;
						WHERE expense.cwellid in (select cid from selected)   ;
							AND expense.cwellid = wells.cwellid   ;
							AND wells.cGROUP    = tcGroup        ;
							AND expense.cYear   = tcYear ;
							AND expense.cPeriod = tcPeriod ;
							AND expense.lFixed = .T. ;
						INTO CURSOR tmp ;
						ORDER BY &tcOrder
		            THISFORM.cSelectCriteria = 'Wells: ' + tcWell1 + ' - ' + tcWell2 + ' in Group ' + tcGroup
		        ENDIF
		        SELECT welltmp
		        APPEND FROM DBF('tmp')
		        SCAN
		            m.cownerid  = cownerid
		            m.namount   = namount
		            lnNet       = namount
		            m.cDeck     = cDeck
		            m.cwellid   = cwellid
		            m.cexpclass = cexpclass
		            m.cCatCode  = cCatCode
		            IF NOT EMPTY(m.cownerid) OR m.ccatcode = 'MKTG'  &&  Don't net out anything if it's a one-man item - BH 8/26/04 or a MKTG Expense - PWS 12/1/05
		                IF ccatcode = 'MKTG'  &&  If MKTG, net it down using the gasrev percentage - BH 8/9/06
		                    lnNet = swNetRevenue(m.cwellid, m.namount, 'G', .F., .T., .F., m.cownerid, .F., .F., .F., m.cDeck)
		                ELSE
		                    swselect('investor')
		                    SET ORDER TO cownerid
		                    IF SEEK(m.cownerid) AND NOT lDummy
		                        lnNet = m.nAmount
		                    ELSE
		                        lnNet = 0
		                    ENDIF
		                ENDIF
		            ELSE
		                IF tcType = 'J'
		                   lnNet = swNetExp(m.namount, m.cwellid, .T., m.cexpclass, 'J', .F., m.cownerid, m.ccatcode, m.cDeck)
		                ELSE 
		                   lnNet = swNetExp(m.namount, m.cwellid, .T., m.cexpclass, 'N', .F., m.cownerid, m.ccatcode, m.cDeck)
		                ENDIF    
		            ENDIF
		            IF NOT EMPTY(m.cownerid)
		                SELECT investor
		                SET ORDER TO cownerid
		                IF SEEK(m.cownerid)
		                    m.cownname = cownname
		                ELSE
		                    m.cownname = ' '
		                ENDIF
		            ELSE
		                m.cownname = ' '
		            ENDIF
		            SELECT welltmp
		            REPLACE cownname WITH m.cownname, ;
		                nNetAmount  WITH lnNet
		        ENDSCAN
		
		    CASE tnSort = 3  &&  If a run number is specified
					SELECT  expense.cwellid, ;
							wells.cwellname, ;
							expense.cDeck, ;
							expense.cpayee,  ;
							expense.namount, ;
							expense.cvendorid, ;
							expense.cYear,  ;
							expense.cPeriod,  ;
							.T. AS lNotListing,  ;
							expense.crefid,  ;
							expense.ccateg, ;
							expense.cexpclass, ;
							expense.ccatcode, ;
							expense.cownerid ;
						FROM expense, wells ;
						WHERE expense.cwellid in (select cid from selected)   ;
							AND expense.cwellid = wells.cwellid   ;
							AND IIF(tcGroup = '**',.T.,wells.cGROUP = tcGroup)        ;
							AND IIF(tcType='R',(nRunNoRev = tnRunNo AND (cRunYearRev == tcRunYear OR (INLIST(cRunYearRev,'1900','1901') AND cRunYearJIB==tcRunYear))),;
							                   (nRunNoJIB = tnRunNo AND (cRunYearJIB == tcRunYear OR (INLIST(cRunYearJIB,'1900','1901') AND cRunYearRev==tcRunYear)))) ;
							AND expense.lFixed = .T. ;
							AND expense.cYear <> 'FIXD'  ;
							AND IIF(tnRunNo = 0, expense.dExpDate <= tdDate, .T.)  ;
						INTO CURSOR tmp ;
						ORDER BY &tcOrder
		            THISFORM.cSelectCriteria = 'Wells: ' + tcWell1 + ' - ' + tcWell2 + ' in Group ' + tcGroup
		
		        SELECT welltmp
		        APPEND FROM DBF('tmp')
		        SCAN
		            m.cownerid  = cownerid
		            m.namount   = namount
		            lnNet       = namount
		            m.cwellid   = cwellid
		            m.cDeck     = cDeck
		            m.cexpclass = cexpclass
		            m.ccatcode  = ccatcode
		            IF NOT EMPTY(m.cownerid) OR m.ccatcode = 'MKTG'  &&  Don't net out anything if it's a one-man item - BH 8/26/04 or a MKTG Expense - PWS 12/1/05
		                IF ccatcode = 'MKTG'  &&  If MKTG, net it down using the gasrev percentage - BH 8/9/06
		                    lnNet = swNetRevenue(m.cwellid, m.namount, 'G', .F., .T., .F., m.cownerid, .F., .F., .F., m.cDeck)
		                ELSE
		                    swselect('investor')
		                    SET ORDER TO cownerid
		                    IF SEEK(m.cownerid) AND NOT lDummy
		                        lnNet = m.nAmount
		                    ELSE
		                        lnNet = 0
		                    ENDIF
		                ENDIF
		            ELSE
		                IF tcType = 'J'
		                   lnNet = swNetExp(m.namount, m.cwellid, .T., m.cexpclass, 'J', .F., m.cownerid, m.ccatcode, m.cDeck)
		                ELSE
		                   lnNet = swNetExp(m.namount, m.cwellid, .T., m.cexpclass, 'N', .F., m.cownerid, m.ccatcode, m.cDeck)
		                ENDIF    
		            ENDIF
		            IF NOT EMPTY(m.cownerid)
		                SELECT investor
		                SET ORDER TO cownerid
		                IF SEEK(m.cownerid)
		                    m.cownname = cownname
		                ELSE
		                    m.cownname = ' '
		                ENDIF
		            ELSE
		                m.cownname = ' '
		            ENDIF
		            SELECT welltmp
		            REPLACE cownname WITH m.cownname, ;
		                nNetAmount  WITH lnNet
		        ENDSCAN
		ENDCASE
		
		
		IF RECC() > 0
		    RETURN .T.
		ELSE
		    RETURN .F.
		ENDIF
		
		IF USED('welltmp')
		    USE IN welltmp
		ENDIF
		
		RETURN
		
		
	ENDPROC

	PROCEDURE Init
		DODEFAULT()
		SELECT wells
		SET ORDER TO cWellID
		GO TOP
		
		THISFORM.swrptlook1.txtBegName.VALUE = cwellname
		THISFORM.swrptlook1.txtBegID.VALUE = cWellID
		GO BOTTOM
		
		THISFORM.swrptlook1.txtEndName.VALUE = cwellname
		THISFORM.swrptlook1.txtEndID.VALUE = cWellID
		
		
		
		
		
	ENDPROC

	PROCEDURE chkSelected.Click
		IF this.Value
		   DO FORM commonsource\selected-ids WITH 'WELL' LINKED 
		   lnCount = RECCOUNT('selected')
		   thisform.lblselected.Caption = TRANSFORM(lnCount) + ' Wells Selected'
		   thisform.lblselected.Visible = .T.
		   thisform.lblbegID.Visible = .F.
		   thisform.lblendID.Visible = .F.
		   thisform.swrptlook1.Visible = .F.
		ELSE
		   thisform.lblselected.Visible = .F.
		   thisform.lblbegID.Visible = .T.
		   thisform.lblendID.Visible = .T.
		   thisform.swrptlook1.Visible = .T.
		ENDIF 
	ENDPROC

	PROCEDURE opgSelect.Valid
		DO case
		   CASE this.Value = 1
		      THISFORM.txtYear.ENABLED = .F.
		      THISFORM.txtPeriod.ENABLED = .F.
		      THISFORM.txtYear.visible = .t.
		      THISFORM.txtPeriod.visible = .t.
		      thisform.lblyearPeriod.Visible = .f.
		      thisform.lblslash.Visible = .t.
		      thisform.lblacctDate.Visible = .f.
		      thisform.txtacctDate.Visible = .f.
		      thisform.runcombo1.Enabled = .f.
		      thisform.lblyearPeriod.Visible = .t.
		   CASE this.Value = 2
		      THISFORM.txtYear.ENABLED = .t.
		      THISFORM.txtPeriod.ENABLED = .t.
		      THISFORM.txtYear.visible = .t.
		      THISFORM.txtPeriod.visible = .t.
		      thisform.lblyearPeriod.Visible = .f.
		      thisform.lblslash.Visible = .t.
		      thisform.lblacctDate.Visible = .f.
		      thisform.txtacctDate.Visible = .f.
		      thisform.runcombo1.Enabled = .f.
		      thisform.lblyearPeriod.Visible = .t.
		   CASE this.Value = 3
		      THISFORM.txtYear.visible = .F.
		      THISFORM.txtPeriod.visible = .F.
		      thisform.lblyearPeriod.Visible = .f.
		      thisform.lblslash.Visible = .f.
		      thisform.lblacctDate.Visible = .t.
		      thisform.txtacctDate.Visible = .t.
		      thisform.runcombo1.Enabled = .t.
		ENDCASE
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE Runcombo1.Init
		IF DODEFAULT()
		   this.listitemid = 1
		ENDIF   
	ENDPROC

	PROCEDURE Runcombo1.Valid
		IF 'New' $ this.value
		   thisform.swgroup1.visible = .t.
		   thisform.lblgroup.visible = .t.
		   thisform.lblacctdate.visible = .t.
		   thisform.txtacctdate.visible = .t.
		ELSE
		   thisform.swgroup1.visible = .f.
		   thisform.lblgroup.visible = .f.
		   thisform.lblacctdate.visible = .f.
		   thisform.txtacctdate.visible = .f.
		ENDIF   
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cwellid,cwellname,cgroup,cwellstat'
		DO FORM ..\custom\picklist WITH 'Wells', lcList, thisform.swrptlook1.txtbegid.value, 4
		
		IF llOK
		   thisform.swrptlook1.txtBegId.value = cwellid
		   thisform.swrptlook1.txtBegName.value = cwellname
		   thisform.swrptlook1.txtBegId.refresh()
		   thisform.swrptlook1.txtBegName.refresh()
		ENDIF   
		
		thisform.setnextcontrol(thisform.swrptlook1.txtBegId)
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cwellid,cwellname,cgroup,cwellstat'
		DO FORM ..\custom\picklist WITH 'Wells', lcList, thisform.swrptlook1.txtendid.value, 4
		
		IF llOK
		   thisform.swrptlook1.txtEndId.value = cwellid
		   thisform.swrptlook1.txtEndName.value = cwellname
		   thisform.swrptlook1.txtEndId.refresh()
		   thisform.swrptlook1.txtEndName.refresh()
		ENDIF   
		
		thisform.setnextcontrol(thisform.swrptlook1.txtEndId)
		
	ENDPROC

ENDDEFINE
