*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="dmrwexp.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor7" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 416
	Left = 40
	Name = "Dataenvironment"
	Top = 235
	Width = 671

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "expcat", ;
		CursorSource = "expcat", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Order = "cwellid", ;
		Top = 19, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "expense", ;
		CursorSource = "expense", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "wellinv", ;
		CursorSource = "wellinv", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor4", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "options", ;
		CursorSource = "options", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor5", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "groups", ;
		CursorSource = "groups", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 291, ;
		Name = "Cursor6", ;
		Top = 156, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor7' AS cursor WITH ;
		Alias = "sysctl", ;
		CursorSource = "sysctl", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 422, ;
		Name = "Cursor7", ;
		Top = 21, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formdmrwexp AS frmrptcriteria OF "..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkNewPage" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="ChkGroupByWell" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkCatSort" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swperiod1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swgroup1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblGroup" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swyear1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swyear2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swperiod2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblFrom" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblBegExp" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LastExp" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAcctDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBegID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEndID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklNet" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Runcombo1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblRunno" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="opgReportBy" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSlash1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSlash2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblHyphen" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblHyphen2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtacctdate1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtacctdate2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklDescription" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSelected" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSelected" UniqueID="" Timestamp="" />

	Caption = "Well Expenses by Expense Code"
	DataSession = 2
	DoCreate = .T.
	Height = 505
	HelpContextID = 208
	Name = "FormDmrwexp"
	Width = 679
	Swrptcriteriabuttons1.chkExport.Alignment = 0
	Swrptcriteriabuttons1.chkExport.Name = "chkExport"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.CMDPREVIEW.Name = "CMDPREVIEW"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 216
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 32
	Swrptcriteriabuttons1.Top = 427
	Swrptcriteriabuttons1.ZOrderSet = 1

	ADD OBJECT 'chkCatSort' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Sort By Expense Name", ;
		Left = 162, ;
		Name = "chkCatSort", ;
		TabIndex = 27, ;
		Top = 343, ;
		Value = .F., ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'ChkGroupByWell' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Sort by Well ID", ;
		Left = 162, ;
		Name = "ChkGroupByWell", ;
		TabIndex = 29, ;
		Top = 367, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklDescription' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Use Expense Description from Bills", ;
		Left = 162, ;
		Name = "chklDescription", ;
		TabIndex = 31, ;
		Top = 390, ;
		Value = .F., ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklNet' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Exclude Dummy Amts", ;
		Left = 318, ;
		Name = "chklNet", ;
		TabIndex = 28, ;
		Top = 343, ;
		Value = .F., ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkNewPage' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Start Each Well on a New Page", ;
		Left = 318, ;
		Name = "chkNewPage", ;
		TabIndex = 30, ;
		Top = 367, ;
		Visible = .F., ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSelected' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Choose Selected Wells", ;
		Left = 426, ;
		Name = "chkSelected", ;
		TabIndex = 23, ;
		Top = 200, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'LastExp' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Last Expense:", ;
		Height = 16, ;
		Left = 13, ;
		Name = "LastExp", ;
		TabIndex = 22, ;
		Top = 280, ;
		Width = 71, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblAcctDate' AS lbllabelcustom WITH ;
		Caption = "Accounting Date:", ;
		Left = 156, ;
		Name = "lblAcctDate", ;
		TabIndex = 15, ;
		Top = 123, ;
		Visible = .T., ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblBegExp' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "First Expense:", ;
		Height = 16, ;
		Left = 13, ;
		Name = "LblBegExp", ;
		TabIndex = 21, ;
		Top = 229, ;
		Width = 71, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblBegID' AS lbltextcustom WITH ;
		BackStyle = 0, ;
		Caption = "First Well:", ;
		Left = 362, ;
		Name = "lblBegID", ;
		TabIndex = 25, ;
		Top = 229, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblEndID' AS lbltextcustom WITH ;
		BackStyle = 0, ;
		Caption = "Last Well:", ;
		Left = 362, ;
		Name = "lblEndID", ;
		TabIndex = 26, ;
		Top = 280, ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblFrom' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Prod Period Range:", ;
		Height = 16, ;
		Left = 147, ;
		Name = "LblFrom", ;
		TabIndex = 16, ;
		Top = 124, ;
		Visible = .F., ;
		Width = 94, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblGroup' AS lbllabelcustom WITH ;
		Caption = "Group:", ;
		Height = 16, ;
		Left = 206, ;
		Name = "LblGroup", ;
		TabIndex = 19, ;
		Top = 158, ;
		Width = 35, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblHyphen' AS lbllabelcustom WITH ;
		Caption = "-", ;
		FontSize = 12, ;
		Left = 340, ;
		Name = "lblHyphen", ;
		TabIndex = 8, ;
		Top = 120, ;
		Visible = .F., ;
		ZOrderSet = 26
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblHyphen2' AS lbllabelcustom WITH ;
		Caption = "-", ;
		FontBold = .T., ;
		Height = 16, ;
		Left = 358, ;
		Name = "lblHyphen2", ;
		TabIndex = 14, ;
		Top = 122, ;
		Visible = .F., ;
		Width = 6, ;
		ZOrderSet = 27
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Report By:", ;
		Left = 188, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 2, ;
		Top = 18, ;
		ZOrderSet = 23
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblRunno' AS lbllabelcustom WITH ;
		Caption = "Run No:", ;
		Left = 201, ;
		Name = "lblRunno", ;
		TabIndex = 4, ;
		Top = 89, ;
		ZOrderSet = 21
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSelected' AS lbllabelcustom WITH ;
		Caption = "All IDs Selected", ;
		ForeColor = 0,0,255, ;
		Left = 425, ;
		Name = "lblSelected", ;
		TabIndex = 18, ;
		Top = 265, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSlash1' AS lbllabelcustom WITH ;
		Caption = "/", ;
		FontSize = 10, ;
		Left = 295, ;
		Name = "lblSlash1", ;
		TabIndex = 12, ;
		Top = 121, ;
		Visible = .F., ;
		ZOrderSet = 24
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSlash2' AS lbllabelcustom WITH ;
		Caption = "/", ;
		FontSize = 10, ;
		Height = 18, ;
		Left = 398, ;
		Name = "lblSlash2", ;
		TabIndex = 13, ;
		Top = 121, ;
		Visible = .F., ;
		Width = 6, ;
		ZOrderSet = 25
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'opgReportBy' AS opgoptiongroupcustom WITH ;
		AutoSize = .T., ;
		BorderStyle = 0, ;
		ButtonCount = 3, ;
		Left = 252, ;
		Name = "opgReportBy", ;
		TabIndex = 1, ;
		Top = 12, ;
		Value = 1, ;
		ZOrderSet = 22, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "Run Number", ;
		Option1.FontSize = 8, ;
		Option1.Height = 16, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Top = 5, ;
		Option1.Value = 1, ;
		Option1.Width = 77, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "Production Period Range", ;
		Option2.FontSize = 8, ;
		Option2.Height = 16, ;
		Option2.Left = 5, ;
		Option2.Name = "Option2", ;
		Option2.Top = 25, ;
		Option2.Width = 136, ;
		Option3.AutoSize = .T., ;
		Option3.Caption = "Run Posting Date Range", ;
		Option3.FontSize = 8, ;
		Option3.Height = 16, ;
		Option3.Left = 5, ;
		Option3.Name = "Option3", ;
		Option3.Top = 45, ;
		Option3.Width = 134
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'Runcombo1' AS runcombo WITH ;
		cshowwhat = B, ;
		Height = 20, ;
		Left = 255, ;
		lnewrunboth = .T., ;
		Name = "Runcombo1", ;
		TabIndex = 3, ;
		Top = 87, ;
		Width = 264, ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Shpshapecustom1' AS shpshapecustom WITH ;
		BackStyle = 0, ;
		Height = 82, ;
		Left = 81, ;
		Name = "Shpshapecustom1", ;
		Top = 333, ;
		Width = 504, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Swgroup1' AS swgroup WITH ;
		Left = 255, ;
		Name = "Swgroup1", ;
		TabIndex = 17, ;
		Top = 156, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Swperiod1' AS swperiod WITH ;
		Left = 303, ;
		Name = "Swperiod1", ;
		TabIndex = 7, ;
		Top = 120, ;
		Visible = .F., ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'Swperiod2' AS swperiod WITH ;
		Left = 406, ;
		Name = "Swperiod2", ;
		TabIndex = 11, ;
		Top = 120, ;
		Visible = .F., ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		Left = 98, ;
		Name = "Swrptlook1", ;
		TabIndex = 20, ;
		Top = 225, ;
		ZOrderSet = 12, ;
		Swlookupbutton1.Left = 45, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton1.Top = 0, ;
		Swlookupbutton2.Left = 45, ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		Swlookupbutton2.Top = 52, ;
		TxtBegID.clistexpression = expcat.ccatcode, ;
		TxtBegID.clistworkarea = expcat, ;
		TxtBegID.InputMask = "XXXX", ;
		TxtBegID.MaxLength = 4, ;
		TxtBegID.Name = "TxtBegID", ;
		TxtBegID.Width = 38, ;
		TxtBegName.Name = "TxtBegName", ;
		TxtEndID.clistexpression = expcat.ccatcode, ;
		TxtEndID.clistworkarea = expcat, ;
		TxtEndID.InputMask = "XXXX", ;
		TxtEndID.MaxLength = 4, ;
		TxtEndID.Name = "TxtEndID", ;
		TxtEndID.Width = 38, ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />

	ADD OBJECT 'Swrptlook2' AS swrptlook WITH ;
		Left = 424, ;
		Name = "Swrptlook2", ;
		TabIndex = 24, ;
		Top = 225, ;
		ZOrderSet = 7, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		txtBegID.clistexpression = wells.cwellid, ;
		txtBegID.clistworkarea = wells, ;
		txtBegID.Name = "txtBegID", ;
		TxtBegName.Name = "TxtBegName", ;
		txtEndID.clistexpression = wells.cwellid, ;
		txtEndID.clistworkarea = wells, ;
		txtEndID.Name = "txtEndID", ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />

	ADD OBJECT 'Swyear1' AS swyear WITH ;
		Left = 255, ;
		Name = "Swyear1", ;
		TabIndex = 5, ;
		Top = 120, ;
		Visible = .F., ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'Swyear2' AS swyear WITH ;
		Left = 357, ;
		Name = "Swyear2", ;
		TabIndex = 9, ;
		Top = 120, ;
		Visible = .F., ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtacctdate1' AS dpk WITH ;
		ControlSource = "", ;
		Height = 20, ;
		Left = 255, ;
		Name = "txtacctdate1", ;
		TabIndex = 6, ;
		Top = 120, ;
		Visible = .T., ;
		Width = 75, ;
		ZOrderSet = 28
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtacctdate2' AS dpk WITH ;
		ControlSource = "", ;
		Height = 20, ;
		Left = 373, ;
		Name = "txtacctdate2", ;
		TabIndex = 10, ;
		Top = 120, ;
		Visible = .F., ;
		Width = 75, ;
		ZOrderSet = 29
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />
	
	PROCEDURE builddata
		LOCAL tcfirstexp, tclastexp, tcyear1, tcperiod1, tcyear2, tcperiod2, tlgroup, tcgroup, tnReportBy,  ;
		   tdDate1, tdDate2
		LOCAL lDescrip, lcwellid1, lcwellid2, llCatSort, llReturn, lnamount, loError
		*:Global ccateg, cwellname, tcdmbatch, tctypeclose, tcwell1, tcwell2, tcyear, tlSort, tnrunno
		
		LOCAL odist, llUseNotes
		
		llReturn = .T.
		
		TRY
		   IF USED('tempexp')
		      USE IN tempexp
		   ENDIF
		
		   tcwell1    = THISFORM.swrptlook2.txtbegid.VALUE
		   tcwell2    = THISFORM.swrptlook2.txtendid.VALUE
		   tcfirstexp = THISFORM.swrptlook1.txtbegid.VALUE
		   tclastexp  = THISFORM.swrptlook1.txtendid.VALUE
		   tlgroup    = THISFORM.chkgroupbywell.VALUE
		   tnReportBy = THISFORM.opgReportBy.VALUE
		   tdDate1    = THISFORM.txtAcctDate1.VALUE
		   tdDate2    = THISFORM.txtAcctDate2.VALUE
		   tcgroup    = LEFT(THISFORM.swgroup1.VALUE, 2)
		   llCatSort  = THISFORM.chkcatSort.VALUE
		   tcyear1    = THISFORM.swyear1.VALUE
		   tcyear2    = THISFORM.swyear2.VALUE
		   tcperiod1  = THISFORM.swperiod1.VALUE
		   tcperiod2  = THISFORM.swperiod2.VALUE
		   llSelected = THISFORM.chkselected.VALUE
		
		   IF NOT llSelected
		      SELECT cwellid AS cid FROM wells WHERE BETWEEN(cwellid,tcwell1,tcwell2) INTO CURSOR SELECTED
		   ENDIF
		
		   IF tnReportBy = 1
		      tcyear      = THISFORM.runcombo1.LISTITEM[thisform.runcombo1.listitemid, 2]
		      tnrunno     = INT(VAL(THISFORM.runcombo1.LISTITEM[thisform.runcombo1.listitemid, 3]))
		      tcgroup     = THISFORM.runcombo1.LISTITEM[thisform.runcombo1.listitemid, 4]
		      tcdmbatch   = THISFORM.runcombo1.LISTITEM[thisform.runcombo1.listitemid, 5]
		      tctypeclose = THISFORM.runcombo1.LISTITEM[thisform.runcombo1.listitemid, 6]
		
		*  New run, so get the group from the field on the screen, instead of the dropdown
		      IF tnrunno = 0
		         tcgroup = LEFT(THISFORM.swgroup1.VALUE, 2)
		      ENDIF
		   ENDIF
		
		*
		*  Call distproc to create the (invtmp) and (wellwork) cursors
		*
		   odist = CREATEOBJECT('distproc', tcwell1, tcwell2, ;
		      '01', '1980', '00', 'W', DATE(), .T., 0)
		   THISFORM.ctitle1 = 'Well Expenses by Expense Code'
		
		   swselect('wells')
		   SET ORDER TO cwellid
		   GO TOP
		   lcwellid1 = cwellid
		   GO BOTT
		   lcwellid2 = cwellid
		   WAIT WIND NOWAIT 'Processing Request....'
		
		   IF tlgroup = .T.  &&  Order by well, so set sort accordingly
		      IF llCatSort
		         tlSort              = 'expense.cwellid, expense.ccateg, expense.ccatcode, expense.cyear, expense.cperiod'
		         THISFORM.csortorder = 'Well, Expense Name'
		      ELSE
		         tlSort              = 'expense.cwellid, expense.ccatcode, expense.ccateg, expense.cyear, expense.cperiod'
		         THISFORM.csortorder = 'Well, Expense Code'
		      ENDIF
		   ELSE
		      IF llCatSort
		         tlSort              = 'expense.ccateg, expense.ccatcode, expense.cwellid, expense.cyear, expense.cperiod'
		         THISFORM.csortorder = 'Expense Name, Well'
		      ELSE
		         tlSort              = 'expense.ccatcode, expense.ccateg, expense.cwellid, expense.cyear, expense.cperiod'
		         THISFORM.csortorder = 'Expense Code, Well'
		      ENDIF
		   ENDIF
		
		   CREATE CURSOR tempexp ;
		      (cwellid    c(10), ;
		      cwellname  c(30), ;
		      ccatcode   c(4), ;
		      cidexpe    c(8),  ;
		      ccateg     c(60), ;
		      cmemo      c(60), ;
		      cexpclass  c(1), ;
		      cyear      c(4), ;
		      cRefID     c(15),  ;
		      cperiod    c(2), ;
		      dExpDate   d,  ;
		      cOwnerID   c(10),  ;
		      namount    N(12, 2), ;
		      lDescrip   L,  ;
		      cpayee     c(40))
		   IF tnReportBy = 3  &&  Production date range, so index the cursor now
		      IF tlgroup = .T.  &&  Order by well, so set sort accordingly
		         IF llCatSort
		            INDEX ON expense.cwellid + expense.ccateg + expense.ccatcode + expense.cyear + expense.cperiod TAG cwellid
		         ELSE
		            INDEX ON expense.cwellid + expense.ccatcode + expense.ccateg + expense.cyear + expense.cperiod TAG cwellid
		         ENDIF
		      ELSE
		         IF llCatSort
		            INDEX ON expense.ccateg + expense.ccatcode + expense.cwellid + expense.cyear + expense.cperiod TAG cwellid
		         ELSE
		            INDEX ON expense.ccatcode + expense.ccateg + expense.cwellid + expense.cyear + expense.cperiod TAG cwellid
		         ENDIF
		      ENDIF
		   ENDIF
		
		   llUseNotes = THISFORM.chklDescription.VALUE
		
		   THISFORM.cselectcriteria = 'Wells: ' + ALLT(tcwell1) + ' - ' + ALLT(tcwell2) + ';  Categories: ' + ALLT(tcfirstexp) + ' - ' + tclastexp
		
		   DO CASE
		      CASE tnReportBy = 1  &&  Run Number
		
		         IF tnrunno = 0  &&  New run
		            SELECT  expense.cwellid, ;
		               wells.cwellname, ;
		               expense.ccatcode, ;
		               expcat.ccateg,  ;
		               expense.cyear,   ;
		               expense.dExpDate,  ;
		               expense.cperiod, ;
		               expense.cOwnerID,  ;
		               expense.cRefID,  ;
		               expense.namount, ;
		               expense.cpayee,   ;
		               expense.cexpclass, ;
		               llUseNotes AS lDescrip,  ;
		               expense.cmemo ;
		               FROM expense, expcat, wells ;
		               WHERE expense.cwellid IN (SELECT cid FROM SELECTED) ;
		               AND BETWEEN(expense.ccatcode, tcfirstexp, tclastexp) ;
		               AND expense.cwellid == wells.cwellid ;
		               AND expense.ccatcode == expcat.ccatcode ;
		               AND IIF(tcgroup <> '**', wells.cGroup = tcgroup, .T.)  ;
		               AND dExpDate <= tdDate1  ;
		               AND cyear <> 'FIXD'  ;
		               AND (nrunnorev = 0 ;
		               OR nRunNoJIB = 0)  ;
		               INTO CURSOR temp  ;
		               ORDER BY &tlSort
		
		            IF tlgroup = .T.  &&  Grouping by well
		               THISFORM.ctitle2 = 'New Run for Wells: ' + ALLT(tcwell1) + ' - ' + tcwell2
		            ELSE  &&  Grouping by Cat Code
		               THISFORM.ctitle2 = 'New Run for Categories: ' + tcfirstexp + ' - ' + tclastexp
		            ENDIF
		
		
		         ELSE  &&  Closed Run
		            THISFORM.ctitle2 = IIF(tctypeclose = 'R', 'Revenue', 'JIB') + ' RunNo: ' + PADL(ALLT(STR(tnrunno)), 3, '0') + '/' + tcyear
		
		            IF tctypeclose = 'R'
		               SELECT  expense.cwellid, ;
		                  wells.cwellname, ;
		                  expense.ccatcode, ;
		                  expcat.ccateg,  ;
		                  expense.cyear,   ;
		                  expense.cperiod, ;
		                  expense.dExpDate,  ;
		                  expense.cOwnerID,  ;
		                  expense.cRefID,  ;
		                  expense.namount, ;
		                  expense.cpayee,   ;
		                  expense.cexpclass, ;
		                  llUseNotes AS lDescrip,  ;
		                  expense.cmemo ;
		                  FROM expense, expcat, wells ;
		                  WHERE expense.crunyearrev = tcyear ;
		                  AND expense.nrunnorev = tnrunno ;
		                  AND expense.cwellid == wells.cwellid ;
		                  AND IIF(tcgroup <> '**', wells.cGroup = tcgroup, .T.)  ;
		                  AND expense.ccatcode == expcat.ccatcode ;
		                  AND expense.cwellid IN (SELECT cid FROM SELECTED) ;
		                  AND BETWEEN(expense.ccatcode, tcfirstexp, tclastexp) ;
		                  INTO CURSOR temp ;
		                  ORDER BY &tlSort
		            ELSE
		               SELECT  expense.cwellid, ;
		                  wells.cwellname, ;
		                  expense.ccatcode, ;
		                  expcat.ccateg,  ;
		                  expense.cyear,   ;
		                  expense.cperiod, ;
		                  expense.dExpDate,  ;
		                  expense.cOwnerID,  ;
		                  expense.cRefID,  ;
		                  expense.namount, ;
		                  expense.cpayee,   ;
		                  expense.cexpclass, ;
		                  llUseNotes AS lDescrip,  ;
		                  expense.cmemo ;
		                  FROM expense, expcat, wells ;
		                  WHERE expense.crunyearjib = tcyear ;
		                  AND expense.nRunNoJIB = tnrunno ;
		                  AND expense.cwellid == wells.cwellid ;
		                  AND IIF(tcgroup <> '**', wells.cGroup = tcgroup, .T.)  ;
		                  AND expense.ccatcode == expcat.ccatcode ;
		                  AND expense.cwellid IN (SELECT cid FROM SELECTED) ;
		                  AND BETWEEN(expense.ccatcode, tcfirstexp, tclastexp) ;
		                  INTO CURSOR temp ;
		                  ORDER BY &tlSort
		            ENDIF
		         ENDIF
		
		      CASE tnReportBy = 2  &&  Production Period Range
		
		         SELECT  expense.cwellid, ;
		            wells.cwellname, ;
		            expense.ccatcode, ;
		            expcat.ccateg,  ;
		            expense.cyear,   ;
		            expense.cperiod, ;
		            expense.dExpDate,  ;
		            expense.cOwnerID,  ;
		            expense.cRefID,  ;
		            expense.namount, ;
		            expense.cpayee,   ;
		            llUseNotes AS lDescrip,  ;
		            expense.cexpclass, ;
		            expense.cmemo ;
		            FROM expense, expcat, wells  ;
		            WHERE expense.cwellid IN (SELECT cid FROM SELECTED) ;
		            AND BETWEEN(expense.cyear + expense.cperiod, tcyear1 + tcperiod1, tcyear2 + tcperiod2) ;
		            AND BETWEEN(expense.ccatcode, tcfirstexp, tclastexp) ;
		            AND expense.cwellid == wells.cwellid ;
		            AND expense.ccatcode == expcat.ccatcode ;
		            AND IIF(tcgroup <> '**', wells.cGroup = tcgroup, .T.)  ;
		            INTO CURSOR temp ;
		            ORDER BY &tlSort
		         THISFORM.ctitle2 = 'Production Period Range: ' + tcperiod1 + '/' + tcyear1 + ' - ' + tcperiod2 + '/' + tcyear2
		
		
		      CASE tnReportBy = 3  &&  Accounting Date Range
		
		         SELECT tempexp
		         SET ORDER TO cwellid
		
		         swselect('sysctl')
		         SCAN FOR BETWEEN(dPostDate, tdDate1, tdDate2) AND lDisbMan = .T. AND IIF(tcgroup <> '**', cGroup = tcgroup, .T.)  &&  All rev/jib runs closed in the selected range of time for the selected group (if chosen)  && - Changed to use the dPostDAte, since that's the date used in wellhist/disbhist, to make it more consistent for users using the Advanced Posting - BH 08/18/2008
		
		            SELECT expense
		            SCAN FOR (IIF(sysctl.cTypeClose = 'R', crunyearrev = sysctl.cRunYear AND nrunnorev = sysctl.nRunNo,  ;
		                  crunyearjib = sysctl.cRunYear AND nRunNoJIB = sysctl.nRunNo)) AND BETWEEN(expense.ccatcode, tcfirstexp, tclastexp)  ;
		                  AND expense.cyear <> "FIXD"
		               SCATTER MEMVAR
		               SELECT SELECTED
		               LOCATE FOR cid = m.cwellid
		               IF NOT FOUND()
		                  LOOP
		               ENDIF
		
		               SELECT tempexp
		               LOCATE FOR cidexpe = m.cidexpe
		               IF FOUND()  &&  Don't insert it twice, if processed on both rev/JIB run
		                  LOOP
		               ENDIF
		
		               swselect('wells')
		               SET ORDER TO cwellid
		               IF SEEK(m.cwellid)
		                  m.cwellname = wells.cwellname
		               ELSE
		                  m.cwellname = 'Unknown Well'
		               ENDIF
		
		               swselect('expcat')
		               SET ORDER TO ccatcode
		               IF SEEK(m.ccatcode)
		                  m.ccateg = ccateg
		               ENDIF
		
		               m.lDescrip = llUseNotes
		
		               INSERT INTO tempexp FROM MEMVAR
		            ENDSCAN
		         ENDSCAN
		         THISFORM.ctitle2 = 'Accounting Date Range: ' + ALLT(DTOC(tdDate1)) + ' - ' + ALLT(DTOC(tdDate2))
		
		   ENDCASE
		
		   IF _TALLY > 0
		      SELECT tempexp
		      APPEND FROM DBF('temp')
		   ENDIF
		
		   THISFORM.cReportName = 'commonsource\dmrwexp1'  &&  Assign report name, depending on options
		   IF tlgroup = .T.
		      THISFORM.cReportName = 'commonsource\dmrwexp2'
		      IF THISFORM.chkNewPage.VALUE = .T.
		         THISFORM.cReportName = 'commonsource\dmrwexp4'
		      ENDIF
		   ENDIF
		
		*  Only fill in the ccateg with the cmemo if they're using the dmrwexp1 report format
		   SELECT tempexp
		   IF llUseNotes AND NOT '1' $ THISFORM.cReportName && Use expense notes instead of category option
		      SCAN
		         IF NOT EMPTY(cmemo)
		            REPL ccateg WITH cmemo
		         ENDIF
		      ENDSCAN
		   ENDIF
		
		   IF THISFORM.chklnet.VALUE  &&  If netting out dummy owners
		      SCAN
		         SCATTER MEMVAR
		         IF EMPTY(m.cOwnerID)
		            IF tnReportBy = 1
		               IF tctypeclose = 'R'
		                  lnamount = swNetExp(m.namount, m.cwellid, .T., m.cexpclass, 'N')
		               ELSE
		                  lnamount = swNetExp(m.namount, m.cwellid, .T., m.cexpclass, 'J')
		               ENDIF
		            ELSE
		               lnamount = swNetExp(m.namount, m.cwellid, .T., m.cexpclass, 'B')
		            ENDIF
		         ELSE
		            lnamount = m.namount
		         ENDIF
		         SELECT tempexp
		         REPLACE namount WITH lnamount
		      ENDSCAN
		   ELSE
		      lnAmount = 0
		      SELECT tempexp
		      SCAN
		         SCATTER MEMVAR
		         lnAmount = m.nAmount
		         IF EMPTY(m.cOwnerID)
		            IF tnReportBy = 1
		               IF tctypeclose = 'R'
		                  lnamount = swNetExp(m.namount, m.cwellid, .T., m.cexpclass, 'D')
		               ELSE
		                  lnamount = swNetExp(m.namount, m.cwellid, .T., m.cexpclass, 'DN')
		               ENDIF
		            ENDIF
		         ELSE
		            lnamount = m.namount
		         ENDIF
		         SELECT tempexp
		         REPLACE namount WITH lnamount
		      ENDSCAN
		   ENDIF
		
		   WAIT CLEAR
		
		   IF RECC() > 0
		      llReturn = .T.
		   ELSE
		      llReturn = .F.
		   ENDIF
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'Builddata', loError.LINENO, 'Well Expenses by Code', loError.ERRORNO, loError.MESSAGE, '', loError
		   MESSAGEBOX('Unable to process the report at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		      'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
		
	ENDPROC

	PROCEDURE Init
		IF DODEFAULT()
		
		   SELECT expcat
		   SET ORDER TO ccatcode
		   GO TOP
		   THISFORM.swrptlook1.txtbegname.VALUE = ccateg
		   THISFORM.swrptlook1.txtbegid.VALUE = ccatcode
		
		   GO BOTTOM
		   THISFORM.swrptlook1.txtendname.VALUE = ccateg
		   THISFORM.swrptlook1.txtendid.VALUE = ccatcode
		
		   SELE wells
		   SET ORDER TO cwellid
		   GO TOP
		   THISFORM.swrptlook2.txtbegname.VALUE = cwellname
		   THISFORM.swrptlook2.txtbegid.VALUE = cwellid
		
		   GO BOTTOM
		   THISFORM.swrptlook2.txtendname.VALUE = cwellname
		   THISFORM.swrptlook2.txtendid.VALUE = cwellid
		
		   THISFORM.chkgroupbywell.VALUE = .F.
		ENDIF
		
	ENDPROC

	PROCEDURE chkCatSort.Click
		if this.value = .t.
		   thisform.chkGroupByWell.Value = .f.
		endif
		
		dodefault()
	ENDPROC

	PROCEDURE ChkGroupByWell.Click
		if this.value = .t.
		   thisform.chkNewPage.visible = .t.
		   thisform.chkCatSort.Value = .f.
		else
		   thisform.chkNewpage.visible = .f.
		endif
		
		dodefault()
	ENDPROC

	PROCEDURE chkNewPage.Init
		IF DODEFAULT()
		   THIS.VALUE = .F.
		ENDIF
		
	ENDPROC

	PROCEDURE chkSelected.Click
		IF this.Value
		   DO FORM commonsource\selected-ids WITH 'WELL' LINKED 
		   lnCount = RECCOUNT('selected')
		   thisform.lblselected.Caption = TRANSFORM(lnCount) + ' Wells Selected'
		   thisform.lblselected.Visible = .T.
		   thisform.lblbegID.Visible = .F.
		   thisform.lblendID.Visible = .F.
		   thisform.swrptlook2.Visible = .F.
		ELSE
		   thisform.lblselected.Visible = .F.
		   thisform.lblbegID.Visible = .T.
		   thisform.lblendID.Visible = .T.
		   thisform.swrptlook2.Visible = .T.
		ENDIF 
	ENDPROC

	PROCEDURE opgReportBy.Click
		DODEFAULT()
		
		DO CASE
		   CASE THIS.VALUE = 1  &&  Run Number
		      THISFORM.lblRunNo.VISIBLE = .T.
		      THISFORM.RunCombo1.VISIBLE = .T.
		      THISFORM.lblFrom.VISIBLE = .F.
		      THISFORM.swYear1.VISIBLE = .F.
		      THISFORM.lblSlash1.VISIBLE = .F.
		      THISFORM.lblSlash2.VISIBLE = .F.
		      THISFORM.swPeriod1.VISIBLE = .F.
		      THISFORM.lblHyphen.VISIBLE = .F.
		      THISFORM.lblHyphen2.VISIBLE = .F.
		      THISFORM.swYear2.VISIBLE = .F.
		      THISFORM.swPeriod2.VISIBLE = .F.
		      thisform.lblAcctDate.visible = .f.
		      thisform.txtAcctDate1.visible = .f.
		      thisform.txtAcctDate2.visible = .f.
		      
		      IF THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID,3) = '0'
		         THISFORM.lblGroup.VISIBLE = .T.
		         THISFORM.swGroup1.VISIBLE = .T.
		         thisform.lblAcctDate.visible = .t.
		         thisform.txtAcctDate1.visible = .t.
		      ELSE
		         THISFORM.lblGroup.VISIBLE = .F.
		         THISFORM.swGroup1.VISIBLE = .F.
		         thisform.lblAcctDate.visible = .f.
		         thisform.txtAcctDate1.visible = .f.
		      ENDIF
		
		   CASE THIS.VALUE = 2  &&  Production Period Range
		      THISFORM.lblRunNo.VISIBLE = .F.
		      THISFORM.RunCombo1.VISIBLE = .F.
		      THISFORM.lblFrom.VISIBLE = .T.
		      THISFORM.swYear1.VISIBLE = .T.
		      THISFORM.lblSlash1.VISIBLE = .T.
		      THISFORM.lblSlash2.VISIBLE = .T.
		      THISFORM.swPeriod1.VISIBLE = .T.
		      THISFORM.lblHyphen.VISIBLE = .T.
		      THISFORM.lblHyphen2.VISIBLE = .F.
		      THISFORM.swYear2.VISIBLE = .T.
		      THISFORM.swPeriod2.VISIBLE = .T.
		      THISFORM.lblGroup.VISIBLE = .T.
		      THISFORM.swGroup1.VISIBLE = .T.
		      thisform.lblAcctDate.visible = .f.
		      thisform.txtAcctDate1.visible = .f.
		      thisform.txtAcctDate2.visible = .f.
		
		   CASE THIS.VALUE = 3  &&  Accounting Date Range
		      THISFORM.lblRunNo.VISIBLE = .f.
		      THISFORM.RunCombo1.VISIBLE = .f.
		      THISFORM.lblFrom.VISIBLE = .f.
		      THISFORM.swYear1.VISIBLE = .f.
		      THISFORM.lblSlash1.VISIBLE = .f.
		      THISFORM.lblSlash2.VISIBLE = .f.
		      THISFORM.swPeriod1.VISIBLE = .f.
		      THISFORM.lblHyphen.VISIBLE = .t.
		      THISFORM.lblHyphen2.VISIBLE = .t.
		      THISFORM.swYear2.VISIBLE = .f.
		      THISFORM.swPeriod2.VISIBLE = .f.
		      THISFORM.lblGroup.VISIBLE = .t.
		      THISFORM.swGroup1.VISIBLE = .t.
		      thisform.lblAcctDate.visible = .t.
		      thisform.txtAcctDate1.visible = .t.
		      thisform.txtAcctDate2.visible = .t.
		
		ENDCASE
		
	ENDPROC

	PROCEDURE Runcombo1.Init
		
		IF DODEFAULT()
		   this.listitemid = 1
		ENDIF   
	ENDPROC

	PROCEDURE Runcombo1.Valid
		DODEFAULT()
		
		IF THIS.LISTITEM(THIS.LISTITEMID,3) = '0'  &&  New run, so show the group and accounting date
		   THISFORM.lblGroup.VISIBLE = .T.
		   THISFORM.swGroup1.VISIBLE = .T.
		   thisform.lblAcctDate.visible = .t.
		   thisform.txtAcctDate1.visible = .t.
		ELSE
		   THISFORM.lblGroup.VISIBLE = .F.
		   THISFORM.swGroup1.VISIBLE = .F.
		    thisform.lblAcctDate.visible = .f.
		   thisform.txtAcctDate1.visible = .f.
		ENDIF
		
	ENDPROC

	PROCEDURE Swgroup1.Init
		swselect('groups')
		DODEFAULT()
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		SELECT cCatCode,cCateg,cExpClass,IIF(lAFEType,'A','') AS cAFEType, IIF(lJIBOnly,'J','') AS cJIBOnly  ;
		    FROM expcat INTO CURSOR exptmp READWRITE
		
		SELECT exptmp
		INDEX ON cCatCode           TAG cCatCode
		INDEX ON cCateg             TAG cCateg
		INDEX ON cExpClass+cCatCode TAG cExpClass
		INDEX ON cAFEType           TAG cAFEType
		INDEX ON cJIBOnly           TAG cJIBOnly
		
		lcList = 'ccatcode\Code,ccateg\Category,cexpclass\Cls,cAFEType\AFE,cJIBOnly\JIB'
		
		DO FORM '..\custom\picklist' WITH 'exptmp', lcList, THISFORM.swrptlook1.txtbegid.VALUE, 5, .T., .T.
		
		
		IF llOK
		    THISFORM.swrptlook1.txtbegid.VALUE = cCatCode
		    THISFORM.swrptlook1.txtBegName.VALUE = cCateg
		    THISFORM.swrptlook1.txtbegid.REFRESH()
		    THISFORM.swrptlook1.txtBegName.REFRESH()
		    THISFORM.swrptlook1.txtbegid.SETFOCUS()
		ENDIF
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		SELECT cCatCode,cCateg,cExpClass,IIF(lAFEType,'A','') AS cAFEType, IIF(lJIBOnly,'J','') AS cJIBOnly  ;
		    FROM expcat INTO CURSOR exptmp READWRITE
		
		SELECT exptmp
		INDEX ON cCatCode           TAG cCatCode
		INDEX ON cCateg             TAG cCateg
		INDEX ON cExpClass+cCatCode TAG cExpClass
		INDEX ON cAFEType           TAG cAFEType
		INDEX ON cJIBOnly           TAG cJIBOnly
		
		lcList = 'ccatcode\Code,ccateg\Category,cexpclass\Cls,cAFEType\AFE,cJIBOnly\JIB'
		
		DO FORM '..\custom\picklist' WITH 'exptmp', lcList, THISFORM.swrptlook1.txtendid.VALUE, 5, .T., .T.
		
		IF llok
		   thisform.swrptlook1.txtEndId.value = ccatcode
		   thisform.swrptlook1.txtEndName.value = ccateg
		   thisform.swrptlook1.txtEndId.refresh()
		   thisform.swrptlook1.txtEndName.refresh()
		   thisform.swrptlook1.txtEndId.SetFocus()
		ENDIF   
	ENDPROC

	PROCEDURE Swrptlook2.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cwellid,cwellname,cgroup,cwellstat'
		DO FORM ..\custom\picklist WITH 'Wells', lcList, thisform.swrptlook2.txtbegid.value, 4
		
		IF llOK
		   thisform.swrptlook2.txtBegId.value = cwellid
		   thisform.swrptlook2.txtBegName.value = cwellname
		   thisform.swrptlook2.txtBegId.refresh()
		   thisform.swrptlook2.txtBegName.refresh()
		ENDIF   
		
		thisform.setnextcontrol(thisform.swrptlook2.txtBegId)
		
	ENDPROC

	PROCEDURE Swrptlook2.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cwellid,cwellname,cgroup,cwellstat'
		DO FORM ..\custom\picklist WITH 'Wells', lcList, thisform.swrptlook2.txtendid.value, 4
		
		IF llOK
		   thisform.swrptlook2.txtEndId.value = cwellid
		   thisform.swrptlook2.txtEndName.value = cwellname
		   thisform.swrptlook2.txtEndId.refresh()
		   thisform.swrptlook2.txtEndName.refresh()
		ENDIF   
		
		thisform.setnextcontrol(thisform.swrptlook2.txtEndId)
		
	ENDPROC

	PROCEDURE Swrptlook2.txtBegID.GotFocus
		DODEFAULT()
		
		ON KEY LABEL f2 _SCREEN.ACTIVEFORM.swrptlook2.Swlookupbutton1.CLICK()
		
	ENDPROC

	PROCEDURE Swrptlook2.txtEndID.GotFocus
		DODEFAULT()
		
		ON KEY LABEL f2 _SCREEN.ACTIVEFORM.swrptlook2.Swlookupbutton2.CLICK()
		
	ENDPROC

ENDDEFINE
