*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="ten99print.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 572
	Left = 40
	Name = "Dataenvironment"
	Top = 235
	Width = 520

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "investor", ;
		CursorSource = "investor", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 19, ;
		Name = "Cursor1", ;
		Order = "cownerid", ;
		Top = 21, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "tax1099", ;
		CursorSource = "tax1099", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Filter = "NOT DELETED()", ;
		Height = 503, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Order = "primkey", ;
		Top = 20, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "vendor", ;
		CursorSource = "vendor", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Order = "cvendorid", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor4", ;
		Top = 140, ;
		Width = 101
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "tax1099corrections", ;
		CursorSource = "tax1099corrections", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor5", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS form1099print AS frmrptcriteria OF "..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Shpshapecustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklbyWell" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEndWell" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBegWell" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkCorrect" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chk1099NEC" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swyear1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chk1099Misc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkAll1099s" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkAlign" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklMask" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkBlank" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkForms" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkCopyB" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkCopyC" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkCopy1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkCopy2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCopies" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSelected" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSelected" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkZero1099s" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom6" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: checkformats		&& Checks for existence of report formats for the given year and downloads them if necessary.
		*m: disablecopies
		*m: enablecopies
		*m: lookup
	*</DefinedPropArrayMethod>

	Caption = "Print 1099-MISC and 1099-NEC"
	DataSession = 2
	DoCreate = .T.
	Height = 528
	HelpContextID = 254
	Name = "Form1099print"
	Width = 481
	_memberdata = <VFPData>
		<memberdata name="enablecopies" display="EnableCopies"/>
		<memberdata name="disablecopies" display="DisableCopies"/>
		</VFPData>
	Swrptcriteriabuttons1.CHKEXPORT.Alignment = 0
	Swrptcriteriabuttons1.CHKEXPORT.Name = "CHKEXPORT"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.cmdPreview.Name = "cmdPreview"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 108
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 27
	Swrptcriteriabuttons1.Top = 453
	Swrptcriteriabuttons1.ZOrderSet = 4

	ADD OBJECT 'chk1099Misc' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "Print 1099-MISC", ;
		Height = 16, ;
		Left = 103, ;
		Name = "chk1099Misc", ;
		TabIndex = 17, ;
		Top = 269, ;
		Value = .T., ;
		Width = 94, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chk1099NEC' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "Print 1099-NEC", ;
		Height = 16, ;
		Left = 267, ;
		Name = "chk1099NEC", ;
		TabIndex = 18, ;
		Top = 269, ;
		Value = .F., ;
		Width = 90, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkAlign' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Print Alignment Sheet", ;
		Left = 103, ;
		Name = "chkAlign", ;
		TabIndex = 23, ;
		Top = 376, ;
		Value = .F., ;
		Visible = .F., ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkAll1099s' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Print All 1099s", ;
		Left = 156, ;
		Name = "chkAll1099s", ;
		TabIndex = 13, ;
		Top = 171, ;
		Value = .T., ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkBlank' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Blank Paper", ;
		Left = 156, ;
		Name = "chkBlank", ;
		TabIndex = 3, ;
		Top = 26, ;
		Value = .T., ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkCopy1' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Copy 1 (State)", ;
		Left = 156, ;
		Name = "chkCopy1", ;
		TabIndex = 8, ;
		Top = 74, ;
		Value = .F., ;
		ZOrderSet = 23
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkCopy2' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Copy 2 (State)", ;
		Left = 276, ;
		Name = "chkCopy2", ;
		TabIndex = 9, ;
		Top = 74, ;
		Value = .F., ;
		ZOrderSet = 24
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkCopyB' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Copy B (Recipient)", ;
		Left = 156, ;
		Name = "chkCopyB", ;
		TabIndex = 6, ;
		Top = 51, ;
		Value = .T., ;
		ZOrderSet = 21
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkCopyC' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Copy C (Payer)", ;
		Left = 276, ;
		Name = "chkCopyC", ;
		TabIndex = 7, ;
		Top = 51, ;
		Value = .F., ;
		ZOrderSet = 22
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkCorrect' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "Print Only Corrected Returns", ;
		Height = 16, ;
		Left = 103, ;
		Name = "chkCorrect", ;
		TabIndex = 19, ;
		Top = 323, ;
		Value = .F., ;
		Width = 156, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkForms' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Preprinted Forms", ;
		Height = 16, ;
		Left = 252, ;
		Name = "chkForms", ;
		TabIndex = 4, ;
		Top = 26, ;
		Value = .F., ;
		Width = 100, ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklbyWell' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "Print By Well", ;
		Height = 16, ;
		Left = 267, ;
		Name = "chklbyWell", ;
		TabIndex = 22, ;
		Top = 349, ;
		Value = .F., ;
		Width = 78, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklMask' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Mask Recipient Tax IDs", ;
		Left = 267, ;
		Name = "chklMask", ;
		TabIndex = 20, ;
		Top = 323, ;
		Value = .F., ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSelected' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Print Selected 1099s", ;
		Left = 156, ;
		Name = "chkSelected", ;
		TabIndex = 14, ;
		Top = 196, ;
		Value = .F., ;
		ZOrderSet = 28
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkZero1099s' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Print Zero Amount 1099s", ;
		Left = 103, ;
		Name = "chkZero1099s", ;
		TabIndex = 21, ;
		Top = 349, ;
		Value = .F., ;
		Visible = .T., ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'lblBegWell' AS lbllabelcustom WITH ;
		Caption = "Beginning Well:", ;
		Height = 16, ;
		Left = 75, ;
		Name = "lblBegWell", ;
		TabIndex = 25, ;
		Top = 436, ;
		Visible = .F., ;
		Width = 75, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblCopies' AS lbllabelcustom WITH ;
		Caption = "Copies To Print:", ;
		Left = 49, ;
		Name = "lblCopies", ;
		TabIndex = 5, ;
		Top = 51, ;
		ZOrderSet = 25
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblEndWell' AS lbllabelcustom WITH ;
		Caption = "Ending Well:", ;
		Height = 16, ;
		Left = 90, ;
		Name = "lblEndWell", ;
		TabIndex = 26, ;
		Top = 486, ;
		Visible = .F., ;
		Width = 60, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		BackStyle = 1, ;
		Caption = "Format", ;
		FontBold = .T., ;
		Left = 40, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 1, ;
		Top = 10, ;
		ZOrderSet = 26
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "Tax Year:", ;
		Height = 16, ;
		Left = 48, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 11, ;
		Top = 135, ;
		Width = 50, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom3' AS lbllabelcustom WITH ;
		BackStyle = 1, ;
		Caption = "Selection Criteria", ;
		FontBold = .T., ;
		Left = 40, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 10, ;
		Top = 113, ;
		ZOrderSet = 27
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom4' AS lbllabelcustom WITH ;
		BackStyle = 1, ;
		Caption = "Options", ;
		FontBold = .T., ;
		Left = 40, ;
		Name = "Lbllabelcustom4", ;
		TabIndex = 16, ;
		Top = 311, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom5' AS lbllabelcustom WITH ;
		Caption = "Print 1099s On:", ;
		Left = 49, ;
		Name = "Lbllabelcustom5", ;
		TabIndex = 2, ;
		Top = 26, ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom6' AS lbllabelcustom WITH ;
		BackStyle = 1, ;
		Caption = "Which Form to Print?", ;
		FontBold = .T., ;
		Left = 40, ;
		Name = "Lbllabelcustom6", ;
		TabIndex = 15, ;
		Top = 238, ;
		ZOrderSet = 30
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSelected' AS lbllabelcustom WITH ;
		Caption = "- 0 Selected", ;
		Left = 288, ;
		Name = "lblSelected", ;
		TabIndex = 28, ;
		Top = 196, ;
		ZOrderSet = 29
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Shpshapecustom1' AS shpshapecustom WITH ;
		Height = 84, ;
		Left = 36, ;
		Name = "Shpshapecustom1", ;
		Top = 17, ;
		Width = 396, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Shpshapecustom2' AS shpshapecustom WITH ;
		Height = 111, ;
		Left = 36, ;
		Name = "Shpshapecustom2", ;
		Top = 120, ;
		Width = 396, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Shpshapecustom3' AS shpshapecustom WITH ;
		Height = 91, ;
		Left = 36, ;
		Name = "Shpshapecustom3", ;
		Top = 317, ;
		Width = 396, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Shpshapecustom4' AS shpshapecustom WITH ;
		Height = 61, ;
		Left = 36, ;
		Name = "Shpshapecustom4", ;
		Top = 244, ;
		Width = 396, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Swrptlook2' AS swrptlook WITH ;
		Left = 156, ;
		Name = "Swrptlook2", ;
		TabIndex = 24, ;
		Top = 432, ;
		Visible = .F., ;
		ZOrderSet = 5, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		txtBegID.clistexpression = wells.cwellid, ;
		txtBegID.clistworkarea = wells, ;
		txtBegID.Name = "txtBegID", ;
		TxtBegName.Name = "TxtBegName", ;
		txtEndID.clistexpression = wells.cwellid, ;
		txtEndID.clistworkarea = wells, ;
		txtEndID.Name = "txtEndID", ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />

	ADD OBJECT 'Swyear1' AS swyear WITH ;
		Height = 20, ;
		Left = 156, ;
		MaxLength = 4, ;
		Name = "Swyear1", ;
		TabIndex = 12, ;
		Top = 135, ;
		Width = 39, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE beforeclose
		LPARAMETERS nCloseReason
		
		TRY 
		FOR lnX = 1 TO 10
		   SET DATASESSION TO lnX  &&  Cycle through all possible datasessions and close the appropriate tables   
		   IF USED('ten99sel')
		      USE IN ten99sel
		   ENDIF
		ENDFOR 
		CATCH
		ENDTRY 
		
		return(DODEFAULT(nCloseReason))
	ENDPROC

	PROCEDURE builddata
		LOCAL tcyear, tntype, tcid1, tcid2, tldotmatrix, tccorrect, tlMask
		
		tcyear    = THISFORM.swyear1.VALUE
		tcwell1   = THISFORM.swrptlook2.txtbegid.VALUE
		tcwell2   = THISFORM.swrptlook2.txtendid.VALUE
		tccorrect = IIF(THISFORM.chkcorrect.VALUE, 'Y', 'N')
		tlbywell  = THISFORM.chklbywell.VALUE
		tlAlign   = THISFORM.chkAlign.VALUE
		tlMask    = THISFORM.chklMask.VALUE
		tlZero1099s = THISFORM.chkzero1099s.VALUE
		
		IF tcyear < '2013' AND THISFORM.chkBlank.VALUE
		   MESSAGEBOX("Blank forms can't be used for years before 2013. You'll need to print on the pre-printed form or print the 1099 Misc Replacement.", 16, 'Blank Forms Not Available')
		   THISFORM.chkBlank.VALUE = .F.
		   THISFORM.chkForms.VALUE = .T.
		   THISFORM.chkBlank.CLICK()
		   RETURN .F.
		ENDIF
		
		IF NOT THISFORM.chk1099Misc.VALUE AND ;
		      NOT THISFORM.chk1099NEC.VALUE
		   MESSAGEBOX('You must choose to either print the 1099 Misc or 1099 NEC forms. Please choose one and print again.',48,'Print 1099s')
		   THISFORM.setnextcontrol(THISFORM.chk1099Misc)
		   RETURN .F.
		ENDIF
		
		IF tccorrect = 'N'
		   SELECT * FROM tax1099 WHERE cyear = tcyear INTO CURSOR temp1099s ORDER BY cid
		ELSE
		   IF THISFORM.chk1099NEC.VALUE
		      SELECT * FROM tax1099Corrections WHERE cyear = tcyear AND lNEC INTO CURSOR temp1099s ORDER BY cid
		   ELSE
		      SELECT * FROM tax1099Corrections WHERE cyear = tcyear AND NOT lNEC INTO CURSOR temp1099s ORDER BY cid
		   ENDIF
		ENDIF
		
		SELECT cid FROM temp1099s WHERE cyear = tcyear INTO CURSOR temp ORDER BY cid
		GO TOP
		tcid1 = cid
		GO BOTT
		tcid2 = cid
		
		THISFORM.ctitle1         = ''
		THISFORM.ctitle2         = ''
		THISFORM.cselectcriteria = ''
		THISFORM.csortorder      = ''
		
		IF tlbywell
		   tntype = 3
		ELSE
		   tntype = 1
		ENDIF
		
		llReturn = .T.
		
		IF tcyear > '2012'
		   * Make sure we have the correct formats
		   * Ignore support status if we're only printing on preprinted forms
		   llReturn = THISFORM.checkformats(tcyear,THISFORM.chkForms.VALUE)
		ENDIF
		
		IF NOT llReturn AND NOT THISFORM.chkForms.VALUE AND NOT FILE('datafiles\ignore1099.txt')
		   RETURN .F.
		ENDIF
		
		* Check on the existence of the application object
		* if it doesn't exist, we're running in development
		* mode and need to initialize the company address info.
		IF TYPE('m.goApp') = 'O'
		   m.cproducer = m.goapp.ccompanyname
		   m.paddr1    = m.goapp.caddress1
		   m.paddr2    = m.goapp.caddress2
		   m.paddr3    = m.goapp.caddress3
		   m.ptax      = cmEncrypt(m.goapp.ctaxid,m.goapp.cEncryptionKey)
		ELSE
		   m.cproducer = 'Test Company'
		   m.paddr1    = 'PO Box 223'
		   m.paddr2    = 'Wooster, OH  44691'
		   m.paddr3    = ''
		   m.ptax      = '99-9999999'
		ENDIF
		
		IF USED('temp1099')
		   USE IN temp1099
		ENDIF
		
		IF NOT tlAlign
		   IF THISFORM.chkselected.VALUE = .T.
		      IF NOT USED('ten99sel')
		         CREATE CURSOR ten99sel ;
		            (cid   C(10))
		         INDEX ON cid TAG cid
		      ENDIF
		   ELSE
		      SELECT cid FROM temp1099s INTO CURSOR ten99sel WHERE BETWEEN(cid,tcid1,tcid2) ORDER BY cid
		   ENDIF
		   IF THISFORM.chk1099Misc.VALUE OR tcyear < '2020'
		      IF THISFORM.chklbywell.VALUE = .T.
		         SELECT  *,  IIF(lcorrected,'Y',tccorrect) AS correct, ;
		            m.paddr1 AS paddr1, ;
		            m.paddr2 AS paddr2, ;
		            m.paddr3 AS paddr3, ;
		            cmEncrypt(ALLTRIM(cwelltax),m.goapp.cEncryptionKey)   AS ptax, ;
		            SPACE(10) AS ccrsno,  ;
		            SPACE(2) AS c1099State,  ;
		            cwellname AS cproducer ;
		            FROM temp1099s ;
		            WHERE cyear = tcyear ;
		            AND cid IN (SELECT  cid ;
		            FROM ten99sel) ;
		            AND BETWEEN(cwellid, tcwell1, tcwell2) ;
		            INTO CURSOR temp1099Misc READWRITE ;
		            ORDER BY cid
		
		         IF NOT tlZero1099s
		            IF tcyear < '2020'
		               DELETE FOR nother = 0 AND nroyalty = 0 AND nattorney = 0 AND nrents = 0 AND nnonemp = 0
		            ELSE
		               DELETE FOR nother = 0 AND nroyalty = 0 AND nattorney = 0 AND nrents = 0
		            ENDIF
		         ENDIF
		      ELSE
		         SELECT  *,  IIF(lcorrected,'Y',tccorrect) AS correct, ;
		            m.paddr1 AS paddr1, ;
		            m.paddr2 AS paddr2, ;
		            m.paddr3 AS paddr3, ;
		            m.ptax   AS ptax, ;
		            SPACE(10) AS ccrsno,  ;
		            SPACE(2) AS c1099State,  ;
		            m.cproducer AS cproducer ;
		            FROM temp1099s ;
		            WHERE cyear = tcyear ;
		            AND cid IN (SELECT  cid ;
		            FROM ten99sel) ;
		            INTO CURSOR temp1099Misc READWRITE ;
		            ORDER BY cid
		
		         IF NOT tlZero1099s
		            IF tcyear < '2020'
		               DELETE FOR nother = 0 AND nroyalty = 0 AND nattorney = 0 AND nrents = 0 AND nnonemp = 0
		            ELSE
		               DELETE FOR nother = 0 AND nroyalty = 0 AND nattorney = 0 AND nrents = 0
		            ENDIF
		         ENDIF
		      ENDIF
		   ENDIF
		   IF THISFORM.chk1099NEC.VALUE
		      IF THISFORM.chklbywell.VALUE = .T.
		         SELECT  *,  IIF(lcorrected,'Y',tccorrect) AS correct, ;
		            m.paddr1 AS paddr1, ;
		            m.paddr2 AS paddr2, ;
		            m.paddr3 AS paddr3, ;
		            cmEncrypt(ALLTRIM(cwelltax),m.goapp.cEncryptionKey)   AS ptax, ;
		            SPACE(10) AS ccrsno,  ;
		            SPACE(2) AS c1099State,  ;
		            cwellname AS cproducer ;
		            FROM temp1099s ;
		            WHERE cyear = tcyear ;
		            AND cid IN (SELECT  cid ;
		            FROM ten99sel) ;
		            AND IIF(NOT tlZero1099s,nnonemp # 0,.T.) ;
		            AND BETWEEN(cwellid, tcwell1, tcwell2) ;
		            INTO CURSOR temp1099NEC READWRITE ;
		            ORDER BY cid
		      ELSE
		         SELECT  *,  IIF(lcorrected,'Y',tccorrect) AS correct, ;
		            m.paddr1 AS paddr1, ;
		            m.paddr2 AS paddr2, ;
		            m.paddr3 AS paddr3, ;
		            m.ptax   AS ptax, ;
		            SPACE(10) AS ccrsno,  ;
		            SPACE(2) AS c1099State,  ;
		            m.cproducer AS cproducer ;
		            FROM temp1099s ;
		            WHERE cyear = tcyear ;
		            AND cid IN (SELECT  cid ;
		            FROM ten99sel) ;
		            AND IIF(NOT tlZero1099s,nnonemp # 0,.T.) ;
		            INTO CURSOR temp1099NEC READWRITE ;
		            ORDER BY cid
		      ENDIF
		   ENDIF
		ELSE
		   swclose('temp1099Misc')
		   swselect('temp1099s')
		   CREATE CURSOR temp1099Misc ;
		      (paddr1    C(30), ;
		      paddr2    C(30), ;
		      paddr3    C(30), ;
		      ptax      C(11), ;
		      correct    C(1), ;
		      ccrsno     C(10), ;
		      cyear      C(4), ;
		      cid        C(10), ;
		      cidtype    C(1), ;
		      cprogcode  C(10), ;
		      cname      C(60), ;
		      cname2     C(60), ;
		      caddr1     C(60), ;
		      caddr2     C(60), ;
		      ccity      C(25), ;
		      cstate     C(2), ;
		      ctaxid     C(11), ;
		      czip        C(10), ;
		      nother      N(12,2), ;
		      nroyalty    N(12,2), ;
		      nnonemp     N(12,2), ;
		      nrents      N(12,2), ;
		      ctype       C(1), ;
		      ctaxstate1  C(2), ;
		      ctaxstate2  C(2), ;
		      nstatetax1   N(12,2), ;
		      cstatepayerno1  C(15), ;
		      nstatetax2    N(12,2), ;
		      nstateincome1 N(12,2), ;
		      nstateincome2 N(12,2), ;
		      cstatepayerno2  C(15), ;
		      nfedtax     N(12,2), ;
		      cwellid     C(10), ;
		      cwellname   C(30), ;
		      cweltax     C(11), ;
		      nattorney  N(12,2), ;
		      c1099State   C(1))
		
		   CREATE CURSOR temp1099NEC ;
		      (paddr1    C(30), ;
		      paddr2    C(30), ;
		      paddr3    C(30), ;
		      ptax      C(11), ;
		      correct    C(1), ;
		      ccrsno     C(10), ;
		      cyear      C(4), ;
		      cid        C(10), ;
		      cidtype    C(1), ;
		      cprogcode  C(10), ;
		      cname      C(60), ;
		      cname2     C(60), ;
		      caddr1     C(60), ;
		      caddr2     C(60), ;
		      ccity      C(25), ;
		      cstate     C(2), ;
		      ctaxid     C(11), ;
		      czip        C(10), ;
		      nother      N(12,2), ;
		      nroyalty    N(12,2), ;
		      nnonemp     N(12,2), ;
		      nrents      N(12,2), ;
		      ctype       C(1), ;
		      ctaxstate1  C(2), ;
		      ctaxstate2  C(2), ;
		      nstatetax1   N(12,2), ;
		      cstatepayerno1  C(15), ;
		      nstatetax2    N(12,2), ;
		      nstateincome1 N(12,2), ;
		      nstateincome2 N(12,2), ;
		      cstatepayerno2  C(15), ;
		      nfedtax     N(12,2), ;
		      cwellid     C(10), ;
		      cwellname   C(30), ;
		      cweltax     C(11), ;
		      nattorney  N(12,2), ;
		      c1099State   C(1))
		
		
		   m.ptax = '99-9999999'  &&  Blank out the company tax ID, so it's not getting put on the alignment sheet that they'll just pitch anyway
		
		   m.cyear     = ALLTRIM(STR(YEAR(DATE())))
		   m.cid       = '99999'
		   m.cidtype   = 'I'
		   m.cprogcode = ''
		   m.cname     = 'Payee #1 Payee #1'
		   m.cname2    = 'Payee #1 Name 2'
		   m.caddr1    = 'Address1 Address1 Address1'
		   m.caddr2    = 'Address2 Address2 Address2'
		   m.ccity     = 'City City City'
		   m.cstate    = 'NC'
		   m.czip      = '99999-9999'
		   m.ctaxid    = '123-45-6789'
		   m.nother    = 999999.99
		   m.nroyalty  = 999999.99
		   m.nrents    = 999999.99
		   m.ctype     = 'N'
		   m.ctaxstate1 = 'TX'
		   m.ctaxstate2 = 'OK'
		   m.nstatetax1 = 999999.99
		   m.nstateincome1 = 9999999.99
		   m.cstatepayerno1 = '12-3456789'
		   m.nstatetax2 = 999999.99
		   m.nstateincome2 = 9999999.99
		   m.cstatepayerno2 = '12-3456789'
		   m.nfedtax   = 999999.99
		   m.cwellid   = ''
		   m.cwellname = ''
		   m.cwelltax  = ''
		   m.nnonemp   = 999999.99
		   m.nattorney = 999999.99
		   m.correct   = 'Y'
		   c1099State  = ''
		
		   INSERT INTO temp1099Misc FROM MEMVAR
		   INSERT INTO temp1099NEC FROM MEMVAR
		   m.cname  = 'Payee #2 Payee #2'
		   m.cname2 = 'Payee #2 Name 2'
		   INSERT INTO temp1099Misc FROM MEMVAR  &&  Second record
		   INSERT INTO temp1099NEC FROM MEMVAR
		
		   IF THISFORM.chk1099NEC.VALUE
		      m.cname  = 'Payee #3 Payee #3'
		      m.cname2 = 'Payee #3 Name 3'
		      INSERT INTO temp1099Misc FROM MEMVAR  &&  Second record
		      INSERT INTO temp1099NEC FROM MEMVAR
		   ENDIF
		ENDIF
		
		swselect('options')
		GO TOP
		lcRevAcct = cRevAcctno
		
		* Fill in the ccrsno field for NM wells
		IF THISFORM.chk1099Misc.VALUE OR tcyear < '2020'
		   SELECT temp1099Misc
		   SCAN FOR c1099State = 'NM'
		      REPLACE ccrsno WITH lcRevAcct
		   ENDSCAN
		ENDIF
		
		IF THISFORM.chk1099NEC.VALUE
		   SELECT temp1099NEC
		   SCAN FOR c1099State = 'NM'
		      REPLACE ccrsno WITH lcRevAcct
		   ENDSCAN
		ENDIF
		
		IF !m.goapp.oSecurity.HasPrivilege('Tax Ids')
		   tlMask = .T.
		ENDIF
		
		
		*  If masking tax ID numbers
		IF tlMask AND NOT tlAlign
		   IF THISFORM.chk1099Misc.VALUE OR tcyear < '2020'
		      SELECT temp1099Misc
		      SCAN
		         REPLACE ctaxid WITH cmEncrypt(ALLTRIM(ctaxid),m.goapp.cEncryptionKey)
		         REPLACE cstatepayerno1 WITH cmEncrypt(ALLTRIM(cstatepayerno1),m.goapp.cEncryptionKey)
		         REPLACE cstatepayerno2 WITH cmEncrypt(ALLTRIM(cstatepayerno2),m.goapp.cEncryptionKey)
		         *  If the 3rd character is a hyphen, it's a Fed ID #, so mask accordingly
		         IF SUBSTR(ctaxid, 3, 1) = '-'
		            REPLACE ctaxid WITH 'XX-XXX' + SUBSTR(ALLTRIM(ctaxid), 7, 4)
		         ENDIF
		         *  If the 4th character is a hyphen, it's a SSN, so mask accordingly
		         IF SUBSTR(ctaxid, 4, 1) = '-'
		            REPLACE ctaxid WITH 'XXX-XX-' + SUBSTR(ALLTRIM(ctaxid), 8, 4)
		         ENDIF
		         *  It's got a number of some kind in it, but it has no hyphens, so put some kind of a mask on it
		         IF NOT '-' $ ctaxid AND LEN(ALLTRIM(ctaxid)) > 8
		            REPLACE ctaxid WITH 'XXXXX' + SUBSTR(ctaxid, 6, 4)
		         ENDIF
		         REPLACE cstatepayerno1 WITH 'xxxxxxxxx'
		         REPLACE cstatepayerno2 WITH 'xxxxxxxxx'
		      ENDSCAN
		   ENDIF
		   IF THISFORM.chk1099NEC.VALUE
		      SELECT temp1099NEC
		      SCAN
		         REPLACE ctaxid WITH cmEncrypt(ALLTRIM(ctaxid),m.goapp.cEncryptionKey)
		         REPLACE cstatepayerno1 WITH cmEncrypt(ALLTRIM(cstatepayerno1),m.goapp.cEncryptionKey)
		         REPLACE cstatepayerno2 WITH cmEncrypt(ALLTRIM(cstatepayerno2),m.goapp.cEncryptionKey)
		         *  If the 3rd character is a hyphen, it's a Fed ID #, so mask accordingly
		         IF SUBSTR(ctaxid, 3, 1) = '-'
		            REPLACE ctaxid WITH 'XX-XXX' + SUBSTR(ALLTRIM(ctaxid), 7, 4)
		         ENDIF
		         *  If the 4th character is a hyphen, it's a SSN, so mask accordingly
		         IF SUBSTR(ctaxid, 4, 1) = '-'
		            REPLACE ctaxid WITH 'XXX-XX-' + SUBSTR(ALLTRIM(ctaxid), 8, 4)
		         ENDIF
		         *  It's got a number of some kind in it, but it has no hyphens, so put some kind of a mask on it
		         IF NOT '-' $ ctaxid AND LEN(ALLTRIM(ctaxid)) > 8
		            REPLACE ctaxid WITH 'XXXXX' + SUBSTR(ctaxid, 6, 4)
		         ENDIF
		         REPLACE cstatepayerno1 WITH 'xxxxxxxxx'
		         REPLACE cstatepayerno2 WITH 'xxxxxxxxx'
		      ENDSCAN
		   ENDIF
		ELSE
		   IF NOT tlAlign AND (THISFORM.chk1099Misc.VALUE OR tcyear < '2020')
		      SELECT temp1099Misc
		      REPLACE ctaxid WITH cmEncrypt(ALLTRIM(ctaxid),m.goapp.cEncryptionKey) ALL
		      REPLACE cstatepayerno1 WITH cmEncrypt(ALLTRIM(cstatepayerno1),m.goapp.cEncryptionKey) ALL
		      REPLACE cstatepayerno2 WITH cmEncrypt(ALLTRIM(cstatepayerno2),m.goapp.cEncryptionKey) ALL
		   ENDIF
		   IF NOT tlAlign AND THISFORM.chk1099NEC.VALUE
		      SELECT temp1099NEC
		      REPLACE ctaxid WITH cmEncrypt(ALLTRIM(ctaxid),m.goapp.cEncryptionKey) ALL
		      REPLACE cstatepayerno1 WITH cmEncrypt(ALLTRIM(cstatepayerno1),m.goapp.cEncryptionKey) ALL
		      REPLACE cstatepayerno2 WITH cmEncrypt(ALLTRIM(cstatepayerno2),m.goapp.cEncryptionKey) ALL
		   ENDIF
		ENDIF
		
		lnMax = 0
		
		IF THISFORM.chk1099Misc.VALUE OR tcyear < '2020'
		   SELECT temp1099Misc
		   lnMax = lnMax + RECCOUNT()
		ENDIF
		IF THISFORM.chk1099NEC.VALUE
		   SELECT temp1099NEC
		   lnMax = lnMax + RECCOUNT()
		ENDIF
		
		IF lnMax > 0
		   RETURN .T.
		ELSE
		   RETURN .F.
		ENDIF
		
		
		
		
		
		
		
		
	ENDPROC

	PROCEDURE checkformats		&& Checks for existence of report formats for the given year and downloads them if necessary.
		LPARAMETERS tcYear, tlIgnoreSupport
		
		LOCAL lcCopy1, lcCopy2, lcCopyB, lcCopyC
		LOCAL llReturn, llUpdate
		
		lcCopy1 = m.goApp.cRptsFolder+'1099s\f1099_Copy1_' + tcYear + '.jpg'
		lcCopy2 = m.goApp.cRptsFolder+'1099s\f1099_Copy2_' + tcYear + '.jpg'
		lcCopyB = m.goApp.cRptsFolder+'1099s\f1099_CopyB_' + tcYear + '.jpg'
		lcCopyC = m.goApp.cRptsFolder+'1099s\f1099_CopyC_' + tcYear + '.jpg'
		
		llReturn = .T.
		llUpdate = .F.
		
		DO CASE
		   CASE NOT FILE(lcCopy1)
		      llUpdate = .T.
		   CASE NOT FILE(lcCopy2)
		      llUpdate = .T.
		   CASE NOT FILE(lcCopyB)
		      llUpdate = .T.
		   CASE NOT FILE(lcCopyC)
		      llUpdate = .T.
		ENDCASE
		
		IF llUpdate
		   llReturn = .f.
		ENDIF 
		
		RETURN llReturn   
		
		 
	ENDPROC

	PROCEDURE disablecopies
		THISFORM.chkCopyB.VISIBLE  = .F.
		THISFORM.chkCopyC.VISIBLE  = .F.
		THISFORM.chkCopy1.VISIBLE  = .F.
		THISFORM.chkCopy2.VISIBLE  = .F.
		THISFORM.lblCopies.VISIBLE = .F.
		THISFORM.chkalign.VISIBLE  = .T.
	ENDPROC

	PROCEDURE enablecopies
		THISFORM.chkCopyB.VISIBLE  = .T.
		THISFORM.chkCopyC.VISIBLE  = .T.
		THISFORM.chkCopy1.VISIBLE  = .T.
		THISFORM.chkCopy2.VISIBLE  = .T.
		THISFORM.lblCopies.VISIBLE = .T.
		THISFORM.chkalign.VISIBLE  = .F.
		THISFORM.chkalign.VALUE    = .F.
	ENDPROC

	PROCEDURE Init
		DODEFAULT()
		*
		*  Initialize the form criteria
		*
		swselect('wells')
		SET ORDER TO cwellid
		GO TOP
		thisform.swrptlook2.txtbegid.value = cwellid
		thisform.swrptlook2.txtBegName.value = cwellname
		GO BOTT
		thisform.swrptlook2.txtEndID.value = cwellid
		thisform.swrptlook2.txtEndName.value = cwellname
		
		swselect('tax1099')
		SET ORDER to CYEAR   && CYEAR
		GO bott
		IF NOT EMPTY(cYear)
		   thisform.swyear1.Value = tax1099.cYear
		else
		   thisform.swyear1.value = STR(YEAR(DATE())-1,4)
		ENDIF 
		
		thisform.chkCorrect.value = .F.
		thisform.chklbywell.value = .f.
		
		create cursor ten99sel ;
		  (cID       C(10))
		  
		  
		
	ENDPROC

	PROCEDURE lookup
	ENDPROC

	PROCEDURE report
		LPARA cButton
		
		LOCAL lnResult, lcAlias, llError
		PRIV lcTitle1, lcTitle2, lcSortOrder, lcSelect, glGrpName, m.cGrpName, llPrinted
		
		* Check for the parameter. If it's not a character we're being called by the toolbar print button
		* Bail out if we got here by the toolbar button.
		IF VARTYPE(cButton) <> 'C'
		   RETURN
		ENDIF
		
		tcYear = thisform.swyear1.Value 
		
		*
		*  Check to see if the requirements for calling this method are met.
		*
		IF TYPE('this.ctitle1') <> 'C'
		   THIS.ctitle1 = ''
		ENDIF
		IF TYPE('this.ctitle2') <> 'C'
		   THIS.ctitle2 = ''
		ENDIF
		
		lcAlias = ALIAS()
		
		llPrinted = .F.
		llError   = .F.
		
		
		*
		*  Check on using group name in place of company name
		*
		swselect('options')
		swselect('groups')
		
		* If the form doesn't have a swgroup control
		* don't try to get the company name from the group
		IF TYPE('thisform.swgroup1') <> 'O'
		   glGrpName = .F.
		ELSE
		   swselect('options')
		   GO TOP
		   glGrpName = lGrpName
		   IF glGrpName
		      swselect('groups')
		      SET ORDER TO cgroup
		* If the Runcombo dropdown exists, and the value isn't New Run, get the group from that
		      IF VARTYPE(THISFORM.RunCombo1) = 'O'  AND THISFORM.RunCombo1.VISIBLE AND THISFORM.RunCombo1.ENABLED
		         IF NOT 'NEW RUN' $ UPPER(THISFORM.RunCombo1.VALUE)
		            IF SEEK(THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID, 4))
		               m.cGrpName = cDesc
		            ELSE
		               m.cGrpName = ''
		            ENDIF
		         ELSE
		            IF SEEK(LEFT(THISFORM.swgroup1.VALUE, 2))
		               m.cGrpName = cDesc
		            ELSE
		               IF LEFT(THISFORM.swgroup1.VALUE, 2) = '**'
		                  m.cGrpName = 'All Companies'
		               ELSE
		                  m.cGrpName = ''
		               ENDIF
		            ENDIF
		         ENDIF
		      ELSE
		         IF SEEK(LEFT(THISFORM.swgroup1.VALUE, 2))
		            m.cGrpName = cDesc
		         ELSE
		            IF LEFT(THISFORM.swgroup1.VALUE, 2) = '**'
		               m.cGrpName = 'All Companies'
		            ELSE
		               m.cGrpName = ''
		            ENDIF
		         ENDIF
		      ENDIF
		   ELSE
		      m.cGrpName = ''
		   ENDIF
		ENDIF
		
		*
		*  Make the cProducer variable a default value for development purposes
		*
		IF TYPE('m.goApp') = 'O'
		   m.cProducer = m.goapp.cCompanyName
		   IF m.goapp.lDemo
		      m.cProducer = 'Demo Version of Software'
		      m.cGrpName  = m.cProducer
		   ENDIF
		ELSE
		   m.cProducer = 'Sample Development Company'
		ENDIF
		
		IF TYPE('m.cProcessor') <> 'C'
		   m.cProcessor = ''
		ENDIF
		
		IF EMPTY(m.cProducer) OR m.cProducer = "''"
		   m.cProducer = 'Sample Development Company'
		ENDIF
		
		lcTitle1    = THISFORM.ctitle1
		lcTitle2    = THISFORM.ctitle2
		lcSortOrder = THISFORM.cSortOrder
		lcSelect    = THISFORM.cSelectCriteria
		
		*
		*  Set defaults for titles and criteria if not in correct format
		*
		IF TYPE('lcTitle1') <> 'C'
		   lcTitle1 = ''
		ENDIF
		IF TYPE('lcTitle2') <> 'C'
		   lcTitle2 = ''
		ENDIF
		IF TYPE('lcSortOrder') <> 'C'
		   lcSortOrder = ''
		ENDIF
		IF TYPE('lcSelect') <> 'C'
		   lcSelect = ''
		ENDIF
		
		SELECT (lcAlias)
		
		* Disable F1 Help
		ON KEY LABEL F1 *
		
		* Disable the picklist key
		ON KEY LABEL F2 *
		
		*
		*  Send the report to the proper location based upon the button pressed.
		*
		DO CASE
		
		   CASE m.cButton = 'P'
		      SET REPORTBEHAVIOR 80
		      TRY
		         IF THISFORM.chk1099Misc.VALUE OR tcYear < '2020'
		            IF THISFORM.chkforms.VALUE
		               THISFORM.creportname = m.goapp.cRptsFolder + '1099s\ten99rptl.frx'
		               REPORT FORM (THIS.creportname) TO PRINTER PROMPT NOCONSOLE NOEJECT
		            ELSE
		               IF THISFORM.chkCOPYB.VALUE
		                  THISFORM.creportname = m.goapp.cRptsFolder + '1099s\ten99rpt_copyb_' + tcYear + '.frx'
		                  REPORT FORM (THIS.creportname) TO PRINTER PROMPT NOCONSOLE NOEJECT
		               ENDIF
		               IF THISFORM.chkCOPYC.VALUE
		                  THISFORM.creportname = m.goapp.cRptsFolder + '1099s\ten99rpt_copyc_' + tcYear + '.frx'
		                  REPORT FORM (THIS.creportname) TO PRINTER PROMPT NOCONSOLE NOEJECT
		               ENDIF
		               IF THISFORM.chkCOPY1.VALUE
		                  THISFORM.creportname = m.goapp.cRptsFolder + '1099s\ten99rpt_copy1_' + tcYear + '.frx'
		                  REPORT FORM (THIS.creportname) TO PRINTER PROMPT NOCONSOLE NOEJECT
		               ENDIF
		               IF THISFORM.chkCOPY2.VALUE
		                  THISFORM.creportname = m.goapp.cRptsFolder + '1099s\ten99rpt_copy2_' + tcYear + '.frx'
		                  REPORT FORM (THIS.creportname) TO PRINTER PROMPT NOCONSOLE NOEJECT
		               ENDIF
		            ENDIF
		         ENDIF
		         IF THISFORM.chk1099NEC.VALUE
		            IF THISFORM.chkforms.VALUE
		               THISFORM.creportname = m.goapp.cRptsFolder + '1099s\ten99NEC.frx'
		               REPORT FORM (THIS.creportname) TO PRINTER PROMPT NOCONSOLE NOEJECT
		            ELSE
		               IF THISFORM.chkCOPYB.VALUE
		                  THISFORM.creportname = m.goapp.cRptsFolder + '1099s\ten99nec_copyb_' + tcYear + '.frx'
		                  REPORT FORM (THIS.creportname) TO PRINTER PROMPT NOCONSOLE NOEJECT
		               ENDIF
		               IF THISFORM.chkCOPYC.VALUE
		                  THISFORM.creportname = m.goapp.cRptsFolder + '1099s\ten99nec_copyc_' + tcYear + '.frx'
		                  REPORT FORM (THIS.creportname) TO PRINTER PROMPT NOCONSOLE NOEJECT
		               ENDIF
		               IF THISFORM.chkCOPY1.VALUE
		                  THISFORM.creportname = m.goapp.cRptsFolder + '1099s\ten99nec_copy1_' + tcYear + '.frx'
		                  REPORT FORM (THIS.creportname) TO PRINTER PROMPT NOCONSOLE NOEJECT
		               ENDIF
		               IF THISFORM.chkCOPY2.VALUE
		                  THISFORM.creportname = m.goapp.cRptsFolder + '1099s\ten99nec_copy2_' + tcYear + '.frx'
		                  REPORT FORM (THIS.creportname) TO PRINTER PROMPT NOCONSOLE NOEJECT
		               ENDIF
		            ENDIF
		         ENDIF
		      CATCH TO loError
		         llError = .T.
		      ENDTRY
		      IF llError
		         DO CASE 
		            CASE loError.ERRORNO = 1958
		               MESSAGEBOX('There was an error loading the printer driver. Make sure you have a valid printer selected or setup as your default printer.', 16, 'Windows Printer Driver Error')
		            CASE loError.Errorno = 1
		               MESSAGEBOX('The report format: ' + ALLTRIM(thisform.creportname) + ' was not found. Download the 1099 formats again from the utilities menu and try again.',48,thisform.Caption)   
		            OTHERWISE 
		               MESSAGEBOX('Error sending the report to the printer.' + CHR(10) + ;
		                  'Error: ' + loError.MESSAGE, 16, 'Report Print Problem')
		         ENDCASE 
		      ENDIF
		
		   CASE m.cButton = 'S'
		      SET REPORTBEHAVIOR 80
		      IF 'Export' $ THISFORM.swrptcriteriabuttons1.cmdPreview.CAPTION
		         IF THISFORM.chkforms.VALUE
		            THISFORM.creportname = m.goapp.cRptsFolder + '1099s\ten99rptl.frx'
		         ELSE
		            IF THISFORM.chkCOPYB.VALUE
		               THISFORM.creportname = m.goapp.cRptsFolder + '1099s\ten99rpt_copyb_' + tcYear + '.frx'
		            ENDIF
		            IF THISFORM.chkCOPYC.VALUE
		               THISFORM.creportname = m.goapp.cRptsFolder + '1099s\ten99rpt_copyc_' + tcYear + '.frx'
		            ENDIF
		            IF THISFORM.chkCOPY1.VALUE
		               THISFORM.creportname = m.goapp.cRptsFolder + '1099s\ten99rpt_copy1_' + tcYear + '.frx'
		            ENDIF
		            IF THISFORM.chkCOPY2.VALUE
		               THISFORM.creportname = m.goapp.cRptsFolder + '1099s\ten99rpt_copy2_' + tcYear + '.frx'
		            ENDIF
		         ENDIF
		         DO FORM exportcsv WITH THISFORM.CAPTION, THISFORM.creportname, lcAlias, lcTitle1, lcTitle2, lcSortOrder, lcSelect
		      ELSE
		         SET REPORTBEHAVIOR 90
		         LOCAL loPreviewContainer, loReportListener
		
		*-- Create the preview container
		         DO (_REPORTPREVIEW) WITH loPreviewContainer
		
		*-- Change some of the defaults
		         loPreviewContainer.CAPTION          = 'Preview '
		         loPreviewContainer.ZoomLevel        = 5 && 100%
		         loPreviewContainer.ToolbarIsVisible = .T.
		
		*-- Create the Report Listener
		         loReportListener              = CREATEOBJECT('GroupListener')
		         loReportListener.LISTENERTYPE = 1 && Preview
		         loReportListener.PRINTJOBNAME = ALLTRIM(THISFORM.CAPTION)
		
		*-- Assign the preview container to the listener
		         loReportListener.PREVIEWCONTAINER = loPreviewContainer
		
		         TRY
		*-- Run the report (with NOWAIT)
		            IF THISFORM.chk1099Misc.VALUE
		               IF THISFORM.chkforms.VALUE
		                  THISFORM.creportname = m.goapp.cRptsFolder + '1099s\ten99rptl.frx'
		                  REPORT FORM (THIS.creportname) TO PRINTER PROMPT OBJECT loReportListener NOWAIT
		               ELSE
		                  lnTotal = 0
		                  IF THISFORM.chkCOPYB.VALUE
		                     lnTotal = lnTotal + 1
		                  ENDIF
		                  IF THISFORM.chkCOPYC.VALUE
		                     lnTotal = lnTotal + 1
		                  ENDIF
		                  IF THISFORM.chkCOPY1.VALUE
		                     lnTotal = lnTotal + 1
		                  ENDIF
		                  IF THISFORM.chkCOPY2.VALUE
		                     lnTotal = lnTotal + 1
		                  ENDIF
		                  IF lnTotal > 1
		                     MESSAGEBOX('The Preview will only display one copy of the form.',64,'Multiple Copies Selected')
		                  ENDIF
		                  llDone = .F.
		                  IF THISFORM.chkCOPYB.VALUE
		                     THISFORM.creportname = m.goapp.cRptsFolder + '1099s\ten99rpt_copyb_' + tcYear + '.frx'
		                     REPORT FORM (THIS.creportname) TO PRINTER PROMPT OBJECT loReportListener NOWAIT
		                     llDone = .T.
		                  ENDIF
		                  IF THISFORM.chkCOPYC.VALUE AND NOT llDone
		                     THISFORM.creportname = m.goapp.cRptsFolder + '1099s\ten99rpt_copyc_' + tcYear + '.frx'
		                     REPORT FORM (THIS.creportname) TO PRINTER PROMPT OBJECT loReportListener NOWAIT
		                     llDone = .T.
		                  ENDIF
		                  IF THISFORM.chkCOPY1.VALUE AND NOT llDone
		                     THISFORM.creportname = m.goapp.cRptsFolder + '1099s\ten99rpt_copy1_' + tcYear + '.frx'
		                     REPORT FORM (THIS.creportname) TO PRINTER PROMPT OBJECT loReportListener NOWAIT
		                     llDone = .T.
		                  ENDIF
		                  IF THISFORM.chkCOPY2.VALUE AND NOT llDone
		                     THISFORM.creportname = m.goapp.cRptsFolder + '1099s\ten99rpt_copy2_' + tcYear + '.frx'
		                     REPORT FORM (THIS.creportname) TO PRINTER PROMPT OBJECT loReportListener NOWAIT
		                     llDone = .T.
		                  ENDIF
		               ENDIF
		            ENDIF
		            IF THISFORM.chk1099NEC.VALUE
		               IF THISFORM.chkforms.VALUE
		                  THISFORM.creportname = m.goapp.cRptsFolder + '1099s\ten99nec.frx'
		                  REPORT FORM (THIS.creportname) TO PRINTER PROMPT OBJECT loReportListener NOWAIT
		               ELSE
		                  lnTotal = 0
		                  IF THISFORM.chkCOPYB.VALUE
		                     lnTotal = lnTotal + 1
		                  ENDIF
		                  IF THISFORM.chkCOPYC.VALUE
		                     lnTotal = lnTotal + 1
		                  ENDIF
		                  IF THISFORM.chkCOPY1.VALUE
		                     lnTotal = lnTotal + 1
		                  ENDIF
		                  IF THISFORM.chkCOPY2.VALUE
		                     lnTotal = lnTotal + 1
		                  ENDIF
		                  IF lnTotal > 1
		                     MESSAGEBOX('The Preview will only display one copy of the form.',64,'Multiple Copies Selected')
		                  ENDIF
		                  llDone = .F.
		                  IF THISFORM.chkCOPYB.VALUE
		                     THISFORM.creportname = m.goapp.cRptsFolder + '1099s\ten99nec_copyb_' + tcYear + '.frx'
		                     REPORT FORM (THIS.creportname) TO PRINTER PROMPT OBJECT loReportListener NOWAIT
		                     llDone = .T.
		                  ENDIF
		                  IF THISFORM.chkCOPYC.VALUE AND NOT llDone
		                     THISFORM.creportname = m.goapp.cRptsFolder + '1099s\ten99nec_copyc_' + tcYear + '.frx'
		                     REPORT FORM (THIS.creportname) TO PRINTER PROMPT OBJECT loReportListener NOWAIT
		                     llDone = .T.
		                  ENDIF
		                  IF THISFORM.chkCOPY1.VALUE AND NOT llDone
		                     THISFORM.creportname = m.goapp.cRptsFolder + '1099s\ten99nec_copy1_' + tcYear + '.frx'
		                     REPORT FORM (THIS.creportname) TO PRINTER PROMPT OBJECT loReportListener NOWAIT
		                     llDone = .T.
		                  ENDIF
		                  IF THISFORM.chkCOPY2.VALUE AND NOT llDone
		                     THISFORM.creportname = m.goapp.cRptsFolder + '1099s\ten99nec_copy2_' + tcYear + '.frx'
		                     REPORT FORM (THIS.creportname) TO PRINTER PROMPT OBJECT loReportListener NOWAIT
		                     llDone = .T.
		                  ENDIF
		               ENDIF
		            ENDIF
		         CATCH TO loError
		            llError = .T.
		         ENDTRY
		         IF llError
		            IF loError.ERRORNO = 1958
		               MESSAGEBOX('There was an error loading the printer driver. Make sure you have a valid printer selected or setup as your default printer.', 16, 'Windows Printer Driver Error')
		            ELSE
		               MESSAGEBOX('Error sending the report to the printer.' + CHR(10) + ;
		                  'Error: ' + loError.MESSAGE, 16, 'Report Print Problem')
		            ENDIF
		         ENDIF
		         IF VARTYPE(loPreviewContainer.oForm) = 'O'
		            loPreviewContainer.oForm.TOOLBAR.DOCK(0) && Dock toolbar at the top
		            loPreviewContainer.oForm.WINDOWSTATE = 2 && Maximize preview
		         ENDIF
		      ENDIF
		ENDCASE
		
		thisform.chkall1099s.Value = .t.
		thisform.chkselected.Value = .f.
		
		
	ENDPROC

	PROCEDURE chk1099Misc.Click
		IF this.Value
		   IF thisform.chkselected.Value
		      thisform.chkselected.Value = .f.
		      thisform.chkall1099s.Value = .t.
		      MESSAGEBOX('Switched to printing all 1099s. Please select the Misc 1099s to print if not all are desired.',64,thisform.Caption)
		   ENDIF 
		   thisform.chk1099NEC.Value = .f.
		ENDIF 
	ENDPROC

	PROCEDURE chk1099NEC.Click
		IF this.Value
		   IF thisform.chkselected.Value
		      thisform.chkselected.Value = .f.
		      thisform.chkall1099s.Value = .t.
		      MESSAGEBOX('Switched to printing all 1099s. Please select the NEC 1099s to print if not all are desired.',64,thisform.Caption)
		   ENDIF 
		   thisform.chk1099Misc.Value = .f.
		ENDIF 
	ENDPROC

	PROCEDURE chk1099NEC.When
		IF thisform.swyear1.Value < '2020'
		   MESSAGEBOX('The 1099 NEC form cannot be printed for years before 2020!',64,thisform.Caption)
		   RETURN .f.
		ENDIF 
	ENDPROC

	PROCEDURE chkAlign.Click
		IF THIS.VALUE
		   IF thisform.chk1099Misc.Value 
		      thisform.oMessage.Display('This option will print a single page with (2) sample 1099s on it for alignment purposes.')
		   ELSE
		      IF thisform.chk1099NEC.Value    
		         thisform.oMessage.Display('This option will print a single page with (3) sample 1099s on it for alignment purposes.')
		      ELSE
		         thisform.oMessage.Display('You must choose either the 1099 Misc or NEC option to print an alignment!')
		         this.Value = .f.
		         RETURN
		      ENDIF
		   ENDIF 
		         
		   THISFORM.swyear1.SET('enabled',.F.)
		   THISFORM.chkSelected.SET('value',.F.)
		   THISFORM.chkCorrect.SET('value',.F.)
		
		   IF THISFORM.chklbyWell.VALUE
		      THISFORM.chklbyWell.SET('value',.F.)
		      THISFORM.chklbyWell.CLICK()
		   ENDIF
		   thisform.chkCorrect.set('enabled',.f.)
		   thisform.chklbyWell.set('enabled',.f.)
		   thisform.chkSelected.set('enabled',.f.)
		   thisform.chklMask.set('value',.f.)
		   thisform.chklmask.set('enabled',.f.)
		ELSE
		   THISFORM.swyear1.SET('enabled',.T.)
		   thisform.chkCorrect.set('enabled',.t.)
		   thisform.chklbyWell.set('enabled',.t.)
		   thisform.chkSelected.set('enabled',.t.)
		   thisform.chklmask.set('enabled',.t.)
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE chkAll1099s.Click
		IF this.value
		   thisform.chkselected.Value = .f.
		   thisform.chklbywell.Visible = .t.
		ELSE
		   thisform.chkSelected.Value = .t.
		ENDIF   
	ENDPROC

	PROCEDURE chkBlank.Click
		IF this.Value
		   thisform.chkforms.Value = .f.
		   thisform.enablecopies()
		ELSE 
		   thisform.disablecopies()
		   thisform.chkForms.Value = .t.
		ENDIF 
	ENDPROC

	PROCEDURE chkCopy1.Click
		IF NOT this.Value AND ;
		   NOT thisform.chkCopyB.Value AND ;
		   NOT thisform.chkCopy2.Value AND ;
		   NOT thisform.chkCopyC.Value 
		   thisform.chkCopyB.value = .t.
		ENDIF 
	ENDPROC

	PROCEDURE chkCopy2.Click
		IF NOT this.Value AND ;
		   NOT thisform.chkCopyB.Value AND ;
		   NOT thisform.chkCopy1.Value AND ;
		   NOT thisform.chkCopyC.Value 
		   thisform.chkCopyB.value = .t.
		ENDIF 
	ENDPROC

	PROCEDURE chkCopyB.Click
		IF NOT this.Value AND ;
		   NOT thisform.chkCopy1.Value AND ;
		   NOT thisform.chkCopy2.Value AND ;
		   NOT thisform.chkCopyC.Value 
		   thisform.chkCopyC.value = .t.
		ENDIF 
	ENDPROC

	PROCEDURE chkCopyC.Click
		IF NOT this.Value AND ;
		   NOT thisform.chkCopy1.Value AND ;
		   NOT thisform.chkCopy2.Value AND ;
		   NOT thisform.chkCopyB.Value 
		   thisform.chkCopyB.value = .t.
		ENDIF 
	ENDPROC

	PROCEDURE chkForms.Click
		IF this.Value
		   thisform.chkblank.Value = .f.
		   thisform.DisableCopies()
		ELSE
		   thisform.chkBlank.Value = .t.
		   thisform.EnableCopies()
		ENDIF   
	ENDPROC

	PROCEDURE chklbyWell.Click
		IF this.value
		      thisform.lblbegwell.visible = .t.
		      thisform.lblendwell.visible = .t.
		      thisform.swrptlook2.visible = .t.
		      thisform.height = 648
		      thisform.swrptcriteriabuttons1.top = 641 - thisform.swrptcriteriabuttons1.height
		ELSE
		   thisform.lblbegwell.visible = .f.
		   thisform.lblendwell.visible = .f.
		   thisform.swrptlook2.visible = .f.
		   thisform.height = 528
		   thisform.swrptcriteriabuttons1.top = thisform.height - thisform.swrptcriteriabuttons1.height - 5
		ENDIF   
		
	ENDPROC

	PROCEDURE chkSelected.Click
		IF this.value
		   llNec = thisform.chk1099NEC.Value 
		   thisform.chkAll1099s.Value = .f.
		   do form commonsource\ten99selected WITH thisform.swyear1.value, .F., .F., llNec  linked
		   lnCount = RECCOUNT('ten99sel')
		   thisform.lblSelected.Caption = "- " + TRANSFORM(lnCount) + " Selected"
		ELSE
		   thisform.chkAll1099s.Value = .t.
		   thisform.lblSelected.Caption = "- 0 Selected"
		ENDIF   
	ENDPROC

	PROCEDURE chkZero1099s.Click
		IF this.Value AND thisform.chkselected.Value
		   MESSAGEBOX('Printing zero amount 1099s requires that all 1099s be printed. Changing the option to print all 1099s.',64,thisform.Caption)
		   thisform.chkall1099s.Value = .t.
		   thisform.chkselected.Value = .f.
		ENDIF 
	ENDPROC

	PROCEDURE Swrptlook2.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		
		lcList = 'cwellid,cwellname'
		
		DO FORM ..\CUSTOM\picklist WITH 'Wells', lcList, 'cwellid', 2
		
		IF llok  &&  If an owner/vendor was selected
		   thisform.swrptlook2.txtbegid.value = cwellid
		   thisform.swrptlook2.txtbegname.value = cwellname
		   thisform.swrptlook2.txtbegid.refresh()
		   thisform.swrptlook2.txtbegname.refresh()
		ENDIF   
		
		
	ENDPROC

	PROCEDURE Swrptlook2.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		
		lcList = 'cwellid,cwellname'
		
		DO FORM ..\CUSTOM\picklist WITH 'Wells', lcList, 'cwellid', 2
		
		IF llok  &&  If an owner/vendor was selected
		   thisform.swrptlook2.txtendid.value = cwellid
		   thisform.swrptlook2.txtendname.value = cwellname
		   thisform.swrptlook2.txtendid.refresh()
		   thisform.swrptlook2.txtendname.refresh()
		ENDIF   
		
		
	ENDPROC

	PROCEDURE Swyear1.Valid
		IF DODEFAULT()
		   IF this.Value < '2013' AND thisform.chkBlank.value
		      MESSAGEBOX("Blank forms can't be used for years before 2013. You'll need to print on the pre-printed form or print the 1099 Misc Replacement.",16,'Blank Forms Not Available')
		      thisform.chkblank.Value = .f.
		      thisform.chkblank.Click()
		      thisform.chkforms.Value = .t.
		   ENDIF
		ENDIF 
	ENDPROC

ENDDEFINE
