*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="dmgraphwellchild.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 200
	Left = 42
	Name = "Dataenvironment"
	Top = 483
	Width = 520

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "glopt", ;
		CursorSource = "glopt", ;
		Database = ..\..\dmpro\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "wellhist", ;
		CursorSource = "wellhist", ;
		Database = ..\..\dmpro\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\..\dmpro\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "options", ;
		CursorSource = "options", ;
		Database = ..\..\dmpro\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor4", ;
		Top = 140, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "groups", ;
		CursorSource = "groups", ;
		Database = ..\..\dmpro\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor5", ;
		Top = 140, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formdmgraphwellchild AS frmformcustom OF "..\custom\cforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="graph1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboGraphType" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdPrint" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Glmaint" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: builddata
		*m: graphit
		*p: cgroup
		*p: cperiod1
		*p: cperiod2
		*p: ctype
		*p: cwell1
		*p: cwell2
		*p: cyear1
		*p: cyear2
		*p: ddate1
		*p: ddate2
		*p: lbymonth
		*p: ngraphby
		*p: nsort
		*p: numsets
	*</DefinedPropArrayMethod>

	Caption = "Well Income/Expense Graphs"
	cgroup = .F.
	cperiod1 = .F.
	cperiod2 = .F.
	ctype = .F.
	cwell1 = .F.
	cwell2 = .F.
	cyear1 = .F.
	cyear2 = .F.
	ddate1 = .F.
	ddate2 = .F.
	DoCreate = .T.
	Height = 509
	lbymonth = .F.
	Name = "FormDmgraphwellchild"
	ngraphby = .F.
	nsort = .F.
	numsets = .F.
	Width = 840
	WindowType = 1

	ADD OBJECT 'cboGraphType' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		Height = 22, ;
		Left = 77, ;
		Name = "cboGraphType", ;
		TabIndex = 2, ;
		Top = 480, ;
		Width = 216
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'cmdOK' AS cmdcommandbuttoncustom WITH ;
		Cancel = .T., ;
		Caption = "\<Close", ;
		Left = 732, ;
		Name = "cmdOK", ;
		TabIndex = 5, ;
		Top = 480
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdPrint' AS cmdcommandbuttoncustom WITH ;
		Caption = "\<Print", ;
		Left = 636, ;
		Name = "cmdPrint", ;
		TabIndex = 4, ;
		Top = 480
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Glmaint' AS glmaint WITH ;
		Height = 24, ;
		Left = 32, ;
		Name = "Glmaint", ;
		Top = 56, ;
		Width = 24
		*< END OBJECT: ClassLib="..\custom\swgl.vcx" BaseClass="custom" />

	ADD OBJECT 'graph1' AS olecontrol WITH ;
		Height = 468, ;
		Left = 0, ;
		Name = "graph1", ;
		TabIndex = 1, ;
		Top = 0, ;
		Width = 840
		*< END OBJECT: BaseClass="olecontrol" OLEObject="c:\windows\syswow64\graphdtc.ocx" Value="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" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Graph Type", ;
		Left = 12, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 3, ;
		Top = 484
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />
	
	PROCEDURE builddata
		LOCAL lcYear1, lcYear2, lcPeriod1, lcPeriod2, ldDate1, ldDate2, lcWellID1, lcWellID2, llByMonth, lcGroup
		LOCAL llNormal, sort1, sort2, ldStartDate, ldEndDate, lcOrderBy, lcGroupBy, llSepClose, lnGraphBy
		
		IF USED('welltmp')
		   USE IN welltmp
		ENDIF
		
		lcYear1    = THISFORM.cYear1
		lcYear2    = THISFORM.cYear2
		lcPeriod1  = THISFORM.cPeriod1
		lcPeriod2  = THISFORM.cPeriod2
		ldDate1    = THISFORM.dDate1
		ldDate2    = THISFORM.dDate2
		lcWellID1  = THISFORM.cwell1
		lcWellID2  = THISFORM.cwell2
		lcType     = thisform.ctype
		llByMonth  = thisform.lbymonth
		lcGroup    = thisform.cGroup
		lnGraphBy  = thisform.nGraphBy
		
		IF glopt.cfybegin <> '01' AND NOT EMPTY(glopt.cfybegin)  &&  If they haven't even opened the G/L options screen, it will be empty, a la Greg
		   llNormal = .F.
		ELSE
		   IF EMPTY(glopt.cfybegin)
		      REPLACE glopt.cfybegin WITH '01'
		   ENDIF
		   llNormal = .T.
		ENDIF
		
		SELE options
		llSepClose = lSepClose
		
		WAIT WIND NOWAIT 'Processing Graphing Request...Please Wait...'
		
		DO CASE
		      *  If Production Year is chosen, but report by month is not
		
		   CASE lnGraphBy = 1 AND llByMonth = .F.
		      sort1 = 'AND BETWEEN(wellhist.hyear + wellhist.hperiod,lcYear1 + lcPeriod1,lcYear2 + lcPeriod2)'
		      *  If Production Year and Report by Month are both chosen
		   CASE lnGraphBy = 1 AND llByMonth = .T.
		      sort1 = 'AND BETWEEN(wellhist.hyear + wellhist.hperiod,lcYear1 + lcPeriod1,lcYear2 + lcPeriod2)'
		
		      *  If Accounting Year is chosen, but Report by Month is not
		   CASE lnGraphBy = 2 AND llByMonth <> .T.
		      IF NOT llNormal
		         ldStartDate = THISFORM.glmaint.getdate(lcYear1,lcPeriod1)
		         ldEndDate = GOMONTH(THISFORM.glmaint.getdate(lcYear2,lcPeriod2),1) - 1
		         sort1 = 'AND BETWEEN(wellhist.hdate,ldStartDate,ldEndDate)'
		      ELSE
		         sort1 = 'AND BETWEEN(STR(YEAR(wellhist.hdate),4) + PADL(ALLTRIM(STR(MONTH(wellhist.hdate),2)),2,"0"),lcYear1 + lcPeriod1,lcYear2 + lcPeriod2)'
		      ENDIF
		
		      *  If Accounting Year and Report by Month are both chosen
		   CASE lnGraphBy = 2 AND llByMonth = .T.
		      IF NOT llNormal
		         ldStartDate = THISFORM.glmaint.getdate(lcYear1,lcPeriod1)
		         ldEndDate = GOMONTH(THISFORM.glmaint.getdate(lcYear2,lcPeriod2),1) - 1
		         sort1 = 'AND BETWEEN(wellhist.hdate,ldStartDate,ldEndDate)'
		      ELSE
		         sort1 = 'AND BETWEEN(STR(YEAR(wellhist.hdate),4) + PADL(ALLTRIM(STR(MONTH(wellhist.hdate),2)),2,"0"),lcYear1 + lcPeriod1,lcYear2 + lcPeriod2)'
		      ENDIF
		
		      *  If Accounting Date is chosen, but Report by Month is not
		   CASE lnGraphBy = 3 AND llByMonth <> .T.
		      sort1 = 'AND BETWEEN(wellhist.hdate,ldDate1,ldDate2)'
		
		      *  If Accounting Date and Report by Month are both chosen
		   CASE lnGraphBy = 3 AND llByMonth = .T.
		      sort1 = 'AND BETWEEN(wellhist.hdate,ldDate1,ldDate2)'
		ENDCASE
		
		      IF llByMonth = .T.
		         lcOrderBY = 'ORDER BY wellhist.cWellID, cYear, cPeriod'
		         lcGroupBy = 'GROUP BY wellhist.cWellID, cYear, cPeriod'
		      ELSE
		         lcOrderBY = 'ORDER BY wellhist.cWellID, cYear '
		         lcGroupBy = 'GROUP BY wellhist.cWellID, cYear'
		      ENDIF
		DO CASE
		      *  If a group is specified
		   CASE lcGroup <> '**'
		      sort2 = 'AND wells.cgroup = SUBSTR(lcGroup,1,2)'
		   OTHERWISE
		      sort2 = 'AND wells.cgroup in(select cgroup from groups)'
		ENDCASE
		
		IF llSepClose
		   DO CASE
		         *  If Production Year is checked and Report by Month is not
		      CASE lnGraphBy = 1 AND llByMonth = .F.
		
		         SELECT wells.cwellname,  ;
		            wells.cgroup,  ;
		            wellhist.cWellID,  ;
		            wellhist.hdate,  ;
		            wellhist.hyear AS cyear,  ;
		            wellhist.hperiod AS cperiod,  ;
		            SUM(wellhist.nroyint) AS nRoyalty, ;
		            SUM(wellhist.nwrkint) AS nWorking, ;
		            SUM(wellhist.ndayson) AS ndayson,  ;
		            SUM(wellhist.ntotbbl) AS ntotbbl,  ;
		            SUM(wellhist.ntotmcf) AS ntotmcf,  ;
		            SUM(wellhist.ngrossgas) AS ngasinc,  ;
		            SUM(wellhist.ngrossoil) AS noilinc,  ;
		            SUM(wellhist.nmiscinc1+wellhist.nmiscinc2) as nmiscinc, ;
		            SUM(wellhist.ntotsalt) as nwaterbbl, ;
		            SUM(wellhist.ntrpinc+wellhist.nothinc) AS ntrpinc,  ;
		            SUM(wellhist.ntotale+nexpcl1+nexpcl2+nexpcl3+nexpcl4+nexpcl5+nexpcla+nexpclb+ntotmktg+wellhist.ngather+wellhist.ncompress) AS ntotale,  ;
		            SUM(wellhist.ntotbbltx1+ntotbbltx2+ntotbbltx3+ntotbbltx4) AS nTotBBLTx,  ;
		            SUM(wellhist.ntotmcftx1+ntotmcftx2+ntotmcftx3+ntotmcftx4) AS nTotMCFTx,  ;
		            SUM(wellhist.ntotothtx1+ntotothtx2+ntotothtx3+ntotothtx4) AS nTotOthTx,  ;
		            wellhist.ngasint,  ;
		            wellhist.noilint  ;
		            FROM wellhist ;
		            JOIN wells ;
		            ON wellhist.cWellID = wells.cWellID ;
		            WHERE BETWEEN(wellhist.cWellID,lcWellID1,lcWellID2)  ;
		            &sort1  ;
		            &sort2  ;
		            INTO CURSOR welltmp1  ;
		            &lcOrderBY ;
		            &lcGroupBy
		
		
		         *  If Production Year and Report by Month are both chosen
		      CASE lnGraphBy = 1 AND llByMonth = .T.
		
		         SELECT wells.cwellname,  ;
		            wells.cgroup,  ;
		            wellhist.cWellID,  ;
		            wellhist.hdate,  ;
		            wellhist.hyear AS cyear,  ;
		            wellhist.hperiod AS cperiod,  ;
		            SUM(wellhist.nroyint) AS nRoyalty, ;
		            SUM(wellhist.nwrkint) AS nWorking, ;
		            SUM(wellhist.ndayson) AS ndayson,  ;
		            SUM(wellhist.ntotbbl) AS ntotbbl,  ;
		            SUM(wellhist.ntotmcf) AS ntotmcf,  ;
		            SUM(wellhist.ngrossgas) AS ngasinc,  ;
		            SUM(wellhist.ngrossoil) AS noilinc,  ;
		            SUM(wellhist.nmiscinc1+wellhist.nmiscinc2) as nmiscinc, ;
		            SUM(wellhist.ntotsalt) as nwaterbbl, ;
		            SUM(wellhist.ntrpinc+wellhist.nothinc) AS ntrpinc,  ;
		            SUM(wellhist.ntotale+nexpcl1+nexpcl2+nexpcl3+nexpcl4+nexpcl5+nexpcla+nexpclb+ntotmktg+wellhist.ngather+wellhist.ncompress) AS ntotale,  ;
		            SUM(wellhist.ntotbbltx1+ntotbbltx2+ntotbbltx3+ntotbbltx4) AS nTotBBLTx,  ;
		            SUM(wellhist.ntotmcftx1+ntotmcftx2+ntotmcftx3+ntotmcftx4) AS nTotMCFTx,  ;
		            SUM(wellhist.ntotothtx1+ntotothtx2+ntotothtx3+ntotothtx4) AS nTotOthTx,  ;
		            wellhist.ngasint,  ;
		            wellhist.noilint  ;
		            FROM wellhist ;
		            JOIN wells ;
		            ON wellhist.cWellID = wells.cWellID ;
		            WHERE BETWEEN(wellhist.cWellID,lcWellID1,lcWellID2)  ;
		            &sort1  ;
		            &sort2  ;
		            INTO CURSOR welltmp1  ;
		            &lcOrderBY  ;
		            &lcGroupBy
		
		         *  If Accounting Year or Accounting Date are chosen, but Report by Month is not
		      CASE (lnGraphBy = 2 OR lnGraphBy = 3) AND llByMonth = .F.
		
		         SELECT wells.cwellname,  ;
		            wells.cgroup,  ;
		            wellhist.cWellID,  ;
		            wellhist.hdate,  ;
		            THISFORM.glmaint.getperiod(wellhist.hdate,.T.) AS cyear,  ;
		            PADL(ALLTRIM(STR(MONTH(wellhist.hdate),2)),2,'0') AS cperiod,  ;
		            SUM(wellhist.nroyint) AS nRoyalty, ;
		            SUM(wellhist.nwrkint) AS nWorking, ;
		            SUM(wellhist.ndayson) AS ndayson,  ;
		            SUM(wellhist.ntotbbl) AS ntotbbl,  ;
		            SUM(wellhist.ntotmcf) AS ntotmcf,  ;
		            SUM(wellhist.ngrossgas) AS ngasinc,  ;
		            SUM(wellhist.ngrossoil) AS noilinc,  ;
		            SUM(wellhist.nmiscinc1+wellhist.nmiscinc2) as nmiscinc, ;
		            SUM(wellhist.ntotsalt) as nwaterbbl, ;
		            SUM(wellhist.ntrpinc+wellhist.nothinc) AS ntrpinc,  ;
		            SUM(wellhist.ntotale+nexpcl1+nexpcl2+nexpcl3+nexpcl4+nexpcl5+nexpcla+nexpclb+ntotmktg+wellhist.ngather+wellhist.ncompress) AS ntotale,  ;
		            SUM(wellhist.ntotbbltx1+ntotbbltx2+ntotbbltx3+ntotbbltx4) AS nTotBBLTx,  ;
		            SUM(wellhist.ntotmcftx1+ntotmcftx2+ntotmcftx3+ntotmcftx4) AS nTotMCFTx,  ;
		            SUM(wellhist.ntotothtx1+ntotothtx2+ntotothtx3+ntotothtx4) AS nTotOthTx,  ;
		            wellhist.ngasint,  ;
		            wellhist.noilint  ;
		            FROM wellhist ;
		            JOIN wells ;
		            ON wellhist.cWellID = wells.cWellID ;
		            WHERE BETWEEN(wells.cWellID,lcWellID1,lcWellID2)  ;
		            &sort1  ;
		            &sort2  ;
		            INTO CURSOR welltmp1  ;
		            &lcOrderBY ;
		            &lcGroupBy
		
		         *  If Accounting Year or Accounting Date are chosen, and Report by Month is, too
		      CASE (lnGraphBy = 2 OR lnGraphBy = 3) AND llByMonth = .T.
		
		         SELECT wells.cwellname,  ;
		            wells.cgroup,  ;
		            wellhist.cWellID,  ;
		            wellhist.hdate,  ;
		            STR(YEAR(wellhist.hdate),4) AS cyear,  ;
		            PADL(ALLTRIM(STR(MONTH(wellhist.hdate),2)),2,'0') AS cperiod,  ;
		            SUM(wellhist.nroyint) AS nRoyalty, ;
		            SUM(wellhist.nwrkint) AS nWorking, ;
		            SUM(wellhist.ndayson) AS ndayson,  ;
		            SUM(wellhist.ntotbbl) AS ntotbbl,  ;
		            SUM(wellhist.ntotmcf) AS ntotmcf,  ;
		            SUM(wellhist.ngrossgas) AS ngasinc,  ;
		            SUM(wellhist.ngrossoil) AS noilinc,  ;
		            SUM(wellhist.nmiscinc1+wellhist.nmiscinc2) as nmiscinc, ;
		            SUM(wellhist.ntotsalt) as nwaterbbl, ;
		            SUM(wellhist.ntrpinc+wellhist.nothinc) AS ntrpinc,  ;
		            SUM(wellhist.ntotale+nexpcl1+nexpcl2+nexpcl3+nexpcl4+nexpcl5+nexpcla+nexpclb+ntotmktg+wellhist.ngather+wellhist.ncompress) AS ntotale,  ;
		            SUM(wellhist.ntotbbltx1+ntotbbltx2+ntotbbltx3+ntotbbltx4) AS nTotBBLTx,  ;
		            SUM(wellhist.ntotmcftx1+ntotmcftx2+ntotmcftx3+ntotmcftx4) AS nTotMCFTx,  ;
		            SUM(wellhist.ntotothtx1+ntotothtx2+ntotothtx3+ntotothtx4) AS nTotOthTx,  ;
		            wellhist.ngasint,  ;
		            wellhist.noilint  ;
		            FROM wellhist ;
		            JOIN wells ;
		            ON wellhist.cWellID = wells.cWellID ;
		            WHERE BETWEEN(wells.cWellID,lcWellID1,lcWellID2)  ;
		            &sort1  ;
		            &sort2  ;
		            INTO CURSOR welltmp1  ;
		            &lcOrderBY  ;
		            &lcGroupBy
		
		   ENDCASE
		ELSE
		   DO CASE
		         *  If Production Year is checked and Report by Month is not
		      CASE lnGraphBy = 1 AND llByMonth = .F.
		
		         SELECT wells.cwellname,  ;
		            wells.cgroup,  ;
		            wellhist.cWellID,  ;
		            wellhist.hdate,  ;
		            wellhist.hyear AS cyear,  ;
		            wellhist.hperiod AS cperiod,  ;
		            SUM(wellhist.nroyint) AS nRoyalty, ;
		            SUM(wellhist.nwrkint) AS nWorking, ;
		            SUM(wellhist.ndayson) AS ndayson,  ;
		            SUM(wellhist.ntotbbl) AS ntotbbl,  ;
		            SUM(wellhist.ntotmcf) AS ntotmcf,  ;
		            SUM(wellhist.ngrossgas) AS ngasinc,  ;
		            SUM(wellhist.ngrossoil) AS noilinc,  ;
		            SUM(wellhist.nmiscinc1+wellhist.nmiscinc2) as nmiscinc, ;
		            SUM(wellhist.ntotsalt) as nwaterbbl, ;
		            SUM(wellhist.ntrpinc+wellhist.nothinc) AS ntrpinc,  ;
		            SUM(wellhist.ntotale+nexpcl1+nexpcl2+nexpcl3+nexpcl4+nexpcl5+nexpcla+nexpclb+ntotmktg+wellhist.ngather+wellhist.ncompress) AS ntotale,  ;
		            SUM(wellhist.ntotbbltx1+ntotbbltx2+ntotbbltx3+ntotbbltx4) AS nTotBBLTx,  ;
		            SUM(wellhist.ntotmcftx1+ntotmcftx2+ntotmcftx3+ntotmcftx4) AS nTotMCFTx,  ;
		            SUM(wellhist.ntotothtx1+ntotothtx2+ntotothtx3+ntotothtx4) AS nTotOthTx,  ;
		            wellhist.ngasint,  ;
		            wellhist.noilint  ;
		            FROM wellhist ;
		            JOIN wells ;
		            ON wellhist.cWellID = wells.cWellID ;
		            WHERE BETWEEN(wellhist.cWellID,lcWellID1,lcWellID2)  ;
		            &sort1  ;
		            &sort2  ;
		            INTO CURSOR welltmp1  ;
		            &lcOrderBY ;
		            &lcGroupBy
		
		
		         *  If Production Year and Report by Month are both chosen
		      CASE lnGraphBy = 1 AND llByMonth = .T.
		
		         SELECT wells.cwellname,  ;
		            wells.cgroup,  ;
		            wellhist.cWellID,  ;
		            wellhist.hdate,  ;
		            wellhist.hyear AS cyear,  ;
		            wellhist.hperiod AS cperiod,  ;
		            SUM(wellhist.nroyint) AS nRoyalty, ;
		            SUM(wellhist.nwrkint) AS nWorking, ;
		            SUM(wellhist.ndayson) AS ndayson,  ;
		            SUM(wellhist.ntotbbl) AS ntotbbl,  ;
		            SUM(wellhist.ntotmcf) AS ntotmcf,  ;
		            SUM(wellhist.ngrossgas) AS ngasinc,  ;
		            SUM(wellhist.ngrossoil) AS noilinc,  ;
		            SUM(wellhist.nmiscinc1+wellhist.nmiscinc2) as nmiscinc, ;
		            SUM(wellhist.ntotsalt) as nwaterbbl, ;
		            SUM(wellhist.ntrpinc+wellhist.nothinc) AS ntrpinc,  ;
		            SUM(wellhist.ntotale+nexpcl1+nexpcl2+nexpcl3+nexpcl4+nexpcl5+nexpcla+nexpclb+ntotmktg+wellhist.ngather+wellhist.ncompress) AS ntotale,  ;
		            SUM(wellhist.ntotbbltx1+ntotbbltx2+ntotbbltx3+ntotbbltx4) AS nTotBBLTx,  ;
		            SUM(wellhist.ntotmcftx1+ntotmcftx2+ntotmcftx3+ntotmcftx4) AS nTotMCFTx,  ;
		            SUM(wellhist.ntotothtx1+ntotothtx2+ntotothtx3+ntotothtx4) AS nTotOthTx,  ;
		            wellhist.ngasint,  ;
		            wellhist.noilint  ;
		            FROM wellhist ;
		            JOIN wells ;
		            ON wellhist.cWellID = wells.cWellID ;
		            WHERE BETWEEN(wellhist.cWellID,lcWellID1,lcWellID2)  ;
		            &sort1  ;
		            &sort2  ;
		            INTO CURSOR welltmp1  ;
		            &lcOrderBY  ;
		            &lcGroupBy
		
		         *  If Accounting Year or Accounting Date are chosen, but Report by Month is not
		      CASE (lnGraphBy = 2 OR lnGraphBy = 3) AND llByMonth = .F.
		
		         SELECT wells.cwellname,  ;
		            wells.cgroup,  ;
		            wellhist.cWellID,  ;
		            wellhist.hdate,  ;
		            THISFORM.glmaint.getperiod(wellhist.hdate,.T.) AS cyear,  ;
		            PADL(ALLTRIM(STR(MONTH(wellhist.hdate),2)),2,'0') AS cperiod,  ;
		            SUM(wellhist.nroyint) AS nRoyalty, ;
		            SUM(wellhist.nwrkint) AS nWorking, ;
		            SUM(wellhist.ndayson) AS ndayson,  ;
		            SUM(wellhist.ntotbbl) AS ntotbbl,  ;
		            SUM(wellhist.ntotmcf) AS ntotmcf,  ;
		            SUM(wellhist.ngrossgas) AS ngasinc,  ;
		            SUM(wellhist.ngrossoil) AS noilinc,  ;
		            SUM(wellhist.nmiscinc1+wellhist.nmiscinc2) as nmiscinc, ;
		            SUM(wellhist.ntotsalt) as nwaterbbl, ;
		            SUM(wellhist.ntrpinc+wellhist.nothinc) AS ntrpinc,  ;
		            SUM(wellhist.ntotale+nexpcl1+nexpcl2+nexpcl3+nexpcl4+nexpcl5+nexpcla+nexpclb+ntotmktg+wellhist.ngather+wellhist.ncompress) AS ntotale,  ;
		            SUM(wellhist.ntotbbltx1+ntotbbltx2+ntotbbltx3+ntotbbltx4) AS nTotBBLTx,  ;
		            SUM(wellhist.ntotmcftx1+ntotmcftx2+ntotmcftx3+ntotmcftx4) AS nTotMCFTx,  ;
		            SUM(wellhist.ntotothtx1+ntotothtx2+ntotothtx3+ntotothtx4) AS nTotOthTx,  ;
		            wellhist.ngasint,  ;
		            wellhist.noilint  ;
		            FROM wellhist ;
		            JOIN wells ;
		            ON wellhist.cWellID = wells.cWellID ;
		            WHERE BETWEEN(wells.cWellID,lcWellID1,lcWellID2)  ;
		            &sort1  ;
		            &sort2  ;
		            INTO CURSOR welltmp1  ;
		            &lcOrderBY ;
		            &lcGroupBy
		
		         *  If Accounting Year or Accounting Date are chosen, and Report by Month is, too
		      CASE (lnGraphBy = 2 OR lnGraphBy = 3) AND llByMonth = .T.
		
		         SELECT wells.cwellname,  ;
		            wells.cgroup,  ;
		            wellhist.cWellID,  ;
		            wellhist.hdate,  ;
		            STR(YEAR(wellhist.hdate),4) AS cyear,  ;
		            PADL(ALLTRIM(STR(MONTH(wellhist.hdate),2)),2,'0') AS cperiod,  ;
		            SUM(wellhist.nroyint) AS nRoyalty, ;
		            SUM(wellhist.nwrkint) AS nWorking, ;
		            SUM(wellhist.ndayson) AS ndayson,  ;
		            SUM(wellhist.ntotbbl) AS ntotbbl,  ;
		            SUM(wellhist.ntotmcf) AS ntotmcf,  ;
		            SUM(wellhist.ngrossgas) AS ngasinc,  ;
		            SUM(wellhist.ngrossoil) AS noilinc,  ;
		            SUM(wellhist.nmiscinc1+wellhist.nmiscinc2) as nmiscinc, ;
		            SUM(wellhist.ntotsalt) as nwaterbbl, ;
		            SUM(wellhist.ntrpinc+wellhist.nothinc) AS ntrpinc,  ;
		            SUM(wellhist.ntotale+nexpcl1+nexpcl2+nexpcl3+nexpcl4+nexpcl5+nexpcla+nexpclb+ntotmktg+wellhist.ngather+wellhist.ncompress) AS ntotale,  ;
		            SUM(wellhist.ntotbbltx1+ntotbbltx2+ntotbbltx3+ntotbbltx4) AS nTotBBLTx,  ;
		            SUM(wellhist.ntotmcftx1+ntotmcftx2+ntotmcftx3+ntotmcftx4) AS nTotMCFTx,  ;
		            SUM(wellhist.ntotothtx1+ntotothtx2+ntotothtx3+ntotothtx4) AS nTotOthTx,  ;
		            wellhist.ngasint,  ;
		            wellhist.noilint  ;
		            FROM wellhist ;
		            JOIN wells ;
		            ON wellhist.cWellID = wells.cWellID ;
		            WHERE BETWEEN(wells.cWellID,lcWellID1,lcWellID2)  ;
		            &sort1  ;
		            &sort2  ;
		            INTO CURSOR welltmp1  ;
		            &lcOrderBY  ;
		            &lcGroupBy
		
		   ENDCASE
		ENDIF
		
		IF USED('welltmp1')
		   USE DBF('welltmp1') AGAIN ALIAS welltmp IN 0
		ENDIF
		
		IF lnGraphBy = 2 AND llByMonth
		   SELECT welltmp
		   SCAN
		      m.hdate   = hdate
		      m.cyear   = THISFORM.glmaint.getperiod(m.hdate,.T.)
		      m.cperiod = THISFORM.glmaint.getperiod(m.hdate)
		      m.nWorking = (ngasinc+noilinc+ntrpinc) - (ntotale+nTotBBLTx+nTotMCFTx+nTotOthTx) - nRoyalty
		      SELECT welltmp
		      REPL cyear   WITH m.cyear, ;
		         cperiod WITH m.cperiod, ;
		         nWorking WITH m.nWorking
		   ENDSCAN
		   IF lnGraphBy = 1
		      SELECT welltmp
		      INDEX ON cWellID+cyear+cperiod TAG wellkey
		   ELSE
		      SELECT welltmp
		      INDEX ON cyear+cWellID+cperiod TAG wellkey
		   ENDIF
		ELSE
		   SELECT welltmp
		   SCAN
		      m.nWorking = (ngasinc+noilinc+ntrpinc) - (ntotale+nTotBBLTx+nTotMCFTx+nTotOthTx) - nRoyalty
		      SELECT welltmp
		      REPL nWorking WITH m.nWorking
		   ENDSCAN
		ENDIF
		
		COUNT FOR NOT DELETED() TO lnCount
		
		WAIT CLEAR
		
		IF lnCount > 0
		   RETURN .T.
		ELSE
		   THISFORM.omessage.warning('There were no records found to graph for this criteria.')
		   RETURN .F.
		ENDIF
		
	ENDPROC

	PROCEDURE Destroy
		ON KEY LABEL ESC
		DODEFAULT()
	ENDPROC

	PROCEDURE graphit
		
		tcType = THISFORM.cType
		
		LOCAL lnCount, lcVar
		
		SELECT cyear FROM welltmp INTO CURSOR tempyear ORDER BY cyear GROUP BY cyear
		lnYears = _TALLY
		
		SELECT cwellid, cwellname FROM welltmp INTO CURSOR tempwell ORDER BY cwellid GROUP BY cwellid
		lnWells = _TALLY
		
		IF lnWells > 14
		   MESSAGEBOX('There are too many wells chosen to graph. The limit is 14 wells.',0,'Too many wells to Graph')
		   RETURN .F.
		ENDIF
		
		THISFORM.graph1.graphType = INT(VAL(THISFORM.cboGraphType.VALUE))
		SELECT welltmp
		THISFORM.graph1.graphTitle = ALLTRIM(m.goapp.ccompanyname)
		
		DO CASE
		   CASE THISFORM.cType = 'R'
		      THISFORM.graph1.lefttitle  = 'Well Revenue $'
		   CASE THISFORM.cType = 'E'
		      THISFORM.graph1.lefttitle  = 'Well Expenses $'
		   CASE THISFORM.cType = 'GR'
		      THISFORM.graph1.lefttitle  = 'Gas Revenue $'
		   CASE THISFORM.cType = 'OR'
		      THISFORM.graph1.lefttitle  = 'Oil Revenue $'
		   CASE THISFORM.cType = 'PR'
		      THISFORM.graph1.lefttitle  = 'Other Revenue $'
		   CASE THISFORM.cType = 'MR'
		      THISFORM.graph1.lefttitle  = 'Misc Revenue $'
		   CASE THISFORM.cType = 'W'
		      THISFORM.graph1.lefttitle  = 'Water Volume (BBL)'
		ENDCASE
		
		DO CASE
		   CASE THISFORM.nGraphBy = 1
		      IF THISFORM.lbymonth
		         THISFORM.graph1.bottomTitle = 'Production Month'
		      ELSE
		         THISFORM.graph1.bottomTitle = 'Production Year'
		      ENDIF
		   CASE THISFORM.nGraphBy = 2
		      IF THISFORM.lbymonth
		         THISFORM.graph1.bottomTitle = 'Accounting Month'
		      ELSE
		         THISFORM.graph1.bottomTitle = 'Accounting Year'
		      ENDIF
		
		   CASE THISFORM.nGraphBy = 3
		      THISFORM.graph1.bottomTitle = 'Date Range: ' = DTOC(THISFORM.ddate1) + '/'+DTOC(THISFORM.ddate2)
		ENDCASE
		
		THISFORM.graph1.NumSets   = lnWells
		IF NOT THISFORM.lbymonth
		   THISFORM.graph1.NumPoints = lnYears
		   IF lnYears > 11
		      THISFORM.graph1.labelEvery = INT(lnYears/6)
		   ELSE
		      THISFORM.graph1.labelEvery = 1
		   ENDIF    
		ELSE
		   THISFORM.graph1.NumPoints = lnYears * 12
		   THISFORM.graph1.labelEvery = INT((lnYears * 12)/6)
		ENDIF
		
		THISFORM.graph1.AUTOINC    = 1
		THISFORM.graph1.background = 15
		THISFORM.graph1.lineStats  = 0
		
		IF lnWells > 4
		   THISFORM.graph1.thickLines = 0
		ELSE
		   THISFORM.graph1.thickLines = 1
		ENDIF
		
		THISFORM.graph1.tickEvery  = 1
		
		lnx = 1
		SELECT tempwell
		SCAN
		   m.cwellid = cwellid
		   THISFORM.graph1.legend(lnx) = ALLTRIM(cwellname)
		   THISFORM.graph1.symbolData  = lnx
		   lny = 1
		   SELECT tempyear
		   SCAN
		      m.cyear = cyear
		      SELECT welltmp
		      SCAN FOR cwellid == m.cwellid AND cyear == m.cyear
		         THISFORM.graph1.ThisSet = lnx
		         DO CASE
		            CASE THISFORM.cType = 'R'
		               THISFORM.graph1.DATA(lny) = ngasinc+noilinc+ntrpinc
		            CASE THISFORM.cType = 'E'
		               THISFORM.graph1.DATA(lny) = ntotale
		            CASE THISFORM.cType = 'GR'
		               THISFORM.graph1.DATA(lny) = ngasinc
		            CASE THISFORM.cType = 'OR'
		               THISFORM.graph1.DATA(lny) = noilinc
		            CASE THISFORM.cType = 'PR'
		               THISFORM.graph1.DATA(lny) = ntrpinc
		            CASE THISFORM.cType = 'MR'
		               THISFORM.graph1.DATA(lny) = nmiscinc
		            CASE THISFORM.cType = 'W'
		               THISFORM.graph1.DATA(lny) = nwaterbbl
		         ENDCASE
		
		         IF THISFORM.lbymonth
		            THISFORM.graph1.LABEL(lny) = cyear+'/'+cperiod
		         ELSE
		            THISFORM.graph1.LABEL(lny) = cyear
		         ENDIF
		         lny = lny + 1
		      ENDSCAN
		   ENDSCAN
		   lnx = lnx + 1
		ENDSCAN
		
		RETURN .T.
		
		
	ENDPROC

	PROCEDURE Init
		LPARAMETERS tcParms
		EXTERNAL ARRAY tcparms
		
		ON KEY LABEL ESC _screen.ActiveForm.release()
		
		thisform.cwell1    = tcParms[7]
		thisform.cwell2    = tcParms[8]
		thisform.cgroup    = tcParms[9]
		thisform.lByMonth  = tcParms[10]
		thisform.cyear1    = tcParms[1]
		thisform.cyear2    = tcParms[2]
		thisform.ctype     = tcParms[11]
		thisform.ddate1    = tcParms[5]
		thisform.ddate2    = tcParms[6]
		thisform.cperiod1  = tcParms[3]
		thisform.cperiod2  = tcParms[4]
		thisform.ngraphby  = tcParms[12]
		
		IF thisform.builddata()
		   IF NOT thisform.graphit()
		      thisform.Release()
		      RETURN .f.
		   ENDIF 
		ELSE
		   thisform.Release()
		   RETURN .f.
		ENDIF    
	ENDPROC

	PROCEDURE cboGraphType.Init
		this.AddListItem('Line Graph',1,1)
		this.AddListItem('6',1,2)
		this.AddListItem('Area 2D',2,1)
		this.AddListItem('8',2,2)
		this.AddListItem('Area 3D',3,1)
		this.AddListItem('14',3,2)
		this.AddListItem('Bar 2D',4,1)
		this.AddListItem('3',4,2)
		this.AddListItem('Bar 3D',5,1)
		this.AddListItem('4',5,2)
		this.ListItemId = 1
		DODEFAULT()
	ENDPROC

	PROCEDURE cboGraphType.InteractiveChange
		IF dodefault()
		   thisform.graphit()
		   thisform.graph1.drawmode = 2
		ENDIF    
	ENDPROC

	PROCEDURE cmdOK.Click
		thisform.Release()
	ENDPROC

	PROCEDURE cmdPrint.Click
		thisform.graph1.PrintInfo(11) = 1
		thisform.graph1.PrintInfo(12) = 1
		thisform.graph1.drawMode = 5
	ENDPROC

ENDDEFINE
