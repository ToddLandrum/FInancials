*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="ten99miscst.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 200
	Left = 40
	Name = "Dataenvironment"
	Top = 235
	Width = 520

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "investor", ;
		CursorSource = "investor", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Order = "cownerid", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "tax1099st", ;
		CursorSource = "tax1099st", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "vendor", ;
		CursorSource = "vendor", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 288, ;
		Name = "Cursor3", ;
		Order = "cvendorid", ;
		Top = 22, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "custownvend", ;
		CursorSource = "custownvend", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor4", ;
		Top = 140, ;
		Width = 101
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor5", ;
		Top = 140, ;
		Width = 101
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS form1099miscst AS frmrptcriteria OF "..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Swyear1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cbostate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklMask" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: lookup
		*p: ctype
	*</DefinedPropArrayMethod>

	Caption = "State 1099 MISC Replacement"
	ctype = .F.
	DataSession = 2
	DoCreate = .T.
	Height = 318
	HelpContextID = 516
	Name = "Form1099miscst"
	Width = 402
	Swrptcriteriabuttons1.CHKEXPORT.Alignment = 0
	Swrptcriteriabuttons1.CHKEXPORT.Name = "CHKEXPORT"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.cmdPreview.Name = "cmdPreview"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 84
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 9
	Swrptcriteriabuttons1.Top = 247
	Swrptcriteriabuttons1.ZOrderSet = 0

	ADD OBJECT 'cbostate' AS cbocomboboxcustom WITH ;
		Height = 20, ;
		Left = 140, ;
		Name = "cbostate", ;
		TabIndex = 1, ;
		Top = 30, ;
		Width = 60
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'chklMask' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Mask Recipient Tax IDs", ;
		Left = 140, ;
		Name = "chklMask", ;
		TabIndex = 8, ;
		Top = 213, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "State", ;
		Left = 103, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 2, ;
		Top = 32
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "Accounting Year:", ;
		Height = 16, ;
		Left = 43, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 4, ;
		Top = 70, ;
		Width = 87, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom3' AS lbllabelcustom WITH ;
		Caption = "Beginning ID:", ;
		Height = 16, ;
		Left = 66, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 6, ;
		Top = 106, ;
		Width = 64, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom4' AS lbllabelcustom WITH ;
		Caption = "Ending ID:", ;
		Height = 16, ;
		Left = 81, ;
		Name = "Lbllabelcustom4", ;
		TabIndex = 7, ;
		Top = 156, ;
		Width = 49, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		Left = 140, ;
		Name = "Swrptlook1", ;
		TabIndex = 5, ;
		Top = 103, ;
		ZOrderSet = 3, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		txtBegID.Name = "txtBegID", ;
		TxtBegName.Name = "TxtBegName", ;
		txtEndID.Name = "txtEndID", ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />

	ADD OBJECT 'Swyear1' AS swyear WITH ;
		Left = 140, ;
		Name = "Swyear1", ;
		TabIndex = 3, ;
		Top = 67, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE builddata
		LOCAL tcYear, tnType, tcID1, tcID2, tlMask
		
		tcYear   = THISFORM.swyear1.VALUE
		tcID1    = THISFORM.swrptlook1.txtBegID.VALUE
		tcID2    = THISFORM.swrptlook1.txtEndID.VALUE
		tcState  = THISFORM.cboState.VALUE
		tlMask    = THISFORM.chklMask.VALUE
		
		THISFORM.cTitle1 = 'For Year: ' + tcYear
		THISFORM.cTitle2 = ''
		THISFORM.cSortOrder = 'ID'
		
		lcDeleted = SET('Deleted')
		SET DELETED ON
		
		* Check on the existence of the application object
		* if it doesn't exist, we're running in development
		* mode and need to initialize the company address info.
		IF TYPE('m.goApp') = 'O'
		   m.cProducer = m.goApp.cCompanyName
		   m.paddr1 = m.goApp.cAddress1
		   m.paddr2 = m.goApp.cAddress2
		   m.paddr3 = m.goApp.cAddress3
		   m.ptaxid   = cmEncrypt(m.goApp.cTaxid,m.goApp.cEncryptionKey)
		   m.pphoneno = m.goApp.cphoneno
		ELSE
		   m.cProducer = 'Developement Company'
		   m.paddr1 = 'PO Box 223'
		   m.paddr2 = 'Wooster, OH  44691'
		   m.paddr3 = ''
		   m.ptaxid   = '99-9999999'
		   m.pphoneno = '330-682-5882'
		ENDIF
		
		SELECT *, ;
		   m.cProducer AS cProducer, ;
		   m.paddr1 AS paddr1, ;
		   m.paddr2 AS paddr2, ;
		   m.paddr3 AS paddr3, ;
		   m.pphoneno AS pphoneno, ;
		   nstatetax AS nstatetax1, ;
		   0000.00 AS nstatetax2, ;
		   c1099state AS ctaxstate1, ;
		   SPACE(2) AS ctaxstate2, ;
		   SPACE(20) AS cstatepayerno1, ;
		   SPACE(20) AS cstatepayerno2, ;
		   tcYear + ' 1099 MISC Replacement' AS cTitle,  ;
		   m.ptaxid   AS ptaxid ;
		   FROM tax1099st ;
		   WHERE BETWEEN(cid, tcID1, tcID2) ;
		   AND c1099state = tcState ;
		   AND cidtype = 'I' ;
		   AND cyear  = tcYear ;
		   INTO CURSOR temp1099 READWRITE ;
		   ORDER BY cid
		
		THISFORM.cReportName = m.goApp.cRptsFolder + '1099s\ten99miscst.frx'
		
		IF !m.goApp.oSecurity.HasPrivilege('Tax Ids')
		   tlMask = .T.
		ENDIF
		
		*  If masking tax ID numbers
		IF tlMask
		   SELECT temp1099
		   SCAN
		      REPLACE cTaxid WITH cmEncrypt(ALLTRIM(cTaxid),m.goApp.cEncryptionKey)
		      *  If the 3rd character is a hyphen, it's a Fed ID #, so mask accordingly
		      IF SUBSTR(cTaxid,3,1) = '-'
		         REPLACE cTaxid WITH 'XX-XXX' + SUBSTR(ALLTRIM(cTaxid),7,4)
		      ENDIF
		      *  If the 4th character is a hyphen, it's a SSN, so mask accordingly
		      IF SUBSTR(cTaxid,4,1) = '-'
		         REPLACE cTaxid WITH 'XXX-XX-' + SUBSTR(ALLTRIM(cTaxid),8,4)
		      ENDIF
		      *  It's got a number of some kind in it, but it has no hyphens, so put some kind of a mask on it
		      IF NOT '-' $ cTaxid AND LEN(ALLTRIM(cTaxid)) > 8
		         REPLACE cTaxid WITH 'XXXXX' + SUBSTR(cTaxid,6,4)
		      ENDIF
		   ENDSCAN
		ELSE
		   SELECT temp1099
		   REPLACE cTaxid WITH cmEncrypt(ALLTRIM(cTaxid),m.goApp.cEncryptionKey) ALL
		ENDIF
		
		SET DELETED &lcDeleted
		
		SELECT temp1099
		IF RECC() > 0
		   RETURN .T.
		ELSE
		   RETURN .F.
		ENDIF
		
		
		
		
	ENDPROC

	PROCEDURE Init
		LPARAMETERS tcType
		
		IF VARTYPE(tcType) # 'C'
		   tcType = 'MISC'
		ENDIF 
		
		IF tcType = 'MISC'
		   thisform.Caption = '1099-Misc State Replacement Form'
		ELSE
		   thisform.Caption = '1099-NEC State Replacement Form'
		ENDIF 
		thisform.cType = tcType
		
		*
		*  Initialize the form criteria
		*
		SELE investor
		SET ORDER TO cownerid
		GO TOP
		thisform.swrptlook1.txtBegID.value = cownerid
		thisform.swrptlook1.txtBegName.value = cownname
		
		GO BOTT
		thisform.swrptlook1.txtEndID.value = cownerid
		thisform.swrptlook1.txtEndName.value = cownname
		
		thisform.swrptlook1.txtBegID.clistworkarea = 'investor'
		thisform.swrptlook1.txtBegID.clistexpression = 'cownerid'
		thisform.swrptlook1.txtEndID.clistworkarea = 'investor'
		thisform.swrptlook1.txtEndID.clistexpression = 'cownerid'
		
		
		SELECT tax1099st
		SET ORDER to CYEAR   && CYEAR
		GO bott
		IF NOT EMPTY(cYear)
		   thisform.swyear1.Value = tax1099st.cYear
		else
		   thisform.swyear1.value = STR(YEAR(DATE())-1,4)
		ENDIF 
		
	ENDPROC

	PROCEDURE lookup
		PARA WhichOne
		
		lcBegEnd = WhichOne
		
		llOK = .T.
		
		IF lcBegEnd = 'BEG'  &&  First Lookup
		   lcBegorEnd = 'THISFORM.swrptlook1.txtBegID.VALUE'
		ELSE
		   lcBegorEnd = 'THISFORM.swrptlook1.txtEndID.VALUE'
		ENDIF
		
		lcList = 'cownerid\Owner ID,cownname\Owner Name'
		lcTable = 'investor'
		
		DO FORM ..\CUSTOM\picklist WITH lcTable, lcList, &lcBegorEnd, 2, .F., .T.
		
		IF llOK  &&  If an owner/vendor was selected
		
		   IF lcBegEnd = 'BEG'  &&  First Lookup
		      THISFORM.swrptlook1.txtBegId.SET('value',investor.cownerid)
		      THISFORM.swrptlook1.txtBegName.SET('value',investor.cownname)
		      THISFORM.setnextcontrol(THISFORM.swrptlook1.txtBegId)
		   ELSE  &&  Second Lookup
		      THISFORM.swrptlook1.txtEndId.SET('value',investor.cownerid)
		      THISFORM.swrptlook1.txtEndName.SET('value',investor.cownname)
		      THISFORM.setnextcontrol(THISFORM.swrptlook1.txtEndId)
		   ENDIF
		
		 
		ELSE
		   IF lcBegEnd = 'BEG'
		      THISFORM.setnextcontrol(THISFORM.swrptlook1.txtBegId)
		   ELSE
		      THISFORM.setnextcontrol(THISFORM.swrptlook1.txtEndId)
		   ENDIF
		   RETURN .F.
		
		ENDIF
		
	ENDPROC

	PROCEDURE cbostate.Init
		
		dodefault()
		
		sele c1099state from tax1099st into array lastate order by c1099state group by c1099state
		
		if _tally > 0
		 
		   for lnx = 1 to _tally
		   
		       this.addlistitem(laState[lnx],lnx)
		   endfor
		   this.listitemid = 1
		endif       
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		THISFORM.LOOKUP('BEG')
		THISFORM.setnextcontrol(this.parent.txtbegid)
		DODEFAULT()
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		THISFORM.LOOKUP('END')
		THISFORM.setnextcontrol(this.parent.txtendid)
		DODEFAULT()
	ENDPROC

	PROCEDURE Swrptlook1.txtBegID.GotFocus
		ON KEY LABEL F2 _screen.activeform.lookup('BEG')
		DODEFAULT()
	ENDPROC

	PROCEDURE Swrptlook1.txtBegID.LostFocus
		ON KEY LABEL F2 *
		DODEFAULT()
	ENDPROC

	PROCEDURE Swrptlook1.txtEndID.GotFocus
		ON KEY LABEL F2 _screen.activeform.lookup('END')
		DODEFAULT()
	ENDPROC

	PROCEDURE Swrptlook1.txtEndID.LostFocus
		ON KEY LABEL F2 *
		DODEFAULT()
	ENDPROC

ENDDEFINE
