*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="lmleaseinfo.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "..\source\appdefs.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Relation1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor10" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor11" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor12" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 487
	Left = 37
	Name = "Dataenvironment"
	Top = 375
	Width = 650

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "landowner", ;
		BufferModeOverride = 5, ;
		CursorSource = "landowner", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor10' AS cursor WITH ;
		Alias = "ami", ;
		CursorSource = "ami", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor10", ;
		Top = 260, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor11' AS cursor WITH ;
		Alias = "landami", ;
		BufferModeOverride = 5, ;
		CursorSource = "landami", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor11", ;
		Top = 260, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor12' AS cursor WITH ;
		Alias = "coa", ;
		CursorSource = "coa", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 430, ;
		Name = "Cursor12", ;
		Top = 260, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "land", ;
		CursorSource = "land", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Order = "cleaseid", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "land1", ;
		CursorSource = "land", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 160, ;
		Name = "Cursor4", ;
		Top = 155, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "leasewell", ;
		BufferModeOverride = 1, ;
		CursorSource = "leasewell", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 322, ;
		Name = "Cursor5", ;
		Top = 150, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "documents", ;
		BufferModeOverride = 5, ;
		CursorSource = "documents", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 448, ;
		Name = "Cursor6", ;
		Top = 38, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor7' AS cursor WITH ;
		Alias = "landform", ;
		BufferModeOverride = 5, ;
		CursorSource = "landform", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 465, ;
		Name = "Cursor7", ;
		Top = 177, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor8' AS cursor WITH ;
		Alias = "audlinks", ;
		BufferModeOverride = 5, ;
		CursorSource = "audlinks", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 13, ;
		Name = "Cursor8", ;
		Top = 166, ;
		Width = 93
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor9' AS cursor WITH ;
		Alias = "leaseprog", ;
		BufferModeOverride = 5, ;
		CursorSource = "leaseprog", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 448, ;
		Name = "Cursor9", ;
		Top = 326, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Relation1' AS relation WITH ;
		ChildAlias = "landowner", ;
		ChildOrder = "cleaseid", ;
		Name = "Relation1", ;
		ParentAlias = "land", ;
		RelationalExpr = "cleaseid"
		*< END OBJECT: BaseClass="relation" />

ENDDEFINE

DEFINE CLASS frmleaseinfod AS frmdatamanagerformcustom OF "..\custom\cforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.chkAmended" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.Shpshapecustom5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.Shpshapecustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.Shpshapecustom7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.Shpshapecustom8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.Shpshapecustom6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.Shpshapecustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.Shpshapecustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.chkDigitized" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.Lblfieldlabelcustom6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.Lblfieldlabelcustom7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.txtAcquired" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.Dpk1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.Txttextboxcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.Lbllabelcustom6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.txtConsolref" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.txtOrigLessor" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.Lblfieldlabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.Lblfieldlabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.Txttextboxcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.Edteditboxcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.Lblfieldlabelcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.Edteditboxcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.Lblfieldlabelcustom5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.cmdFormations" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.lstFormations" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.Lbllabelcustom7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.txtAgent" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.Lblfieldlabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.txtcDeptNo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.txtdConsolDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.txtOwner" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.lblOwner" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.cmdLookOwner" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.lblOwnerName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.cmdAMI" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.lstAMI" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.txtAcctNo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.cmdLookDept" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.lblCdisbacct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.txtrrcdistno" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.txtcrrcleaseno" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.chkLegal" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.txtcComingle" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.txtAcctDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.cmdLookDisbAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.Lbllabelcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.Chkcheckboxcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page1.Lbllabelcustom5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page2.pgfClauses" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page2.pgfClauses.Page1.edtRenewal" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page2.pgfClauses.Page2.edtPooling" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page2.pgfClauses.Page3.edtDepth" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page2.pgfClauses.Page4.edtShutIn" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page2.pgfClauses.Page5.edtORRI" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page2.pgfClauses.Page6.edtFreeGas" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page2.pgfClauses.Page7.edtFreeGas" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page2.pgfClauses.Page8.edtFreeGas" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page2.pgfClauses.Page9.edtFreeGas" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page2.pgfClauses.Page10.edtFreeGas" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page2.chkContDrill" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page2.chkUnitization" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page2.chkLandowner" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page2.chkAssign" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page2.ChkFreeGas" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page2.chkORRI" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page2.chkShutIn" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page2.chkDeptRestrict" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page2.chkPooling" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page2.chkRenewal" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page3.Shpshapecustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page3.Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page3.Shpshapecustom8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page3.Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page3.txtAudLink" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page3.cmdAddURL" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page3.cmdViewURL" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page3.cmdDelURL" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page3.cmdPrograms" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page3.lstPrograms" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page3.lstAudLinks" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page3.edtMlegaldesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page3.edtDescription" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page3.edtParcel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page3.lblMlegaldesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page3.Lblfieldlabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page3.Lblfieldlabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page4.edtComments" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page4.Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page5.cmdLinkDoc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page5.Cmdcommandbuttoncustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page5.cmdRemDoc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page5.cmdTreeno" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page5.lstDocuments" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Pgfpageframecustom1.Page5.Cmdcommandbuttoncustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCleaseid" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCleaseid" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCleasename" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCleasename" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtTownship" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCcounty" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtdleasedate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCcounty" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtdExpires" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCstate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCstate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lblfieldlabelcustom6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtUnique" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtNgrossacres" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblNgrossacres" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtNetDeep" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lblfieldlabelcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtNnetacres" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblNnetacres" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblExpires" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDleasedate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtdrecdate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtNleaseyears" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblNleaseyears" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtNleasemonths" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblNleasemonths" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lstWells" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCrecbook" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCrecbook" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDrecdate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCrecpage" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcInstrument" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lblfieldlabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lblfieldlabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCrecpage" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lblfieldlabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdObligations" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCleasestatus" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCprospect" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboLeaseStatus" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCprospect" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: chkclauses
		*m: loadacctdesc
		*m: loadami
		*m: loadaudlinks
		*m: loadformations
		*m: loadprogs
		*m: loadwells
		*m: setstate
		*m: showobligations
		*m: showopenfile
		*m: upd_caption
		*m: viewdocument
		*m: viewlink
		*p: cleasename
		*p: lalarmmessage
		*p: nactivepage
	*</DefinedPropArrayMethod>

	BackColor = 255,255,255
	Caption = "Lease Information"
	cleasename = 
	clistexpression = land.cleaseid
	cworkarea = Land
	DoCreate = .T.
	Height = 619
	HelpContextID = 362
	lalarmmessage = .F.
	nactivepage = 1
	Name = "FrmLeaseInfod"
	ShowTips = .T.
	Visible = .T.
	Width = 870
	_memberdata = <VFPData>
		<memberdata name="chkclauses" display="chkClauses"/>
		</VFPData>
	cmdatamanager.Name = "cmdatamanager"
	cmdatamanager.TabIndex = 1
	cmdatamanager.ZOrderSet = 0
	cmlookupmanager.Name = "cmlookupmanager"
	Mwresize1.lblHighLight.Name = "lblHighLight"
	Mwresize1.lblShading.Name = "lblShading"
	Mwresize1.Name = "Mwresize1"
	Mwresize1.TabIndex = 2

	ADD OBJECT 'cboLeaseStatus' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		ControlSource = "land.cleasestatus", ;
		Height = 20, ;
		Left = 101, ;
		lrequired = .T., ;
		Margin = 2, ;
		Name = "cboLeaseStatus", ;
		RowSourceType = 0, ;
		TabIndex = 18, ;
		Top = 183, ;
		Width = 155, ;
		ZOrderSet = 49
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'cmdObligations' AS cmdcommandbuttoncustom WITH ;
		Caption = "Lease Obligations", ;
		Height = 48, ;
		Left = 276, ;
		Name = "cmdObligations", ;
		TabIndex = 41, ;
		Top = 149, ;
		Width = 108, ;
		ZOrderSet = 46
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'lblCcounty' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		Caption = "County", ;
		Height = 16, ;
		Left = 29, ;
		Name = "lblCcounty", ;
		TabIndex = 9, ;
		Top = 66, ;
		Width = 36, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblCleaseid' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		Caption = "Lease ID", ;
		Height = 16, ;
		Left = 29, ;
		Name = "lblCleaseid", ;
		TabIndex = 3, ;
		Top = 17, ;
		Width = 44, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblCleasename' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		Caption = "Lease Name", ;
		Height = 16, ;
		Left = 29, ;
		Name = "lblCleasename", ;
		TabIndex = 7, ;
		Top = 41, ;
		Width = 62, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblCleasestatus' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		Caption = "Lease Status", ;
		Height = 16, ;
		Left = 29, ;
		Name = "lblCleasestatus", ;
		TabIndex = 30, ;
		Top = 186, ;
		Width = 66, ;
		ZOrderSet = 47
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblCprospect' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Prospect", ;
		Height = 16, ;
		Left = 262, ;
		Name = "lblCprospect", ;
		TabIndex = 6, ;
		Top = 94, ;
		Width = 45, ;
		ZOrderSet = 48
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblCrecbook' AS lblfieldlabelcustom WITH ;
		Caption = "Book", ;
		Height = 16, ;
		Left = 703, ;
		Name = "lblCrecbook", ;
		TabIndex = 32, ;
		Top = 42, ;
		Width = 26, ;
		ZOrderSet = 36
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblCrecpage' AS lblfieldlabelcustom WITH ;
		Caption = "Page", ;
		Height = 16, ;
		Left = 703, ;
		Name = "lblCrecpage", ;
		TabIndex = 35, ;
		Top = 65, ;
		Width = 26, ;
		ZOrderSet = 42
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblCstate' AS lblfieldlabelcustom WITH ;
		Caption = "State", ;
		Height = 16, ;
		Left = 259, ;
		Name = "lblCstate", ;
		TabIndex = 12, ;
		Top = 69, ;
		Width = 27, ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblDleasedate' AS lblfieldlabelcustom WITH ;
		Caption = "Lease Date", ;
		ForeColor = 0,0,0, ;
		Height = 16, ;
		Left = 436, ;
		Name = "lblDleasedate", ;
		TabIndex = 21, ;
		Top = 17, ;
		Width = 57, ;
		ZOrderSet = 28
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblDrecdate' AS lblfieldlabelcustom WITH ;
		Caption = "Recording Date", ;
		Height = 16, ;
		Left = 653, ;
		Name = "lblDrecdate", ;
		TabIndex = 31, ;
		Top = 17, ;
		Width = 76, ;
		ZOrderSet = 37
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblExpires' AS lblfieldlabelcustom WITH ;
		Caption = "Expires", ;
		ForeColor = 0,0,0, ;
		Height = 16, ;
		Left = 436, ;
		Name = "lblExpires", ;
		TabIndex = 20, ;
		Top = 88, ;
		Width = 38, ;
		ZOrderSet = 27
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lblfieldlabelcustom1' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		AutoSize = .F., ;
		Caption = " Well ID", ;
		Left = 430, ;
		Name = "Lblfieldlabelcustom1", ;
		TabIndex = 43, ;
		Top = 122, ;
		ZOrderSet = 40
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lblfieldlabelcustom2' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		Caption = " Well Name", ;
		Left = 511, ;
		Name = "Lblfieldlabelcustom2", ;
		TabIndex = 44, ;
		Top = 122, ;
		ZOrderSet = 41
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lblfieldlabelcustom3' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		Caption = "API Number", ;
		Left = 738, ;
		Name = "Lblfieldlabelcustom3", ;
		TabIndex = 45, ;
		Top = 122, ;
		ZOrderSet = 43
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lblfieldlabelcustom4' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		Caption = "Net Deep", ;
		Height = 16, ;
		Left = 29, ;
		Name = "Lblfieldlabelcustom4", ;
		TabIndex = 28, ;
		Top = 162, ;
		Width = 46, ;
		ZOrderSet = 24
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lblfieldlabelcustom6' AS lblfieldlabelcustom WITH ;
		Caption = "Unique ID", ;
		Left = 191, ;
		Name = "Lblfieldlabelcustom6", ;
		TabIndex = 40, ;
		Top = 17, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom3' AS lbllabelcustom WITH ;
		Caption = "Inst No", ;
		Left = 658, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 38, ;
		Top = 88, ;
		ZOrderSet = 45
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom6' AS lbllabelcustom WITH ;
		Caption = "Township", ;
		Left = 29, ;
		Name = "Lbllabelcustom6", ;
		TabIndex = 39, ;
		Top = 90, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblNgrossacres' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		Caption = "Gross Acres", ;
		Height = 16, ;
		Left = 29, ;
		Name = "lblNgrossacres", ;
		TabIndex = 27, ;
		Top = 114, ;
		Width = 65, ;
		ZOrderSet = 22
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblNleasemonths' AS lblfieldlabelcustom WITH ;
		Caption = "Lease Term (Mos)", ;
		ForeColor = 0,0,0, ;
		Height = 16, ;
		Left = 436, ;
		Name = "lblNleasemonths", ;
		TabIndex = 24, ;
		Top = 65, ;
		Width = 90, ;
		ZOrderSet = 33
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblNleaseyears' AS lblfieldlabelcustom WITH ;
		Caption = "Lease Term (Yrs)", ;
		ForeColor = 0,0,0, ;
		Height = 16, ;
		Left = 436, ;
		Name = "lblNleaseyears", ;
		TabIndex = 22, ;
		Top = 42, ;
		Width = 88, ;
		ZOrderSet = 31
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblNnetacres' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		Caption = "Net Shallow", ;
		Height = 16, ;
		Left = 29, ;
		Name = "lblNnetacres", ;
		TabIndex = 29, ;
		Top = 138, ;
		Width = 60, ;
		ZOrderSet = 26
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lstWells' AS lstlistboxcustom WITH ;
		ColumnCount = 3, ;
		ColumnWidths = "75,175,125", ;
		FontName = "Courier New", ;
		Height = 68, ;
		Left = 427, ;
		Name = "lstWells", ;
		TabIndex = 42, ;
		Top = 136, ;
		Width = 425, ;
		ZOrderSet = 34
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="listbox" />

	ADD OBJECT 'Pgfpageframecustom1' AS pgfpageframecustom WITH ;
		ErasePage = .T., ;
		Height = 396, ;
		Left = 2, ;
		Name = "Pgfpageframecustom1", ;
		PageCount = 5, ;
		TabIndex = 46, ;
		Top = 216, ;
		Width = 862, ;
		ZOrderSet = 1, ;
		Page1.Caption = "Lease Info", ;
		Page1.Name = "Page1", ;
		Page2.Caption = "Clauses", ;
		Page2.Name = "Page2", ;
		Page3.Caption = "Misc Info", ;
		Page3.Name = "Page3", ;
		Page4.Caption = "Notes", ;
		Page4.Name = "Page4", ;
		Page5.Caption = "Documents", ;
		Page5.Name = "Page5"
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="pageframe" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.chkAmended' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Amended", ;
		ControlSource = "land.lamended", ;
		Left = 756, ;
		Name = "chkAmended", ;
		TabIndex = 13, ;
		Top = 16, ;
		ZOrderSet = 56
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.Chkcheckboxcustom1' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Amended", ;
		ControlSource = "land.lamended", ;
		Left = 775, ;
		Name = "Chkcheckboxcustom1", ;
		TabIndex = 13, ;
		Top = 33, ;
		ZOrderSet = 56
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.chkDigitized' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Digitized", ;
		ControlSource = "land.ldigitized", ;
		Left = 775, ;
		Name = "chkDigitized", ;
		TabIndex = 12, ;
		Top = 15, ;
		ZOrderSet = 56
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.chkLegal' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Legal Matter Pending", ;
		ControlSource = "land.llegal", ;
		ForeColor = 0,0,0, ;
		Left = 646, ;
		Name = "chkLegal", ;
		TabIndex = 11, ;
		Top = 15, ;
		ZOrderSet = 46
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.cmdAMI' AS cmdcommandbuttoncustom WITH ;
		Caption = "AMIs", ;
		Height = 38, ;
		Left = 428, ;
		Name = "cmdAMI", ;
		TabIndex = 41, ;
		Top = 262, ;
		Width = 64
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.cmdFormations' AS cmdcommandbuttoncustom WITH ;
		Caption = "Formations", ;
		Height = 38, ;
		Left = 22, ;
		Name = "cmdFormations", ;
		TabIndex = 40, ;
		Top = 260, ;
		Width = 64
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.cmdLookDept' AS cmdcommandbuttoncustom WITH ;
		Caption = "Dept", ;
		FontName = "Arial", ;
		FontSize = 8, ;
		Height = 20, ;
		Left = 465, ;
		Name = "cmdLookDept", ;
		TabIndex = 6, ;
		TabStop = .F., ;
		Top = 116, ;
		Width = 53, ;
		ZOrderSet = 42
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.cmdLookDisbAcct' AS swlookupbutton WITH ;
		Left = 254, ;
		Name = "cmdLookDisbAcct", ;
		TabIndex = 4, ;
		Top = 116
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.cmdLookOwner' AS swlookupbutton WITH ;
		Left = 226, ;
		Name = "cmdLookOwner", ;
		TabIndex = 20, ;
		Top = 150, ;
		Visible = .T.
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.Dpk1' AS dpk WITH ;
		ControlSource = "land.dacquired", ;
		Height = 20, ;
		Left = 657, ;
		Name = "Dpk1", ;
		TabIndex = 35, ;
		Top = 211, ;
		Width = 84
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.Edteditboxcustom1' AS edteditboxcustom WITH ;
		ControlSource = "land.cprimadd", ;
		Height = 64, ;
		Left = 22, ;
		Name = "Edteditboxcustom1", ;
		TabIndex = 1, ;
		Top = 28, ;
		Width = 288
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="editbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.Edteditboxcustom2' AS edteditboxcustom WITH ;
		ControlSource = "land.cmailadd", ;
		Height = 64, ;
		Left = 333, ;
		Name = "Edteditboxcustom2", ;
		TabIndex = 2, ;
		Top = 28, ;
		Width = 288
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="editbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.lblCdisbacct' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Expense Account for Pmts", ;
		Height = 16, ;
		Left = 31, ;
		Name = "lblCdisbacct", ;
		TabIndex = 10, ;
		Top = 118, ;
		Width = 131
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.Lblfieldlabelcustom1' AS lblfieldlabelcustom WITH ;
		Caption = "Consolidation Reference", ;
		Height = 16, ;
		Left = 31, ;
		Name = "Lblfieldlabelcustom1", ;
		TabIndex = 9, ;
		Top = 197, ;
		Width = 120, ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.Lblfieldlabelcustom2' AS lblfieldlabelcustom WITH ;
		Caption = "Consolidation Recorded", ;
		Height = 16, ;
		Left = 31, ;
		Name = "Lblfieldlabelcustom2", ;
		TabIndex = 17, ;
		Top = 219, ;
		Width = 116, ;
		ZOrderSet = 31
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.Lblfieldlabelcustom3' AS lblfieldlabelcustom WITH ;
		Caption = "Original Lessor", ;
		Height = 16, ;
		Left = 31, ;
		Name = "Lblfieldlabelcustom3", ;
		TabIndex = 8, ;
		Top = 174, ;
		Width = 75, ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.Lblfieldlabelcustom4' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		Caption = "Primary Address", ;
		Left = 26, ;
		Name = "Lblfieldlabelcustom4", ;
		TabIndex = 38, ;
		Top = 11
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.Lblfieldlabelcustom5' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		Caption = "Mailing Address", ;
		Left = 336, ;
		Name = "Lblfieldlabelcustom5", ;
		TabIndex = 39, ;
		Top = 11
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.Lblfieldlabelcustom6' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		Caption = "Acquired From", ;
		Left = 646, ;
		Name = "Lblfieldlabelcustom6", ;
		TabIndex = 32, ;
		Top = 151
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.Lblfieldlabelcustom7' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		Caption = "Acquired Date", ;
		Left = 646, ;
		Name = "Lblfieldlabelcustom7", ;
		TabIndex = 33, ;
		Top = 191
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "RRC Comingle", ;
		Left = 425, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 31, ;
		Top = 211, ;
		ZOrderSet = 61
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.Lbllabelcustom3' AS lbllabelcustom WITH ;
		Caption = "Partner", ;
		Comment = "P", ;
		Left = 645, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 36, ;
		Top = 81
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.Lbllabelcustom4' AS lbllabelcustom WITH ;
		Caption = "RRC Lease No", ;
		Left = 424, ;
		Name = "Lbllabelcustom4", ;
		TabIndex = 29, ;
		Top = 158, ;
		ZOrderSet = 50
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.Lbllabelcustom5' AS lbllabelcustom WITH ;
		Caption = "RRC District No", ;
		Left = 425, ;
		Name = "Lbllabelcustom5", ;
		TabIndex = 30, ;
		Top = 184, ;
		ZOrderSet = 51
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.Lbllabelcustom6' AS lbllabelcustom WITH ;
		Caption = "Bill Partner", ;
		Left = 645, ;
		Name = "Lbllabelcustom6", ;
		TabIndex = 37, ;
		Top = 107
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.Lbllabelcustom7' AS lbllabelcustom WITH ;
		Caption = "Agent", ;
		Left = 645, ;
		Name = "Lbllabelcustom7", ;
		TabIndex = 18, ;
		Top = 55, ;
		ZOrderSet = 54
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.lblOwner' AS lbllabelcustom WITH ;
		Caption = "Surface Owner", ;
		Left = 31, ;
		Name = "lblOwner", ;
		TabIndex = 21, ;
		Top = 152, ;
		Visible = .T.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.lblOwnerName' AS lbllabelcustom WITH ;
		Caption = " ", ;
		Left = 261, ;
		Name = "lblOwnerName", ;
		TabIndex = 22, ;
		Top = 150
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.lstAMI' AS lstlistboxcustom WITH ;
		Height = 99, ;
		Left = 499, ;
		Name = "lstAMI", ;
		TabIndex = 43, ;
		Top = 259, ;
		Width = 300
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="listbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.lstFormations' AS lstlistboxcustom WITH ;
		Height = 99, ;
		Left = 93, ;
		Name = "lstFormations", ;
		TabIndex = 42, ;
		Top = 257, ;
		Width = 300
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="listbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.Shpshapecustom1' AS shpshapecustom WITH ;
		BackColor = 240,240,240, ;
		Height = 114, ;
		Left = 9, ;
		Name = "Shpshapecustom1", ;
		Top = 247, ;
		Width = 401, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.Shpshapecustom2' AS shpshapecustom WITH ;
		BackColor = 240,240,240, ;
		Height = 96, ;
		Left = 638, ;
		Name = "Shpshapecustom2", ;
		Top = 145, ;
		Width = 213, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.Shpshapecustom3' AS shpshapecustom WITH ;
		BackColor = 240,240,240, ;
		Height = 101, ;
		Left = 9, ;
		Name = "Shpshapecustom3", ;
		Top = 6, ;
		Width = 625, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.Shpshapecustom4' AS shpshapecustom WITH ;
		BackColor = 240,240,240, ;
		Height = 134, ;
		Left = 638, ;
		Name = "Shpshapecustom4", ;
		Top = 6, ;
		Width = 213, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.Shpshapecustom5' AS shpshapecustom WITH ;
		BackColor = 240,240,240, ;
		BackStyle = 1, ;
		Height = 96, ;
		Left = 9, ;
		Name = "Shpshapecustom5", ;
		Top = 145, ;
		Width = 401, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.Shpshapecustom6' AS shpshapecustom WITH ;
		BackColor = 255,255,255, ;
		Height = 96, ;
		Left = 417, ;
		Name = "Shpshapecustom6", ;
		Top = 145, ;
		Width = 216, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.Shpshapecustom7' AS shpshapecustom WITH ;
		BackColor = 240,240,240, ;
		Height = 114, ;
		Left = 416, ;
		Name = "Shpshapecustom7", ;
		Top = 247, ;
		Width = 433, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.Shpshapecustom8' AS shpshapecustom WITH ;
		BackColor = 240,240,240, ;
		Height = 32, ;
		Left = 9, ;
		Name = "Shpshapecustom8", ;
		Top = 110, ;
		Width = 625, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.txtAcctDesc' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 287, ;
		Name = "txtAcctDesc", ;
		TabIndex = 5, ;
		Top = 116, ;
		Width = 154
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.txtAcctNo' AS txtquickfill WITH ;
		clistexpression = coa.cacctno, ;
		clistworkarea = coa, ;
		ControlSource = "land.cacctno", ;
		Height = 20, ;
		Left = 166, ;
		MaxLength = 6, ;
		Name = "txtAcctNo", ;
		TabIndex = 3, ;
		Top = 116, ;
		Width = 76
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.txtAcquired' AS txttextboxcustom WITH ;
		ControlSource = "land.cacquired", ;
		Height = 20, ;
		Left = 657, ;
		Name = "txtAcquired", ;
		TabIndex = 34, ;
		Top = 166, ;
		Width = 192
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.txtAgent' AS txttextboxcustom WITH ;
		ControlSource = "land.cagent", ;
		Height = 20, ;
		Left = 703, ;
		Name = "txtAgent", ;
		TabIndex = 14, ;
		Top = 52, ;
		Width = 144, ;
		ZOrderSet = 55
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.txtcComingle' AS txttextboxcustom WITH ;
		ControlSource = "land.ccomingle", ;
		Height = 20, ;
		Left = 508, ;
		Margin = 1, ;
		MaxLength = 20, ;
		Name = "txtcComingle", ;
		TabIndex = 28, ;
		Top = 209, ;
		Width = 114, ;
		ZOrderSet = 46
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.txtcDeptNo' AS txtquickfill WITH ;
		clistexpression = cdeptno, ;
		clistworkarea = gldept, ;
		ControlSource = "land.cdeptno", ;
		FontName = "Courier New", ;
		FontSize = 8, ;
		Format = "K!", ;
		Height = 20, ;
		InputMask = "", ;
		Left = 525, ;
		MaxLength = 8, ;
		Name = "txtcDeptNo", ;
		SelectOnEntry = .T., ;
		TabIndex = 7, ;
		Top = 116, ;
		Width = 68, ;
		ZOrderSet = 33
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.txtConsolref' AS txttextboxcustom WITH ;
		ControlSource = "land.cconsolref", ;
		Height = 20, ;
		Left = 187, ;
		Margin = 1, ;
		MaxLength = 20, ;
		Name = "txtConsolref", ;
		TabIndex = 24, ;
		Top = 195, ;
		Width = 148, ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.txtcrrcleaseno' AS txttextboxcustom WITH ;
		ControlSource = "land.crrcleaseno", ;
		Height = 20, ;
		Left = 508, ;
		Margin = 1, ;
		MaxLength = 20, ;
		Name = "txtcrrcleaseno", ;
		TabIndex = 26, ;
		Top = 154, ;
		Width = 114, ;
		ZOrderSet = 45
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.txtdConsolDate' AS dpk WITH ;
		ControlSource = "land.dconsoldate", ;
		Height = 20, ;
		Left = 187, ;
		lnocurrentdate = .T., ;
		Name = "txtdConsolDate", ;
		TabIndex = 25, ;
		Top = 217, ;
		Width = 75, ;
		ZOrderSet = 59
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.txtOrigLessor' AS txttextboxcustom WITH ;
		ControlSource = "land.coriglessor", ;
		Height = 20, ;
		Left = 187, ;
		Margin = 1, ;
		MaxLength = 20, ;
		Name = "txtOrigLessor", ;
		TabIndex = 23, ;
		Top = 172, ;
		Width = 148, ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.txtOwner' AS txtquickfill WITH ;
		clistexpression = investor.cownerid, ;
		clistworkarea = investor, ;
		ControlSource = "land.csurfowner", ;
		Format = "!", ;
		Height = 20, ;
		Left = 118, ;
		MaxLength = 10, ;
		Name = "txtOwner", ;
		TabIndex = 19, ;
		Top = 150, ;
		Visible = .T., ;
		Width = 96
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.txtrrcdistno' AS txttextboxcustom WITH ;
		ControlSource = "land.crrcdistno", ;
		Height = 20, ;
		Left = 508, ;
		Margin = 1, ;
		MaxLength = 20, ;
		Name = "txtrrcdistno", ;
		TabIndex = 27, ;
		Top = 182, ;
		Width = 114, ;
		ZOrderSet = 44
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.Txttextboxcustom1' AS txttextboxcustom WITH ;
		ControlSource = "land.cpartner", ;
		Height = 20, ;
		Left = 703, ;
		Name = "Txttextboxcustom1", ;
		TabIndex = 15, ;
		Top = 79, ;
		Width = 122, ;
		ZOrderSet = 55
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page1.Txttextboxcustom2' AS txttextboxcustom WITH ;
		ControlSource = "land.npartpct", ;
		Height = 20, ;
		InputMask = "999.99", ;
		Left = 703, ;
		Name = "Txttextboxcustom2", ;
		TabIndex = 16, ;
		Top = 106, ;
		Width = 80, ;
		ZOrderSet = 55
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page2.chkAssign' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Assignment", ;
		ControlSource = "land.lassignment", ;
		Left = 10, ;
		Name = "chkAssign", ;
		TabIndex = 11, ;
		Top = 336, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page2.chkContDrill' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Continuous Drilling", ;
		ControlSource = "land.lcontinuous", ;
		Left = 10, ;
		Name = "chkContDrill", ;
		TabIndex = 8, ;
		Top = 240, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page2.chkDeptRestrict' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Depth Restriction", ;
		ControlSource = "land.ldepthrestrict", ;
		Left = 10, ;
		Name = "chkDeptRestrict", ;
		TabIndex = 4, ;
		Top = 112, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page2.ChkFreeGas' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Free Gas", ;
		ControlSource = "land.lfreegas", ;
		Left = 10, ;
		Name = "ChkFreeGas", ;
		TabIndex = 7, ;
		Top = 208, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page2.chkLandowner' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Landowner App", ;
		ControlSource = "land.lloapprove", ;
		Left = 10, ;
		Name = "chkLandowner", ;
		TabIndex = 10, ;
		Top = 304, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page2.chkORRI' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "ORRI", ;
		ControlSource = "land.lorri", ;
		Left = 10, ;
		Name = "chkORRI", ;
		TabIndex = 6, ;
		Top = 176, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page2.chkPooling' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Pooling", ;
		ControlSource = "land.lpooling", ;
		Left = 10, ;
		Name = "chkPooling", ;
		TabIndex = 3, ;
		Top = 80, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page2.chkRenewal' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Renewal", ;
		ControlSource = "land.lrenewal", ;
		Left = 10, ;
		Name = "chkRenewal", ;
		TabIndex = 2, ;
		Top = 48, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page2.chkShutIn' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Shut-In", ;
		ControlSource = "land.lshutin", ;
		Left = 10, ;
		Name = "chkShutIn", ;
		TabIndex = 5, ;
		Top = 144, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page2.chkUnitization' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Unitization", ;
		ControlSource = "land.lunitization", ;
		Left = 10, ;
		Name = "chkUnitization", ;
		TabIndex = 9, ;
		Top = 272, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page2.pgfClauses' AS pgfpageframecustom WITH ;
		ErasePage = .T., ;
		Height = 328, ;
		Left = 119, ;
		Name = "pgfClauses", ;
		PageCount = 10, ;
		TabIndex = 1, ;
		TabOrientation = 0, ;
		Top = 28, ;
		Width = 684, ;
		Page1.Caption = "Renewal", ;
		Page1.Name = "Page1", ;
		Page10.Caption = "Assignment", ;
		Page10.Name = "Page10", ;
		Page2.Caption = "Pooling", ;
		Page2.Name = "Page2", ;
		Page3.Caption = "Depth", ;
		Page3.Name = "Page3", ;
		Page4.Caption = "Shut-In", ;
		Page4.Name = "Page4", ;
		Page5.Caption = "ORRI", ;
		Page5.Name = "Page5", ;
		Page6.Caption = "Free Gas", ;
		Page6.Name = "Page6", ;
		Page7.Caption = "Cont Drilling", ;
		Page7.Name = "Page7", ;
		Page8.Caption = "Unitization", ;
		Page8.Name = "Page8", ;
		Page9.Caption = "Landowner", ;
		Page9.Name = "Page9"
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="pageframe" />

	ADD OBJECT 'Pgfpageframecustom1.Page2.pgfClauses.Page1.edtRenewal' AS edteditboxcustom WITH ;
		ControlSource = "land.mrenewal", ;
		Height = 274, ;
		Left = 9, ;
		Name = "edtRenewal", ;
		Top = 8, ;
		Width = 662
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="editbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page2.pgfClauses.Page10.edtFreeGas' AS edteditboxcustom WITH ;
		ControlSource = "land.massignment", ;
		Height = 274, ;
		Left = 8, ;
		Name = "edtFreeGas", ;
		Top = 9, ;
		Width = 662
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="editbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page2.pgfClauses.Page2.edtPooling' AS edteditboxcustom WITH ;
		ControlSource = "land.mpoolnotes", ;
		Height = 274, ;
		Left = 8, ;
		Name = "edtPooling", ;
		Top = 9, ;
		Width = 662
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="editbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page2.pgfClauses.Page3.edtDepth' AS edteditboxcustom WITH ;
		ControlSource = "land.mdepthnotes", ;
		Height = 274, ;
		Left = 8, ;
		Name = "edtDepth", ;
		Top = 9, ;
		Width = 662
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="editbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page2.pgfClauses.Page4.edtShutIn' AS edteditboxcustom WITH ;
		ControlSource = "land.mshutnotes", ;
		Height = 274, ;
		Left = 8, ;
		Name = "edtShutIn", ;
		Top = 9, ;
		Width = 662
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="editbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page2.pgfClauses.Page5.edtORRI' AS edteditboxcustom WITH ;
		ControlSource = "land.morrinotes", ;
		Height = 274, ;
		Left = 8, ;
		Name = "edtORRI", ;
		Top = 9, ;
		Width = 662
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="editbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page2.pgfClauses.Page6.edtFreeGas' AS edteditboxcustom WITH ;
		ControlSource = "land.mfreegas", ;
		Height = 274, ;
		Left = 8, ;
		Name = "edtFreeGas", ;
		Top = 9, ;
		Width = 662
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="editbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page2.pgfClauses.Page7.edtFreeGas' AS edteditboxcustom WITH ;
		ControlSource = "land.mcontinuous", ;
		Height = 274, ;
		Left = 8, ;
		Name = "edtFreeGas", ;
		Top = 9, ;
		Width = 662
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="editbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page2.pgfClauses.Page8.edtFreeGas' AS edteditboxcustom WITH ;
		ControlSource = "land.munitization", ;
		Height = 274, ;
		Left = 8, ;
		Name = "edtFreeGas", ;
		Top = 9, ;
		Width = 662
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="editbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page2.pgfClauses.Page9.edtFreeGas' AS edteditboxcustom WITH ;
		ControlSource = "land.mloapprove", ;
		Height = 274, ;
		Left = 8, ;
		Name = "edtFreeGas", ;
		Top = 9, ;
		Width = 662
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="editbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page3.cmdAddURL' AS cmdcommandbuttoncustom WITH ;
		Caption = "Add", ;
		Height = 23, ;
		Left = 771, ;
		Name = "cmdAddURL", ;
		TabIndex = 11, ;
		Top = 262, ;
		Width = 36
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Pgfpageframecustom1.Page3.cmdDelURL' AS cmdcommandbuttoncustom WITH ;
		Caption = "", ;
		Height = 23, ;
		Left = 771, ;
		Name = "cmdDelURL", ;
		Picture = ..\graphics\delete.bmp, ;
		TabIndex = 12, ;
		Top = 315, ;
		Width = 36
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Pgfpageframecustom1.Page3.cmdPrograms' AS cmdcommandbuttoncustom WITH ;
		Caption = "Prog/Partnership", ;
		Height = 21, ;
		Left = 451, ;
		Name = "cmdPrograms", ;
		OLEDragMode = 0, ;
		TabIndex = 8, ;
		Top = 152, ;
		Width = 102
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Pgfpageframecustom1.Page3.cmdViewURL' AS cmdcommandbuttoncustom WITH ;
		Caption = "View", ;
		Height = 23, ;
		Left = 771, ;
		Name = "cmdViewURL", ;
		TabIndex = 13, ;
		Top = 291, ;
		Width = 36
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Pgfpageframecustom1.Page3.edtDescription' AS edteditboxcustom WITH ;
		ControlSource = "land.mdescription", ;
		Height = 92, ;
		Left = 451, ;
		Name = "edtDescription", ;
		TabIndex = 5, ;
		Top = 43, ;
		Width = 360, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="editbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page3.edtMlegaldesc' AS edteditboxcustom WITH ;
		ControlSource = "land.mlegaldesc", ;
		Height = 92, ;
		Left = 51, ;
		Name = "edtMlegaldesc", ;
		TabIndex = 4, ;
		Top = 43, ;
		Width = 360, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="editbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page3.edtParcel' AS edteditboxcustom WITH ;
		ControlSource = "land.mparcel", ;
		Height = 64, ;
		Left = 51, ;
		Name = "edtParcel", ;
		TabIndex = 6, ;
		Top = 173, ;
		Width = 360, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="editbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page3.Lblfieldlabelcustom1' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Lot/Description", ;
		Height = 16, ;
		Left = 451, ;
		Name = "Lblfieldlabelcustom1", ;
		TabIndex = 2, ;
		Top = 25, ;
		Width = 74, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Pgfpageframecustom1.Page3.Lblfieldlabelcustom2' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Parcel", ;
		Height = 16, ;
		Left = 51, ;
		Name = "Lblfieldlabelcustom2", ;
		TabIndex = 3, ;
		Top = 157, ;
		Width = 32, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Pgfpageframecustom1.Page3.Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Auditor Web URLS", ;
		Left = 51, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 7, ;
		Top = 265
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Pgfpageframecustom1.Page3.lblMlegaldesc' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Legal Description", ;
		Height = 16, ;
		Left = 51, ;
		Name = "lblMlegaldesc", ;
		TabIndex = 1, ;
		Top = 25, ;
		Width = 85, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Pgfpageframecustom1.Page3.lstAudLinks' AS lstlistboxcustom WITH ;
		ControlSource = "", ;
		Height = 56, ;
		Left = 147, ;
		Name = "lstAudLinks", ;
		TabIndex = 14, ;
		Top = 286, ;
		Width = 615
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="listbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page3.lstPrograms' AS lstlistboxcustom WITH ;
		Height = 72, ;
		Left = 451, ;
		Name = "lstPrograms", ;
		TabIndex = 9, ;
		Top = 173, ;
		Width = 355
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="listbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page3.Shpshapecustom1' AS shpshapecustom WITH ;
		Height = 101, ;
		Left = 17, ;
		Name = "Shpshapecustom1", ;
		Top = 151, ;
		Width = 826, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Pgfpageframecustom1.Page3.Shpshapecustom2' AS shpshapecustom WITH ;
		Height = 96, ;
		Left = 16, ;
		Name = "Shpshapecustom2", ;
		Top = 256, ;
		Width = 827, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Pgfpageframecustom1.Page3.Shpshapecustom8' AS shpshapecustom WITH ;
		Height = 128, ;
		Left = 17, ;
		Name = "Shpshapecustom8", ;
		Top = 17, ;
		Width = 826, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Pgfpageframecustom1.Page3.txtAudLink' AS txttextboxcustom WITH ;
		ControlSource = "", ;
		Height = 20, ;
		Left = 147, ;
		Name = "txtAudLink", ;
		TabIndex = 10, ;
		Top = 263, ;
		Width = 615
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page4.edtComments' AS edteditboxcustom WITH ;
		ControlSource = "land.mcomments", ;
		Height = 302, ;
		Left = 33, ;
		Name = "edtComments", ;
		Top = 37, ;
		Width = 804
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="editbox" />

	ADD OBJECT 'Pgfpageframecustom1.Page4.Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Lease Notes", ;
		Left = 34, ;
		Name = "Lbllabelcustom1", ;
		Top = 20
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Pgfpageframecustom1.Page5.Cmdcommandbuttoncustom3' AS cmdcommandbuttoncustom WITH ;
		Caption = "View Doc", ;
		Height = 36, ;
		Left = 766, ;
		Name = "Cmdcommandbuttoncustom3", ;
		Top = 119, ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Pgfpageframecustom1.Page5.Cmdcommandbuttoncustom4' AS cmdcommandbuttoncustom WITH ;
		Caption = "Show Paths", ;
		Height = 36, ;
		Left = 765, ;
		Name = "Cmdcommandbuttoncustom4", ;
		Top = 212, ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Pgfpageframecustom1.Page5.cmdLinkDoc' AS cmdcommandbuttoncustom WITH ;
		Caption = "Link Doc", ;
		Height = 36, ;
		Left = 766, ;
		Name = "cmdLinkDoc", ;
		Top = 71, ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Pgfpageframecustom1.Page5.cmdRemDoc' AS cmdcommandbuttoncustom WITH ;
		Caption = "Remove Doc", ;
		Height = 36, ;
		Left = 766, ;
		Name = "cmdRemDoc", ;
		Top = 167, ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Pgfpageframecustom1.Page5.cmdTreeno' AS cmdcommandbuttoncustom WITH ;
		Caption = "Treeno", ;
		Height = 36, ;
		Left = 765, ;
		Name = "cmdTreeno", ;
		Top = 260, ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Pgfpageframecustom1.Page5.lstDocuments' AS lstlistboxcustom WITH ;
		BoundColumn = 2, ;
		Height = 312, ;
		Left = 19, ;
		Name = "lstDocuments", ;
		Top = 32, ;
		Width = 732
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="listbox" />

	ADD OBJECT 'Shpshapecustom1' AS shpshapecustom WITH ;
		BackColor = 240,240,240, ;
		Height = 111, ;
		Left = 420, ;
		Name = "Shpshapecustom1", ;
		Top = 6, ;
		Width = 216, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Shpshapecustom2' AS shpshapecustom WITH ;
		BackColor = 240,240,240, ;
		Height = 205, ;
		Left = 5, ;
		Name = "Shpshapecustom2", ;
		Top = 6, ;
		Width = 409, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Shpshapecustom3' AS shpshapecustom WITH ;
		BackColor = 240,240,240, ;
		Height = 90, ;
		Left = 420, ;
		Name = "Shpshapecustom3", ;
		Top = 119, ;
		Width = 444, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'Shpshapecustom4' AS shpshapecustom WITH ;
		BackColor = 240,240,240, ;
		Height = 111, ;
		Left = 641, ;
		Name = "Shpshapecustom4", ;
		Top = 6, ;
		Width = 223, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'txtCcounty' AS txttextboxcustom WITH ;
		ControlSource = "land.ccounty", ;
		Height = 20, ;
		Left = 101, ;
		Margin = 1, ;
		MaxLength = 20, ;
		Name = "txtCcounty", ;
		TabIndex = 10, ;
		Top = 63, ;
		Width = 148, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcInstrument' AS txttextboxcustom WITH ;
		ControlSource = "land.cinstrument", ;
		Height = 20, ;
		Left = 701, ;
		Margin = 1, ;
		MaxLength = 20, ;
		Name = "txtcInstrument", ;
		SpecialEffect = 1, ;
		TabIndex = 37, ;
		Top = 88, ;
		Width = 147, ;
		ZOrderSet = 39
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCleaseid' AS txttextboxcustom WITH ;
		AutoCompSource = "", ;
		ControlSource = "land.cleaseid", ;
		Format = "!", ;
		Height = 20, ;
		HelpContextID = 80, ;
		InputMask = "", ;
		Left = 101, ;
		lrequired = .T., ;
		Margin = 1, ;
		MaxLength = 10, ;
		Name = "txtCleaseid", ;
		TabIndex = 4, ;
		Top = 15, ;
		Width = 78, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCleasename' AS txttextboxcustom WITH ;
		ControlSource = "land.cleasename", ;
		Height = 20, ;
		Left = 101, ;
		lrequired = .T., ;
		Margin = 1, ;
		MaxLength = 40, ;
		Name = "txtCleasename", ;
		TabIndex = 8, ;
		Top = 39, ;
		Width = 294, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCprospect' AS txttextboxcustom WITH ;
		ControlSource = "land.cprospect", ;
		Height = 20, ;
		Left = 263, ;
		Margin = 1, ;
		MaxLength = 40, ;
		Name = "txtCprospect", ;
		TabIndex = 15, ;
		Top = 117, ;
		Width = 146, ;
		ZOrderSet = 50
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCrecbook' AS txttextboxcustom WITH ;
		ControlSource = "land.crecbook", ;
		Height = 20, ;
		Left = 737, ;
		Margin = 1, ;
		MaxLength = 10, ;
		Name = "txtCrecbook", ;
		SpecialEffect = 1, ;
		TabIndex = 34, ;
		Top = 42, ;
		Width = 78, ;
		ZOrderSet = 35
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCrecpage' AS txttextboxcustom WITH ;
		ControlSource = "land.crecpage", ;
		Height = 20, ;
		Left = 737, ;
		Margin = 1, ;
		MaxLength = 10, ;
		Name = "txtCrecpage", ;
		SpecialEffect = 1, ;
		TabIndex = 36, ;
		Top = 65, ;
		Width = 78, ;
		ZOrderSet = 38
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCstate' AS txttextboxcustom WITH ;
		ControlSource = "land.cstate", ;
		Format = "K!", ;
		Height = 20, ;
		InputMask = "AA", ;
		Left = 289, ;
		Margin = 1, ;
		MaxLength = 2, ;
		Name = "txtCstate", ;
		TabIndex = 11, ;
		Top = 66, ;
		Width = 25, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtdExpires' AS dpk WITH ;
		ControlSource = "land.dexpires", ;
		Height = 20, ;
		Left = 517, ;
		lnocurrentdate = .T., ;
		Name = "txtdExpires", ;
		SpecialEffect = 1, ;
		TabIndex = 26, ;
		Top = 88, ;
		Width = 75, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtdleasedate' AS dpk WITH ;
		ControlSource = "land.dleasedate", ;
		Height = 20, ;
		Left = 517, ;
		lnocurrentdate = .T., ;
		Name = "txtdleasedate", ;
		SpecialEffect = 1, ;
		TabIndex = 19, ;
		Top = 17, ;
		Width = 75, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtdrecdate' AS dpk WITH ;
		ControlSource = "land.drecdate", ;
		Height = 20, ;
		Left = 740, ;
		lnocurrentdate = .T., ;
		Name = "txtdrecdate", ;
		SpecialEffect = 1, ;
		TabIndex = 33, ;
		Top = 17, ;
		Width = 75, ;
		ZOrderSet = 29
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtNetDeep' AS txttextboxcustom WITH ;
		ControlSource = "land.nnetdeep", ;
		Height = 20, ;
		InputMask = "9,999,999.9999", ;
		Left = 101, ;
		Margin = 1, ;
		Name = "txtNetDeep", ;
		TabIndex = 17, ;
		Top = 159, ;
		Width = 151, ;
		ZOrderSet = 23
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtNgrossacres' AS txttextboxcustom WITH ;
		ControlSource = "land.ngrossacre", ;
		Height = 20, ;
		InputMask = "9,999,999.9999", ;
		Left = 101, ;
		Margin = 1, ;
		Name = "txtNgrossacres", ;
		TabIndex = 14, ;
		Top = 111, ;
		Width = 151, ;
		ZOrderSet = 21
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtNleasemonths' AS txttextboxcustom WITH ;
		ControlSource = "land.nleasemonths", ;
		Height = 20, ;
		InputMask = "9999", ;
		Left = 547, ;
		Margin = 1, ;
		Name = "txtNleasemonths", ;
		SpecialEffect = 1, ;
		TabIndex = 25, ;
		Top = 65, ;
		Width = 45, ;
		ZOrderSet = 32
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtNleaseyears' AS txttextboxcustom WITH ;
		ControlSource = "land.nleaseyears", ;
		Height = 20, ;
		InputMask = "999", ;
		Left = 547, ;
		Margin = 1, ;
		Name = "txtNleaseyears", ;
		SpecialEffect = 1, ;
		TabIndex = 23, ;
		Top = 42, ;
		Width = 45, ;
		ZOrderSet = 30
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtNnetacres' AS txttextboxcustom WITH ;
		ControlSource = "land.nnetacres", ;
		Height = 20, ;
		InputMask = "9,999,999.9999", ;
		Left = 101, ;
		Margin = 1, ;
		Name = "txtNnetacres", ;
		TabIndex = 16, ;
		Top = 135, ;
		Width = 151, ;
		ZOrderSet = 25
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtTownship' AS txttextboxcustom WITH ;
		ControlSource = "land.ctownship", ;
		Height = 20, ;
		Left = 101, ;
		Name = "txtTownship", ;
		TabIndex = 13, ;
		Top = 87, ;
		Width = 151, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtUnique' AS txttextboxcustom WITH ;
		ControlSource = "land.cunique", ;
		Format = "!", ;
		Height = 22, ;
		Left = 251, ;
		Name = "txtUnique", ;
		TabIndex = 5, ;
		Top = 14, ;
		Width = 144, ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE Activate
		LOCAL llReturn, loError
		llReturn = .T.
		
		TRY
		   IF DODEFAULT()
		      THISFORM.loadwells()
		      THISFORM.loadformations()
		      THISFORM.loadacctdesc()
		      THISFORM.loadami()
		   ENDIF
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'Activate', loError.LINENO, 'Lease Info-d', loError.ERRORNO, loError.MESSAGE
		   MESSAGEBOX('Unable to process the lease information at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
	ENDPROC

	PROCEDURE chkclauses
		LOCAL llReturn, loError
		llReturn = .T.
		
		TRY
		   IF land.lrenewal
		      THISFORM.pgfpageframecustom1.page2.pgfClauses.page1.ENABLED = .T.
		   ELSE
		      THISFORM.pgfpageframecustom1.page2.pgfClauses.page1.ENABLED = .F.
		   ENDIF
		   IF land.lpooling
		      THISFORM.pgfpageframecustom1.page2.pgfClauses.page2.ENABLED = .T.
		   ELSE
		      THISFORM.pgfpageframecustom1.page2.pgfClauses.page2.ENABLED = .F.
		   ENDIF
		   IF land.ldepthrestrict
		      THISFORM.pgfpageframecustom1.page2.pgfClauses.page3.ENABLED = .T.
		   ELSE
		      THISFORM.pgfpageframecustom1.page2.pgfClauses.page3.ENABLED = .F.
		   ENDIF
		   IF land.lshutin
		      THISFORM.pgfpageframecustom1.page2.pgfClauses.page4.ENABLED = .T.
		   ELSE
		      THISFORM.pgfpageframecustom1.page2.pgfClauses.page4.ENABLED = .F.
		   ENDIF
		   IF land.lorri
		      THISFORM.pgfpageframecustom1.page2.pgfClauses.page5.ENABLED = .T.
		   ELSE
		      THISFORM.pgfpageframecustom1.page2.pgfClauses.page5.ENABLED = .F.
		   ENDIF
		   IF land.lfreegas
		      THISFORM.pgfpageframecustom1.page2.pgfClauses.page6.ENABLED = .T.
		   ELSE
		      THISFORM.pgfpageframecustom1.page2.pgfClauses.page6.ENABLED = .F.
		   ENDIF
		   IF land.lcontinuous
		      THISFORM.pgfpageframecustom1.page2.pgfClauses.page7.ENABLED = .T.
		   ELSE
		      THISFORM.pgfpageframecustom1.page2.pgfClauses.page7.ENABLED = .F.
		   ENDIF
		   IF land.lunitization
		      THISFORM.pgfpageframecustom1.page2.pgfClauses.page8.ENABLED = .T.
		   ELSE
		      THISFORM.pgfpageframecustom1.page2.pgfClauses.page8.ENABLED = .F.
		   ENDIF
		   IF land.lloapprove
		      THISFORM.pgfpageframecustom1.page2.pgfClauses.page9.ENABLED = .T.
		   ELSE
		      THISFORM.pgfpageframecustom1.page2.pgfClauses.page9.ENABLED = .F.
		   ENDIF
		   IF land.lassignment
		      THISFORM.pgfpageframecustom1.page2.pgfClauses.page10.ENABLED = .T.
		   ELSE
		      THISFORM.pgfpageframecustom1.page2.pgfClauses.page10.ENABLED = .F.
		   ENDIF
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'chkClauses', loError.LINENO, 'Lease Info-d', loError.ERRORNO, loError.MESSAGE
		   MESSAGEBOX('Unable to process the report at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
	ENDPROC

	PROCEDURE Destroy
		m.goStateManager.OpenToolbar('tbrMainToolBar')
		DODEFAULT()
	ENDPROC

	PROCEDURE find
		LPARAMETERS cWorkarea, cExpr
		
		LOCAL llReturn, loError
		llReturn = .T.
		
		TRY
		   LOCAL lcList, lnRecNo
		   PRIV llOK
		
		   m.gostatemanager.openform('lmsearch.scx')
		
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'Find', loError.LINENO, 'Lease Info-d', loError.ERRORNO, loError.MESSAGE
		   MESSAGEBOX('Unable to process the report at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
		
		
	ENDPROC

	PROCEDURE Init
		LPARAMETERS lcLeaseID
		
		LOCAL llReturn, loError
		llReturn = .T.
		
		TRY
		   IF DODEFAULT()
		* If we're in demo mode, tell the user that this is an optional module
		      IF m.goapp.ldemo
		         THISFORM.omessage.warning('The Land Management module is an optional module that can be purchased separately.' + ;
		              ' It is included in the demo for evaluation purposes.')
		      ENDIF
		
		      THISFORM.pgfpageframecustom1.PAGECOUNT = 5
		
		      IF VARTYPE(lcLeaseID) = 'C'
		         swselect('land')
		         SEEK(lcLeaseID)
		         THISFORM.loadWells()
		         THISFORM.loadformations()
		         THISFORM.loadacctdesc()
		         THISFORM.loadami()
		         THISFORM.CAPTION = 'Lease Information - (' + ALLTRIM(land.cleasename) + ')'
		      ENDIF
		
		      IF NOT m.goapp.lAMVersion
		         THISFORM.pgfpageframecustom1.page1.lblcdisbacct.VISIBLE    = .F.
		         THISFORM.pgfpageframecustom1.page1.txtacctDesc.VISIBLE     = .F.
		         THISFORM.pgfpageframecustom1.page1.txtAcctNo.VISIBLE       = .F.
		         THISFORM.pgfpageframecustom1.page1.cmdlookDisbAcct.VISIBLE = .F.
		         THISFORM.pgfpageframecustom1.page1.cmdlookDept.VISIBLE     = .F.
		      ENDIF
		
		      IF m.goApp.lDocuments
		         thisform.AddObject('oFileDialog','sffiledialog')
		         thisform.pgfpageframecustom1.PageCount = 5
		      ELSE
		         thisform.pgfpageframecustom1.PageCount = 4
		      ENDIF    
		      
		   ENDIF
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'Init', loError.LINENO, 'Lease Info-d', loError.ERRORNO, loError.MESSAGE
		   MESSAGEBOX('Unable to process the lease information at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
	ENDPROC

	PROCEDURE list
		LPARAMETERS cWorkarea
		LOCAL lnFieldCount
		LOCAL lcList, llReturn, lnRecNo, loError
		PRIVATE llOK
		llOK = .F.
		
		llReturn = .T.
		
		TRY
		   DO CASE
		      CASE FILE('datafiles\knoxlist.txt')
		         lcList       = 'cleaseid\Lease ID,cleasename\Lease Name, cUnique\Unique ID, cCounty\County, cTownship\Township, cprospect\Prospect'
		         lnFieldCount = 6
		      CASE FILE('datafiles\nwlist.txt')
		         lcList       = 'cleaseid\Lease ID,cleasename\Lease Name, cUnique\Unique ID, cCounty\County, cTownship\Township, cprospect\Prospect'
		         lnFieldCount = 6
		      OTHERWISE
		         lcList       = 'cleaseid\Lease ID,cleasename\Lease Name, cTownship\Township, cprospect\Prospect'
		         lnFieldCount = 4
		   ENDCASE
		
		   IF THIS.flushcontrolbuffer() AND THIS.beforenav('Land')
		      SELECT land
		      lnRecNo = RECNO()
		
		      DO FORM ..\CUSTOM\picklist WITH 'Land', lcList, 'cleaseid', lnFieldCount, .F., .T.
		
		      IF NOT llOK
		         SELECT land
		         GOTO lnRecNo
		      ELSE
		         THISFORM.loadwells()
		         THISFORM.loadformations()
		         THISFORM.loadacctdesc()
		         THISFORM.loadami()
		         THISFORM.loadprogs()
		         THISFORM.upd_caption()
		         THISFORM.loadaudlinks()
		      ENDIF
		   ENDIF
		   THISFORM.REFRESH()
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'List', loError.LINENO, 'Lease Info-d', loError.ERRORNO, loError.MESSAGE
		   MESSAGEBOX('Unable to process the list at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
		
	ENDPROC

	PROCEDURE Load
		IF DODEFAULT()
		   IF m.goapp.lAMVersion
		      swselect('gldept')
		   ENDIF
		ENDIF 
	ENDPROC

	PROCEDURE loadacctdesc
		LOCAL lcLeaseID
		LOCAL llReturn, loError
		
		llReturn = .T.
		
		TRY
		   lcLeaseID = land.cleaseid
		
		   swselect('coa')
		   SET ORDER TO acctno
		   IF SEEK(land.cacctno)
		      THISFORM.pgfpageframecustom1.page1.txtaCCTDESC.VALUE = coa.cacctdesc
		   ELSE
		      THISFORM.pgfpageframecustom1.page1.txtaCCTDESC.VALUE = ''
		   ENDIF
		
		   THISFORM.pgfpageframecustom1.page1.txtaCCTDESC.REFRESH()
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'LoadAcctDesc', loError.LINENO, 'Lease Info-d', loError.ERRORNO, loError.MESSAGE
		   MESSAGEBOX('Unable to process the lease info at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
	ENDPROC

	PROCEDURE loadami
		LOCAL lcLeaseID
		LOCAL llReturn, lni, loError
		
		llReturn = .T.
		
		TRY
		   lcLeaseID = land.cleaseid
		   THISFORM.pgfpageframecustom1.page1.lstAMI.CLEAR()
		
		   SELECT  landAMI.iAMIpk, AMI.cname ;
			   FROM landAMI WITH (BUFFERING = .T.), AMI ;
			   WHERE landAMI.cleaseid == lcLeaseID ;
				   AND landAMI.iAMIpk  == AMI.iAMIpk ;
			   INTO CURSOR tempAMI ;
			   ORDER BY cname
		
		   IF _TALLY > 0
		      lni = 1
		      SELECT tempAMI
		      SCAN
		         SCATTER MEMVAR
		         THISFORM.pgfpageframecustom1.page1.lstAMI.ADDLISTITEM(m.cname, lni, 1)
		         lni = lni + 1
		      ENDSCAN
		   ELSE
		      THISFORM.pgfpageframecustom1.page1.lstAMI.CLEAR()
		   ENDIF
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'LoadAMI', loError.LINENO, 'Lease Info-d', loError.ERRORNO, loError.MESSAGE
		   MESSAGEBOX('Unable to process the AMI at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
	ENDPROC

	PROCEDURE loadaudlinks
		THISFORM.pgfpageframecustom1.page3.txtAudLink.VALUE = ''
		THISFORM.pgfpageframecustom1.page3.txtAudLink.REFRESH()
		THISFORM.pgfpageframecustom1.page3.lstAudLinks.REQUERY()
	ENDPROC

	PROCEDURE loadformations
		LOCAL lcLeaseID
		LOCAL llReturn, lni, loError
		
		llReturn = .T.
		
		TRY
		   lcLeaseID = land.cleaseid
		   THISFORM.pgfpageframecustom1.page1.lstformations.CLEAR()
		   
		   CREATE CURSOR tempformations ;
		    (iformpk    i, ;
		     cformation c(20))
		   INDEX on cformation TAG cformation 
		     
		   swselect('landform')
		   SCAN FOR cLeaseID == lcLeaseID 
		      swselect('formations')
		      LOCATE FOR iformpk == landform.iformpk
		      IF FOUND()
		         m.iformpk = landform.iformpk
		         m.cformation = cformation
		         INSERT INTO tempformations FROM memvar
		      ENDIF 
		   ENDSCAN 
		       
		*!*	   SELECT  landform.iformpk, formations.cformation ;
		*!*		   FROM landform WITH (BUFFERING = .T.), formations ;
		*!*		   WHERE landform.cleaseid == lcLeaseID ;
		*!*			   AND landform.iformpk  == formations.iformpk ;
		*!*		   INTO CURSOR tempformations ;
		*!*		   ORDER BY cformation
		
		      lni = 1
		      SELECT tempformations
		      SCAN
		         SCATTER MEMVAR
		         THISFORM.pgfpageframecustom1.page1.lstformations.ADDLISTITEM(m.cformation, lni, 1)
		         lni = lni + 1
		      ENDSCAN
		      swclose('tempformations')
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'LoadFormations', loError.LINENO, 'Lease Info-d', loError.ERRORNO, loError.MESSAGE
		   MESSAGEBOX('Unable to process the formations at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
	ENDPROC

	PROCEDURE loadprogs
		LOCAL lcLeaseID
		LOCAL llReturn, lni, loError
		
		llReturn = .T.
		
		TRY
		   lcLeaseID = land.cleaseid
		   THISFORM.pgfpageframecustom1.page3.lstprograms.CLEAR()
		
		   SELECT  leaseprog.cprogcode, programs.cprogname ;
			   FROM leaseprog WITH (BUFFERING = .T.), programs ;
			   WHERE leaseprog.cleaseid == lcLeaseID ;
				   AND leaseprog.cprogcode  == programs.cprogcode ;
			   INTO CURSOR tempprogs ;
			   ORDER BY cprogname
		
		   IF _TALLY > 0
		      lni = 1
		      SELECT tempprogs
		      SCAN
		         SCATTER MEMVAR
		         THISFORM.pgfpageframecustom1.page3.lstprograms.ADDLISTITEM(m.cprogname, lni, 1)
		         lni = lni + 1
		      ENDSCAN
		   ELSE
		      THISFORM.pgfpageframecustom1.page3.lstprograms.CLEAR()
		   ENDIF
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'LoadProgs', loError.LINENO, 'Lease Info-d', loError.ERRORNO, loError.MESSAGE
		   MESSAGEBOX('Unable to process the report at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
	ENDPROC

	PROCEDURE loadwells
		LOCAL lcLeaseID
		LOCAL llReturn, lni, loError
		
		llReturn = .T.
		
		TRY
		
		   lcLeaseID = land.cleaseid
		   THISFORM.lstWells.CLEAR()
		
		   SELECT  leasewell.cwellid, ;
				   wells.cwellname, ;
				   wells.cpermit1, ;
				   wells.cpermit2, ;
				   wells.cpermit3, ;
				   wells.cpermit4, ;
				   wells.cpermit5, ;
				   wells.cpermit6 ;
			   FROM leasewell, wells ;
			   WHERE leasewell.cleaseid == lcLeaseID ;
				   AND leasewell.cwellid  == wells.cwellid ;
			   INTO CURSOR temp ;
			   ORDER BY leasewell.cwellid
		
		   IF _TALLY > 0
		      lni = 1
		      SELECT temp
		      SCAN
		         SCATTER MEMVAR
		         THISFORM.lstWells.ADDLISTITEM(m.cwellid, lni, 1)
		         THISFORM.lstWells.ADDLISTITEM(m.cwellname, lni, 2)
		         THISFORM.lstWells.ADDLISTITEM(m.cpermit1, lni, 3)
		
		         IF NOT EMPTY(m.cpermit2)
		            lni = lni + 1
		            THISFORM.lstWells.ADDLISTITEM(m.cwellid, lni, 1)
		            THISFORM.lstWells.ADDLISTITEM(m.cwellname, lni, 2)
		            THISFORM.lstWells.ADDLISTITEM(m.cpermit2, lni, 3)
		         ENDIF
		         IF NOT EMPTY(m.cpermit3)
		            lni = lni + 1
		            THISFORM.lstWells.ADDLISTITEM(m.cwellid, lni, 1)
		            THISFORM.lstWells.ADDLISTITEM(m.cwellname, lni, 2)
		            THISFORM.lstWells.ADDLISTITEM(m.cpermit3, lni, 3)
		         ENDIF
		         IF NOT EMPTY(m.cpermit4)
		            lni = lni + 1
		            THISFORM.lstWells.ADDLISTITEM(m.cwellid, lni, 1)
		            THISFORM.lstWells.ADDLISTITEM(m.cwellname, lni, 2)
		            THISFORM.lstWells.ADDLISTITEM(m.cpermit4, lni, 3)
		         ENDIF
		         IF NOT EMPTY(m.cpermit5)
		            lni = lni + 1
		            THISFORM.lstWells.ADDLISTITEM(m.cwellid, lni, 1)
		            THISFORM.lstWells.ADDLISTITEM(m.cwellname, lni, 2)
		            THISFORM.lstWells.ADDLISTITEM(m.cpermit5, lni, 3)
		         ENDIF
		         IF NOT EMPTY(m.cpermit6)
		            lni = lni + 1
		            THISFORM.lstWells.ADDLISTITEM(m.cwellid, lni, 1)
		            THISFORM.lstWells.ADDLISTITEM(m.cwellname, lni, 2)
		            THISFORM.lstWells.ADDLISTITEM(m.cpermit6, lni, 3)
		         ENDIF
		
		         lni = lni + 1
		      ENDSCAN
		   ELSE
		      THISFORM.lstWells.CLEAR()
		   ENDIF
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'LoadWells', loError.LINENO, 'Lease Info-d', loError.ERRORNO, loError.MESSAGE
		   MESSAGEBOX('Unable to process the wells at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
	ENDPROC

	PROCEDURE save
		LPARAMETERS cworkarealist
		
		IF DODEFAULT(cworkarealist)
		   thisform.pgfpageframecustom1.ActivePage = thisform.nactivepage
		ENDIF    
	ENDPROC

	PROCEDURE setstate
		this.lChanged = .T.
		m.goStateManager.RefreshAll('Form Edit')
	ENDPROC

	PROCEDURE showobligations
		PRIV llOK
		LOCAL lcKey, lcList
		LOCAL llOK, llReturn, loError
		
		llReturn = .T.
		
		TRY
		
		   llOK = .T.
		   WAIT WINDOW NOWAIT 'Creating lookup list....please wait'
		
		   IF NOT USED('tempowner')
			  SELECT  landowner.cownerid,  ;
					  investor.cSortField ;
				  FROM landowner, investor ;
				  WHERE landowner.cleaseid = THISFORM.txtCleaseid.VALUE ;
					  AND landowner.cownerid = investor.cownerid ;
				  INTO CURSOR tempowner READWRITE  ;
				  ORDER BY landowner.cownerid
		
		      IF _TALLY > 0
		         IF _TALLY = 1
		* Only one so show it instead of a list of one.
		            m.goStateManager.OpenForm('lmlandowner.scx', tempowner.cownerid, THISFORM.txtCleaseid.VALUE)
		            USE IN tempowner
		         ELSE
		            SELECT tempowner
		            INDEX ON cownerid TAG cownerid
		            INDEX ON cSortField TAG cSortField
		         ENDIF
		      ENDIF
		   ENDIF
		
		   IF USED('tempowner')
		      lcList = 'cownerid\Owner ID,cSortField\Owner Name'
		      WAIT CLEAR
		      DO FORM ..\CUSTOM\picklist WITH 'tempowner', lcList, 'nidlando', 2, .T., .T.
		
		      IF llOK
		         m.goStateManager.OpenForm('lmlandowner.scx', tempowner.cownerid, THISFORM.txtCleaseid.VALUE)
		      ENDIF
		
		      USE IN tempowner
		   ENDIF
		   WAIT CLEAR
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'ShowObligations', loError.LINENO, 'Lease Info-d', loError.ERRORNO, loError.MESSAGE
		   MESSAGEBOX('Unable to process the report at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
		
		
	ENDPROC

	PROCEDURE showopenfile
		#DEFINE ALLFILES_LOC	"All files (*.*)|*.*"
		
		LOCAL nFlags, oCommDialog, llCommError, lcCaption, lcText, lcButtonText, lcFileName
		LOCAL llReturn, loError
		
		llReturn = .T.
		
		TRY
		
		   lcFileName = ''
		
		   m.nFlags    = 0
		   llCommError = .F.
		
		** Get the dialog caption property from the container
		
		   lcCaption = 'Choose Document File'
		
		** Get the dialog text property from the container
		
		   lcText = 'Choose the file'
		
		** Looking for a file name
		
		* Flags:
		*    4 - hides the read-only checkbox
		*    8 - Force the dialog to leave the current directory alone
		   m.nFlags = m.nFlags + 4 + 8
		
		* 2048 - Only valid paths are allowed
		* 4096 - Only existing files
		   m.nFlags = m.nFlags + 2048 + 4096 + 256
		
		** Use the commdlg activex control if it is installed
		** If it isn't installed use the GETFILE() function
		   TRY
		      oCommDialog = NEWOBJECT( "mscomdlg.commondialog" )
		
		      oCommDialog.FLAGS       = m.nFlags
		      oCommDialog.MaxFileSize = 260
		
		   CATCH TO loError
		
		      llCommError = .T.
		
		   ENDTRY
		
		   IF NOT llCommError
		** Activex control was installed so get info from control
		      oCommDialog.FILTER = ALLFILES_LOC
		
		* Display file dialog
		      oCommDialog.ShowOpen()
		
		      IF '*.' $ oCommDialog.FileName
		         lcFileName = ""
		      ELSE
		         lcFileName = oCommDialog.FileName
		      ENDIF
		   ELSE
		** Activex control wasn't installed so use GETFILE()
		      lcFileName = LOWER(GETFILE('*.*', lcText, 'Select', 0, lcCaption))
		   ENDIF
		   IF NOT EMPTY(lcFileName)
		      THISFORM.cmdatamanager.REPLACE('land', 'cscanpath', lcFileName)
		   ENDIF
		   RELEASE oCommDialog
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'ShowOpenFile', loError.LINENO, 'Lease Info-d', loError.ERRORNO, loError.MESSAGE
		   MESSAGEBOX('Unable to process the report at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
		
	ENDPROC

	PROCEDURE upd_caption
		LOCAL llReturn, loError
		llReturn = .T.
		
		TRY
		
		   SELECT land
		   IF land.lLegal
		      THISFORM.CAPTION = 'Lease Information - (' + ALLTRIM(land.cleasename) + ') *** LEGAL MATTER PENDING ***'
		      THISFORM.pgfpageframecustom1.page1.chkLegal.FORECOLOR = RGB(255, 0, 0)
		      IF NOT THISFORM.lalarmmessage
		         MESSAGEBOX("There's a legal matter pending for this lease! See the notes.", 48, 'Legal Matter Pending')
		         THISFORM.lalarmmessage = .T.
		      ENDIF
		   ELSE
		      THISFORM.CAPTION = 'Lease Information - (' + ALLTRIM(land.cleasename) + ')'
		      THISFORM.pgfpageframecustom1.page1.chkLegal.FORECOLOR = RGB(0, 0, 0)
		   ENDIF
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'Upd_Caption', loError.LINENO, 'Lease Info-d', loError.ERRORNO, loError.MESSAGE
		   MESSAGEBOX('Unable to process the Form Caption at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
	ENDPROC

	PROCEDURE viewdocument
		LOCAL lnReturn, llReturn, lcOutputFile
		LOCAL liKey, lcPath
		LOCAL llDebug, loError
		
		llReturn = .T.
		
		TRY
		
		   llDebug = FILE('datafiles\debug.txt')
		
		   liKey = INT(VAL(THISFORM.pgfpageframecustom1.page5.lstDocuments.VALUE))
		
		   swselect('documents')
		   SET ORDER TO iDocPK
		   IF SEEK(liKey)
		      lcOutputFile = cPath
		
		
		      llReturn = .T.
		
		      IF NOT FILE(lcOutputFile)
		         llReturn = .F.
		         IF llDebug
		            MESSAGEBOX('File: ' + ALLTRIM(lcOutputFile) + ' was not found.', 16, 'Debug')
		         ENDIF
		      ENDIF
		
		      Viewdocument(lcOutputFile)
		
		   ENDIF
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'ViewDocument', loError.LINENO, 'Lease Info-d', loError.ERRORNO, loError.MESSAGE
		   MESSAGEBOX('Unable to process the document at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
	ENDPROC

	PROCEDURE viewlink
		* ShowWindow flag. See complete list below.
		#DEFINE SW_SHOWNORMAL 1
		
		LOCAL lnReturn, llReturn, lcURL
		LOCAL loError
		
		llReturn = .T.
		
		TRY
		
		   lcURL = THISFORM.pgfpageframecustom1.page3.lstAudLinks.DISPLAYVALUE
		   IF NOT 'http' $ LOWER(lcURL)
		      lcURL = 'http://' + ALLTRIM(lcURL)
		   ENDIF
		
		   llReturn = .T.
		
		   IF llReturn
		      DECLARE INTEGER ShellExecute IN "Shell32.dll" ;
		         INTEGER HWND, ;
		         STRING lpVerb, ;
		         STRING lpFile, ;
		         STRING lpParameters, ;
		         STRING lpDirectory, ;
		         LONG nShowCmd
		
		      lnReturn = ShellExecute(0, "Open", lcURL, "", "", 1)
		   ENDIF
		
		   IF lnReturn > 32
		      llReturn = .T.
		   ELSE
		      llReturn = .F.
		   ENDIF
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'ViewLink', loError.LINENO, 'LeaseInfo-d', loError.ERRORNO, loError.MESSAGE
		   MESSAGEBOX('Unable to process the auditor link at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
		
		
	ENDPROC

	PROCEDURE cboLeaseStatus.afterchange
		swselect('landowner')
		SCAN FOR cleaseid == land.cleaseid
		   REPLACE cstatus WITH land.cleasestatus
		ENDSCAN
		
	ENDPROC

	PROCEDURE cboLeaseStatus.Init
		IF DODEFAULT()
		   THIS.ADDLISTITEM('Active',1,1)
		   THIS.ADDLISTITEM('Active',1,2)
		   THIS.ADDLISTITEM('Pending',2,1)
		   THIS.ADDLISTITEM('Pending',2,2)
		   THIS.ADDLISTITEM('Dedicated',3,1)
		   THIS.ADDLISTITEM('PD',3,2)
		   THIS.ADDLISTITEM('Expired',4,1)
		   THIS.ADDLISTITEM('Expired',4,2)
		   THIS.ADDLISTITEM('HBP',5,1)
		   THIS.ADDLISTITEM('HBP',5,2)
		   THIS.ADDLISTITEM('Paid-Up',6,1)
		   THIS.ADDLISTITEM('Paid-Up',6,2)
		   THIS.ADDLISTITEM('Sold',7,1)
		   THIS.ADDLISTITEM('Sold',7,2)
		   THIS.ADDLISTITEM('Mandatory Pool',8,1)
		   THIS.ADDLISTITEM('MP',8,2)
		   THIS.ADDLISTITEM('ROW',9,1)
		   THIS.ADDLISTITEM('ROW',9,2)
		   THIS.ADDLISTITEM('Location Agree',10,1)
		   THIS.ADDLISTITEM('LA',10,2)
		   THIS.ADDLISTITEM('Plugged',11,1)
		   THIS.ADDLISTITEM('PL',11,2)
		   THIS.ADDLISTITEM('Tank Battery',12,1)
		   THIS.ADDLISTITEM('TB',12,2)
		   THIS.ADDLISTITEM('Inactive',13,1)
		   THIS.ADDLISTITEM('IN',13,2)
		   THIS.AddListItem('Temporary Access',14,1)
		   THIS.ADDLISTITEM('TA',14,2)
		   this.AddListItem('Tank Battery, Etc.',15,1)
		   this.AddListItem('TBE',15,2)
		   this.addlistitem('Meter Site',16,1)
		   this.AddListItem('MS',16,2)
		   this.AddListItem('Extended',17,1)
		   this.AddListItem('EXT',17,2)
		ENDIF
		
	ENDPROC

	PROCEDURE cmdatamanager.afternav
		LPARAMETERS cWorkarea
		
		LOCAL llReturn, loError
		llReturn = .T.
		
		TRY
		   IF m.cWorkarea = 'Land'
		      THISFORM.loadWells()
		      THISFORM.loadformations()
		      THISFORM.loadacctdesc()
		      THISFORM.loadami()
		      THISFORM.loadprogs()
		      THISFORM.loadaudlinks()
		      THISFORM.chkClauses()
		
		      IF m.goapp.lDocuments AND THISFORM.pgfpageframecustom1.PAGECOUNT = 5
		         THISFORM.pgfpageframecustom1.page5.lstDocuments.REQUERY()
		      ENDIF
		
		      THISFORM.upd_caption()
		
		      swselect('investor')
		      SET ORDER TO cownerid
		      IF SEEK(land.csurfowner)
		         THISFORM.pgfpageframecustom1.page1.lblownerName.CAPTION = investor.csortfield
		      ELSE
		         THISFORM.pgfpageframecustom1.page1.lblownerName.CAPTION = ''
		      ENDIF
		   ENDIF
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'AfterNav', loError.LINENO, 'Lease Info-d', loError.ERRORNO, loError.MESSAGE
		   MESSAGEBOX('Unable to process the lease information at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
	ENDPROC

	PROCEDURE cmdatamanager.afternew
		LPARAMETERS cworkarea
		
		LOCAL llReturn, loError
		*:Global cleaseid, mNotes
		llReturn = .T.
		
		TRY
		   IF m.cworkarea = 'Land'
		      REPL cLeaseStatus WITH 'Active'
		      THISFORM.setnextcontrol(THISFORM.txtcleaseid)
		      m.cleaseid = land.cleaseid
		      m.mNotes   = ' '
		   ENDIF
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'AfterNew', loError.LINENO, 'Lease Info-d', loError.ERRORNO, loError.MESSAGE
		   MESSAGEBOX('Unable to process the lease info at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
	ENDPROC

	PROCEDURE cmdatamanager.afterupdate
		LPARAMETERS cWorkareaList, lCurrentRecordOnly
		
		thisform.LockScreen = .f.
		thisform.setnextcontrol(thisform.txtcleaseid)
		
	ENDPROC

	PROCEDURE cmdatamanager.beforedelete
		LPARAMETERS cWorkarea
		
		LOCAL llReturn, loError
		llReturn = .T.
		
		TRY
		   SELECT landowner
		   LOCATE FOR cLeaseID == land.cLeaseID
		   IF FOUND()
		      THISFORM.oMessage.Warning('This lease has one or more lease obligations set up for it.  It cannot be deleted.')
		      llReturn = .F.
		   ENDIF
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'BeforeDelete', loError.LINENO, 'Lease Info-d', loError.ERRORNO, loError.MESSAGE
		   MESSAGEBOX('Unable to process the report at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		IF llReturn
		   RETURN(DODEFAULT(cWorkarea))
		ELSE
		   RETURN llReturn
		ENDIF
	ENDPROC

	PROCEDURE cmdatamanager.beforenav
		LPARAMETERS cWorkarea
		
		thisform.lalarmmessage = .f.
	ENDPROC

	PROCEDURE cmdatamanager.beforeupdate
		LPARAMETERS cWorkareaList, lCurrentRecordOnly
		
		thisform.LockScreen = .t.
	ENDPROC

	PROCEDURE cmdObligations.Click
		thisform.showobligations()
	ENDPROC

	PROCEDURE lstWells.DblClick
		LOCAL lcWellID
		
		lcWellid = LEFT(this.DisplayValue,10)
		
		IF m.goApp.lDocuments
		   m.goStateManager.OpenFormMulti('dmwellinfod.scx',lcWellID)
		ELSE
		  m.goStateManager.OpenFormMulti('dmwellinfo.scx',lcWellID)
		ENDIF      
	ENDPROC

	PROCEDURE Pgfpageframecustom1.activepage_assign
		LPARAMETERS nNewPage
		
		this.ActivePage = m.nNewPage
		
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page1.Activate
		thisform.nactivepage = 1
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page1.chkLegal.Click
		IF this.Value
		   thisform.caption = 'Lease Information - (' + ALLTRIM(land.cleasename) + ') *** LEGAL MATTER PENDING ***'
		   this.ForeColor = RGB(255,0,0)
		ELSE
		   thisform.caption = 'Lease Information - (' + ALLTRIM(land.cleasename) + ')'
		   this.ForeColor = RGB(0,0,0)
		ENDIF       
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page1.cmdAMI.Click
		LOCAL m.cLeaseID
		LOCAL llReturn, lnCount, lnI, loError
		*:Global cLeaseID, cName, iAMIPK, iFormPK
		
		llReturn = .T.
		
		TRY
		   m.cLeaseID = THISFORM.txtcleaseid.VALUE
		
		   DO FORM lmselectami NAME SelAMI LINKED WITH m.cLeaseID
		   RELEASE SelAMI 
		   SELECT leasesel
		   COUNT FOR NOT DELETED() TO lnCount
		
		   IF lnCount > 0
		      SELECT iAMIPK, .F. AS lExists FROM leasesel INTO CURSOR amilink READWRITE
		
		* Find out if formation is already attached to this well
		      SELECT amilink
		      SCAN
		         SCATTER MEMVAR
		         SELECT landami
		         LOCATE FOR iAMIPK == ami.iAMIPK AND cLeaseID == m.cLeaseID
		         IF FOUND()
		            SELECT amilink
		            REPLACE lExists WITH .T.
		         ENDIF
		      ENDSCAN
		
		* Only add leases not already attached
		      SELECT amilink
		      SCAN FOR NOT lExists
		         SCATTER MEMVAR
		         INSERT INTO landami FROM MEMVAR
		      ENDSCAN
		
		* Remove formations no longer attached to this lease
		      SWSELECT('landami')
		      SCAN FOR cLeaseID == m.cLeaseID
		         m.iAMIPK = iAMIPK
		         SELECT amilink
		         LOCATE FOR iAMIPK == m.iAMIPK
		         IF NOT FOUND()
		            SELECT landami
		            DELETE NEXT 1
		         ENDIF
		      ENDSCAN
		
		      THISFORM.pgfpageframecustom1.page1.lstAMI.CLEAR()
		
		      lnI = 1
		      SWSELECT('landami')
		      SCAN FOR cLeaseID == m.cLeaseID
		         m.iFormPK = iAMIPK
		         SELECT ami
		         SET ORDER TO pk
		         IF SEEK(m.iAMIPK)
		            m.cName = cName
		            THISFORM.pgfpageframecustom1.page1.lstAMI.ADDLISTITEM(m.cName, lnI, 1)
		            lnI = lnI + 1
		         ENDIF
		      ENDSCAN
		   ELSE
		      SELECT iAMIPK, .F. AS lExists FROM leasesel INTO CURSOR amilink READWRITE
		* Remove formations no longer attached to this lease
		      SWSELECT('landami')
		      SCAN FOR cLeaseID = m.cLeaseID
		         m.iAMIPK = iAMIPK
		         SELECT amilink
		         LOCATE FOR iAMIPK == m.iAMIPK
		         IF NOT FOUND()
		            SELECT landami
		            DELETE NEXT 1
		         ENDIF
		      ENDSCAN
		   ENDIF
		
		   THISFORM.setstate()
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'cmdAMI', loError.LINENO, 'Lease Info-d', loError.ERRORNO, loError.MESSAGE
		   MESSAGEBOX('Unable to process the AMIs at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page1.cmdFormations.Click
		LOCAL m.cLeaseID
		LOCAL llReturn, lnCount, lnI, loError
		LOCAL SelFormations AS Form
		
		llReturn = .T.
		
		TRY
		   m.cLeaseID = THISFORM.txtcleaseid.VALUE
		
		   DO FORM dmselform NAME SelFormations LINKED WITH m.cLeaseID
		   RELEASE SelFormations
		   SELECT leasesel
		   COUNT FOR NOT DELETED() TO lnCount
		
		   IF lnCount > 0
		      SELECT iFormPK, .F. AS lExists FROM leasesel INTO CURSOR formlink READWRITE
		
		* Find out if formation is already attached to this well
		      SELECT formlink
		      SCAN
		         SCATTER MEMVAR
		         SELECT landform
		         LOCATE FOR iFormPK == m.iFormPK AND cLeaseID == m.cLeaseID
		         IF FOUND()
		            SELECT formlink
		            REPLACE lExists WITH .T.
		         ENDIF
		      ENDSCAN
		
		* Only add leases not already attached
		      SELECT formlink
		      SCAN FOR NOT lExists
		         SCATTER MEMVAR
		         INSERT INTO landform FROM MEMVAR
		      ENDSCAN
		
		* Remove formations no longer attached to this lease
		      SWSELECT('landform')
		      SCAN FOR cLeaseID = m.cLeaseID
		         m.iFormPK = iFormPK
		         SELECT formlink
		         LOCATE FOR iFormPK == m.iFormPK
		         IF NOT FOUND()
		            SELECT landform
		            DELETE NEXT 1
		         ENDIF
		      ENDSCAN
		
		      THISFORM.pgfpageframecustom1.page1.lstformations.CLEAR()
		
		      lnI = 1
		      SWSELECT('landform')
		      SCAN FOR cLeaseID == m.cLeaseID
		         m.iFormPK = iFormPK
		         SELECT formations
		         SET ORDER TO iFormPK
		         IF SEEK(m.iFormPK)
		            m.cFormation = cFormation
		            THISFORM.pgfpageframecustom1.page1.lstformations.ADDLISTITEM(m.cFormation, lnI, 1)
		            lnI = lnI + 1
		         ENDIF
		      ENDSCAN
		      THISFORM.pgfpageframecustom1.page1.lstformations.REFRESH()
		      THISFORM.setstate()
		   ELSE
		      SELECT iFormPK, .F. AS lExists FROM leasesel INTO CURSOR formlink READWRITE
		* Remove formations no longer attached to this lease
		      SWSELECT('landform')
		      SCAN FOR cLeaseID = m.cLeaseID
		         m.iFormPK = iFormPK
		         SELECT formlink
		         LOCATE FOR iFormPK == m.iFormPK
		         IF NOT FOUND()
		            SELECT landform
		            DELETE NEXT 1
		         ENDIF
		      ENDSCAN
		      THISFORM.pgfpageframecustom1.page1.lstformations.REFRESH()
		      THISFORM.setstate()
		   ENDIF
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'Formations-Click', loError.LINENO, 'Lease Info-d', loError.ERRORNO, loError.MESSAGE
		   MESSAGEBOX('Unable to process the formations at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn 
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page1.cmdLookDept.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .T.
		
		lcList = 'cdeptno\Dept No,cdeptdesc\Department Description'
		
		DO FORM ..\custom\picklist WITH 'gldept', lcList, thisform.pgfpageframecustom1.page1.txtcDeptNo.value, 2,.f.,.t.
		
		IF llOK
		   thisform.cmdatamanager.replace('Land','cDeptNo',gldept.cdeptno)
		   thisform.pgfpageframecustom1.page1.txtcDeptNo.value = gldept.cdeptno
		   thisform.pgfpageframecustom1.page1.txtcDeptNo.refresh()
		   thisform.setstate()
		ENDIF   
		
		thisform.setnextcontrol(thisform.pgfpageframecustom1.page1.txtcDeptNo)
		
		
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page1.cmdLookDisbAcct.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cacctno/acctno,cacctdesc/acctdesc'
		
		DO FORM ..\custom\picklist WITH 'Coa', lcList, land.cacctno, 2
		
		IF llOK
		   THISFORM.cmdatamanager.REPLACE('land', 'Cacctno', coa.cacctno)
		   THIS.Parent.txtAcctNo.refresh()
		   this.parent.txtAcctDesc.VALUE = coa.cacctdesc
		   this.parent.txtAcctDesc.REFRESH()
		ENDIF
		thisform.setnextcontrol(this.parent.txtAcctNo)
		
		
		
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page1.cmdLookOwner.Click
		PRIV llOK
		LOCAL lcList
		
		lcList = 'cownerid,csortfield'
		
		llOK = .f.
		
		do form ..\custom\picklist with 'Investor', lcList, this.parent.txtowner.value, 2
		
		IF llOK
		   thisform.cmdatamanager.replace('Land','csurfowner',investor.cownerid)
		   this.Parent.lblownerName.Caption = investor.csortfield
		   this.parent.txtowner.refresh()
		   this.Parent.lblownername.Refresh()
		ENDIF   
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page1.txtAcctDesc.When
		RETURN .F.
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page1.txtAcctNo.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.pgfpageframecustom1.page1.cmdLookDisbAcct.Click()
		
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page1.txtAcctNo.InteractiveChange
		IF DODEFAULT()
		   SELECT coa
		   LOCATE FOR cacctno == this.Value
		   IF FOUND()
		      this.Parent.txtAcctDesc.set('value',coa.cacctdesc)
		   ELSE
		      this.Parent.txtAcctDesc.set('value','')
		   ENDIF
		ENDIF
		         
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page1.txtAcctNo.LostFocus
		on key label F2
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page1.txtAcctNo.Valid
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(THIS.VALUE)
		   IF coa.ltitle OR coa.lTotalAcct  &&  Title or total account, so don't let them use it
		      THISFORM.oMessage.Warning('You cannot select a title or totaling account for this option.')
		      THIS.SET('value','')
		      RETURN .F.
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page1.txtcDeptNo.GotFocus
		ON KEY LABEL F2 _screen.activeform.cmdLookDept.Click()
		DODEFAULT()
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page1.txtcDeptNo.Init
		IF NOT m.goapp.lamversion
		   this.parent.RemoveObject(this.Name)
		ELSE
		   DODEFAULT()
		ENDIF 
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page1.txtOwner.GotFocus
		ON KEY LABEL f2 _SCREEN.ACTIVEFORM.cmdLookOwner.CLICK()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page1.txtOwner.LostFocus
		ON KEY LABEL f2 *
		
		swselect('investor')
		SET ORDER TO cownerid
		IF SEEK(this.Value)
		   this.Parent.lblownerName.Caption = investor.csortfield
		ELSE
		   this.Parent.lblownerName.Caption = ''
		ENDIF    
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page2.Activate
		thisform.nactivepage = 2
		thisform.chkClauses()
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page2.chkAssign.Click
		IF this.Value
		   this.Parent.pgfClauses.page10.Enabled = .t.
		   this.Parent.pgfClauses.ActivePage = 10
		ELSE
		   this.Parent.pgfClauses.page10.Enabled = .f.
		ENDIF    
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page2.chkContDrill.Click
		IF this.Value
		   this.Parent.pgfClauses.page7.Enabled = .t.
		   this.Parent.pgfClauses.ActivePage = 7
		ELSE
		   this.Parent.pgfClauses.page7.Enabled = .f.
		ENDIF    
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page2.chkDeptRestrict.Click
		IF this.Value
		   this.Parent.pgfClauses.page3.Enabled = .t.
		   this.Parent.pgfClauses.ActivePage = 3
		ELSE
		   this.Parent.pgfClauses.page3.Enabled = .f.
		ENDIF    
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page2.ChkFreeGas.Click
		IF this.Value
		   this.Parent.pgfClauses.page6.Enabled = .t.
		   this.Parent.pgfClauses.ActivePage = 6
		ELSE
		   this.Parent.pgfClauses.page6.Enabled = .f.
		ENDIF    
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page2.chkLandowner.Click
		IF this.Value
		   this.Parent.pgfClauses.page9.Enabled = .t.
		   this.Parent.pgfClauses.ActivePage = 9
		ELSE
		   this.Parent.pgfClauses.page9.Enabled = .f.
		ENDIF    
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page2.chkORRI.Click
		IF this.Value
		   this.Parent.pgfClauses.page5.Enabled = .t.
		   this.Parent.pgfClauses.ActivePage = 5
		ELSE
		   this.Parent.pgfClauses.page5.Enabled = .f.
		ENDIF    
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page2.chkPooling.Click
		IF this.Value
		   this.Parent.pgfClauses.page2.Enabled = .t.
		   this.Parent.pgfClauses.ActivePage = 2
		ELSE
		   this.Parent.pgfClauses.page2.Enabled = .f.
		ENDIF    
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page2.chkRenewal.Click
		IF this.Value
		   this.Parent.pgfClauses.page1.Enabled = .t.
		   this.Parent.pgfClauses.ActivePage = 1
		ELSE
		   this.Parent.pgfClauses.page1.Enabled = .f.
		ENDIF    
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page2.chkShutIn.Click
		IF this.Value
		   this.Parent.pgfClauses.page4.Enabled = .t.
		   this.Parent.pgfClauses.ActivePage = 4
		ELSE
		   this.Parent.pgfClauses.page4.Enabled = .f.
		ENDIF    
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page2.chkUnitization.Click
		IF this.Value
		   this.Parent.pgfClauses.page8.Enabled = .t.
		   this.Parent.pgfClauses.ActivePage = 8
		ELSE
		   this.Parent.pgfClauses.page8.Enabled = .f.
		ENDIF    
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page3.Activate
		thisform.nactivepage = 3
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page3.cmdAddURL.Click
		LOCAL llReturn, loError
		*:Global cAudLink, cLeaseID
		llReturn = .T.
		
		TRY
		   m.cAudLink = THISFORM.pgfpageframecustom1.page3.txtAudLink.VALUE
		   m.cLeaseID = land.cLeaseID
		   IF NOT EMPTY(m.cAudLink)
		      INSERT INTO audlinks FROM MEMVAR
		      THISFORM.pgfpageframecustom1.page3.txtAudLink.VALUE = ''
		      THISFORM.pgfpageframecustom1.page3.txtAudLink.REFRESH()
		      THISFORM.pgfpageframecustom1.page3.lstAudLinks.REQUERY()
		      THIS.PARENT.lstAudLinks.REFRESH()
		      THISFORM.setstate()
		   ENDIF
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'cmdAddURL', loError.LINENO, 'Lease Info-d', loError.ERRORNO, loError.MESSAGE
		   MESSAGEBOX('Unable to process the Auditor URL at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page3.cmdDelURL.Click
		lcLeaseID = land.cleaseid
		lcAudLink = thisform.pgfpageframecustom1.page3.lstAudLinks.DisplayValue
		swselect('audlinks')
		LOCATE FOR cleaseid == lcLeaseID AND caudlink = ALLTRIM(lcAudLink)
		IF FOUND()
		   DELETE NEXT 1
		   thisform.pgfpageframecustom1.page3.lstAudLinks.Requery()
		   thisform.pgfpageframecustom1.page3.lstAudLinks.refresh()
		   thisform.setstate()
		ENDIF 
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page3.cmdPrograms.Click
		LOCAL m.cLeaseID
		LOCAL SelProg AS FORM
		LOCAL llReturn, lnCount, lnI, loError
		*:Global cLeaseID, cProgname, cprogcode
		
		llReturn = .T.
		TRY
		   m.cLeaseID = THISFORM.txtcleaseid.VALUE
		
		   DO FORM lmselprog NAME SelProg LINKED WITH m.cLeaseID
		
		   SELECT progsel
		   COUNT FOR NOT DELETED() TO lnCount
		
		   RELEASE SelProg
		
		   IF lnCount > 0
		      SELECT cprogcode, .F. AS lExists FROM progsel INTO CURSOR proglink READWRITE
		
		* Find out if program is already attached to this lease
		      SELECT proglink
		      SCAN
		         SCATTER MEMVAR
		         SELECT leaseprog
		         LOCATE FOR cprogcode == proglink.cprogcode AND cLeaseID == m.cLeaseID
		         IF FOUND()
		            SELECT proglink
		            REPLACE lExists WITH .T.
		         ENDIF
		      ENDSCAN
		
		* Only add leases not already attached
		      SELECT proglink
		      SCAN FOR NOT lExists
		         SCATTER MEMVAR
		         INSERT INTO leaseprog FROM MEMVAR
		      ENDSCAN
		
		* Remove formations no longer attached to this lease
		      SWSELECT('leaseprog')
		      SCAN FOR cLeaseID == m.cLeaseID
		         m.cprogcode = cprogcode
		         SELECT proglink
		         LOCATE FOR cprogcode == m.cprogcode
		         IF NOT FOUND()
		            SELECT leaseprog
		            DELETE NEXT 1
		         ENDIF
		      ENDSCAN
		
		      THISFORM.pgfpageframecustom1.page3.lstPrograms.CLEAR()
		
		      lnI = 1
		      SWSELECT('leaseprog')
		      SCAN FOR cLeaseID == m.cLeaseID
		         m.cprogcode = cprogcode
		         SELECT programs
		         SET ORDER TO cprogcode
		         IF SEEK(m.cprogcode)
		            m.cProgname = cProgname
		            THISFORM.pgfpageframecustom1.page3.lstPrograms.ADDLISTITEM(m.cProgname, lnI, 1)
		            lnI = lnI + 1
		         ENDIF
		      ENDSCAN
		   ELSE
		      THISFORM.pgfpageframecustom1.page3.lstPrograms.CLEAR()
		      SELECT cprogcode, .F. AS lExists FROM progsel INTO CURSOR proglink READWRITE
		* Remove programs no longer attached to this lease
		      SWSELECT('leaseprog')
		      SCAN FOR cLeaseID = m.cLeaseID
		         m.cprogcode = cprogcode
		         SELECT proglink
		         LOCATE FOR cprogcode == m.cprogcode
		         IF NOT FOUND()
		            SELECT leaseprog
		            DELETE NEXT 1
		         ENDIF
		      ENDSCAN
		   ENDIF
		
		   THISFORM.setstate()
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'cmdPrograms', loError.LINENO, 'Lease Info-d', loError.ERRORNO, loError.MESSAGE
		   MESSAGEBOX('Unable to process the report at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page3.cmdViewURL.Click
		IF NOT thisform.viewlink()
		   thisform.omessage.warning("The auditor link you tried to view couldn't be brought up by the browser. Please check it for syntax and try again.")
		ENDIF 
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page3.lstAudLinks.DblClick
		thisform.viewlink()
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page3.lstAudLinks.Requery
		this.Clear()
		
		swselect('audlinks')
		
		SELECT caudlink FROM audlinks WITH (buffering=.T.) WHERE cLeaseID == land.cLeaseID INTO ARRAY lalinks ORDER BY caudlink
		
		IF _tally > 0
		   FOR lnx = 1 TO _tally
		      this.AddListItem(laLinks[lnx,1],lnx,1)
		   ENDFOR 
		ENDIF    
		
		this.Refresh()
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page4.Activate
		thisform.nactivepage = 4
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page5.Activate
		IF m.goApp.lCloudDocs
		   this.cmdtreeno.Visible = .t.
		ELSE
		   this.cmdtreeno.Visible = .f.
		ENDIF    
		thisform.nactivepage = 5
		this.lstDocuments.Requery()
		this.lstDocuments.Visible = .t.
		thisform.Refresh()
		
		RETURN DODEFAULT()
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page5.Cmdcommandbuttoncustom3.Click
		thisform.viewdocument()
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page5.Cmdcommandbuttoncustom4.Click
		IF this.Caption = 'Show Paths'
		   this.Parent.lstDocuments.Requery('Path')
		   this.Caption = 'Show Desc'
		ELSE
		   this.Parent.lstDocuments.Requery('Desc')
		   this.Caption = 'Show Paths'
		ENDIF    
		
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page5.cmdLinkDoc.Click
		LOCAL lnx, llReturn
		LOCAL loError
		
		llReturn = .T.
		
		TRY
		   llReturn = THISFORM.ofilEDIALOG.openfile()
		
		   IF NOT THISFORM.ofilEDIALOG.lcancelled
		      m.cDesc    = THISFORM.omessage.gettext('Enter a description for this file.', 'Get File Description')
		      IF ALLTRIM(UPPER(THISFORM.ofilEDIALOG.cPath)) $ UPPER(THISFORM.ofilEDIALOG.aFiles[1])
		         m.cPath = THISFORM.ofilEDIALOG.aFiles[1]
		      ELSE
		         m.cPath    = UPPER(ALLTRIM(THISFORM.ofilEDIALOG.cPath) + THISFORM.ofilEDIALOG.aFiles[1])
		      ENDIF
		      IF EMPTY(m.cDesc) OR ISNULL(m.cDesc)
		         m.cDesc = ALLTRIM(m.cPath)
		      ENDIF
		      m.cfk      = land.cleaseid
		      m.cDocLink = 'LI'
		
		      swSELECT('documents')
		      LOCATE FOR cfk == m.cfk AND ALLTRIM(cPath) == ALLTRIM(m.cPath)
		      IF NOT FOUND()
		         INSERT INTO documents FROM MEMVAR
		      ENDIF
		      THIS.PARENT.lstDocuments.REQUERY()
		      THISFORM.setchanged(.T., 'Documents')
		      m.gostatemanager.refreshall('Form')
		   ENDIF
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'cmdLinkDoc', loError.LINENO, 'Lease Info-d', loError.ERRORNO, loError.MESSAGE
		   MESSAGEBOX('Unable to process the document at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page5.cmdRemDoc.Click
		LOCAL likey, llReturn, loError
		llReturn = .T.
		
		TRY
		   likey = INT(VAL(THIS.PARENT.lstDocuments.VALUE))
		
		   swselect('documents')
		   SET ORDER TO iDocPK
		   IF SEEK(likey)
		      DELETE NEXT 1
		      THIS.PARENT.lstDocuments.REQUERY()
		      THISFORM.setchanged(.T., 'Documents')
		      m.gostatemanager.refreshall('Form')
		   ENDIF
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'cmdRemDoc', loError.LINENO, 'Lease Info-d', loError.ERRORNO, loError.MESSAGE
		   MESSAGEBOX('Unable to process the document at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page5.cmdTreeno.Click
		LOCAL loTS
		LOCAL lcPassword, lcUser, llCreated, llReturn, lnCabinetID, lnMatches, loError
		
		llReturn = .T.
		
		TRY
		   loTS = m.goApp.oTreeno
		
		   IF loTS.Login()
		* Get the cabinet ID, needed for the other calls
		      lnCabinetID = loTS.GetCabinetID("Leases") && ex. "Leases", "Wells"
		
		      IF m.lnCabinetID = -1
		         MESSAGEBOX('Error Accessing Treeno:' + CHR(10) + loTS.cErrorMsg, 48, 'Treeno Problem')
		         llReturn = .F.
		         EXIT
		      ENDIF
		
		* Check to see if the folder already exists
		* Not a great example because if you did a search for a company named "Test"
		* a company like "Test Company" would match. The assumption is this
		* field contains a unique value. If that ends up being a bad assumption
		* you could iterate over the loTS.oMatches and do a more exact match.
		*lnMatches = loTS.SearchCabinet(lnCabinetID, "company_name", "Test Company") && ex. lease_number or well_id
		      WAIT WINDOW NOWAIT 'Looking for Lease: ' + ALLTRIM(land.cleaseid)
		      lnMatches = loTS.SearchCabinet(lnCabinetID, "lease_number", land.cleaseid) && ex. lease_number or well_id
		
		      IF lnMatches = -1
		         MESSAGEBOX('Error Accessing Treeno:' + CHR(10) + loTS.cErrorMsg, 48, 'Treeno Problem')
		         llReturn = .F.
		         EXIT
		      ENDIF
		
		      WAIT WINDOW NOWAIT 'Found ' + TRANSFORM(lnMatches) + ' matches.'
		* If the folder doesn't exist, create it
		      IF lnMatches = 0
		* Folder Not found
		         IF MESSAGEBOX('The folder for lease: ' + ALLTRIM(land.cleaseid) + ' does not exist in Treeno. Do you want to create it?', 36, 'Access Treeno') = 6
		            CREATE CURSOR curfolder (abstracted L, lease_number C(40), lessor_name C(30), lease_date D(30), well_numbers C(40), county C(20), township C(20), acres N(12, 4), nec_owns_deep L)
		            SWSELECT('leasewell')
		            SELECT cWellID FROM leasewell WHERE  cleaseid == land.cleaseid INTO CURSOR templease ORDER BY cWellID
		            INSERT INTO curfolder (abstracted, lease_number, lessor_name, lease_date, well_numbers, county, township, acres, nec_owns_deep) ;
		               VALUES (.F., land.cleaseid, land.cleasename, land.dleasedate, templease.cWellID, land.ccounty, land.ctownship, land.nGrossAcre, .F.)
		
		            llCreated = loTS.CreateFolder(THISFORM.DATASESSIONID, m.lnCabinetID, "curFolder")
		
		            IF !m.llCreated
		               MESSAGEBOX('Error Accessing Treeno:' + CHR(10) + loTS.cErrorMsg, 48, 'Treeno Problem')
		            ENDIF
		         ELSE
		            llReturn = .F.
		            EXIT
		         ENDIF
		      ENDIF
		
		      SWSELECT('options')
		      GO TOP
		      lcUser     = ALLTRIM(cTreenoUser)
		      lcPassword = ALLTRIM(cmEncrypt(options.cTreenoPwd, '5h3rWar3A1Z2'))
		* Now open the website up to this folder
		      WAIT WINDOW NOWAIT 'Launching IE with ' + ALLTRIM(land.cleaseid)
		      loTS.LaunchWebsite(lcUser, lcPassword, "Leases", "lease_number", land.cleaseid)
		   ELSE
		      MESSAGEBOX('Unable to login to Treeno. Check your user name and password in the Cloud Doc Mgmt preferences and try again.', 16, 'Treeno Login Problem')
		   ENDIF
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'cmdTreeno', loError.LINENO, 'Lease Info-d', loError.ERRORNO, loError.MESSAGE
		   MESSAGEBOX('Unable to process the Treeno Doc at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page5.Deactivate
		this.lstDocuments.Visible = .f.
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page5.lstDocuments.Click
		LOCAL liDocPK
		*:Global cpath
		liDocPK = INT(VAL(this.ListItem[this.ListItemId,2]))
		
		swselect('documents')
		SET ORDER to idocpk
		IF SEEK(liDocPK)
		   m.cpath = cpath
		   this.ToolTipText = m.cpath
		ENDIF 
		
		 
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page5.lstDocuments.DblClick
		thisform.viewdocument()
	ENDPROC

	PROCEDURE Pgfpageframecustom1.Page5.lstDocuments.Requery
		LPARAMETERS tcType
		
		IF VARTYPE(tcType) # 'C'
		   tcType = 'Desc'
		ENDIF
		
		swselect('options')
		llDocShare = options.lDocShare
		
		THIS.CLEAR()
		lnx = 1
		swselect('documents')
		
		IF llDocShare
		* Add all the documents for attached leases also
		   IF tcType = 'Desc'
		      SCAN FOR cDocLink == 'LI' AND cFK == land.cleaseid
		         SCATTER MEMVAR
		         THIS.ADDLISTITEM(documents.cdesc, lnx, 1)
		         THIS.ADDLISTITEM(TRANSFORM(documents.idocpk), lnx, 2)
		         lnx = lnx + 1
		      ENDSCAN
		      lcLeaseID = land.cleaseid
		      swselect('leasewell')
		      SCAN FOR cleaseid == lcLeaseID
		         m.cWellID = cwellid
		         swselect('documents')
		         SCAN FOR cDocLink = 'WI' AND cFK = m.cWellID
		            SCATTER MEMVAR
		            THIS.ADDLISTITEM(documents.cdesc, lnx, 1)
		            THIS.ADDLISTITEM(TRANSFORM(documents.idocpk), lnx, 2)
		            lnx = lnx + 1
		         ENDSCAN
		      ENDSCAN
		   ELSE
		      SCAN FOR cDocLink == 'LI' AND cFK == land.cleaseid
		         SCATTER MEMVAR
		         THIS.ADDLISTITEM(documents.cpath, lnx, 1)
		         THIS.ADDLISTITEM(TRANSFORM(documents.idocpk), lnx, 2)
		         lnx = lnx + 1
		      ENDSCAN
		      lcLeaseID = land.cleaseid
		      swselect('leasewell')
		      SCAN FOR cleaseid == lcLeaseID
		         m.cWellID = cwellid
		         swselect('documents')
		         SCAN FOR cDocLink = 'WI' AND cFK = m.cWellID
		            SCATTER MEMVAR
		            THIS.ADDLISTITEM(documents.cpath, lnx, 1)
		            THIS.ADDLISTITEM(TRANSFORM(documents.idocpk), lnx, 2)
		            lnx = lnx + 1
		         ENDSCAN
		      ENDSCAN
		   ENDIF
		ELSE
		   IF tcType = 'Desc'
		      SCAN FOR cDocLink == 'LI' AND cFK == land.cleaseid
		         SCATTER MEMVAR
		         THIS.ADDLISTITEM(documents.cdesc, lnx, 1)
		         THIS.ADDLISTITEM(TRANSFORM(documents.idocpk), lnx, 2)
		         lnx = lnx + 1
		      ENDSCAN
		   ELSE
		      SCAN FOR cDocLink == 'LI' AND cFK == land.cleaseid
		         SCATTER MEMVAR
		         THIS.ADDLISTITEM(documents.cpath, lnx, 1)
		         THIS.ADDLISTITEM(TRANSFORM(documents.idocpk), lnx, 2)
		         lnx = lnx + 1
		      ENDSCAN
		   ENDIF
		
		ENDIF
		
		
		
		
		
	ENDPROC

	PROCEDURE txtCleaseid.Valid
		LOCAL lcLeaseID
		
		IF NOT THIS.lChanged OR EMPTY(THIS.VALUE)
		   RETURN
		ENDIF
		
		lcLeaseID = THIS.VALUE
		
		IF lcLeaseID = land.cLeaseID
		   RETURN
		ENDIF
		
		SET DELETED OFF
		SELECT land1
		SET ORDER TO cLeaseID
		IF SEEK(lcLeaseID)
		   IF NOT DELETED()
		      IF THISFORM.oMessage.CONFIRM('This lease already exists in the Land file.  Would you like to view that record?')
		         THISFORM.cmdatamanager.revertall()
		         SELECT land
		         SET ORDER TO cLeaseID
		         SEEK(lcLeaseID)
		         THISFORM.REFRESH()
		      ELSE
		         SET DELETED ON
		         THIS.VALUE = ''
		         RETURN 0
		      ENDIF
		   ELSE
		      THISFORM.cmdatamanager.revertall()
		      SELECT land
		      SET ORDER TO cLeaseID
		      SEEK(lcLeaseID)
		      RECALL
		      SCATTER MEMVAR BLANK
		      GATHER MEMVAR
		      THISFORM.cmdatamanager.REPLACE('Land','cLeaseID',lcLeaseID)
		      THISFORM.REFRESH()
		   ENDIF
		ELSE
		   * If the lease id is the same as a wellid, pull in the name of the well
		   SELE wells
		   LOCATE FOR cwellid = lcLeaseID
		   IF FOUND()
		      THISFORM.cmdatamanager.REPLACE('Land','Cleasename',wells.cwellname)
		      THISFORM.txtcleasename.REFRESH()
		   ENDIF
		ENDIF
		SELECT land
		SET DELETED ON
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtCleasename.GotFocus
		THISFORM.cleasename = THIS.VALUE
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtCleasename.LostFocus
		IF m.goapp.lQBVersion
		   IF THIS.VALUE <> THISFORM.cleasename AND NOT EMPTY(land.clistid)
		      IF NOT THISFORM.omessage.CONFIRM('Changing the lease name of a lease that has been synchronized ' + ;
		            'will create a new class in QuickBooks instead of changing the original name. Is this ok?')
		         THIS.SET('value',THISFORM.cleasename)
		      ENDIF
		   ENDIF
		ENDIF
		
	ENDPROC

	PROCEDURE txtdExpires.Valid
		IF NOT EMPTY(THIS.VALUE) AND NOT EMPTY(THIS.PARENT.txtdleasedate.VALUE)  ;  &&  Not allowed if earlier than the lease date
		   AND THIS.VALUE < THIS.PARENT.txtdleasedate.VALUE
		   THISFORM.oMessage.Warning('You cannot choose an expiration date that is prior to the Lease Date.  Please select a different date.')
		   THIS.SET('value',{})
		   RETURN .F.
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

ENDDEFINE
