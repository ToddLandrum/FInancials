*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="ten99summ.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 824
	Left = 40
	Name = "Dataenvironment"
	Top = 235
	Width = 1237

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "investor", ;
		CursorSource = "investor", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Order = "cownerid", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "tax1099", ;
		CursorSource = "tax1099", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Filter = "NOT DELETED()", ;
		Height = 90, ;
		Left = 149, ;
		Name = "Cursor2", ;
		Top = 21, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "vendor", ;
		CursorSource = "vendor", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 288, ;
		Name = "Cursor3", ;
		Order = "cvendorid", ;
		Top = 22, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor4", ;
		Top = 140, ;
		Width = 101
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "custownvend", ;
		CursorSource = "custownvend", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 163, ;
		Name = "Cursor5", ;
		NoDataOnLoad = .F., ;
		Top = 150, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "tax1099corrections", ;
		CursorSource = "tax1099corrections", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 710, ;
		Name = "Cursor6", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS form1099summ AS frmrptcriteria OF "..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="opgSelect" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swyear1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklbyWell" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEndWell" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBegWell" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEndID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBegID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklMask" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSelected" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkCorrect" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: lookup
		*m: selectedowners
	*</DefinedPropArrayMethod>

	Caption = "1099 Summary Report"
	DataSession = 2
	DoCreate = .T.
	Height = 388
	HelpContextID = 249
	Name = "Form1099summ"
	Width = 444
	Swrptcriteriabuttons1.CHKEXPORT.Alignment = 0
	Swrptcriteriabuttons1.CHKEXPORT.Name = "CHKEXPORT"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.cmdPreview.Name = "cmdPreview"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 108
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 15
	Swrptcriteriabuttons1.Top = 276
	Swrptcriteriabuttons1.ZOrderSet = 0

	ADD OBJECT 'chkCorrect' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Print Corrected 1099s", ;
		Left = 276, ;
		Name = "chkCorrect", ;
		TabIndex = 13, ;
		Top = 240, ;
		Value = .F., ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklbyWell' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "Print By Well", ;
		Height = 16, ;
		Left = 185, ;
		Name = "chklbyWell", ;
		TabIndex = 12, ;
		Top = 241, ;
		Width = 78, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklMask' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Mask Recipient Tax IDs", ;
		Left = 39, ;
		Name = "chklMask", ;
		TabIndex = 11, ;
		Top = 241, ;
		Value = .F., ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'lblBegID' AS lbllabelcustom WITH ;
		Caption = "Beginning ID:", ;
		Height = 16, ;
		Left = 71, ;
		Name = "lblBegID", ;
		TabIndex = 6, ;
		Top = 136, ;
		Width = 64, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblBegWell' AS lbllabelcustom WITH ;
		Caption = "Beginning Well:", ;
		Height = 16, ;
		Left = 67, ;
		Name = "lblBegWell", ;
		TabIndex = 9, ;
		Top = 289, ;
		Visible = .F., ;
		Width = 75, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblEndID' AS lbllabelcustom WITH ;
		Caption = "Ending ID:", ;
		Height = 16, ;
		Left = 86, ;
		Name = "lblEndID", ;
		TabIndex = 7, ;
		Top = 186, ;
		Width = 49, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblEndWell' AS lbllabelcustom WITH ;
		Caption = "Ending Well:", ;
		Height = 16, ;
		Left = 82, ;
		Name = "lblEndWell", ;
		TabIndex = 10, ;
		Top = 339, ;
		Visible = .F., ;
		Width = 60, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Include 1099s For:", ;
		Height = 16, ;
		Left = 44, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 4, ;
		Top = 16, ;
		Width = 91, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "Accounting Year:", ;
		Height = 16, ;
		Left = 48, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 5, ;
		Top = 109, ;
		Width = 87, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSelected' AS lbllabelcustom WITH ;
		Caption = " ", ;
		Height = 16, ;
		Left = 269, ;
		Name = "lblSelected", ;
		TabIndex = 8, ;
		Top = 81, ;
		Width = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'opgSelect' AS opgoptiongroupcustom WITH ;
		AutoSize = .F., ;
		BorderStyle = 0, ;
		ButtonCount = 4, ;
		Height = 107, ;
		Left = 149, ;
		Name = "opgSelect", ;
		TabIndex = 1, ;
		Top = 13, ;
		Width = 175, ;
		ZOrderSet = 1, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "All 1099s", ;
		Option1.FontSize = 8, ;
		Option1.Height = 16, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Top = 5, ;
		Option1.Width = 63, ;
		Option2.Caption = "Vendors", ;
		Option2.FontSize = 8, ;
		Option2.Height = 17, ;
		Option2.Left = 5, ;
		Option2.Name = "Option2", ;
		Option2.Top = 25, ;
		Option2.Width = 61, ;
		Option3.Caption = "Owners", ;
		Option3.FontSize = 8, ;
		Option3.Height = 17, ;
		Option3.Left = 5, ;
		Option3.Name = "Option3", ;
		Option3.Top = 46, ;
		Option3.Width = 61, ;
		Option4.AutoSize = .T., ;
		Option4.Caption = "Selected 1099s", ;
		Option4.FontSize = 8, ;
		Option4.Height = 16, ;
		Option4.Left = 5, ;
		Option4.Name = "Option4", ;
		Option4.Top = 67, ;
		Option4.Width = 93
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		Left = 155, ;
		Name = "Swrptlook1", ;
		TabIndex = 3, ;
		Top = 133, ;
		ZOrderSet = 3, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		TxtBegID.clistexpression = custownvend.cid, ;
		TxtBegID.clistworkarea = custownvend, ;
		TxtBegID.Name = "TxtBegID", ;
		TxtBegName.Name = "TxtBegName", ;
		TxtEndID.clistexpression = custownvend.cid, ;
		TxtEndID.clistworkarea = custownvend, ;
		TxtEndID.Name = "TxtEndID", ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />

	ADD OBJECT 'Swrptlook2' AS swrptlook WITH ;
		Left = 152, ;
		Name = "Swrptlook2", ;
		TabIndex = 14, ;
		Top = 285, ;
		Visible = .F., ;
		ZOrderSet = 3, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		txtBegID.clistexpression = wells.cwellid, ;
		txtBegID.clistworkarea = wells, ;
		txtBegID.Name = "txtBegID", ;
		TxtBegName.Name = "TxtBegName", ;
		txtEndID.clistexpression = wells.cwellid, ;
		txtEndID.clistworkarea = wells, ;
		txtEndID.Name = "txtEndID", ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />

	ADD OBJECT 'Swyear1' AS swyear WITH ;
		Left = 155, ;
		MaxLength = 4, ;
		Name = "Swyear1", ;
		TabIndex = 2, ;
		Top = 106, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE builddata
		LOCAL tcYear, tnType, tcID1, tcID2
		
		tcYear  = THISFORM.swyear1.VALUE
		tnType  = THISFORM.opgSelect.VALUE
		tcID1   = THISFORM.swrptlook1.txtBegID.VALUE
		tcID2   = THISFORM.swrptlook1.txtEndID.VALUE
		tcWell1 = THISFORM.swrptlook2.txtBegID.VALUE
		tcWell2 = THISFORM.swrptlook2.txtEndID.VALUE
		tlByWell = THISFORM.chklbywell.VALUE
		tlMask    = THISFORM.chklMask.VALUE
		tlCorrected = thisform.chkcorrect.Value
		
		IF tlCorrected
		   SELECT * FROM tax1099Corrections WHERE cyear = tcYear INTO CURSOR temp1099s ORDER BY cid
		ELSE
		   SELECT * FROM tax1099 WHERE cyear = tcYear INTO CURSOR temp1099s ORDER BY cid
		ENDIF 
		
		THISFORM.cTitle1 = 'For Year: ' + tcYear
		
		lcDeleted = SET('Deleted')
		SET DELETED ON
		
		IF tcID1 = 'FIRST'  &&  Include all IDs, in case they just typed in a manual entry, and made up an ID or left it blank - BH 02/11/08
		   SET SAFETY OFF
		   SELECT custownvend
		   INDEX ON cid TAG cid
		   SET ORDER TO cid
		   GO TOP
		   tcID1 = custownvend.cid
		   GO BOTTOM
		   tcID2 = custownvend.cid
		ENDIF
		
		* Check on the existence of the application object
		* if it doesn't exist, we're running in development
		* mode and need to initialize the company address info.
		IF TYPE('m.goApp') = 'O'
		   m.paddr1 = m.goApp.cAddress1
		   m.paddr2 = m.goApp.cAddress2
		   m.paddr3 = m.goApp.cAddress3
		   m.ptax   = cmEncrypt(ALLTRIM(m.goApp.cTaxid),m.goApp.cEncryptionKey)
		ELSE
		   m.paddr1 = 'PO Box 223'
		   m.paddr2 = 'Wooster, OH  44691'
		   m.paddr3 = ''
		   m.ptax   = '99-9999999'
		ENDIF
		
		DO CASE
		   CASE tnType = 1   && All
		      THISFORM.cSelectCriteria = 'Both Owners and Vendors'
		
		      SELECT *, ;
		         tlByWell AS lByWell, ;
		         m.paddr1 AS paddr1, ;
		         m.paddr2 AS paddr2, ;
		         m.paddr3 AS paddr3, ;
		         m.ptax   AS ptax, ;
		         SUM(nstatetax1+nstatetax2) AS nstatetax ;
		         FROM temp1099s ;
		         WHERE cyear = tcYear ;
		         AND BETWEEN(cid, tcID1, tcID2) ;
		         INTO CURSOR temp1099 READWRITE ;
		         ORDER BY cwellid, cid ;
		         GROUP BY cwellid, cid
		
		
		   CASE tnType = 2   && Vendors
		      THISFORM.cSelectCriteria = 'Vendors: ' + TRIM(tcID1) + ' - ' + TRIM(tcID2)
		      SELECT *, ;
		         tlByWell AS lByWell, ;
		         m.paddr1 AS paddr1, ;
		         m.paddr2 AS paddr2, ;
		         m.paddr3 AS paddr3, ;
		         m.ptax   AS ptax, ;
		         SUM(nstatetax1+nstatetax2) AS nstatetax ;
		         FROM temp1099s ;
		         WHERE BETWEEN(cid, tcID1, tcID2) ;
		         AND cidtype = 'V' ;
		         AND cyear  = tcYear ;
		         INTO CURSOR temp1099 READWRITE;
		         ORDER BY cid ;
		         GROUP BY cid
		
		   CASE tnType = 3   && Owners
		      IF NOT tlByWell
		         THISFORM.cSelectCriteria = 'Owners: ' + TRIM(tcID1) + ' - ' + TRIM(tcID2)
		         SELECT *, ;
		            tlByWell AS lByWell, ;
		            m.paddr1 AS paddr1, ;
		            m.paddr2 AS paddr2, ;
		            m.paddr3 AS paddr3, ;
		            m.ptax   AS ptax, ;
		            SUM(nstatetax1+nstatetax2) AS nstatetax ;
		            FROM temp1099s ;
		            WHERE BETWEEN(cid, tcID1, tcID2) ;
		            AND cidtype = 'I' ;
		            AND cyear  = tcYear ;
		            INTO CURSOR temp1099 READWRITE ;
		            ORDER BY cid ;
		            GROUP BY cid
		      ELSE
		         THISFORM.cSelectCriteria = 'Owners: ' + TRIM(tcID1) + ' - ' + TRIM(tcID2) + ' Wells: ' + TRIM(tcWell1) + ' - ' + TRIM(tcWell2)
		         THISFORM.cTitle2 = 'By Well'
		         THISFORM.cSortOrder = 'WELL ID AND OWNER ID'
		         SELECT *, ;
		            tlByWell AS lByWell, ;
		            m.paddr1 AS paddr1, ;
		            m.paddr2 AS paddr2, ;
		            m.paddr3 AS paddr3, ;
		            m.ptax   AS ptax, ;
		            SUM(nstatetax1+nstatetax2) AS nstatetax ;
		            FROM temp1099s ;
		            WHERE BETWEEN(cid, tcID1, tcID2) ;
		            AND BETWEEN(cwellid, tcWell1, tcWell2)  ;
		            AND cidtype = 'I' ;
		            AND cyear  = tcYear ;
		            INTO CURSOR temp1099 READWRITE;
		            ORDER BY cwellid, cid ;
		            GROUP BY cwellid, cid
		
		      ENDIF
		
		   CASE tnType = 4   && Selected
		      THISFORM.cSelectCriteria = 'Selected 1099s'
		
		      SELECT *, ;
		         tlByWell AS lByWell, ;
		         m.paddr1 AS paddr1, ;
		         m.paddr2 AS paddr2, ;
		         m.paddr3 AS paddr3, ;
		         m.ptax   AS ptax, ;
		         SUM(nstatetax1+nstatetax2) AS nstatetax ;
		         FROM temp1099s ;
		         WHERE cid IN (SELECT cid FROM ten99sel) ;
		         AND cyear = tcYear ;
		         INTO CURSOR temp1099 READWRITE ;
		         ORDER BY cwellid, cid ;
		         GROUP BY cwellid, cid
		
		ENDCASE
		
		
		IF !m.goApp.oSecurity.HasPrivilege('Tax Ids')
		   tlMask = .T.
		ENDIF
		
		*  If masking tax ID numbers
		IF tlMask
		   SELECT temp1099
		   SCAN
		      REPLACE cTaxid WITH cmEncrypt(ALLTRIM(cTaxid),m.goApp.cEncryptionKey)
		      REPLACE cStatePayerNo1 WITH cmEncrypt(ALLTRIM(cStatePayerNo1),m.goApp.cEncryptionKey)
		      REPLACE cStatePayerNo2 WITH cmEncrypt(ALLTRIM(cStatePayerNo2),m.goApp.cEncryptionKey)
		
		*  If the 3rd character is a hyphen, it's a Fed ID #, so mask accordingly
		      IF SUBSTR(cTaxid, 3, 1) = '-'
		         REPLACE cTaxid WITH 'XX-XXX' + SUBSTR(ALLTRIM(cTaxid), 7, 4)
		      ENDIF
		*  If the 4th character is a hyphen, it's a SSN, so mask accordingly
		      IF SUBSTR(cTaxid, 4, 1) = '-'
		         REPLACE cTaxid WITH 'XXX-XX-' + SUBSTR(ALLTRIM(cTaxid), 8, 4)
		      ENDIF
		*  It's got a number of some kind in it, but it has no hyphens, so put some kind of a mask on it
		      IF NOT '-' $ cTaxid AND LEN(ALLTRIM(cTaxid)) > 8
		         REPLACE cTaxid WITH 'XXXXX' + SUBSTR(cTaxid, 6, 4)
		      ENDIF
		*  If the 3rd character is a hyphen, it's a Fed ID #, so mask accordingly
		      IF SUBSTR(ptax, 3, 1) = '-'
		         REPLACE ptax WITH 'XX-XXX' + SUBSTR(ALLTRIM(ptax), 7, 4)
		      ENDIF
		*  If the 4th character is a hyphen, it's a SSN, so mask accordingly
		      IF SUBSTR(ptax, 4, 1) = '-'
		         REPLACE ptax WITH 'XXX-XX-' + SUBSTR(ALLTRIM(ptax), 8, 4)
		      ENDIF
		*  It's got a number of some kind in it, but it has no hyphens, so put some kind of a mask on it
		      IF NOT '-' $ cTaxid AND LEN(ALLTRIM(cTaxid)) > 8
		         REPLACE cTaxid WITH 'XXXXX' + SUBSTR(cTaxid, 6, 4)
		      ENDIF
		      REPLACE cStatePayerNo1 WITH 'xxxxxxxxx'
		      REPLACE cStatePayerNo2 WITH 'xxxxxxxxx'
		   ENDSCAN
		ELSE
		   SELECT temp1099
		   REPLACE cTaxid WITH cmEncrypt(ALLTRIM(cTaxid),m.goApp.cEncryptionKey) ALL
		   REPLACE cStatePayerNo1 WITH cmEncrypt(ALLTRIM(cStatePayerNo1),m.goApp.cEncryptionKey) ALL
		   REPLACE cStatePayerNo2 WITH cmEncrypt(ALLTRIM(cStatePayerNo2),m.goApp.cEncryptionKey) ALL
		ENDIF
		
		THISFORM.cReportName = m.goapp.cRptsFolder + '1099s\ten99summ.frx'
		
		SET DELETED &lcDeleted
		
		SELECT temp1099
		IF RECC() > 0
		   RETURN .T.
		ELSE
		   RETURN .F.
		ENDIF
		
		
		
		
	ENDPROC

	PROCEDURE Init
		DODEFAULT()
		*
		*  Initialize the form criteria
		*
		THISFORM.swrptlook1.txtBegID.VALUE = 'FIRST'
		THISFORM.swrptlook1.txtEndID.VALUE = 'LAST'
		THISFORM.swrptlook1.txtBegName.VALUE = 'First Possible ID'
		THISFORM.swrptlook1.txtEndName.VALUE = 'Last Possible ID'
		
		SELECT wells
		SET ORDER TO cwellid
		GO TOP
		THISFORM.swrptlook2.txtBegID.VALUE = cwellid
		THISFORM.swrptlook2.txtBegName.VALUE = cwellname
		GO BOTT
		THISFORM.swrptlook2.txtEndID.VALUE = cwellid
		THISFORM.swrptlook2.txtEndName.VALUE = cwellname
		
		swselect('tax1099')
		SET ORDER TO cyear
		GO BOTTOM
		IF RECCOUNT() = 0
		   THISFORM.swyear1.VALUE = STR(VAL(THISFORM.swyear1.VALUE)-1,4)
		ELSE
		   THISFORM.swyear1.VALUE = tax1099.cyear
		ENDIF
		
		THISFORM.opgSelect.VALUE = 1
		THISFORM.chklbywell.VALUE = .F.
		
		
	ENDPROC

	PROCEDURE lookup
		LPARA WhichOne
		
		lcBegEnd = WhichOne
		lnColumns = 2
		
		llOK = .T.
		
		IF lcBegEnd = 'BEG'  &&  First Lookup
		   lcBegorEnd = 'THISFORM.swrptlook1.txtBegID.VALUE'
		ELSE
		   lcBegorEnd = 'THISFORM.swrptlook1.txtEndID.VALUE'
		ENDIF
		
		DO CASE
		   CASE THISFORM.opgSelect.VALUE = 1
		      SET SAFETY OFF
		      SELECT custownvend
		      INDEX ON cid TAG cid
		      INDEX ON cname TAG cname
		      lcList = 'cid\ID,cname\Name,ctype\Type'
		      lcTable = 'custownvend'
		      lnColumns = 3
		   CASE THISFORM.opgSelect.VALUE = 2
		      lcList = 'cvendorid\Vendor ID,cvendname\Vendor Name'
		      lcTable = 'vendor'
		      lnColumns = 2
		   CASE THISFORM.opgSelect.VALUE = 3
		      lcList = 'cownerid\Owner ID,cownname\Owner Name'
		      lcTable = 'investor'
		      lnColumns = 2
		ENDCASE
		
		DO FORM ..\CUSTOM\picklist WITH lcTable, lcList, &lcBegorEnd, lnColumns, .f., .t.
		
		IF llOK  &&  If an owner/vendor was selected
		
		   DO CASE
		      CASE THISFORM.opgSelect.VALUE = 1  &&  Both
		         IF lcBegEnd = 'BEG'  &&  First Lookup
		            THISFORM.swrptlook1.txtBegId.SET('value',custownvend.cid)
		            THISFORM.swrptlook1.txtBegName.SET('value',custownvend.cname)
		            THISFORM.setnextcontrol(THISFORM.swrptlook1.txtBegId)
		         ELSE  &&  Second Lookup
		            THISFORM.swrptlook1.txtEndId.SET('value',custownvend.cid)
		            THISFORM.swrptlook1.txtEndName.SET('value',custownvend.cname)
		            THISFORM.setnextcontrol(THISFORM.swrptlook1.txtEndId)
		         ENDIF
		
		      CASE THISFORM.opgSelect.VALUE = 2  &&  Vendor
		
		         IF lcBegEnd = 'BEG'  &&  First Lookup
		            THISFORM.swrptlook1.txtBegId.SET('value',vendor.cvendorid)
		            THISFORM.swrptlook1.txtBegName.SET('value',vendor.cvendname)
		            THISFORM.setnextcontrol(THISFORM.swrptlook1.txtBegId)
		         ELSE  &&  Second Lookup
		            THISFORM.swrptlook1.txtEndId.SET('value',vendor.cvendorid)
		            THISFORM.swrptlook1.txtEndName.SET('value',vendor.cvendname)
		            THISFORM.setnextcontrol(THISFORM.swrptlook1.txtEndId)
		         ENDIF
		
		      CASE THISFORM.opgSelect.VALUE = 3  &&  Owner
		
		         IF lcBegEnd = 'BEG'  &&  First Lookup
		            THISFORM.swrptlook1.txtBegId.SET('value',investor.cownerid)
		            THISFORM.swrptlook1.txtBegName.SET('value',investor.cownname)
		            THISFORM.setnextcontrol(THISFORM.swrptlook1.txtBegId)
		         ELSE  &&  Second Lookup
		            THISFORM.swrptlook1.txtEndId.SET('value',investor.cownerid)
		            THISFORM.swrptlook1.txtEndName.SET('value',investor.cownname)
		            THISFORM.setnextcontrol(THISFORM.swrptlook1.txtEndId)
		         ENDIF
		
		   ENDCASE
		
		ELSE
		    IF lcBegEnd = 'BEG'
		      THISFORM.setnextcontrol(THISFORM.swrptlook1.txtBegId)
		   ELSE
		      THISFORM.setnextcontrol(THISFORM.swrptlook1.txtEndId)
		   ENDIF
		   RETURN .F.
		
		ENDIF
		
	ENDPROC

	PROCEDURE selectedowners
		LOCAL oTen99Sel AS FORM
		LOCAL llReturn, lnCount, loError
		llReturn = .T.
		
		TRY
		    DO FORM commonsource\ten99selected NAME oTen99Sel LINKED WITH THISFORM.swyear1.VALUE, .T.
		    RELEASE oTen99Sel
		    SELECT ten99sel
		    lnCount                      = RECCOUNT()
		    THISFORM.lblselected.CAPTION = TRANSFORM(lnCount) + ' 1099s Selected'
		CATCH TO loError
		    llReturn = .F.
		    DO errorlog WITH 'Method', loError.LINENO, 'FormName', loError.ERRORNO, loError.MESSAGE, '', loError
		    MESSAGEBOX('Unable to process the report at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		          'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
	ENDPROC

	PROCEDURE chklbyWell.Click
		IF this.value
		   IF thisform.opgselect.value = 3
		      thisform.lblbegwell.visible = .t.
		      thisform.lblendwell.visible = .t.
		      thisform.swrptlook2.visible = .t.
		      thisform.height = 460
		      thisform.swrptcriteriabuttons1.top = 455 - thisform.swrptcriteriabuttons1.height
		   ELSE
		      this.value = .f.
		      thisform.omessage.warning('1099s can only be printed by well when owner 1099s are selected.')
		   ENDIF   
		ELSE
		   thisform.lblbegwell.visible = .f.
		   thisform.lblendwell.visible = .f.
		   thisform.swrptlook2.visible = .f.
		   thisform.height = 340
		   thisform.swrptcriteriabuttons1.top = thisform.height - thisform.swrptcriteriabuttons1.height - 5
		ENDIF   
		
	ENDPROC

	PROCEDURE opgSelect.Option1.Click
		thisform.swrpTLOOK1.Visible = .t.
		thisform.swrptLOOK2.Visible = .t.
		thisform.lblBegID.Visible = .t.
		thisform.lblEndID.Visible = .t.
		thisform.lblselected.Visible = .f.
		
		thisform.swrptlook1.txtBegID.value = 'FIRST'
		thisform.swrptlook1.txtEndID.value = 'LAST'
		thisform.swrptlook1.txtBegName.value = 'First Possible ID'
		thisform.swrptlook1.txtEndName.value = 'Last Possible ID'
		thisform.swrptlook1.txtBegID.clistworkarea = 'custownvend'
		thisform.swrptlook1.txtBegID.clistexpression = 'cid'
		thisform.swrptlook1.txtEndID.clistworkarea = 'custownvend'
		thisform.swrptlook1.txtEndID.clistexpression = 'cid'
		
		thisform.chklByWell.Value = .F.
		thisform.chklByWell.Click()
		thisform.refresh()
	ENDPROC

	PROCEDURE opgSelect.Option1.GotFocus
		THISFORM.opgSelect.VALUE = 1
		THIS.CLICK()
		
	ENDPROC

	PROCEDURE opgSelect.Option2.Click
		thisform.swrpTLOOK1.Visible = .t.
		thisform.swrptLOOK2.Visible = .t.
		thisform.lblBegID.Visible = .t.
		thisform.lblEndID.Visible = .t.
		thisform.lblselected.Visible = .f.
		
		SELECT vendor
		GO TOP
		thisform.swrptlook1.txtBegID.value = cvendorid
		thisform.swrptlook1.txtBegName.value = cvendname
		GO BOTT
		thisform.swrptlook1.txtEndID.value = cvendorid
		thisform.swrptlook1.txtEndName.value = cvendname
		thisform.swrptlook1.txtBegID.clistworkarea = 'vendor'
		thisform.swrptlook1.txtBegID.clistexpression = 'cvendorid'
		thisform.swrptlook1.txtEndID.clistworkarea = 'vendor'
		thisform.swrptlook1.txtEndID.clistexpression = 'cvendorid'
		
		thisform.chklByWell.Value = .F.
		thisform.chklByWell.Click()
		
		thisform.refresh()
	ENDPROC

	PROCEDURE opgSelect.Option2.GotFocus
		THISFORM.opgSelect.VALUE = 2
		THIS.CLICK()
		
	ENDPROC

	PROCEDURE opgSelect.Option3.Click
		thisform.swrpTLOOK1.Visible = .t.
		thisform.swrptLOOK2.Visible = .f.
		thisform.lblBegID.Visible = .t.
		thisform.lblEndID.Visible = .t.
		thisform.lblselected.Visible = .f.
		
		SELECT investor
		GO TOP
		thisform.swrptlook1.txtBegID.value = cOwnerID
		thisform.swrptlook1.txtBegName.value = cOwnname
		GO BOTT
		thisform.swrptlook1.txtEndID.value = cOwnerID
		thisform.swrptlook1.txtEndName.value = cOwnname
		thisform.swrptlook1.txtBegID.clistworkarea = 'investor'
		thisform.swrptlook1.txtBegID.clistexpression = 'cownerid'
		thisform.swrptlook1.txtEndID.clistworkarea = 'investor'
		thisform.swrptlook1.txtEndID.clistexpression = 'cownerid'
		
		thisform.refresh()
	ENDPROC

	PROCEDURE opgSelect.Option3.GotFocus
		THISFORM.opgSelect.VALUE = 3
		THIS.CLICK()
		
	ENDPROC

	PROCEDURE opgSelect.Option4.Click
		thisform.swrpTLOOK1.Visible = .f.
		thisform.swrptLOOK2.Visible = .f.
		thisform.lblBegID.Visible = .f.
		thisform.lblEndID.Visible = .f.
		thisform.lblselected.Caption = ''
		thisform.lblselected.Visible = .t.
		thisform.selectedowners()
		thisform.chklByWell.Value = .F.
		thisform.chklByWell.Click()
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		THISFORM.LOOKUP('BEG')
		THISFORM.setnextcontrol(this.parent.txtbegid)
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		THISFORM.LOOKUP('END')
		THISFORM.setnextcontrol(this.parent.txtendid)
		DODEFAULT()
		
	ENDPROC

	PROCEDURE Swrptlook1.TxtBegID.GotFocus
		ON KEY LABEL F2 _screen.activeform.lookup('BEG')
		DODEFAULT()
	ENDPROC

	PROCEDURE Swrptlook1.TxtBegID.LostFocus
		ON KEY LABEL F2 *
		DODEFAULT()
	ENDPROC

	PROCEDURE Swrptlook1.TxtEndID.GotFocus
		ON KEY LABEL F2 _screen.activeform.lookup('END')
		DODEFAULT()
	ENDPROC

	PROCEDURE Swrptlook1.TxtEndID.LostFocus
		ON KEY LABEL F2 *
		DODEFAULT()
	ENDPROC

	PROCEDURE Swrptlook2.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		
		lcList = 'cwellid,cwellname'
		
		DO FORM ..\CUSTOM\picklist WITH 'Wells', lcList, 'cwellid', 2
		
		IF llok  &&  If an owner/vendor was selected
		   thisform.swrptlook2.txtbegid.value = cwellid
		   thisform.swrptlook2.txtbegname.value = cwellname
		   thisform.swrptlook2.txtbegid.refresh()
		   thisform.swrptlook2.txtbegname.refresh()
		ENDIF   
		
		
	ENDPROC

	PROCEDURE Swrptlook2.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		
		lcList = 'cwellid,cwellname'
		
		DO FORM ..\CUSTOM\picklist WITH 'Wells', lcList, 'cwellid', 2
		
		IF llok  &&  If an owner/vendor was selected
		   thisform.swrptlook2.txtendid.value = cwellid
		   thisform.swrptlook2.txtendname.value = cwellname
		   thisform.swrptlook2.txtendid.refresh()
		   thisform.swrptlook2.txtendname.refresh()
		ENDIF   
		
		
	ENDPROC

ENDDEFINE
