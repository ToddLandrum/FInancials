*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="compconnect.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 200
	Left = 42
	Name = "Dataenvironment"
	Top = 483
	Width = 520

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "compmast", ;
		CursorSource = ..\datafiles\compmast.dbf, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "compmast1", ;
		CursorSource = ..\datafiles\compmast.dbf, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formcompconnect AS frmformcustom OF "..\custom\cforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblCdatapath" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cntokcancelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cntgetfile1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: getvfpc32
		*m: process
		*p: lusevfpc32
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	Caption = "Connect To An Existing Company's Data"
	DoCreate = .T.
	Height = 234
	lusevfpc32 = .F.
	Name = "FormCompconnect"
	Width = 630
	_memberdata = <VFPData>
		<memberdata name="getvfpc32" display="GetVFPC32"/>
		<memberdata name="lusevfpc32" display="lUseVFPC32"/>
		</VFPData>		&& XML Metadata for customizable properties
	Mwresize1.lblHighLight.Name = "lblHighLight"
	Mwresize1.lblShading.Name = "lblShading"
	Mwresize1.Left = 298
	Mwresize1.Name = "Mwresize1"
	Mwresize1.Top = 103

	ADD OBJECT 'Cntgetfile1' AS cntgetfile WITH ;
		Height = 24, ;
		Left = 96, ;
		lfullpath = .T., ;
		lmustexist = .F., ;
		lpathonly = .T., ;
		Name = "Cntgetfile1", ;
		TabIndex = 22, ;
		Top = 96, ;
		Width = 481, ;
		cmdPath.FontBold = .T., ;
		cmdPath.FontSize = 10, ;
		cmdPath.Height = 20, ;
		cmdPath.Left = 456, ;
		cmdPath.Name = "cmdPath", ;
		cmdPath.TabStop = .F., ;
		cmdPath.Top = 1, ;
		edtPath.ControlSource = "", ;
		edtPath.FontSize = 8, ;
		edtPath.Height = 20, ;
		edtPath.Left = 0, ;
		edtPath.Margin = 1, ;
		edtPath.Name = "edtPath", ;
		edtPath.SelectOnEntry = .T., ;
		edtPath.Top = 1, ;
		edtPath.Width = 444
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="container" />

	ADD OBJECT 'Cntokcancelcustom1' AS cntokcancelcustom WITH ;
		Height = 48, ;
		Left = 240, ;
		Name = "Cntokcancelcustom1", ;
		TabIndex = 23, ;
		Top = 168, ;
		Width = 174, ;
		cmdcancel.Height = 35, ;
		cmdcancel.Left = 95, ;
		cmdcancel.Name = "cmdcancel", ;
		cmdcancel.Top = 12, ;
		cmdcancel.Width = 75, ;
		cmdok.Default = .F., ;
		cmdok.Height = 35, ;
		cmdok.Left = 9, ;
		cmdok.Name = "cmdok", ;
		cmdok.Top = 12, ;
		cmdok.Width = 75
		*< END OBJECT: ClassLib="..\custom\cbutton.vcx" BaseClass="container" />

	ADD OBJECT 'lblCdatapath' AS lblfieldlabelcustom WITH ;
		Alignment = 0, ;
		Caption = "Data File Path", ;
		Height = 16, ;
		Left = 24, ;
		Name = "lblCdatapath", ;
		TabIndex = 21, ;
		Top = 100, ;
		Width = 67
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Choose the location for the existing company files you want to connect to:", ;
		FontBold = .T., ;
		Left = 24, ;
		Name = "Lbllabelcustom1", ;
		Top = 48
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />
	
	PROCEDURE getvfpc32
	ENDPROC

	PROCEDURE Init
		IF DODEFAULT()
		   llReturn = .T.
		   IF NOT FILE(m.goapp.cCommonFolder+'bin\vfp2c32.fll')
		*      llReturn = GetVFPC32()
		   ENDIF
		   thisform.lUseVFPC32 = llReturn
		ENDIF
	ENDPROC

	PROCEDURE Load
		DODEFAULT()
		
		this.oregistry = findglobalobject('cmregistry')
		this.omessage  = findglobalobject('cmmessage')
	ENDPROC

	PROCEDURE process
		LOCAL cDataPath, llFoundComp, lcidcomp, llCopySamp, oMeta, llNoLogon, lcDataVersion
		LOCAL lcDataPath, llBadPath, llReturn, loError
		LOCAL cidcomp, fh
		
		
		llReturn   = .T.
		llCopySamp = .F.
		
		TRY
		
		* Check for QBVersion and close any open QB connection
		    IF m.goapp.lQBVersion
		        m.goapp.oQB.qbclose()
		    ENDIF
		
		* Check for open forms. Don't allow setup of companies if a form is open.
		    IF swOpenForms(THIS.NAME)
		        m.goapp.oMessage.Severe('All open forms must be closed before connecting a new company.')
		        llReturn = .F.
		        EXIT
		    ENDIF
		
		    IF EMPTY(ALLTRIM(THISFORM.cntgetfile1.edtPath.VALUE))  &&  Don't let them proceed with a blank data file path
		        THISFORM.oMessage.Warning('Please specify a data file path location before proceeding.')
		        THISFORM.setnextcontrol(THISFORM.cntgetfile1.edtPath)
		        llReturn = .F.
		        EXIT
		    ENDIF
		
		    llFoundComp = .F.
		    m.cDataPath = ADDBS(ALLTRIM(THISFORM.cntgetfile1.edtPath.VALUE))
		    lcDataPath  = m.cDataPath
		
		    DO CASE
		        CASE FILE(ALLT(m.cDataPath) + 'ampro.exe')
		            llBadPath = .T.
		        CASE FILE(ALLT(m.cDataPath) + 'dmpro.exe')
		            llBadPath = .T.
		        CASE FILE(ALLT(m.cDataPath) + 'bmpro.exe')
		            llBadPath = .T.
		        OTHERWISE
		            llBadPath = .F.
		    ENDCASE
		
		    IF llBadPath
		        THISFORM.oMessage.Severe('The data file path is invalid. The path cannot be the same as the installation folder.')
		        THISFORM.setnextcontrol(THISFORM.cntgetfile1.edtPath)
		        llReturn = .F.
		        EXIT
		    ENDIF
		
		    IF NOT FILE(m.cDataPath + 'version.dbf')
		        THISFORM.oMessage.Severe('This path does not contain valid company data. Please choose another location.')
		        llReturn = .F.
		        EXIT
		    ELSE
		        llFoundComp = .T.
		        IF NOT USED('version')
		            USE (ALLTRIM(m.cDataPath) + 'version.dbf') IN 0
		        ENDIF
		        SELECT VERSION
		        GO TOP
		        SCATTER MEMVAR
		        m.cDataPath = lcDataPath
		        IF NOT USED('compmast1')
		            USE compmast AGAIN IN 0 ALIAS compmast1
		        ENDIF
		        SELECT compmast1
		        SET DELETED OFF
		        SET ORDER TO cidcomp
		        lcidcomp = THISFORM.oRegistry.IncrementCounter('%Local.Counters.Company Master')
		        DO WHILE SEEK(lcidcomp)
		            lcidcomp = THISFORM.oRegistry.IncrementCounter('%Local.Counters.Company Master')
		        ENDDO
		        SET DELETED ON
		        m.cidcomp = lcidcomp
		        IF NOT USED('compmast')
		            USE compmast IN 0
		        ENDIF
		        INSERT INTO compmast FROM MEMVAR
		
		        CLOSE DATA ALL
		
		        TRY
		            ERASE (m.goapp.cCommonDocuments + '*.loc')
		        CATCH
		        ENDTRY
		
		* Create last open company file
		        fh = FCREATE(m.goapp.cCommonDocuments + m.cidcomp + '.loc')
		        FCLOSE(fh)
		
		        m.goapp.cDataFilePath = TRIM(m.cDataPath)
		        m.goapp.setsearchpath()
		        OPEN DATABASE (ALLTRIM(m.cDataPath) + 'AppData')
		
		        llNoLogon = .F.
		
		        m.goapp.cidcomp = m.cidcomp
		        m.goapp.opencompany1(llNoLogon)
		* Force the tables to update when opened
		        m.goapp.opencompany2(.F., .T.)
		    ENDIF
		
		CATCH TO loError
		    llReturn = .F.
		    DO errorlog WITH 'Process', loError.LINENO, 'CompConnect', loError.ERRORNO, loError.MESSAGE, '', loError
		    MESSAGEBOX('Unable to process the connection at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		          'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
	ENDPROC

	PROCEDURE Cntgetfile1.cmdPath.Click
		LOCAL cPath
		
		IF THIS.PARENT.lPathOnly
		   m.cPath = GETDIR(m.goapp.ccommonfolder,'Select the folder for the company to connect.','Connect to Existing Company Data', 113)
		ELSE
		   m.cPath = GETFILE(THIS.PARENT.cExtensionList)
		ENDIF
		IF NOT EMPTY(m.cPath)
		   THIS.PARENT.SetValue(m.cPath)
		ENDIF
		
		THISFORM.cntgetfile1.edtpath.VALUE = ADDBS(ALLTRIM(THISFORM.cntgetfile1.edtpath.VALUE))
		
		IF LEN(THISFORM.cntgetfile1.edtpath.VALUE) > 120  &&  Greater than the max, so don't let them choose it.
		   THISFORM.oMessage.Warning('The chosen path contains more than the maximum of 120 characters.  Please choose a different path, or use a relative path to shorten the length.')
		   THISFORM.cntgetfile1.edtpath.SET('value', '')
		ENDIF
		
		
		
		
	ENDPROC

	PROCEDURE Cntokcancelcustom1.cmdcancel.Click
		
		thisform.release()
	ENDPROC

	PROCEDURE Cntokcancelcustom1.cmdok.Click
		thisform.process()
		thisform.Release()
	ENDPROC

ENDDEFINE
