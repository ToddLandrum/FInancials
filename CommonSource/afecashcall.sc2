*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="afecashcall.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor10" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 702
	Left = 207
	Name = "Dataenvironment"
	Top = 124
	Width = 520

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "afehdr", ;
		CursorSource = "afehdr", ;
		Database = ..\ampro\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Order = "cafeno", ;
		Top = 20, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor10' AS cursor WITH ;
		Alias = "coabal", ;
		BufferModeOverride = 5, ;
		CursorSource = "coabal", ;
		Database = ..\ampro\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor10", ;
		Top = 380, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "afedet", ;
		CursorSource = "afedet", ;
		Database = ..\ampro\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "expcat", ;
		CursorSource = "expcat", ;
		Database = ..\ampro\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "taxcodes", ;
		CursorSource = "taxcodes", ;
		Database = ..\ampro\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor4", ;
		Top = 140, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\ampro\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor5", ;
		Top = 140, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "afeopt", ;
		CursorSource = "afeopt", ;
		Database = ..\ampro\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor6", ;
		Top = 140, ;
		Width = 101
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor7' AS cursor WITH ;
		Alias = "glmaster", ;
		CursorSource = "glmaster", ;
		Database = ..\ampro\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor7", ;
		Top = 260, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor8' AS cursor WITH ;
		Alias = "invhdr", ;
		CursorSource = "invhdr", ;
		Database = ..\ampro\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor8", ;
		Top = 260, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor9' AS cursor WITH ;
		Alias = "invdet", ;
		CursorSource = "invdet", ;
		Database = ..\ampro\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor9", ;
		Top = 260, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formafecashcall AS frmformcustom OF "..\custom\cforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="cmdLookAFE" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtdInvDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCreate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBegID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdExit" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboTaxCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkCostPlus" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkCatDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcafeno" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Glmaint" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: builddata
	*</DefinedPropArrayMethod>

	Caption = "Create Cash Call Invoices"
	DataSession = 2
	DoCreate = .T.
	Height = 251
	Icon = ..\ampro\
	Name = "formafecashcall"
	Visible = .T.
	Width = 380

	ADD OBJECT 'cboTaxCode' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		FontName = "Courier New", ;
		Height = 20, ;
		Left = 120, ;
		Name = "cboTaxCode", ;
		RowSource = "", ;
		RowSourceType = 0, ;
		TabIndex = 6, ;
		Top = 96, ;
		Width = 216, ;
		ZOrderSet = 21
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'chkCatDesc' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Use AFE Code Description Instead of Category", ;
		Left = 96, ;
		Name = "chkCatDesc", ;
		TabIndex = 8, ;
		Top = 138, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkCostPlus' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Include Cost Plus and Location Fees", ;
		Left = 96, ;
		Name = "chkCostPlus", ;
		TabIndex = 9, ;
		Top = 164
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdCreate' AS cmdcommandbuttoncustom WITH ;
		Caption = "\<Create", ;
		Height = 36, ;
		Left = 108, ;
		Name = "cmdCreate", ;
		TabIndex = 10, ;
		Top = 202, ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdExit' AS cmdcommandbuttoncustom WITH ;
		Caption = "E\<xit", ;
		Height = 36, ;
		Left = 204, ;
		Name = "cmdExit", ;
		TabIndex = 11, ;
		Top = 202, ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdLookAFE' AS cmdcommandbuttoncustom WITH ;
		Caption = "...", ;
		FontBold = .T., ;
		FontSize = 10, ;
		Height = 20, ;
		Left = 228, ;
		Name = "cmdLookAFE", ;
		TabIndex = 1, ;
		Top = 25, ;
		Width = 20
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Glmaint' AS glmaint WITH ;
		Left = 295, ;
		Name = "Glmaint", ;
		Top = 180
		*< END OBJECT: ClassLib="..\custom\swgl.vcx" BaseClass="custom" />

	ADD OBJECT 'lblBegID' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "AFE No", ;
		Height = 16, ;
		Left = 48, ;
		Name = "lblBegID", ;
		TabIndex = 3, ;
		Top = 27, ;
		Width = 38, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Invoice Date", ;
		Left = 48, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 5, ;
		Top = 62
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "AFE Section", ;
		Left = 48, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 7, ;
		Top = 99
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'txtcafeno' AS txtquickfill WITH ;
		clistexpression = afehdr.cafeno, ;
		clistworkarea = afehdr, ;
		Format = "!", ;
		Height = 20, ;
		Left = 121, ;
		Name = "txtcafeno", ;
		TabIndex = 2, ;
		Top = 25, ;
		Width = 84
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtdInvDate' AS txttextboxcustom WITH ;
		Left = 120, ;
		Name = "txtdInvDate", ;
		TabIndex = 4, ;
		Top = 60
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE builddata
		LOCAL nReportBy, cproducer, csortby,lcstart,lcend,lcsafety
		
		lcAFENo   = THISFORM.txtcAFENo.VALUE
		ldInvDate = THISFORM.txtdInvDate.VALUE
		lcSection = THISFORM.cboTaxcode.LISTITEM[thisform.cbotaxcode.listitemid,2]
		llCatDesc = THISFORM.chkcatdesc.VALUE
		
		this.oregistry = .null.
		this.omessage  = .null.
		this.loadglobalreferences()
		
		SET SAFETY OFF
		
		SELECT afeopt
		GO TOP
		SCATTER MEMVAR
		
		IF NOT llCatDesc
		   SELE afehdr.cafeno, ;
		        afehdr.cwellid, ;
		        expcat.ccateg, ;
		        expcat.cexpclass, ;
		        expcat.ccatcode, ;
		        afedet.nestcost, ;
		        expcat.ctaxcode, ;
		        m.nCostPlus AS nCostPlus, ;
		        m.nLocationFee AS nLocationFee, ;
		        afehdr.cidafeh, ;
		        SPACE(10) AS cownerid, ;
		        SPACE(40) AS cownname ;
		      FROM afehdr, afedet, expcat ;
		      WHERE afehdr.cafeno   == lcAFENo ;
		      AND afehdr.cidafeh    == afedet.cidafeh ;
		      AND afedet.ccatcode   == expcat.ccatcode ;
		      AND afedet.nestcost <> 0 ;
		      AND ! DELETED() ;
		      ORDER BY afehdr.cafeno, expcat.ccatcode, expcat.ctaxcode ;
		      INTO CURSOR temp
		ELSE
		   SELE afehdr.cafeno, afehdr.cwellid, ;
		        expcat.cdescrip AS ccateg, ;
		        expcat.cexpclass,;
		        expcat.ccatcode, ;
		        afedet.nestcost, ;
		        expcat.ctaxcode, ;
		        m.nCostPlus AS nCostPlus, ;
		        m.nLocationFee AS nLocationFee, ;
		        afehdr.cidafeh, ;
		        SPACE(10) AS cownerid, ;
		        SPACE(40) AS cownname ;
		      FROM afehdr, afedet, expcat ;
		      WHERE afehdr.cafeno   = lcAFENo ;
		      AND afedet.cidafeh    = afehdr.cidafeh ;
		      AND expcat.ccatcode   = afedet.ccatcode;
		      AND afedet.nestcost <> 0 ;
		      AND ! DELETED() ;
		      ORDER BY afehdr.cafeno, expcat.ccatcode, expcat.ctaxcode ;
		      INTO CURSOR temp
		ENDIF
		
		IF _tally = 0
		   thisform.omessage.warning('There were no AFE costs associated with the given tax code.')
		   RETURN .F.
		ENDIF   
		
		SELECT wellinv.cownerid, wellinv.nworkint, wellinv.nintclass1, wellinv.nintclass2, wellinv.nintclass3, wellinv.nintclass4, wellinv.nintclass5, ;
		        wellinv.nbcpint, wellinv.nacpint, investor.cownname, investor.caddress1a, investor.caddress1b, investor.ccity1, investor.cstate1, investor.czip1 ;
		   FROM wellinv, investor ;
		   WHERE wellinv.cwellid == temp.cwellid ;
		   AND wellinv.cownerid = investor.cownerid ;
		   AND wellinv.ctypeinv = 'W' ;
		   AND NOT deleted() ;
		   INTO CURSOR tempdoi ;
		   ORDER BY wellinv.cownerid
		
		IF _TALLY = 0
		   THISFORM.omessage.warning('No owners have been defined for this AFE. No report is available.')
		   RETURN .F.
		ENDIF
		
		CREATE CURSOR tempown ;
		   (cafeno    C(10), ;
		   cwellid   C(10), ;
		   cwellname C(30), ;
		   ctownship C(30), ;
		   ccounty   C(30), ;
		   cstate    C(2), ;
		   ndepth    N(9), ;
		   ccateg    C(15), ;
		   cexpclass C(1), ;
		   ctaxdesc  C(30), ;
		   cownerid  C(10), ;
		   cownname  C(40), ;
		   nworkint  N(11,7), ;
		   ctaxcode  C(2), ;
		   ccatcode  C(4), ;
		   nestcost  N(12,2), ;
		   nshare    N(12,2))
		INDEX ON cafeno+cownerid+ctaxcode TAG afetag
		
		SELE temp
		SCAN
		   SCATTER MEMVAR
		   sele wells
		   locate for cwellid == m.cwellid
		   if found()
		      m.ctownship = ctownship
		      m.ccounty   = ccounty
		      m.cstate    = cstate
		      m.ndepth    = ndepth
		   else
		      loop
		   endif
		   
		   sele taxcodes
		   locate for ctaxcode == m.ctaxcode
		   if found()
		      if lcSection <> 'AL' and cTaxCode <> lcSection
		         * Don't include this section
		         loop
		      endif  
		      m.ctaxdesc = cdesc
		   else
		      loop
		   endif      
		   SELE tempdoi
		   SCAN
		      SCATTER MEMVAR
		      do case
		         case m.cexpclass = '0'
		            m.nshare = ROUND(m.nestcost * (m.nworkint/100),2)
		         case m.cexpclass = '1'
		            m.nshare = ROUND(m.nestcost * (m.nintclass1/100),2)   
		         case m.cexpclass = '2'
		            m.nshare = ROUND(m.nestcost * (m.nintclass2/100),2)      
		         case m.cexpclass = '3'
		            m.nshare = ROUND(m.nestcost * (m.nintclass3/100),2)      
		         case m.cexpclass = '4'
		            m.nshare = ROUND(m.nestcost * (m.nintclass4/100),2)      
		         case m.cexpclass = '5'
		            m.nshare = ROUND(m.nestcost * (m.nintclass5/100),2)      
		         case m.cexpclass = 'A'
		            m.nshare = ROUND(m.nestcost * (m.nacpint/100),2)      
		         case m.cexpclass = 'B'
		            m.nshare = ROUND(m.nestcost * (m.nbcpint/100),2)      
		      endcase      
		      INSERT INTO tempown FROM MEMVAR
		   ENDSCAN
		ENDSCAN
		
		SELE tempown
		IF RECC() = 0
		   THISFORM.omessage.warning('There were no AFE cash call invoices created.')
		   RETURN
		ENDIF
		
		lcownerid = ''
		
		SELE invhdr
		SET ORDER TO cbatch
		SELE invdet
		SET ORDER TO cidinvd
		
		lnCount = 0
		
		SELE cownerid, cafeno, cwellid, cwellname, SUM(nshare) AS ninvtot FROM tempown INTO CURSOR temptotal ORDER BY cownerid GROUP BY cownerid
		SELE temptotal
		SCAN
		   SCATTER MEMVAR
		   m.cbatch     = THISFORM.oregistry.incrementcounter('%Shared.Counters.Batch')
		   SET DELE OFF
		   SELE invhdr
		   DO WHILE SEEK(m.cbatch)
		      m.cbatch     = THISFORM.oregistry.incrementcounter('%Shared.Counters.Batch')
		   ENDDO
		   SET DELE ON
		   SELE temptotal   
		   m.cinvnum    = ALLT(m.cafeno) + '-' + lcSection
		   *
		   *  Remove invoices for the same owner and afe section
		   *
		   SELE invhdr
		   LOCATE FOR ccustid = m.cownerid AND cinvnum = m.cinvnum
		   IF FOUND()
		      lcBatch = cBatch
		      DELE NEXT 1
		      IF m.goApp.lAMVersion = .T.
		         thisform.glmaint.delbatch(lcBatch)
		      ENDIF   
		   ENDIF   
		   m.ccustid    = m.cownerid
		   m.dinvdate   = ldInvDate
		   m.npayments  = 0
		   m.nsalestax  = 0
		   m.dduedate   = ldInvDate
		   m.ddiscdate  = ldInvDate
		   m.creference = 'AFE For: ' + ALLT(m.cwellname)
		   m.lprinted   = .F.
		   m.cinvtype   = 'A'
		   m.dpostdate  = ldInvDate
		   m.ninvbal    = m.ninvtot
		   m.nsubtotal  = m.ninvtot
		   INSERT INTO invhdr FROM MEMVAR
		   lnCount = lnCount + 1
		   
		   SELE tempown
		   SCAN FOR cownerid == m.cownerid
		      SCATTER MEMVAR
		      m.cidinvd = thisform.oregistry.incrementcounter('%Shared.Counters.Invoice Detail')
		      SET DELE OFF
		      SELE invdet
		      DO WHILE SEEK(m.cidinvd)      
		         m.cidinvd = thisform.oregistry.incrementcounter('%Shared.Counters.Invoice Detail')
		      ENDDO
		      SET DELE ON
		      m.citemid   = m.ccatcode
		      m.citemdesc = m.ccateg
		      m.nprice    = m.nshare
		      m.nquantity = 1
		      m.nextension = m.nshare
		      m.nitemtax   = 0
		      m.cacctno    = ''
		      m.cunitno    = m.cwellid
		      m.cmeasure   = ''
		      m.ninterest  = m.nworkint
		      INSERT INTO invdet FROM MEMVAR
		   ENDSCAN
		ENDSCAN
		
		IF lnCount > 0
		   thisform.omessage.display('Created ' + ALLT(STR(lncount)) + ' cash call invoices')
		ENDIF   
	ENDPROC

	PROCEDURE Init
		DODEFAULT()
		SELECT afehdr
		SET ORDER TO cafeno
		GO TOP
		THISFORM.txtcAFENo.VALUE     = cafeno
		THISFORM.txtdInvDate.VALUE   = DATE()
		THISFORM.chkcatdesc.VALUE    = .F.
		THISFORM.chkcostplus.VALUE   = .F.
		
		* If we're in demo mode, tell the user that this is an optional module
		IF m.goapp.ldemo
		   THISFORM.omessage.warning('The AFE module is an optional module that can be purchased separately.' + ;
		      ' It is included in the demo for evaluation purposes.')
		ENDIF
		
		
		
		
		
		
		
	ENDPROC

	PROCEDURE cboTaxCode.Init
		dodefault()
		
		SELECT cdesc, ctaxcode FROM taxcodes INTO ARRAY laTaxCodes ORDER BY ctaxcode
		
		IF _tally > 0
		   this.addlistitem('All Sections',1,1)
		   this.addlistitem('AL',1,2)
		   FOR lnX = 1 TO _tally
		       this.addlistitem(laTaxCodes[lnX,1],lnX+1,1)
		       this.addlistitem(laTaxCodes[lnX,2],lnX+1,2)
		   ENDFOR    
		ENDIF
		
		this.listitemid = 1
		
	ENDPROC

	PROCEDURE cmdCreate.Click
		thisform.builddata()
	ENDPROC

	PROCEDURE cmdExit.Click
		thisform.release()
	ENDPROC

	PROCEDURE cmdLookAFE.Click
		local lclist
		PRIV llok
		
		llOK = .f.
		
		lclist = 'cafeno, cwellid'
		
		do form picklist with 'afehdr', lclist, thisform.txtcafeno.value, 2
		
		if llok
		   thisform.txtcafeno.value = afehdr.cafeno
		   thisform.txtcafeno.refresh()
		endif   
	ENDPROC

	PROCEDURE cmdLookAFE.When
		RETURN MDOWN()
	ENDPROC

	PROCEDURE txtcafeno.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.cmdLookAFE.CLICK()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtcafeno.LostFocus
		ON KEY LABEL f2 *
		
	ENDPROC

ENDDEFINE
