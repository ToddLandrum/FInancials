*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="export.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor7" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	Height = 430
	Left = 126
	Name = "Dataenvironment"
	Top = 295
	Width = 607

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "groups", ;
		CursorSource = "groups", ;
		Database = ..\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "options", ;
		CursorSource = "options", ;
		Database = ..\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "checks", ;
		CursorSource = "checks", ;
		Database = ..\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "investor", ;
		CursorSource = "investor", ;
		Database = ..\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor4", ;
		Top = 140, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "vendor", ;
		CursorSource = "vendor", ;
		Database = ..\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor5", ;
		Top = 140, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor6", ;
		Top = 140, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor7' AS cursor WITH ;
		Alias = "expense", ;
		CursorSource = "expense", ;
		Database = ..\data\appdata.dbc, ;
		Height = 90, ;
		Left = 445, ;
		Name = "Cursor7", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formexport AS frmdatamanagerformcustom OF "..\custom\cforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="opgExportBy" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swgroup1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDateRange" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtBegDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblGroup" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtEndDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSlash" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtFileName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCkAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdExport" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdExit" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="opgChecks" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom10" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtExpAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom11" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkVersion" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Runcombo1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCheckNo1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCheckNo2" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: export
	*</DefinedPropArrayMethod>

	Caption = "Export To Quicken/QuickBooks"
	DoCreate = .T.
	Height = 444
	HelpContextID = 54
	lcloseonescape = .T.
	lrememberposition = .F.
	Name = "FormExport"
	Width = 398
	cmdatamanager.Name = "cmdatamanager"
	cmdatamanager.TabIndex = 1
	cmlookupmanager.Name = "cmlookupmanager"

	ADD OBJECT 'chkVersion' AS chkcheckboxcustom WITH ;
		Caption = "Caption", ;
		Left = 117, ;
		Name = "chkVersion", ;
		TabIndex = 23, ;
		Top = 350
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdExit' AS cmdcommandbuttoncustom WITH ;
		Caption = "E\<xit", ;
		Height = 36, ;
		Left = 216, ;
		Name = "cmdExit", ;
		TabIndex = 25, ;
		Top = 387, ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdExport' AS cmdcommandbuttoncustom WITH ;
		Caption = "\<Export", ;
		Default = .T., ;
		Height = 36, ;
		Left = 108, ;
		Name = "cmdExport", ;
		TabIndex = 24, ;
		Top = 387, ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'lblDateRange' AS lbltextcustom WITH ;
		Caption = "Date Range:", ;
		Left = 43, ;
		Name = "lblDateRange", ;
		TabIndex = 13, ;
		Top = 163
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblGroup' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Group:", ;
		Height = 16, ;
		Left = 69, ;
		Name = "LblGroup", ;
		TabIndex = 15, ;
		Top = 198, ;
		Visible = .T., ;
		Width = 35, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Run No:", ;
		Left = 64, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 6, ;
		Top = 128
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSlash' AS lbltextcustom WITH ;
		Caption = "/", ;
		FontSize = 12, ;
		Left = 198, ;
		Name = "lblSlash", ;
		TabIndex = 12, ;
		Top = 162
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom1' AS lbltextcustom WITH ;
		BackStyle = 0, ;
		Caption = "Export By:", ;
		Left = 52, ;
		Name = "Lbltextcustom1", ;
		TabIndex = 5, ;
		Top = 63
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom10' AS lbltextcustom WITH ;
		Caption = "Expense Acct:", ;
		Left = 31, ;
		Name = "Lbltextcustom10", ;
		TabIndex = 21, ;
		Top = 311
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom11' AS lbltextcustom WITH ;
		Caption = "Software Version:", ;
		Left = 12, ;
		Name = "Lbltextcustom11", ;
		TabIndex = 22, ;
		Top = 350
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom6' AS lbltextcustom WITH ;
		Caption = "File Name:", ;
		Left = 53, ;
		Name = "Lbltextcustom6", ;
		TabIndex = 17, ;
		Top = 237
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom7' AS lbltextcustom WITH ;
		Caption = "Checking Acct:", ;
		Left = 29, ;
		Name = "Lbltextcustom7", ;
		TabIndex = 19, ;
		Top = 274
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom9' AS lbltextcustom WITH ;
		BackStyle = 0, ;
		Caption = "Export:", ;
		Left = 68, ;
		Name = "Lbltextcustom9", ;
		TabIndex = 3, ;
		Top = 15
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'opgChecks' AS opgoptiongroupcustom WITH ;
		AutoSize = .T., ;
		BorderStyle = 0, ;
		ButtonCount = 2, ;
		Left = 112, ;
		Name = "opgChecks", ;
		TabIndex = 2, ;
		Top = 9, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "Quicken Checks", ;
		Option1.FontSize = 8, ;
		Option1.Height = 16, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Top = 5, ;
		Option1.Width = 96, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "QuickBooks Checks", ;
		Option2.FontSize = 8, ;
		Option2.Height = 16, ;
		Option2.Left = 5, ;
		Option2.Name = "Option2", ;
		Option2.Top = 24, ;
		Option2.Width = 114
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'opgExportBy' AS opgoptiongroupcustom WITH ;
		AutoSize = .T., ;
		BorderStyle = 0, ;
		ButtonCount = 3, ;
		Left = 112, ;
		Name = "opgExportBy", ;
		TabIndex = 4, ;
		Top = 57, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "Run No", ;
		Option1.FontSize = 8, ;
		Option1.Height = 16, ;
		Option1.Left = 5, ;
		Option1.Name = "Period", ;
		Option1.Top = 5, ;
		Option1.Width = 53, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "Date Range", ;
		Option2.FontSize = 8, ;
		Option2.Height = 16, ;
		Option2.Left = 5, ;
		Option2.Name = "Range", ;
		Option2.Top = 24, ;
		Option2.Width = 74, ;
		Option3.AutoSize = .T., ;
		Option3.Caption = "Check # Range", ;
		Option3.FontSize = 8, ;
		Option3.Height = 16, ;
		Option3.Left = 5, ;
		Option3.Name = "Option3", ;
		Option3.Top = 42, ;
		Option3.Width = 91
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'Runcombo1' AS runcombo WITH ;
		Height = 20, ;
		Left = 117, ;
		lshownew = .F., ;
		Name = "Runcombo1", ;
		TabIndex = 7, ;
		Top = 128, ;
		Width = 260
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Swgroup1' AS swgroup WITH ;
		Enabled = .F., ;
		Left = 117, ;
		lexcludeall = .T., ;
		Name = "Swgroup1", ;
		TabIndex = 14, ;
		Top = 196, ;
		Visible = .T., ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'txtBegDate' AS txttextboxcustom WITH ;
		Enabled = .F., ;
		Format = "DK", ;
		Height = 20, ;
		InputMask = "99/99/9999", ;
		Left = 117, ;
		Name = "txtBegDate", ;
		TabIndex = 8, ;
		Top = 161, ;
		Width = 78
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCheckNo1' AS txttextboxcustom WITH ;
		ControlSource = "", ;
		Height = 20, ;
		Left = 117, ;
		Name = "txtCheckNo1", ;
		TabIndex = 9, ;
		Top = 161, ;
		Visible = .F., ;
		Width = 78
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCheckNo2' AS txttextboxcustom WITH ;
		ControlSource = "", ;
		Height = 20, ;
		Left = 205, ;
		Name = "txtCheckNo2", ;
		TabIndex = 11, ;
		Top = 161, ;
		Visible = .F., ;
		Width = 78
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtCkAcct' AS txttextboxcustom WITH ;
		ControlSource = "options.cqbckacct", ;
		Height = 20, ;
		Left = 117, ;
		Name = "txtCkAcct", ;
		TabIndex = 18, ;
		Top = 272, ;
		Width = 260
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtEndDate' AS txttextboxcustom WITH ;
		Enabled = .F., ;
		Format = "DK", ;
		Height = 20, ;
		InputMask = "99/99/9999", ;
		Left = 205, ;
		Name = "txtEndDate", ;
		TabIndex = 10, ;
		Top = 161, ;
		Width = 78
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtExpAcct' AS txttextboxcustom WITH ;
		ControlSource = "options.cqbexpacct", ;
		Height = 20, ;
		Left = 117, ;
		Name = "txtExpAcct", ;
		TabIndex = 20, ;
		Top = 309, ;
		Width = 260
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtFileName' AS txttextboxcustom WITH ;
		ControlSource = "options.cexpfilename", ;
		Height = 20, ;
		Left = 117, ;
		Name = "txtFileName", ;
		TabIndex = 16, ;
		Top = 235, ;
		Width = 260
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE export
		LOCAL tcType, tcPeriod, tcDate1, tcDate2, tcYear, tnRunno, tcRecType, tcGroup, tcCkAcct, tcExpAcct, jMax
		
		tcType     = THISFORM.opgExportBy.VALUE
		IF tcType = 1
		   THISFORM.oMessage.DISPLAY('Selecting to export by run number will only pick up checks created during the closing process, and will NOT pick up any checks created by paying bills.')
		ENDIF
		
		tcDate1    = THISFORM.txtBegDate.VALUE
		tcDate2    = THISFORM.txtEndDate.VALUE
		tcCheckNo1 = ALLT(THISFORM.txtCheckNo1.VALUE)
		tcCheckNo2 = ALLT(THISFORM.txtCheckNo2.VALUE)
		
		IF tcType = 3 AND (EMPTY(tcCheckNo1) OR EMPTY(tcCheckNo2) OR tcCheckNo1 > tcCheckNo2)
		   THISFORM.oMessage.Warning('You must select a valid range of check numbers to use this option.')
		   RETURN
		ENDIF
		
		*tcYear     = THISFORM.txtYear.VALUE
		IF tcType = 1  &&  Run Number
		   tcGroup    = THISFORM.runcombo1.LISTITEM[thisform.runcombo1.listitemid,4]
		   tnRunno    = VAL(THISFORM.runcombo1.LISTITEM[thisform.runcombo1.listitemid,3])
		   tcYear     = THISFORM.runcombo1.LISTITEM[thisform.runcombo1.listitemid,2]
		   tcRecType  = THISFORM.runcombo1.LISTITEM[thisform.runcombo1.listitemid,6]
		ELSE
		   tcGroup  = LEFT(THISFORM.swgroup1.VALUE,2)
		ENDIF
		tcCkAcct   = THISFORM.txtCkAcct.VALUE
		tcExpAcct  = THISFORM.txtExpAcct.VALUE
		tcFileName = ALLTRIM(THISFORM.txtFileName.VALUE)
		tcDMBatch   = THISFORM.runcombo1.LISTITEM[thisform.runcombo1.listitemid,5]
		
		DO CASE  &&  Making sure that all required fields are filled in
		   CASE EMPTY(THISFORM.txtFileName.VALUE)
		      THISFORM.oMessage.DISPLAY('A value is required for file name...')
		      RETURN
		   CASE EMPTY(THISFORM.txtCkAcct.VALUE)
		      THISFORM.oMessage.DISPLAY('A value is required for checking account...')
		      RETURN
		   CASE EMPTY(THISFORM.txtExpAcct.VALUE)
		      THISFORM.oMessage.DISPLAY('A value is required for expense account...')
		      RETURN
		ENDCASE
		
		lcCentury = SET('CENTURY')
		
		IF THISFORM.chkVersion.VALUE = .T.  &&  If version 99 or later, use the four digit year
		   SET CENTURY ON
		ELSE
		   SET CENTURY OFF
		ENDIF
		
		m.projects = 0
		m.checks   = 0
		m.deposit  = 0
		m.expenses = 0
		m.cats     = 0
		
		SELECT options
		GO TOP
		m.qpath    = ALLTRIM(THISFORM.txtFileName.VALUE)
		m.expacct  = options.cqbexpacct
		m.bankacct = options.cqbckacct
		
		IF FILE(m.qpath)
		   ERASE (m.qpath)
		ENDIF
		
		fh = FCREATE(m.qpath)
		
		DO CASE
		
		   CASE THISFORM.opgChecks.VALUE = 1  &&  Quicken Checks
		
		      =FPUTS(fh,"Intuit's QIF format exported by The Disbursement Manager on " + DTOC(DATE()) + " " + TIME())
		
		      SELECT checks
		      DO CASE
		         CASE tcType = 1  &&  Run Number
		            COUNT FOR cBatch   =  tcDMBatch AND cEntryType = 'C' TO jMax
		         CASE tcType = 2  &&  Date Range
		            COUNT FOR BETWEEN(dcheckDATE,tcDate1,tcDate2) AND IIF(tcGroup = '**',cGROUP <> tcGroup,cGROUP = tcGroup) AND cEntryType = 'C' TO jMax
		         CASE tcType = 3
		            COUNT FOR BETWEEN(ALLT(ccheckno),tcCheckNo1,tcCheckNo2) AND cEntryType = 'C' TO jMax
		      ENDCASE
		
		      GO TOP
		      jCount = 0
		
		      IF jMax > 0  &&  If there are checks
		         =FPUTS(fh,"!Type:Bank")
		         SELECT checks
		         SET ORDER TO checkno
		         GO TOP
		
		         oProgress = THIS.oMessage.progressbar('Export Progress')
		         oProgress.SetProgressRange(0,jMax)
		
		         DO CASE
		            CASE tcType = 1  &&  Run No
		               SCAN FOR cBatch == tcDMBatch AND cidtype <> 'D'
		                  SCATTER MEMVAR
		                  jCount = jCount + 1
		                  =FPUTS(fh,"D" + DTOC(m.dcheckDATE))
		                  =FPUTS(fh,"T-" + ALLTRIM(STR(m.namount,9,2)))
		                  =FPUTS(fh,"N" + ALLTRIM(m.ccheckno))
		                  IF m.lvoid = .T.
		                     =FPUTS(fh,"CX")
		                  ENDIF
		                  =FPUTS(fh,"P" + m.cpayee)
		                  =FPUTS(fh,"A" + m.cpayee)
		                  =FPUTS(fh,"A ")
		                  =FPUTS(fh,"A ")
		                  =FPUTS(fh,"L" + m.expacct)
		                  =FPUTS(fh,"^")
		                  =FFLUSH(fh)
		                  =INKEY(.015)
		                  oProgress.UpdateProgress(jCount)
		               ENDSCAN
		
		            CASE tcType = 2  &&  Date Range
		               SCAN FOR BETWEEN(dcheckDATE,tcDate1,tcDate2) ;
		                     AND IIF(tcGroup = '**',cGROUP <> tcGroup,cGROUP = tcGroup) ;
		                     AND cidtype <> 'D'
		                  SCATTER MEMVAR
		                  SELECT checks
		                  jCount = jCount + 1
		                  =FPUTS(fh,"D" + DTOC(m.dcheckDATE))
		                  =FPUTS(fh,"T-" + ALLTRIM(STR(m.namount,9,2)))
		                  =FPUTS(fh,"N" + ALLTRIM(m.ccheckno))
		                  IF m.lvoid = .T.
		                     =FPUTS(fh,"CX")
		                  ENDIF
		                  =FPUTS(fh,"P" + m.cpayee)
		                  =FPUTS(fh,"A" + m.cpayee)
		                  =FPUTS(fh,"A ")
		                  =FPUTS(fh,"A ")
		                  =FPUTS(fh,"L" + m.expacct)
		                  =FPUTS(fh,"^")
		                  =FFLUSH(fh)
		                  =INKEY(.015)
		                  oProgress.UpdateProgress(jCount)
		               ENDSCAN
		
		            CASE tcType = 3  &&  Check # Range
		               SCAN FOR BETWEEN(ALLT(ccheckno),tcCheckNo1,tcCheckNo2) AND cidtype <> 'D'
		                  SCATTER MEMVAR
		                  jCount = jCount + 1
		                  =FPUTS(fh,"D" + DTOC(m.dcheckDATE))
		                  =FPUTS(fh,"T-" + ALLTRIM(STR(m.namount,9,2)))
		                  =FPUTS(fh,"N" + ALLTRIM(m.ccheckno))
		                  IF m.lvoid = .T.
		                     =FPUTS(fh,"CX")
		                  ENDIF
		                  =FPUTS(fh,"P" + m.cpayee)
		                  =FPUTS(fh,"A" + m.cpayee)
		                  =FPUTS(fh,"A ")
		                  =FPUTS(fh,"A ")
		                  =FPUTS(fh,"L" + m.expacct)
		                  =FPUTS(fh,"^")
		                  =FFLUSH(fh)
		                  =INKEY(.015)
		                  oProgress.UpdateProgress(jCount)
		               ENDSCAN
		         ENDCASE
		         =FFLUSH(fh)
		         =FFLUSH(fh)
		         =FCLOSE(fh)
		         =FFLUSH(fh)
		         =FCLOSE(fh)
		
		         THISFORM.oMessage.DISPLAY('Exported ' + ALLTRIM(STR(jCount,6)) + ' Transactions to Quicken')
		
		      ELSE  &&  No checks
		
		         THISFORM.oMessage.DISPLAY('There are no checks to export matching your criteria...')
		         =FFLUSH(fh)
		         =FCLOSE(fh)
		         ERASE (m.qpath)
		         RETURN
		
		      ENDIF
		
		   CASE THISFORM.opgChecks.VALUE = 2  &&  Quickbooks Checks
		
		      =FPUTS(fh,"Intuit's IIF format exported by The Disbursement Manager  " + DTOC(DATE()) + " " + TIME())
		      =FPUTS(fh,'!TRNS	TRNSID	CHECK	DATE	ACCNT	NAME	CLASS	AMOUNT	DOCNUM	CLEAR	TOPRINT')
		      =FPUTS(fh,'!SPL	SPLID	CHECK	DATE	ACCNT	NAME	CLASS	AMOUNT')
		      =FPUTS(fh,'!TRNS	TRNSID	DEPOSIT	DATE	ACCNT	NAME	CLASS	AMOUNT	DOCNUM	CLEAR	TOPRINT')
		
		      DO CASE
		         CASE tcType = 1  &&  Run Number
		            SELECT cid FROM checks ;
		               WHERE cidtype='I' ;
		               AND cBatch == tcDMBatch ;
		               INTO CURSOR tmpowner ;
		               GROUP BY cid ;
		               ORDER BY cid
		
		            SELECT cid FROM checks ;
		               WHERE cidtype = 'V' ;
		               AND cBatch == tcDMBatch ;
		               INTO CURSOR tmpVend ;
		               GROUP BY cid ;
		               ORDER BY cid
		               
		         CASE tcType = 2  &&  Date Range
		            SELECT cid FROM checks ;
		               WHERE cidtype = 'I' ;
		               AND BETWEEN(dcheckDATE, tcDate1, tcDate2) ;
		               AND IIF(tcGroup = '**',cGROUP <> tcGroup,cGROUP = tcGroup)  ;
		               INTO CURSOR tmpowner ;
		               GROUP BY cid ;
		               ORDER BY cid
		
		            SELECT cid FROM checks ;
		               WHERE cidtype = 'V' ;
		               AND BETWEEN(dcheckDATE, tcDate1, tcDate2) ;
		               AND IIF(tcGroup = '**',cGROUP <> tcGroup,cGROUP = tcGroup)  ;
		               INTO CURSOR tmpVend ;
		               GROUP BY cid ;
		               ORDER BY cid
		
		         CASE tcType = 3  &&  Check # Range
		            SELECT cid FROM checks ;
		               WHERE cidtype = 'I' ;
		               AND BETWEEN(ALLT(ccheckno),tcCheckNo1,tcCheckNo2) ;
		               INTO CURSOR tmpowner ;
		               GROUP BY cid ;
		               ORDER BY cid
		
		            SELECT cid FROM checks ;
		               WHERE cidtype = 'V' ;
		               AND BETWEEN(ALLT(ccheckno),tcCheckNo1,tcCheckNo2) ;
		               INTO CURSOR tmpVend ;
		               GROUP BY cid ;
		               ORDER BY cid
		      ENDCASE
		
		      SELECT tmpowner
		      GO TOP
		      tcFirst = cid
		      GO BOTT
		      tcLast  = cid
		      SELECT checks
		      SET ORDER TO checkno
		
		      DO CASE
		         CASE tcType = 1  &&  Run Number
		            COUNT FOR cBatch == tcDMBatch ;
		               AND cidtype <> 'D' TO jMax
		
		         CASE tcType = 2  &&  Date Range
		            COUNT FOR BETWEEN(dcheckDATE,tcDate1,tcDate2) ;
		               AND IIF(tcGroup = '**',cGROUP <> tcGroup,cGROUP = tcGroup) ;
		               AND cidtype <> 'D' TO jMax
		
		         CASE tcType = 3  &&  Check # Range
		            COUNT FOR BETWEEN(ALLT(ccheckno),tcCheckNo1,tcCheckNo2)  ;
		               AND cidtype <> 'D' TO jMax
		      ENDCASE
		
		      GO TOP
		
		      IF jMax > 0  &&  If checks exist for the given criteria
		
		         oProgress = THIS.oMessage.progressbar('Export Progress')
		         oProgress.SetProgressRange(0,jMax)
		
		         DO CASE
		            CASE tcType = 1  &&  Run Number
		               jCount = 0
		               SELECT checks
		               SCAN FOR cBatch == tcDMBatch ;
		                     AND cidtype <> 'D'
		                  SCATTER MEMVAR
		                  jCount = jCount + 1
		                  IF m.namount = 0
		                     m.lvoid = .T.
		                  ENDIF
		                  SELECT checks
		                  m.checks = m.checks + 1
		                  =FPUTS(fh," ")
		                  IF m.lvoid = .T.
		                     =FPUTS(fh,"TRNS	" +	STR(m.checks,4) + 	"	CHECK	"+DTOC(m.dcheckDATE)+"	"+ALLTRIM(m.bankacct)+"	"+ALLTRIM(m.cpayee)+"	"+"	-"+ALLTRIM(STR(m.namount,9,2))+"	"+ALLTRIM(m.ccheckno)+"	Y	N")
		                  ELSE
		                     =FPUTS(fh,"TRNS	" +	STR(m.checks,4) + 	"	CHECK	"+DTOC(m.dcheckDATE)+"	"+ALLTRIM(m.bankacct)+"	"+ALLTRIM(m.cpayee)+"	"+"	-"+ALLTRIM(STR(m.namount,9,2))+"	"+ALLTRIM(m.ccheckno)+"	N	N")
		                  ENDIF
		                  m.ncnt = 1
		                  IF USED('invtmp') AND NOT m.lvoid = .T.
		                     SELECT invtmp
		                     SCAN FOR cownerid = m.cid AND nnetcheck <> 0
		                        SCATTER MEMVAR
		                        SELECT wells
		                        SET ORDER TO cwellid
		                        IF SEEK(m.cwellid)
		                           m.class = TRIM(m.cwellid)
		                        ENDIF
		                        =FPUTS(fh,"SPL	"+STR(m.ncnt,2)+	"	CHECK	"+DTOC(m.dcheckDATE)+"	"+m.expacct+"	"+ALLTRIM(m.cpayee)+"	" +m.class+"	"+ALLTRIM(STR(m.nnetcheck,9,2)))
		                        m.ncnt = m.ncnt + 1
		                     ENDSCAN
		                     m.ncnt = 1
		                     IF m.cidtype = 'V'
		                        SELECT expense
		                        SCAN FOR cvendorid = m.cid AND cYEAR+cperiod = tcYear+tcPeriod
		                           SCATTER MEMVAR
		                           SELECT wells
		                           IF SEEK(m.cwellid)
		                              IF cGROUP <> tcGroup
		                                 LOOP
		                              ENDIF
		                              =FPUTS(fh,"SPL	"+STR(m.ncnt,2)+	"	CHECK	"+DTOC(m.date)+"	"+m.expacct+"	"+ALLTRIM(m.payee)+"	" +m.class+"	"+ALLTRIM(STR(m.amount,9,2)))
		                              m.ncnt = m.ncnt + 1
		                           ENDIF
		                        ENDSCAN
		                     ENDIF
		                  ELSE
		                     =FPUTS(fh,"SPL	1	CHECK	"+DTOC(m.dcheckDATE)+"	"+m.expacct+"	"+ALLTRIM(m.cpayee)+" 	" +" "+"	"+ALLTRIM(STR(m.namount,9,2)))
		                  ENDIF
		                  =FPUTS(fh,"ENDTRNS	")
		                  =FPUTS(fh," ")
		                  =INKEY(.015)
		                  =FFLUSH(fh)
		                  =INKEY(.015)
		                  oProgress.UpdateProgress(jCount)
		               ENDSCAN
		               
		            CASE tcType = 2  &&  Date Range
		               jCount = 0
		               SELECT checks
		               SCAN FOR BETWEEN(dcheckDATE,tcDate1,tcDate2) ;
		                     AND IIF(tcGroup = '**',cGROUP <> tcGroup,cGROUP = tcGroup) ;
		                     AND cidtype <> 'D'
		                  SCATTER MEMVAR
		                  SELECT checks
		                  m.checks = m.checks + 1
		                  =FPUTS(fh," ")
		                  IF m.lvoid = .T.
		                     =FPUTS(fh,"TRNS		CHECK	"+DTOC(m.dcheckDATE)+"	"+ALLTRIM(m.bankacct)+"	"+ALLTRIM(m.cpayee)+"		-"+ALLTRIM(STR(m.namount,9,2))+"	"+ALLTRIM(m.ccheckno)+"	Y	N")
		                  ELSE
		                     =FPUTS(fh,"TRNS		CHECK	"+DTOC(m.dcheckDATE)+"	"+ALLTRIM(m.bankacct)+"	"+ALLTRIM(m.cpayee)+"		-"+ALLTRIM(STR(m.namount,9,2))+"	"+ALLTRIM(m.ccheckno)+"	N	N")
		                  ENDIF
		                  =FPUTS(fh,"SPL	1	CHECK	"+DTOC(m.dcheckDATE)+"	"+m.expacct+"	"+ALLTRIM(m.cpayee)+"		"+ALLTRIM(STR(m.namount,9,2)))
		                  =FPUTS(fh,"ENDTRNS	")
		                  =FPUTS(fh," ")
		                  =INKEY(.015)
		                  =FFLUSH(fh)
		                  =INKEY(.015)
		                  jCount = jCount + 1
		                  oProgress.UpdateProgress(jCount)
		               ENDSCAN
		               
		            CASE tcType = 3  &&  Check # Range
		               jCount = 0
		               SELECT checks
		               SCAN FOR BETWEEN(ALLT(ccheckno),tcCheckNo1,tcCheckNo2) ;
		                     AND cidtype <> 'D'
		                  SCATTER MEMVAR
		                  SELECT checks
		                  m.checks = m.checks + 1
		                  =FPUTS(fh," ")
		                  IF m.lvoid = .T.
		                     =FPUTS(fh,"TRNS		CHECK	"+DTOC(m.dcheckDATE)+"	"+ALLTRIM(m.bankacct)+"	"+ALLTRIM(m.cpayee)+"		-"+ALLTRIM(STR(m.namount,9,2))+"	"+ALLTRIM(m.ccheckno)+"	Y	N")
		                  ELSE
		                     =FPUTS(fh,"TRNS		CHECK	"+DTOC(m.dcheckDATE)+"	"+ALLTRIM(m.bankacct)+"	"+ALLTRIM(m.cpayee)+"		-"+ALLTRIM(STR(m.namount,9,2))+"	"+ALLTRIM(m.ccheckno)+"	N	N")
		                  ENDIF
		                  =FPUTS(fh,"SPL	1	CHECK	"+DTOC(m.dcheckDATE)+"	"+m.expacct+"	"+ALLTRIM(m.cpayee)+"		"+ALLTRIM(STR(m.namount,9,2)))
		                  =FPUTS(fh,"ENDTRNS	")
		                  =FPUTS(fh," ")
		                  =INKEY(.015)
		                  =FFLUSH(fh)
		                  =INKEY(.015)
		                  jCount = jCount + 1
		                  oProgress.UpdateProgress(jCount)
		               ENDSCAN
		         ENDCASE
		
		         =FFLUSH(fh)
		         =FCLOSE(fh)
		         =FFLUSH(fh)
		         =FCLOSE(fh)
		
		         THISFORM.oMessage.DISPLAY('Exported ' + ALLTRIM(STR(jCount,6)) + ' Transactions to QuickBooks')
		
		      ELSE  &&  No checks
		
		         THISFORM.oMessage.DISPLAY('There are no checks to export meeting your criteria...')
		         =FFLUSH(fh)
		         =FCLOSE(fh)
		         ERASE (m.qpath)
		         RETURN
		
		      ENDIF
		
		ENDCASE
		
		SET CENTURY &lcCentury
		
		RETURN
		
	ENDPROC

	PROCEDURE chkVersion.Init
		THIS.SET('caption','Quicken version 99 or newer')
		THIS.VALUE = .T.
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE cmdExit.Click
		THISFORM.RELEASE()
		
	ENDPROC

	PROCEDURE cmdExport.Click
		THISFORM.EXPORT()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE opgChecks.Init
		THIS.VALUE = 1
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE opgChecks.Option1.Click
		THISFORM.chkVersion.SET('caption','Quicken version 99 or later')
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE opgChecks.Option2.Click
		THISFORM.chkVersion.SET('caption','Quickbooks version 99 or later')
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE opgExportBy.Init
		THIS.VALUE = 1
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE opgExportBy.Valid
		DO CASE
		   CASE THIS.VALUE = 1
		      THISFORM.swgroup1.ENABLED = .F.
		      THISFORM.txtbegdate.ENABLED = .F.
		      THISFORM.txtenddate.ENABLED = .F.
		      THISFORM.runcombo1.ENABLED = .T.
		   CASE THIS.VALUE = 2
		      THISFORM.swgroup1.ENABLED = .T.
		      THISFORM.txtbegdate.ENABLED = .T.
		      THISFORM.txtenddate.ENABLED = .T.
		      THISFORM.runcombo1.ENABLED = .F.
		      THISFORM.txtbegdate.VISIBLE = .T.
		      THISFORM.txtenddate.VISIBLE = .T.
		      THISFORM.lblSlash.CAPTION = '/'
		      THISFORM.lblDateRange.CAPTION = 'Date Range:'
		      thisform.txtCheckNo1.visible = .f.
		      thisform.txtCheckNo2.visible = .f.
		      thisform.lblDateRange.left = 43
		   CASE THIS.VALUE = 3
		      THISFORM.swgroup1.ENABLED = .F.
		      THISFORM.txtbegdate.ENABLED = .F.
		      THISFORM.txtbegdate.VISIBLE = .F.
		      THISFORM.txtenddate.VISIBLE = .F.
		      THISFORM.lblSlash.CAPTION = '-'
		      THISFORM.lblDateRange.CAPTION = 'Check # Range:'
		      THISFORM.txtenddate.ENABLED = .F.
		      THISFORM.runcombo1.ENABLED = .F.
		      thisform.txtCheckNo1.visible = .t.
		      thisform.txtCheckNo2.visible = .t.
		      thisform.lblDateRange.left = 26
		ENDCASE
		
	ENDPROC

	PROCEDURE Runcombo1.Init
		dodefault()
		
		this.listitemid = 1
	ENDPROC

	PROCEDURE Swgroup1.Init
		dodefault()
		
		this.listitemid = 1
	ENDPROC

	PROCEDURE txtBegDate.Init
		THIS.VALUE = DATE()-30
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtEndDate.Init
		THIS.VALUE = DATE()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtFileName.Valid
		IF THISFORM.opgChecks.VALUE = 1  AND NOT EMPTY(THIS.VALUE)  &&  Quicken
		   IF RIGHT(ALLTRIM(THIS.VALUE),4) <> '.qif' AND RIGHT(ALLTRIM(THIS.VALUE),4) <> '.QIF'  AND NOT EMPTY(THIS.VALUE)
		      THIS.VALUE = ALLTRIM(THIS.VALUE) + '.qif'
		      THIS.REFRESH()
		   ENDIF
		ELSE  &&  Quickbooks
		   IF RIGHT(ALLTRIM(THIS.VALUE),4) <> '.iif' AND RIGHT(ALLTRIM(THIS.VALUE),4) <> '.IIF'  AND NOT EMPTY(THIS.VALUE)
		      THIS.VALUE = ALLTRIM(THIS.VALUE) + '.iif'
		      THIS.REFRESH()
		   ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

ENDDEFINE
