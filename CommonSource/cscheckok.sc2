*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="cscheckok.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 200
	Left = 40
	Name = "Dataenvironment"
	Top = 235
	Width = 520

ENDDEFINE

DEFINE CLASS formcscheckok AS frmformcustom OF "..\custom\cforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblMessage" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcCheckNo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCheckList" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: ccheck1		&& 1st Check Printed
		*p: ccheck2		&& Last Check Printed
		*p: lcreturn		&& The return value for this form.
	*</DefinedPropArrayMethod>

	Caption = "Form"
	DoCreate = .T.
	Height = 208
	HelpContextID = 539
	Name = "FormCscheckok"
	Width = 435
	WindowType = 1
	Mwresize1.lblHighLight.Name = "lblHighLight"
	Mwresize1.lblShading.Name = "lblShading"
	Mwresize1.Left = 416
	Mwresize1.Name = "Mwresize1"
	Mwresize1.Top = 187
	Mwresize1.ZOrderSet = 1

	ADD OBJECT 'cmdCheckList' AS cmdcommandbuttoncustom WITH ;
		Caption = "\<Selected Checks", ;
		Height = 36, ;
		Left = 88, ;
		Name = "cmdCheckList", ;
		Top = 156, ;
		Width = 96, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOK' AS cmdcommandbuttoncustom WITH ;
		Caption = "\<OK", ;
		Height = 36, ;
		Left = 232, ;
		Name = "cmdOK", ;
		Top = 156, ;
		Width = 96, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "Specify the first incorrectly printed check:", ;
		FontBold = .T., ;
		Left = 57, ;
		Name = "Lbllabelcustom2", ;
		Top = 109, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblMessage' AS lbllabelcustom WITH ;
		AutoSize = .F., ;
		Caption = "lblMessage", ;
		FontBold = .T., ;
		Height = 84, ;
		Left = 24, ;
		Name = "lblMessage", ;
		Top = 12, ;
		Width = 396, ;
		WordWrap = .T., ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'txtcCheckNo' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 300, ;
		Name = "txtcCheckNo", ;
		Top = 107, ;
		Width = 96, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE Init
		LPARA cMessage, cTitle, cCheck1, cCheck2
		
		thisform.Caption = m.cTitle
		thisform.cCheck1 = m.cCheck1
		thisform.cCheck2 = m.cCheck2
		thisform.lcReturn = m.cCheck1
		
		thisform.lblMessage.Caption = m.cMessage
		ON KEY LABEL F3 _screen.ActiveForm.CallHelp(_screen.ActiveForm.name)
		DODEFAULT()
		
		
		
		
		
	ENDPROC

	PROCEDURE Unload
		DODEFAULT()
		RETURN (PADL(ALLTRIM(thisform.lcReturn),10,' '))
	ENDPROC

	PROCEDURE cmdCheckList.Click
		
		DO FORM cschecklist NAME ochecklist LINKED 
		thisform.lcReturn = '*****'
		RELEASE ochecklist
		ochecklist = .null.
		thisform.release()
		
	ENDPROC

	PROCEDURE cmdOK.Click
		IF NOT USED('selected')
		   CREATE CURSOR selected ;
		      (cID   C(10), ;
		      dcheckdate d, ;
		      namount    N(12,2), ;
		      cidchec    c(8))
		   INDEX ON cID TAG cID
		ENDIF 
		
		DO CASE
		   CASE EMPTY(thisform.txtcCheckNo.value)
		      IF NOT thisform.oMessage.Confirm('Are you sure all the checks printed OK?')
		         thisform.setnextcontrol(thisform.txtcCheckNo)
		      ELSE    
		         thisform.lcReturn = PADL(TRANSFORM(VAL(thisform.cCheck2)+1),10,' ')
		      ENDIF   
		   CASE NOT EMPTY(thisform.txtcCheckNo.value)
		      IF BETWEEN(VAL(thisform.txtcCheckNo.value), VAL(thisform.cCheck1), VAL(thisform.cCheck2))
		         IF VAL(thisform.txtcCheckNo.value) = VAL(thisform.cCheck1)
		            IF NOT thisform.oMessage.Confirm("Are you sure that none of the check(s) printed OK?")
		               thisform.setnextcontrol(thisform.txtcCheckNo)
		               RETURN
		            ENDIF      
		         ELSE
		            IF NOT thisform.oMessage.Confirm("Are you sure the check(s) starting with the given number didn't print OK?")
		               thisform.setnextcontrol(thisform.txtcCheckNo)
		               RETURN
		            ENDIF      
		         ENDIF   
		      ELSE
		         thisform.oMessage.Warning('Check ' + ALLTRIM(thisform.txtcCheckNo.value) + ' was not one of the checks printed. Please reenter the check number.')   
		         thisform.setnextcontrol(thisform.txtcCheckNo)
		         RETURN
		      ENDIF   
		      thisform.lcReturn = thisform.txtcCheckNo.value
		ENDCASE      
		
		thisform.release()
		
		
	ENDPROC

	PROCEDURE txtcCheckNo.LostFocus
		this.value = PADL(ALLTRIM(this.value),10,' ')
		this.refresh()
	ENDPROC

ENDDEFINE
