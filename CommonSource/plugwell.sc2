*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="plugwell.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 352
	Left = 49
	Name = "Dataenvironment"
	Top = 384
	Width = 632

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "plugwell", ;
		CursorSource = "plugwell", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 116, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "vendor", ;
		CursorSource = "vendor", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Filter = "lIntegGL", ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 19, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "wellinv", ;
		CursorSource = "wellinv", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 430, ;
		Name = "Cursor4", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formplugwelltargets AS frmdatamanagerformcustom OF "..\custom\cforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="txtWellID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtWellName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLookWell" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Dpk1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLookVendor" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCCashacct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAmountPerRun" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtnChargeAmount" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtBalance" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcVendorID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcVendName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboQBAcct" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: calcbalance		&& Calculate the balance in the Plugging Fund for this well.
		*m: calcperrun		&& Calculates the plugging amount to release per run.
		*m: fillstaticdata
		*m: oplugging_access
		*p: oplugging
	*</DefinedPropArrayMethod>

	Caption = "Plugging Fund Well Targets"
	cdisplayname = Well Plugging Target
	DoCreate = .T.
	Height = 291
	Name = "FormPlugWellTargets"
	oplugging = .NULL.
	Width = 606
	_memberdata = <VFPData>
		<memberdata name="fillstaticdata" display="FillStaticData"/>
		<memberdata name="calcperrun" display="CalcPerRun"/>
		<memberdata name="calcbalance" display="CalcBalance"/>
		<memberdata name="oplugging" display="oPlugging"/>
		<memberdata name="oplugging_access" display="oPlugging_Access"/>
		</VFPData>
	cmdatamanager.Name = "cmdatamanager"
	cmdatamanager.TabIndex = 1
	cmlookupmanager.Name = "cmlookupmanager"
	Mwresize1.lblHighLight.Name = "lblHighLight"
	Mwresize1.lblShading.Name = "lblShading"
	Mwresize1.Left = 588
	Mwresize1.Name = "Mwresize1"
	Mwresize1.TabIndex = 12
	Mwresize1.Top = 252

	ADD OBJECT 'cboAcct' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		ColumnCount = 1, ;
		ControlSource = "plugwell.cacctno", ;
		FontName = "Courier New", ;
		Height = 20, ;
		Left = 127, ;
		lrequired = .T., ;
		Name = "cboAcct", ;
		TabIndex = 18, ;
		Top = 236, ;
		Width = 352, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboQBAcct' AS qbaccount WITH ;
		ControlSource = "plugwell.cacctno", ;
		Height = 20, ;
		lbankonly = .F., ;
		Left = 127, ;
		Name = "cboQBAcct", ;
		TabIndex = 19, ;
		Top = 236, ;
		Width = 346, ;
		ZOrderSet = 58
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'cmdLookVendor' AS cmdcommandbuttoncustom WITH ;
		Caption = "Vendor ID", ;
		Height = 29, ;
		Left = 58, ;
		Name = "cmdLookVendor", ;
		TabIndex = 8, ;
		Top = 165, ;
		Width = 60, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdLookWell' AS cmdcommandbuttoncustom WITH ;
		Caption = " Well ID", ;
		Height = 25, ;
		Left = 43, ;
		Name = "cmdLookWell", ;
		TabIndex = 2, ;
		TabStop = .F., ;
		Top = 17, ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Dpk1' AS dpk WITH ;
		ControlSource = "plugwell.dtargetdate", ;
		Left = 127, ;
		lnocurrentdate = .T., ;
		lrequired = .T., ;
		Name = "Dpk1", ;
		TabIndex = 5, ;
		Top = 57
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />

	ADD OBJECT 'lblCCashacct' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Plugging Fund Acct", ;
		Height = 16, ;
		Left = 23, ;
		Name = "lblCCashacct", ;
		TabIndex = 11, ;
		Top = 238, ;
		Width = 95, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Target Date:", ;
		Left = 57, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 6, ;
		Top = 60
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "Plugging Amount", ;
		Left = 36, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 10, ;
		Top = 96
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom3' AS lbllabelcustom WITH ;
		Caption = "Amount Charged Per Month", ;
		Left = 288, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 13, ;
		Top = 96
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom4' AS lbllabelcustom WITH ;
		Caption = "Current Balance", ;
		Left = 38, ;
		Name = "Lbllabelcustom4", ;
		TabIndex = 15, ;
		Top = 134
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'txtAmountPerRun' AS txttextboxcustom WITH ;
		Alignment = 3, ;
		ControlSource = "plugwell.namountrun", ;
		Height = 20, ;
		InputMask = "99,999,999.99", ;
		Left = 432, ;
		lrequired = .T., ;
		Name = "txtAmountPerRun", ;
		TabIndex = 9, ;
		Top = 92, ;
		Value = 0.00, ;
		Width = 132
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtBalance' AS txtnumeric WITH ;
		Height = 20, ;
		Left = 127, ;
		Name = "txtBalance", ;
		TabIndex = 14, ;
		Top = 132, ;
		Width = 132
		*< END OBJECT: ClassLib="..\common\cmgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcVendName' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Height = 20, ;
		Left = 127, ;
		Name = "txtcVendName", ;
		TabIndex = 17, ;
		Top = 192, ;
		Width = 352
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcVendorID' AS txtquickfill WITH ;
		clistexpression = vendor.cvendorid, ;
		clistworkarea = vendor, ;
		ControlSource = "plugwell.cvendorid", ;
		Format = "!", ;
		Height = 20, ;
		Left = 127, ;
		lrequired = .T., ;
		MaxLength = 10, ;
		Name = "txtcVendorID", ;
		SelectOnEntry = .T., ;
		TabIndex = 16, ;
		Top = 169, ;
		Width = 90, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtnChargeAmount' AS txtnumeric WITH ;
		ControlSource = "plugwell.nplugamount", ;
		InputMask = "99,999,999.99", ;
		Left = 127, ;
		lrequired = .T., ;
		Name = "txtnChargeAmount", ;
		TabIndex = 7, ;
		Top = 96, ;
		Value = 0.00
		*< END OBJECT: ClassLib="..\common\cmgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtWellID' AS txtquickfill WITH ;
		clistexpression = cwellid, ;
		clistworkarea = wells, ;
		ControlSource = "plugwell.cwellid", ;
		Height = 20, ;
		InputMask = "XXXXXXXXXX", ;
		Left = 127, ;
		lrequired = .T., ;
		MaxLength = 10, ;
		Name = "txtWellID", ;
		TabIndex = 3, ;
		Top = 18, ;
		Width = 106
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtWellName' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Enabled = .T., ;
		Height = 20, ;
		Left = 252, ;
		Name = "txtWellName", ;
		TabIndex = 4, ;
		Top = 18, ;
		Width = 344
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE calcbalance		&& Calculate the balance in the Plugging Fund for this well.
	ENDPROC

	PROCEDURE calcperrun		&& Calculates the plugging amount to release per run.
		LOCAL ldTargetDate, ldDate, lnDays, lnMonths, lnTarget, lnPerRun, llCalculate
		
		llCalculate = .T.
		
		IF THISFORM.txtAmountPerRun.GetValue() # 0
		   llCalculate = MESSAGEBOX('Should the Amount to be charged each run be calculated?', 36, 'Calc Amount') = 6
		ENDIF    
		
		IF llCalculate AND NOT EMPTY(thisform.txtnchargeAmount.Value)
		      ldTargetDate = THISFORM.dpk1.VALUE
		      ldDate       = DATE()
		
		      lnDays   = ldTargetDate - ldDate
		      lnMonths = INT(lnDays / 30)
		
		      lnTarget = THISFORM.txtnchargeAmount.GetValue()
		      IF lnmonths # 0
		         lnPerRun = ROUND(lnTarget / lnMonths, 0)
		      ELSE
		         lnPerRun = 0
		      ENDIF    
		
		      THISFORM.txtAmountPerRun.SET('Value', lnPerRun)
		ENDIF 
		
		
	ENDPROC

	PROCEDURE fillstaticdata
		* Fill in the descriptions like Well Name and Expense Category
		
		swselect('wells')
		LOCATE FOR cwellid = plugwell.cwellid
		IF FOUND()
		   thisform.txtwellname.Value = wells.cwellname
		ELSE
		   thisform.txtwellname.Value = ''
		ENDIF 
		
		swselect('vendor')
		LOCATE FOR cvendorid = plugwell.cvendorid
		IF FOUND()
		   thisform.txtcVendName.Value = cvendname
		ELSE
		   thisform.txtcvendName.Value = ''
		ENDIF 
	ENDPROC

	PROCEDURE Init
		IF DODEFAULT()
		   IF NOT m.goapp.lAMVersion
		      IF NOT m.goapp.lQBVersion
		         thisform.lblcCashacct.Visible = .f.
		         thisform.cboAcct.Visible = .f.
		         thisform.cboqbAcct.Visible = .f.
		      ELSE
		         thisform.cboqbAcct.Visible = .t.
		         thisform.cboacct.Visible   = .f.
		      ENDIF    
		   ELSE
		      thisform.cboqbAcct.Visible = .f.   
		   ENDIF
		ENDIF 
	ENDPROC

	PROCEDURE Load
		IF DODEFAULT()
		     IF m.goapp.lQBVersion
		         *  Get the cursor of QuickBooks Accounts
		         m.goApp.oQB.QBAccounts('',.F.,.T.,THISFORM.DATASESSIONID)
		     ENDIF     
		ENDIF
		
	ENDPROC

	PROCEDURE nicecursorname
		LPARAMETERS cWorkarea
		
		RETURN 'Well Plugging Fund Target'
	ENDPROC

	PROCEDURE oplugging_access
		TRY
		  SET PROCEDURE TO custom\plugging.prg additive
		CATCH
		ENDTRY 
		IF VARTYPE(this.oPlugging) # 'O'
		   this.oPlugging = CREATEOBJECT('plugging')
		ENDIF 
		
		return This.oPlugging
		
	ENDPROC

	PROCEDURE cboAcct.Init
		*
		*  Builds the data displayed in the combo list box
		*
		
		SELECT  cAcctNo + ' - ' +cAcctDesc, cAcctNo, cAcctDesc FROM coa INTO ARRAY laAcct WHERE lBankacct = .F. ORDER BY cAcctNo
		
		IF _TALLY > 0
		   FOR lnX = 1 TO ALEN(laAcct,1)
		      THIS.ADDLISTITEM(laAcct[lnX,1],lnX,1)
		      THIS.ADDLISTITEM(laAcct[lnX,2],lnX,2)
		   ENDFOR
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE cmdatamanager.afternav
		LPARAMETERS cWorkarea
		
		IF cWorkarea = 'Plugwell'
		   thisform.FillStaticData()
		   thisform.txtBalance.set('value', thisform.oPlugging.CurrentBalance(plugwell.cwellid))
		ENDIF 
	ENDPROC

	PROCEDURE cmdatamanager.afternew
		LPARAMETERS cWorkarea
		
		IF DODEFAULT(cWorkarea)
		   thisform.txtwellname.Value = ' '
		   thisform.txtwellname.Refresh()
		   thisform.txtcvendName.Value = ' '
		   thisform.txtcvendName.Refresh()
		   this.replace('plugwell','nplugamount',0)
		   this.replace('plugwell','namountrun',0)
		ENDIF 
	ENDPROC

	PROCEDURE cmdatamanager.beforedelete
		LPARAMETERS cWorkarea
		
		IF cWorkarea = 'Plugwell'
		   IF VAL(thisform.txtbalance.Value) # 0
		      MESSAGEBOX('This plugging fund target has been used and has a balance. It cannot be deleted!',16,'Delete Problem')
		      RETURN .f.
		   ENDIF
		ENDIF 
	ENDPROC

	PROCEDURE cmdLookVendor.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .T.
		lcList = 'cvendorid,csortfield'
		SELECT vendor
		SET FILTER TO lIntegGL
		DO FORM ..\custom\picklist WITH 'Vendor', lcList, thisform.txtcvendorid.value, 2
		
		IF llOK
		   thisform.txtcVendorID.set('value', vendor.cvendorid)
		   thisform.txtcVendName.value = vendor.cvendname
		   thisform.txtcVendorID.refresh()
		   thisform.txtcVendName.refresh()
		   thisform.setnextcontrol(thisform.txtcVendorID)
		ENDIF   
	ENDPROC

	PROCEDURE cmdLookVendor.When
		RETURN MDOWN() AND NOT EOF('plugwell')
	ENDPROC

	PROCEDURE cmdLookWell.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cwellid,cwellname,cwellstat'
		
		do form picklist with 'Wells', lcList, thisform.txtwellid.value, 3
		
		if llok
		   thisform.txtwellid.set('value',wells.cwellid)
		   thisform.txtwellname.set('value',wells.cwellname)
		endif   
		
		thisform.setnextcontrol(thisform.txtWellID)
	ENDPROC

	PROCEDURE cmdLookWell.When
		RETURN MDOWN() AND NOT EOF('plugwell')
	ENDPROC

	PROCEDURE txtAmountPerRun.Valid
		IF DODEFAULT()
		   IF plugwell.namountrun < 0
		      MESSAGEBOX('The plugging amount per run can not be less than zero!',16,'Bad Plugging Amount')
		      RETURN 0
		   ENDIF 
		ENDIF 
	ENDPROC

	PROCEDURE txtBalance.When
		IF DODEFAULT()
		   RETURN .f.
		ENDIF    
		
	ENDPROC

	PROCEDURE txtcVendName.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtcVendorID.GotFocus
		ON KEY LABEL F2 _screen.activeform.cmdLookVendor.Click()
		DODEFAULT()
	ENDPROC

	PROCEDURE txtcVendorID.InteractiveChange
		IF DODEFAULT()
		   SELECT vendor
		   LOCATE FOR cvendorid == this.value
		   IF FOUND() 
		      THISFORM.txtcVendName.SET('value',vendor.cvendname)
		   ELSE
		      THISFORM.txtcVendName.SET('value','')
		   ENDIF 
		ENDIF       
		   
	ENDPROC

	PROCEDURE txtcVendorID.LostFocus
		ON KEY LABEL F2 *
		
	ENDPROC

	PROCEDURE txtnChargeAmount.Valid
		IF DODEFAULT()
		   IF plugwell.nplugamount < 0
		      MESSAGEBOX('The plugging amount can not be less than zero!',16,'Bad Plugging Amount')
		      RETURN 0
		   ENDIF 
		   thisform.CalcPerRun()
		ENDIF 
	ENDPROC

	PROCEDURE txtWellID.GotFocus
		ON KEY LABEL F2 _screen.ActiveForm.cmdLookWell.click()
		
		DODEFAULT()
	ENDPROC

	PROCEDURE txtWellID.InteractiveChange
		IF DODEFAULT()
		   SELECT wells
		   LOCATE FOR cwellid == this.Value
		   IF FOUND()
		      thisform.txtwellName.set('value',wells.cwellname)
		   ELSE
		      thisform.txtwellName.set('value','')
		   ENDIF 
		ENDIF    
	ENDPROC

	PROCEDURE txtWellID.LostFocus
		ON KEY LABEL F2
		
		
	ENDPROC

	PROCEDURE txtWellID.Valid
		IF DODEFAULT()
		   swselect('wellinv')
		   IF NOT EMPTY(THIS.VALUE)
		      LOCATE FOR cwellid = THIS.VALUE AND nplugpct # 0
		      IF NOT FOUND()
		         MESSAGEBOX("This well doesn't have ANY interests FOR plugging SET up. A plugging TARGET cannot be entered until the DOI IS SET up.", 16, "Missing DOI")
		         RETURN 0
		      ENDIF
		   ENDIF
		ENDIF
	ENDPROC

	PROCEDURE txtWellName.When
		RETURN .F.
	ENDPROC

ENDDEFINE
