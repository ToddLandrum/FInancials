*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="ten99misc.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 522
	Left = 40
	Name = "Dataenvironment"
	Top = 235
	Width = 950

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "investor", ;
		CursorSource = "investor", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Order = "cownerid", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "tax1099", ;
		CursorSource = "tax1099", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Filter = "NOT DELETED()", ;
		Height = 90, ;
		Left = 149, ;
		Name = "Cursor2", ;
		Top = 21, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "vendor", ;
		CursorSource = "vendor", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 288, ;
		Name = "Cursor3", ;
		Order = "cvendorid", ;
		Top = 22, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "custownvend", ;
		CursorSource = "custownvend", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor4", ;
		Top = 140, ;
		Width = 101
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor5", ;
		Top = 140, ;
		Width = 101
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "tax1099corrections", ;
		CursorSource = "tax1099corrections", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 710, ;
		Name = "Cursor6", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS form1099misc AS frmrptcriteria OF "..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="opgSelect" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swyear1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEndWell" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBegWell" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkByWell" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSelected" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklMask" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkCorrected" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: getformats
		*m: lookup
		*p: ctype
	*</DefinedPropArrayMethod>

	Caption = "1099 MISC Replacement"
	ctype = 
	DataSession = 2
	DoCreate = .T.
	Height = 465
	HelpContextID = 251
	Name = "Form1099misc"
	Width = 575
	_memberdata = <VFPData>
		<memberdata name="getformats" display="GetFormats"/>
		<memberdata name="ctype" display="cType"/>
		</VFPData>
	Swrptcriteriabuttons1.chkExport.Alignment = 0
	Swrptcriteriabuttons1.chkExport.Name = "chkExport"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.cmdPreview.Name = "cmdPreview"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 159
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 12
	Swrptcriteriabuttons1.Top = 297
	Swrptcriteriabuttons1.ZOrderSet = 0

	ADD OBJECT 'chkByWell' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Print By Well", ;
		Left = 158, ;
		Name = "chkByWell", ;
		TabIndex = 8, ;
		Top = 240
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkCorrected' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Print Only Corrected Returns", ;
		Left = 303, ;
		Name = "chkCorrected", ;
		TabIndex = 11, ;
		Top = 264, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklMask' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Mask Recipient Tax IDs", ;
		Left = 158, ;
		Name = "chklMask", ;
		TabIndex = 10, ;
		Top = 264, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSelected' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Print Selected 1099s", ;
		Left = 303, ;
		Name = "chkSelected", ;
		TabIndex = 9, ;
		Top = 240, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'lblBegWell' AS lbllabelcustom WITH ;
		Caption = "Beginning Well:", ;
		Height = 16, ;
		Left = 124, ;
		Name = "lblBegWell", ;
		TabIndex = 14, ;
		Top = 301, ;
		Visible = .F., ;
		Width = 75, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblEndWell' AS lbllabelcustom WITH ;
		Caption = "Ending Well:", ;
		Height = 16, ;
		Left = 139, ;
		Name = "lblEndWell", ;
		TabIndex = 15, ;
		Top = 351, ;
		Visible = .F., ;
		Width = 60, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Include 1099s For:", ;
		Height = 16, ;
		Left = 108, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 2, ;
		Top = 16, ;
		Width = 91, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "Accounting Year:", ;
		Height = 16, ;
		Left = 112, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 4, ;
		Top = 96, ;
		Width = 87, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom3' AS lbllabelcustom WITH ;
		Caption = "Beginning ID:", ;
		Height = 16, ;
		Left = 135, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 6, ;
		Top = 132, ;
		Width = 64, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom4' AS lbllabelcustom WITH ;
		Caption = "Ending ID:", ;
		Height = 16, ;
		Left = 150, ;
		Name = "Lbllabelcustom4", ;
		TabIndex = 7, ;
		Top = 182, ;
		Width = 49, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'opgSelect' AS opgoptiongroupcustom WITH ;
		AutoSize = .T., ;
		BorderStyle = 0, ;
		ButtonCount = 3, ;
		Height = 75, ;
		Left = 203, ;
		Name = "opgSelect", ;
		TabIndex = 1, ;
		Top = 11, ;
		Width = 89, ;
		ZOrderSet = 1, ;
		Option1.Caption = "All 1099s", ;
		Option1.FontSize = 8, ;
		Option1.Height = 17, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Top = 5, ;
		Option1.Width = 79, ;
		Option2.Caption = "Vendors", ;
		Option2.FontSize = 8, ;
		Option2.Height = 17, ;
		Option2.Left = 5, ;
		Option2.Name = "Option2", ;
		Option2.Top = 29, ;
		Option2.Width = 61, ;
		Option3.Caption = "Owners", ;
		Option3.FontSize = 8, ;
		Option3.Height = 17, ;
		Option3.Left = 5, ;
		Option3.Name = "Option3", ;
		Option3.Top = 53, ;
		Option3.Width = 61
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		Left = 209, ;
		Name = "Swrptlook1", ;
		TabIndex = 5, ;
		Top = 129, ;
		ZOrderSet = 3, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		txtBegID.Name = "txtBegID", ;
		TxtBegName.Name = "TxtBegName", ;
		txtEndID.Name = "txtEndID", ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />

	ADD OBJECT 'Swrptlook2' AS swrptlook WITH ;
		Left = 209, ;
		Name = "Swrptlook2", ;
		TabIndex = 13, ;
		Top = 297, ;
		Visible = .F., ;
		ZOrderSet = 3, ;
		SWLOOKUPBUTTON1.Name = "SWLOOKUPBUTTON1", ;
		SWLOOKUPBUTTON2.Name = "SWLOOKUPBUTTON2", ;
		TXTBEGID.clistexpression = wells.cwellid, ;
		TXTBEGID.clistworkarea = wells, ;
		TXTBEGID.Name = "TXTBEGID", ;
		TXTBEGNAME.Name = "TXTBEGNAME", ;
		TXTENDID.clistexpression = wells.cwellid, ;
		TXTENDID.clistworkarea = wells, ;
		TXTENDID.Name = "TXTENDID", ;
		TXTENDNAME.Name = "TXTENDNAME"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />

	ADD OBJECT 'Swyear1' AS swyear WITH ;
		Height = 20, ;
		Left = 210, ;
		MaxLength = 4, ;
		Name = "Swyear1", ;
		TabIndex = 3, ;
		Top = 93, ;
		Width = 39, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE builddata
		LOCAL tcyear, tntype, tcid1, tcid2, tlMask
		
		tcyear   = THISFORM.swyear1.VALUE
		tntype   = THISFORM.opgselect.VALUE
		tcid1    = THISFORM.swrptlook1.txtbegid.VALUE
		tcid2    = THISFORM.swrptlook1.txtendid.VALUE
		tlbywell = THISFORM.chkbywell.VALUE
		tcwell1  = THISFORM.swrptlook2.txtbegid.VALUE
		tcwell2  = THISFORM.swrptlook2.txtendid.VALUE
		tlMask    = THISFORM.chklMask.VALUE
		tlCorrect = THISFORM.chkcorrected.VALUE
		tcType    = THISFORM.cType
		
		IF tlCorrect
		   SELECT * FROM tax1099Corrections WHERE cyear = tcyear INTO CURSOR temp1099s ORDER BY cid
		ELSE
		   SELECT * FROM tax1099 WHERE cyear = tcyear INTO CURSOR temp1099s ORDER BY cid
		ENDIF
		
		IF tcid1 = 'FIRST'  &&  Include all IDs, in case they just typed in a manual entry, and made up an ID or left it blank - BH 02/11/08
		   tcid1 = ' '
		   tcid2 = '~'
		ENDIF
		
		THISFORM.ctitle1 = 'For Year: ' + tcyear
		THISFORM.ctitle2 = ''
		THISFORM.csortorder = 'ID'
		
		lcdeleted = SET('Deleted')
		SET DELETED ON
		
		* Check on the existence of the application object
		* if it doesn't exist, we're running in development
		* mode and need to initialize the company address info.
		IF TYPE('m.goApp') = 'O'
		   m.cproducer = m.goapp.ccompanyname
		   m.paddr1 = m.goapp.caddress1
		   m.paddr2 = m.goapp.caddress2
		   m.paddr3 = m.goapp.caddress3
		   m.ptaxid   = cmEnCrypt(m.goapp.ctaxid,m.goapp.cEncryptionKey)
		   m.pphoneno = m.goapp.cphoneno
		ELSE
		   m.cproducer = 'Developement Company'
		   m.paddr1 = 'PO Box 223'
		   m.paddr2 = 'Wooster, OH  44691'
		   m.paddr3 = ''
		   m.ptaxid   = '99-9999999'
		   m.pphoneno = '330-682-5882'
		ENDIF
		
		IF THISFORM.chkselected.VALUE = .T.
		   SELECT *, ;
		      m.cproducer AS cproducer, ;
		      m.paddr1 AS paddr1, ;
		      m.paddr2 AS paddr2, ;
		      m.paddr3 AS paddr3, ;
		      m.pphoneno AS pphoneno, ;
		      tcyear + ' 1099 MISC Replacement' AS ctitle,  ;
		      m.ptaxid   AS ptaxid ;
		      FROM temp1099s ;
		      WHERE cid IN (SELECT cid FROM ten99sel) ;
		      AND cyear = tcyear ;
		      INTO CURSOR temp1099 READWRITE ;
		      ORDER BY cid
		ELSE
		   DO CASE
		      CASE tntype = 1   && Both
		         SELECT *, ;
		            m.cproducer AS cproducer, ;
		            m.paddr1 AS paddr1, ;
		            m.paddr2 AS paddr2, ;
		            m.paddr3 AS paddr3, ;
		            m.pphoneno AS pphoneno, ;
		            tcyear + ' 1099 MISC Replacement' AS ctitle,  ;
		            m.ptaxid   AS ptaxid ;
		            FROM temp1099s ;
		            WHERE BETWEEN(cid, tcid1, tcid2) ;
		            AND cyear = tcyear ;
		            INTO CURSOR temp1099 READWRITE ;
		            ORDER BY cid
		
		      CASE tntype = 2   && Vendors
		         SELECT *, ;
		            m.cproducer AS cproducer, ;
		            m.paddr1 AS paddr1, ;
		            m.paddr2 AS paddr2, ;
		            m.paddr3 AS paddr3, ;
		            m.pphoneno AS pphoneno, ;
		            tcyear + ' 1099 MISC Replacement' AS ctitle,  ;
		            m.ptaxid   AS ptaxid ;
		            FROM temp1099s ;
		            WHERE BETWEEN(cid, tcid1, tcid2) ;
		            AND cidtype = 'V' ;
		            AND cyear  = tcyear ;
		            INTO CURSOR temp1099 READWRITE ;
		            ORDER BY cid
		
		      CASE tntype = 3   && Owners
		         IF NOT tlbywell
		            SELECT *, ;
		               m.cproducer AS cproducer, ;
		               m.paddr1 AS paddr1, ;
		               m.paddr2 AS paddr2, ;
		               m.paddr3 AS paddr3, ;
		               m.pphoneno AS pphoneno, ;
		               tcyear + ' 1099 MISC Replacement' AS ctitle,  ;
		               m.ptaxid   AS ptaxid ;
		               FROM temp1099s ;
		               WHERE BETWEEN(cid, tcid1, tcid2) ;
		               AND cidtype = 'I' ;
		               AND cyear  = tcyear ;
		               INTO CURSOR temp1099 READWRITE ;
		               ORDER BY cid
		         ELSE
		            SELECT *, ;
		               cwellname AS cproducer, ;
		               m.paddr1 AS paddr1, ;
		               m.paddr2 AS paddr2, ;
		               m.paddr3 AS paddr3, ;
		               m.pphoneno AS pphoneno, ;
		               tcyear + ' 1099 MISC Replacement' AS ctitle,  ;
		               cmEnCrypt(cwelltax,m.goapp.cEncryptionKey)   AS ptaxid ;
		               FROM temp1099s ;
		               WHERE BETWEEN(cid, tcid1, tcid2) ;
		               AND BETWEEN(cwellid, tcwell1, tcwell2) ;
		               AND cidtype = 'I' ;
		               AND cyear  = tcyear ;
		               INTO CURSOR temp1099 READWRITE ;
		               ORDER BY cid
		         ENDIF
		
		   ENDCASE
		ENDIF
		
		IF !m.goapp.oSecurity.HasPrivilege('Tax Ids')
		   tlMask = .T.
		ENDIF
		
		*  If masking tax ID numbers
		IF tlMask
		   SELECT temp1099
		   SCAN
		      m.ctaxid = cmEnCrypt(ALLTRIM(ctaxid),m.goapp.cEncryptionKey)
		      *  If the 3rd character is a hyphen, it's a Fed ID #, so mask accordingly
		      IF SUBSTR(m.ctaxid,3,1) = '-'
		         REPLACE ctaxid WITH 'XX-XXX' + SUBSTR(ALLTRIM(m.ctaxid),7,4)
		      ENDIF
		      *  If the 4th character is a hyphen, it's a SSN, so mask accordingly
		      IF SUBSTR(m.ctaxid,4,1) = '-'
		         REPLACE ctaxid WITH 'XXX-XX-' + SUBSTR(ALLTRIM(m.ctaxid),8,4)
		      ENDIF
		      *  It's got a number of some kind in it, but it has no hyphens, so put some kind of a mask on it
		      IF NOT '-' $ m.ctaxid AND LEN(ALLTRIM(m.ctaxid)) > 8
		         REPLACE ctaxid WITH 'XXXXX' + SUBSTR(m.ctaxid,6,4)
		      ENDIF
		      *!*	      *  If the 3rd character is a hyphen, it's a Fed ID #, so mask accordingly
		      *!*	      IF SUBSTR(m.ptaxid,3,1) = '-'
		      *!*	         replace ptaxID WITH 'XX-XXX' + SUBSTR(ALLTRIM(m.ptaxid),7,4)
		      *!*	      ENDIF
		      *!*	      *  If the 4th character is a hyphen, it's a SSN, so mask accordingly
		      *!*	      IF SUBSTR(m.ptaxid,4,1) = '-'
		      *!*	         replace ptaxID WITH 'XXX-XX-' + SUBSTR(ALLTRIM(m.ptaxid),8,4)
		      *!*	      ENDIF
		      *!*	      *  It's got a number of some kind in it, but it has no hyphens, so put some kind of a mask on it
		      *!*	      IF NOT '-' $ m.pTaxID AND LEN(ALLTRIM(m.ptaxid)) > 8
		      *!*	         replace pTaxID WITH 'XXXXX' + SUBSTR(m.ptaxid,6,4)
		      *!*	      ENDIF
		      *!*	      IF tlByWell
		      *!*	         REPLACE pTaxID WITH 'xxxxx' + SUBSTR(cmEncrypt(cWellTax,m.goApp.cEncryptionKey),6,4)
		      *!*	      ENDIF
		   ENDSCAN
		ELSE
		   SELECT temp1099
		   REPLACE ctaxid WITH cmEnCrypt(ALLTRIM(ctaxid),m.goapp.cEncryptionKey) ALL
		
		   IF tlbywell
		      SELECT temp1099
		      REPLACE ptaxid WITH cmEnCrypt(ALLTRIM(cwelltax),m.goapp.cEncryptionKey) FOR NOT EMPTY(cwelltax)
		   ENDIF
		ENDIF
		
		IF tcType = 'MISC'
		   IF tcyear < '2020'
		      DELETE FROM temp1099 WHERE nroyalty=0 AND nrents = 0 AND nattorney = 0 AND nother = 0 AND nnonemp = 0
		   ELSE
		      DELETE FROM temp1099 WHERE nroyalty=0 AND nrents = 0 AND nattorney = 0 AND nother = 0
		   ENDIF
		ELSE
		   DELETE FROM temp1099 WHERE nnonemp = 0
		ENDIF
		
		IF NOT tlbywell
		   IF tcType = 'MISC' 
		      IF tcyear < '2020'
		         IF FILE(m.goapp.crptsfolder+'1099s\ten99miscold.frx')
		            THISFORM.creportname = m.goapp.crptsfolder+'1099s\ten99miscold'
		         ELSE
		            THISFORM.creportname = m.goapp.crptsfolder+'1099s\ten99misc1'
		         ENDIF
		      ELSE
		         THISFORM.creportname = m.goapp.crptsfolder+'1099s\ten99misc.frx'
		      ENDIF
		   ELSE
		      THISFORM.creportname = m.goapp.crptsfolder+'1099s\ten99necr.frx'
		   ENDIF
		ELSE
		   IF tcType = 'MISC' OR tcyear < '2020'
		      THISFORM.creportname = m.goapp.crptsfolder + '1099s\ten99misc.frx'
		   ELSE
		      THISFORM.creportname = m.goapp.crptsfolder+'1099s\ten99necw.frx'
		   ENDIF
		ENDIF
		
		SET DELETED &lcdeleted
		
		SELECT temp1099
		IF RECC() > 0
		   RETURN .T.
		ELSE
		   RETURN .F.
		ENDIF
		
		
		
		
	ENDPROC

	PROCEDURE getformats
		LOCAL lcLibrary
		LOCAL loIP AS 'wwftp'
		LOCAL lcSourceFile, lcTargetFile, llReturn, llSupport, lnResult, loerror
		
		llReturn = .T.
		
		TRY
		    lcLibrary = SET('library')
		
		    llSupport = checksupportexp()
		
		    lnFiles = ADIR(laRpts, m.goapp.crptsfolder + 'ten99miscx.frx')
		
		    llGetFormats = .F.
		
		    IF lnFiles > 0
		        IF LOWER(laRpts[1, 1]) = 'ten99miscx.frx'
		            IF laRpts[1, 3] < {12/12/2017}
		                llGetFormats = .T.
		                lnx          = lnFiles + 1
		            ENDIF
		        ELSE
		            llGetFormats = .F.
		        ENDIF
		    ELSE
		        llGetFormats = .T.
		    ENDIF
		    IF NOT llSupport OR NOT llGetFormats
		        llReturn = .F.
		        EXIT
		    ENDIF
		
		    lcSourceFile          = 'ten99miscx.zip'
		    lcTargetFile          = m.goapp.cCommonFolder + 'ten99miscx.zip'
		    loUpdate              = m.goapp.oUpdate
		    loUpdate.cSourceFile  = lcSourceFile
		    loUpdate.cTargetFile  = lcTargetFile
		    loUpdate.cDescription = '1099 Misc'
		    loUpdate.cUnzipTo     = m.goapp.crptsfolder
		    llReturn              = loUpdate.GetUpdate(.F.)
		
		CATCH TO loerror
		    llReturn = .F.
		    DO errorlog WITH 'GetFormats', loerror.LINENO, '1099 Misc Rep', loerror.ERRORNO, loerror.MESSAGE
		    *!*      MESSAGEBOX('Unable to get the new JIB Stmt formats at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		    *!*           'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
		
		
		
	ENDPROC

	PROCEDURE Init
		LPARAMETERS tcType
		
		IF VARTYPE(tcType) # 'C'
		   tcType = 'MISC'
		ENDIF 
		
		IF tcType = 'MISC'
		   thisform.Caption = '1099-Misc Replacement Form'
		ELSE
		   thisform.Caption = '1099-NEC Replacement Form'
		ENDIF 
		thisform.cType = tcType
		
		*
		*  Initialize the form criteria
		*
		thisform.swrptlook1.txtBegID.value = 'FIRST'
		thisform.swrptlook1.txtEndID.value = 'LAST'
		thisform.swrptlook1.txtBegName.value = 'First Possible ID'
		thisform.swrptlook1.txtEndName.value = 'Last Possible ID'
		
		SELECT tax1099
		SET ORDER to CYEAR   && CYEAR
		GO bott
		IF NOT EMPTY(cYear)
		   thisform.swyear1.Value = tax1099.cYear
		else
		   thisform.swyear1.value = STR(YEAR(DATE())-1,4)
		ENDIF 
		
		thisform.opgSelect.value = 1
		thisform.chkbywell.value = .f.
		
		SELECT wells
		SET ORDER TO cwellid
		GO TOP
		thisform.swrptlook2.txtbegid.value = cwellid
		thisform.swrptlook2.txtBegName.value = cwellname
		GO BOTT
		thisform.swrptlook2.txtEndID.value = cwellid
		thisform.swrptlook2.txtEndName.value = cwellname
		
		CREATE CURSOR ten99sel ;
		  (cID    C(10))
	ENDPROC

	PROCEDURE lookup
		PARA WhichOne
		
		lcBegEnd = WhichOne
		lnColumns = 2
		
		llOK = .T.
		
		IF lcBegEnd = 'BEG'  &&  First Lookup
		   lcBegorEnd = 'THISFORM.swrptlook1.txtBegID.VALUE'
		ELSE
		   lcBegorEnd = 'THISFORM.swrptlook1.txtEndID.VALUE'
		ENDIF
		
		DO CASE
		   CASE THISFORM.opgSelect.VALUE = 1
		      SET SAFETY OFF
		      SELECT custownvend
		      INDEX ON cid TAG cid
		      INDEX ON cname TAG cname
		      lcList = 'cid\ID,cname\Name,ctype\Type'
		      lcTable = 'custownvend'
		      lnColumns = 3
		   CASE THISFORM.opgSelect.VALUE = 2
		      lcList = 'cvendorid\Vendor ID,cvendname\Vendor Name'
		      lcTable = 'vendor'
		      lnColumns = 2
		   CASE THISFORM.opgSelect.VALUE = 3
		      lcList = 'cownerid\Owner ID,cownname\Owner Name'
		      lcTable = 'investor'
		      lnColumns = 2
		ENDCASE
		
		DO FORM ..\CUSTOM\picklist WITH lcTable, lcList, &lcBegorEnd, lnColumns, .f., .t.
		
		IF llOK  &&  If an owner/vendor was selected
		
		   DO CASE
		      CASE THISFORM.opgSelect.VALUE = 1  &&  Both
		         IF lcBegEnd = 'BEG'  &&  First Lookup
		            THISFORM.swrptlook1.txtBegId.SET('value',custownvend.cid)
		            THISFORM.swrptlook1.txtBegName.SET('value',custownvend.cname)
		            THISFORM.setnextcontrol(THISFORM.swrptlook1.txtBegId)
		         ELSE  &&  Second Lookup
		            THISFORM.swrptlook1.txtEndId.SET('value',custownvend.cid)
		            THISFORM.swrptlook1.txtEndName.SET('value',custownvend.cname)
		            THISFORM.setnextcontrol(THISFORM.swrptlook1.txtEndId)
		         ENDIF
		
		      CASE THISFORM.opgSelect.VALUE = 2  &&  Vendor
		
		         IF lcBegEnd = 'BEG'  &&  First Lookup
		            THISFORM.swrptlook1.txtBegId.SET('value',vendor.cvendorid)
		            THISFORM.swrptlook1.txtBegName.SET('value',vendor.cvendname)
		            THISFORM.setnextcontrol(THISFORM.swrptlook1.txtBegId)
		         ELSE  &&  Second Lookup
		            THISFORM.swrptlook1.txtEndId.SET('value',vendor.cvendorid)
		            THISFORM.swrptlook1.txtEndName.SET('value',vendor.cvendname)
		            THISFORM.setnextcontrol(THISFORM.swrptlook1.txtEndId)
		         ENDIF
		
		      CASE THISFORM.opgSelect.VALUE = 3  &&  Owner
		
		         IF lcBegEnd = 'BEG'  &&  First Lookup
		            THISFORM.swrptlook1.txtBegId.SET('value',investor.cownerid)
		            THISFORM.swrptlook1.txtBegName.SET('value',investor.cownname)
		            THISFORM.setnextcontrol(THISFORM.swrptlook1.txtBegId)
		         ELSE  &&  Second Lookup
		            THISFORM.swrptlook1.txtEndId.SET('value',investor.cownerid)
		            THISFORM.swrptlook1.txtEndName.SET('value',investor.cownname)
		            THISFORM.setnextcontrol(THISFORM.swrptlook1.txtEndId)
		         ENDIF
		
		   ENDCASE
		
		ELSE
		    IF lcBegEnd = 'BEG'
		      THISFORM.setnextcontrol(THISFORM.swrptlook1.txtBegId)
		   ELSE
		      THISFORM.setnextcontrol(THISFORM.swrptlook1.txtEndId)
		   ENDIF
		   RETURN .F.
		
		ENDIF
		
	ENDPROC

	PROCEDURE chkByWell.Click
		IF THIS.VALUE
		   THISFORM.chkselected.VALUE         = .F.
		   THISFORM.chkselected.VISIBLE       = .F.
		   THISFORM.opgselect.VALUE           = 3
		   thisform.opgselect.Option3.Click()
		   THISFORM.lblbegwell.VISIBLE        = .T.
		   THISFORM.lblendwell.VISIBLE        = .T.
		   THISFORM.swrptlook2.VISIBLE        = .T.
		   THISFORM.HEIGHT                    = 480
		   THISFORM.swrptcriteriabuttons1.TOP = 470 - THISFORM.swrptcriteriabuttons1.HEIGHT
		ELSE
		   THISFORM.chkselected.VALUE         = .F.
		   THISFORM.chkselected.VISIBLE       = .T.
		   THISFORM.lblbegwell.VISIBLE        = .F.
		   THISFORM.lblendwell.VISIBLE        = .F.
		   THISFORM.swrptlook2.VISIBLE        = .F.
		   THISFORM.HEIGHT                    = 371
		   THISFORM.swrptcriteriabuttons1.TOP = THISFORM.HEIGHT - THISFORM.swrptcriteriabuttons1.HEIGHT - 5
		ENDIF
		
		
	ENDPROC

	PROCEDURE chkSelected.Click
		IF this.value
		   IF thisform.cType = 'NEC'
		      do form ten99selected WITH thisform.swyear1.value, .f., .f., .t.
		   ELSE
		      do form ten99selected WITH thisform.swyear1.value
		   ENDIF    
		ENDIF   
	ENDPROC

	PROCEDURE opgSelect.Option1.Click
		thisform.swrptlook1.txtBegID.value = 'FIRST'
		thisform.swrptlook1.txtEndID.value = 'LAST'
		thisform.swrptlook1.txtBegName.value = 'First Possible ID'
		thisform.swrptlook1.txtEndName.value = 'Last Possible ID'
		thisform.swrptlook1.txtBegID.clistworkarea = 'custownvend'
		thisform.swrptlook1.txtBegID.clistexpression = 'cid'
		thisform.swrptlook1.txtEndID.clistworkarea = 'custownvend'
		thisform.swrptlook1.txtEndID.clistexpression = 'cid'
		
		thisform.refresh()
	ENDPROC

	PROCEDURE opgSelect.Option1.GotFocus
		THISFORM.opgSelect.VALUE = 1
		THIS.CLICK()
		
	ENDPROC

	PROCEDURE opgSelect.Option2.Click
		SELECT vendor
		GO TOP
		thisform.swrptlook1.txtBegID.value = cvendorid
		thisform.swrptlook1.txtBegName.value = cvendname
		GO BOTT
		thisform.swrptlook1.txtEndID.value = cvendorid
		thisform.swrptlook1.txtEndName.value = cvendname
		thisform.swrptlook1.txtBegID.clistworkarea = 'vendor'
		thisform.swrptlook1.txtBegID.clistexpression = 'cvendorid'
		thisform.swrptlook1.txtEndID.clistworkarea = 'vendor'
		thisform.swrptlook1.txtEndID.clistexpression = 'cvendorid'
		
		thisform.refresh()
	ENDPROC

	PROCEDURE opgSelect.Option2.GotFocus
		THISFORM.opgSelect.VALUE = 2
		THIS.CLICK()
		
	ENDPROC

	PROCEDURE opgSelect.Option3.Click
		SELECT investor
		GO TOP
		thisform.swrptlook1.txtBegID.value = cOwnerID
		thisform.swrptlook1.txtBegName.value = cOwnname
		GO BOTT
		thisform.swrptlook1.txtEndID.value = cOwnerID
		thisform.swrptlook1.txtEndName.value = cOwnname
		thisform.swrptlook1.txtBegID.clistworkarea = 'investor'
		thisform.swrptlook1.txtBegID.clistexpression = 'cownerid'
		thisform.swrptlook1.txtEndID.clistworkarea = 'investor'
		thisform.swrptlook1.txtEndID.clistexpression = 'cownerid'
		
		thisform.refresh()
	ENDPROC

	PROCEDURE opgSelect.Option3.GotFocus
		THISFORM.opgSelect.VALUE = 3
		THIS.CLICK()
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		THISFORM.LOOKUP('BEG')
		THISFORM.setnextcontrol(this.parent.txtbegid)
		DODEFAULT()
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		THISFORM.LOOKUP('END')
		THISFORM.setnextcontrol(this.parent.txtendid)
		DODEFAULT()
	ENDPROC

	PROCEDURE Swrptlook1.txtBegID.GotFocus
		ON KEY LABEL F2 _screen.activeform.lookup('BEG')
		DODEFAULT()
	ENDPROC

	PROCEDURE Swrptlook1.txtBegID.LostFocus
		ON KEY LABEL F2 *
		DODEFAULT()
	ENDPROC

	PROCEDURE Swrptlook1.txtEndID.GotFocus
		ON KEY LABEL F2 _screen.activeform.lookup('END')
		DODEFAULT()
	ENDPROC

	PROCEDURE Swrptlook1.txtEndID.LostFocus
		ON KEY LABEL F2 *
		DODEFAULT()
	ENDPROC

	PROCEDURE Swrptlook2.SWLOOKUPBUTTON1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		
		lcList = 'cwellid,cwellname'
		
		DO FORM ..\CUSTOM\picklist WITH 'Wells', lcList, 'cwellid', 2
		
		IF llok  &&  If an owner/vendor was selected
		   thisform.swrptlook2.txtbegid.value = cwellid
		   thisform.swrptlook2.txtbegname.value = cwellname
		   thisform.swrptlook2.txtbegid.refresh()
		   thisform.swrptlook2.txtbegname.refresh()
		ENDIF   
		
		
	ENDPROC

	PROCEDURE Swrptlook2.SWLOOKUPBUTTON2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		
		lcList = 'cwellid,cwellname'
		
		DO FORM ..\CUSTOM\picklist WITH 'Wells', lcList, 'cwellid', 2
		
		IF llok  &&  If an owner/vendor was selected
		   thisform.swrptlook2.txtendid.value = cwellid
		   thisform.swrptlook2.txtendname.value = cwellname
		   thisform.swrptlook2.txtendid.refresh()
		   thisform.swrptlook2.txtendname.refresh()
		ENDIF   
		
		
	ENDPROC

	PROCEDURE Swrptlook2.TXTBEGID.GotFocus
		ON KEY LABEL F2 _screen.activeform.swrptlook2.swlookupbutton1.Click()
	ENDPROC

	PROCEDURE Swrptlook2.TXTENDID.GotFocus
		ON KEY LABEL F2 _screen.activeform.swrptlook2.swlookupbutton2.Click()
	ENDPROC

ENDDEFINE
