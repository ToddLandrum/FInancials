*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="dmselrev.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor10" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 384
	InitialSelectedAlias = "incsusp"
	Left = 75
	Name = "Dataenvironment"
	Top = 146
	Width = 634

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "income", ;
		CursorSource = "income", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor10' AS cursor WITH ;
		Alias = "csrcthdr", ;
		CursorSource = "csrcthdr", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor10", ;
		Top = 260, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "incsusp", ;
		CursorSource = "incsusp", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Filter = "", ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "options", ;
		CursorSource = "options", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor4", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "sysctl", ;
		CursorSource = "sysctl", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor5", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "glopt", ;
		CursorSource = "glopt", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor6", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor7' AS cursor WITH ;
		Alias = "incsusp1", ;
		CursorSource = "incsusp", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 426, ;
		Name = "Cursor7", ;
		Top = 17, ;
		Width = 97
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor8' AS cursor WITH ;
		Alias = "income1", ;
		CursorSource = "income", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 430, ;
		Name = "Cursor8", ;
		Top = 140, ;
		Width = 97
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor9' AS cursor WITH ;
		Alias = "groups", ;
		CursorSource = "groups", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor9", ;
		Top = 260, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formdmselrev AS frmformcustom OF "..\custom\cforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="cmdAllocate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdMark" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdUnmark" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swgroup1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdDelete" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdExit" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column1.chkAllocated" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column2.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column3.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column3.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column4.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column4.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column5.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column5.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column6.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column6.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column7.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column7.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column8.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column8.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column9.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column9.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column10.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column10.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtnCount" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtnTotal" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="opgShow" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcProdPeriod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcProdYear" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcPeriod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcYear" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom7" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: updategrid
		*p: cgroup
		*p: cperiod
		*p: cyear
	*</DefinedPropArrayMethod>

	Caption = "Select Well Revenue To Allocate"
	DataSession = 2
	DoCreate = .T.
	Height = 473
	HelpContextID = 98
	Name = "FormDmselrev"
	ShowTips = .T.
	Width = 660
	Mwresize1.lblHighLight.Name = "lblHighLight"
	Mwresize1.lblShading.Name = "lblShading"
	Mwresize1.Name = "Mwresize1"

	ADD OBJECT 'cmdAllocate' AS cmdcommandbuttoncustom WITH ;
		Caption = "\<Allocate", ;
		Left = 226, ;
		Name = "cmdAllocate", ;
		TabIndex = 14, ;
		Top = 428
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdDelete' AS cmdcommandbuttoncustom WITH ;
		Caption = "\<Delete", ;
		Left = 487, ;
		Name = "cmdDelete", ;
		TabIndex = 17, ;
		Top = 428
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdExit' AS cmdcommandbuttoncustom WITH ;
		Caption = "E\<xit", ;
		Left = 574, ;
		Name = "cmdExit", ;
		TabIndex = 18, ;
		Top = 428
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdMark' AS cmdcommandbuttoncustom WITH ;
		Caption = "Mark All", ;
		Left = 313, ;
		Name = "cmdMark", ;
		TabIndex = 15, ;
		Top = 428
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdUnmark' AS cmdcommandbuttoncustom WITH ;
		Caption = "UnMark All", ;
		Left = 400, ;
		Name = "cmdUnmark", ;
		TabIndex = 16, ;
		Top = 428
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Grdgridcustom1' AS grdgridcustom WITH ;
		AllowHeaderSizing = .F., ;
		AllowRowSizing = .F., ;
		ColumnCount = 10, ;
		cworkarea = incsusp, ;
		Height = 278, ;
		lcolumnmemory = .F., ;
		Left = 12, ;
		Name = "Grdgridcustom1", ;
		Panel = 1, ;
		RecordSource = "inctmp", ;
		TabIndex = 11, ;
		Top = 121, ;
		Width = 638, ;
		Column1.ControlSource = "", ;
		Column1.Name = "Column1", ;
		Column1.Sparse = .F., ;
		Column1.Width = 15, ;
		Column10.ColumnOrder = 5, ;
		Column10.Name = "Column10", ;
		Column10.Width = 27, ;
		Column2.ControlSource = "", ;
		Column2.Name = "Column2", ;
		Column2.ReadOnly = .T., ;
		Column3.ControlSource = "", ;
		Column3.Name = "Column3", ;
		Column3.ReadOnly = .T., ;
		Column3.Width = 127, ;
		Column4.ControlSource = "", ;
		Column4.Name = "Column4", ;
		Column4.ReadOnly = .T., ;
		Column4.Width = 44, ;
		Column5.ColumnOrder = 9, ;
		Column5.ControlSource = "", ;
		Column5.Name = "Column5", ;
		Column5.ReadOnly = .T., ;
		Column5.Width = 67, ;
		Column6.ColumnOrder = 10, ;
		Column6.ControlSource = "", ;
		Column6.Name = "Column6", ;
		Column6.ReadOnly = .T., ;
		Column6.Width = 76, ;
		Column7.ColumnOrder = 7, ;
		Column7.ControlSource = "", ;
		Column7.Name = "Column7", ;
		Column7.ReadOnly = .T., ;
		Column7.Width = 63, ;
		Column8.ColumnOrder = 8, ;
		Column8.ControlSource = "", ;
		Column8.Name = "Column8", ;
		Column8.ReadOnly = .T., ;
		Column8.Width = 70, ;
		Column9.ColumnOrder = 6, ;
		Column9.Name = "Column9", ;
		Column9.Width = 35
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="grid" />

	ADD OBJECT 'Grdgridcustom1.Column1.chkAllocated' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "", ;
		ControlSource = "inctmp.lallocated", ;
		Left = 1, ;
		Name = "chkAllocated", ;
		Top = 23, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Grdgridcustom1.Column1.Header1' AS header WITH ;
		Caption = "", ;
		FontSize = 9, ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grdgridcustom1.Column10.Header1' AS header WITH ;
		Caption = "Prd", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grdgridcustom1.Column10.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ControlSource = "inctmp.cperiod", ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Grdgridcustom1.Column2.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "Well ID", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grdgridcustom1.Column2.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ControlSource = "inctmp.cwellid", ;
		FontSize = 9, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Grdgridcustom1.Column3.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "Well Name", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grdgridcustom1.Column3.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ControlSource = "inctmp.cwellname", ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Grdgridcustom1.Column4.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "Type", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grdgridcustom1.Column4.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ControlSource = "inctmp.csource", ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Grdgridcustom1.Column5.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "Date", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grdgridcustom1.Column5.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ControlSource = "inctmp.drevdate", ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Grdgridcustom1.Column6.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "Amount", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grdgridcustom1.Column6.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ControlSource = "inctmp.ntotalinc", ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Grdgridcustom1.Column7.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "Units", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grdgridcustom1.Column7.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ControlSource = "inctmp.nunits", ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Grdgridcustom1.Column8.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "Price", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grdgridcustom1.Column8.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ControlSource = "inctmp.nprice", ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Grdgridcustom1.Column9.Header1' AS header WITH ;
		Caption = "Year", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grdgridcustom1.Column9.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ControlSource = "inctmp.cyear", ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Entries", ;
		Left = 139, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 13, ;
		Top = 419
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "Total", ;
		Left = 139, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 20, ;
		Top = 443
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom3' AS lbllabelcustom WITH ;
		Caption = "/", ;
		FontSize = 10, ;
		Left = 240, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 5, ;
		Top = 33, ;
		ZOrderSet = 46
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom4' AS lbllabelcustom WITH ;
		Caption = "**  Click on any column heading to sort the list by that column  **", ;
		FontBold = .T., ;
		FontSize = 9, ;
		ForeColor = 255,0,0, ;
		Left = 149, ;
		Name = "Lbllabelcustom4", ;
		TabIndex = 10, ;
		Top = 101
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom5' AS lbllabelcustom WITH ;
		Caption = "Any income without a production period already on them should be assigned to:", ;
		FontSize = 8, ;
		Left = 66, ;
		Name = "Lbllabelcustom5", ;
		TabIndex = 9, ;
		Top = 70
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom6' AS lbllabelcustom WITH ;
		Caption = "/", ;
		FontSize = 10, ;
		Left = 491, ;
		Name = "Lbllabelcustom6", ;
		TabIndex = 8, ;
		Top = 68, ;
		ZOrderSet = 46
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom7' AS lbllabelcustom WITH ;
		Caption = "Group:", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 387, ;
		Name = "Lbllabelcustom7", ;
		TabIndex = 9, ;
		Top = 23, ;
		Width = 35
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'opgShow' AS opgoptiongroupcustom WITH ;
		AutoSize = .T., ;
		BorderStyle = 0, ;
		ButtonCount = 2, ;
		Left = 39, ;
		Name = "opgShow", ;
		TabIndex = 1, ;
		Top = 9, ;
		Value = 1, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "Show All Entries", ;
		Option1.FontSize = 8, ;
		Option1.Height = 16, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Top = 5, ;
		Option1.Value = 1, ;
		Option1.Width = 98, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "Show Only Entries for Period:", ;
		Option2.FontSize = 8, ;
		Option2.Height = 16, ;
		Option2.Left = 5, ;
		Option2.Name = "Option2", ;
		Option2.Top = 24, ;
		Option2.Width = 161
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'Swgroup1' AS swgroup WITH ;
		BoundColumn = 2, ;
		Left = 436, ;
		Name = "Swgroup1", ;
		TabIndex = 4, ;
		Top = 19, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'txtcPeriod' AS txttextboxcustom WITH ;
		Enabled = .T., ;
		Height = 20, ;
		Left = 462, ;
		MaxLength = 2, ;
		Name = "txtcPeriod", ;
		SelectOnEntry = .T., ;
		TabIndex = 6, ;
		Top = 67, ;
		Width = 24, ;
		ZOrderSet = 34
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcProdPeriod' AS txttextboxcustom WITH ;
		Enabled = .F., ;
		Height = 20, ;
		Left = 211, ;
		MaxLength = 2, ;
		Name = "txtcProdPeriod", ;
		SelectOnEntry = .T., ;
		TabIndex = 2, ;
		Top = 31, ;
		Width = 24, ;
		ZOrderSet = 34
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcProdYear' AS txttextboxcustom WITH ;
		Enabled = .F., ;
		Height = 20, ;
		Left = 247, ;
		MaxLength = 4, ;
		Name = "txtcProdYear", ;
		SelectOnEntry = .T., ;
		TabIndex = 3, ;
		Top = 31, ;
		Width = 39, ;
		ZOrderSet = 45
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcYear' AS txttextboxcustom WITH ;
		Enabled = .T., ;
		Height = 20, ;
		Left = 498, ;
		MaxLength = 4, ;
		Name = "txtcYear", ;
		SelectOnEntry = .T., ;
		TabIndex = 7, ;
		Top = 67, ;
		Width = 39, ;
		ZOrderSet = 45
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtnCount' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		FontBold = .T., ;
		Height = 20, ;
		InputMask = "99,999", ;
		Left = 69, ;
		Name = "txtnCount", ;
		TabIndex = 12, ;
		Top = 416, ;
		Width = 64
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtnTotal' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		FontBold = .T., ;
		Height = 20, ;
		InputMask = "999,999,999.99", ;
		Left = 12, ;
		Name = "txtnTotal", ;
		TabIndex = 19, ;
		Top = 440, ;
		Width = 121
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE beforeclose
		LPARAMETERS nclosereason
		
		DO CASE
		   CASE nclosereason = 1  &&  Close by Cancel
		      SELECT incsusp
		      REPL lAllocated WITH .F. ALL
		      RETURN .T.
		ENDCASE      
	ENDPROC

	PROCEDURE Init
		THIS.CAPTION = 'Select Revenue To Allocate'
		
		THISFORM.txtnCount.VALUE = 0
		THISFORM.txtnTotal.VALUE = 0
		
		DODEFAULT()
		
		This.Grdgridcustom1.Column1.controlsource        = "inctmp.lAllocated"
		This.Grdgridcustom1.Column2.controlsource        = "inctmp.cwellid"
		This.Grdgridcustom1.Column3.controlsource        = "inctmp.cwellname"
		This.Grdgridcustom1.Column4.controlsource        = "inctmp.csource"
		This.Grdgridcustom1.Column5.controlsource        = "inctmp.dRevDate"
		This.Grdgridcustom1.Column6.controlsource        = "inctmp.nTotalInc"
		This.Grdgridcustom1.Column7.controlsource        = "inctmp.nUnits"
		This.Grdgridcustom1.Column8.controlsource        = "inctmp.nPrice"
		This.Grdgridcustom1.Column9.controlsource        = "inctmp.cYear"
		This.Grdgridcustom1.Column10.controlsource       = "inctmp.cPeriod"
		
		SELECT inctmp
		SET ORDER TO cwellid
		GO TOP
		
		IF TYPE('thisform.oRegistry') <> 'O'
		   THISFORM.oRegistry = FindGlobalObject('cmRegistry')
		ENDIF
		
	ENDPROC

	PROCEDURE Load
		DODEFAULT()
		
		IF USED('inctmp')
		   USE IN inctmp
		ENDIF
		IF USED('inctmp1')
		   USE IN inctmp1
		ENDIF
		
		SELECT incsusp.*, SPACE(30) AS cwellname, SPACE(2) AS cGroup FROM incsusp WHERE NOT DELETED()  ;
		   INTO CURSOR inctmp1  ;
		   ORDER BY incsusp.cwellid
		
		USE DBF('inctmp1') AGAIN IN 0 ALIAS inctmp
		SELECT inctmp
		SCAN
		   SELECT wells
		   LOCATE FOR cwellid == inctmp.cwellid
		   IF FOUND()
		      REPLACE inctmp.cwellname WITH wells.cwellname, inctmp.cGroup WITH wells.cGroup
		   ENDIF
		ENDSCAN
		
		SELECT inctmp
		INDEX ON cwellid TAG cwellid
		INDEX ON cwellname TAG cwellname
		INDEX ON cSource+cwellid TAG cSource
		INDEX ON nUnits DESC TAG nUnits
		INDEX ON nPrice DESC TAG nPrice
		INDEX on cYear+cPeriod+cWellid TAG cYearPrd
		INDEX ON ALLT(DTOC(dRevDate))+cwellid TAG dRevDate
		INDEX ON nTotalInc DESC TAG nTotalInc
		SET ORDER TO cwellid
		
	ENDPROC

	PROCEDURE updategrid
		LOCAL lnShow, lcYear, lcPeriod, lcGroup
		
		wait window nowait 'Building List of Revenue' 
		
		lnShow           = THISFORM.opgShow.VALUE
		THISFORM.cYear   = THISFORM.txtcProdYear.VALUE
		THISFORM.cPeriod = THISFORM.txtcProdPeriod.VALUE
		THISFORM.cGroup  = THISFORM.swGroup1.VALUE
		
		SELECT inctmp
		
		DO CASE
		   CASE THISFORM.cGroup = '**' AND lnShow = 1  &&  All Groups and all entries
		      SET FILT TO
		   CASE THISFORM.cGroup = '**' AND lnShow = 2  &&  All Groups and Entries for a specific period
		      SET FILT TO cYear+cPeriod = THISFORM.cYear+THISFORM.cPeriod
		   CASE THISFORM.cGroup <> '**' AND lnShow = 1  &&  Specific Group and All Entries
		      SET FILT TO cGroup = THISFORM.cGroup
		   CASE THISFORM.cGroup <> '**' AND lnShow = 2  &&  Specific Group and Entries for a specific period
		      SET FILT TO cGroup = THISFORM.cGroup AND cYear+cPeriod = THISFORM.cYear+THISFORM.cPeriod
		ENDCASE
		
		GO TOP
		THISFORM.Grdgridcustom1.REFRESH()
		
		wait clear
	ENDPROC

	PROCEDURE cmdAllocate.Click
		LPARAMETERS cPropertyName,eNewValue
		
		LOCAL m.cYear, m.cPeriod, m.cGroup, oWellInv
		
		* Create the oWellInv object so we can lookup the DOI Deck if needed
		oWellInv = CREATEOBJECT('swbizobj_wellinv')
		
		SELECT inctmp
		lnrecno = RECNO()
		GO TOP
		IF EOF()
		   RETURN .F.
		ENDIF
		LOCATE FOR lAllocated
		IF NOT FOUND()
		   GOTO lnrecno
		   RETURN .F.
		ENDIF
		GOTO lnrecno
		
		m.cYear   = THISFORM.cYear
		m.cPeriod = THISFORM.cPeriod
		
		IF !THISFORM.oMessage.CONFIRM('OK to allocate the selected revenue entries?')
		   WAIT WIND NOWAIT 'Allocation of revenue cancelled...'
		   RETURN
		ENDIF
		
		lnCount = 0
		m.lCSTran = .F.  &&  Temporarily assigning the variable, until it gets added to DB - BH 10/10/2006
		
		*
		*  Allocate the revenue to the correct period and well.
		*
		SELECT inctmp
		SCAN FOR lAllocated
		   SELECT incsusp
		   SCAN FOR cidincs == inctmp.cidincs
		      SCATTER MEMVAR
		      IF EMPTY(m.cYear)
		         m.cYear   = THISFORM.cYear
		         m.cPeriod = THISFORM.cPeriod
		      ENDIF
		      IF m.lCSTran = .F. AND NOT EMPTY(m.cBatch)  &&  Check to see if there is a batch in csrcthdr that would make it true - BH 10/10/2006
		         SELECT csrcthdr
		         LOCATE FOR cBatch = m.cBatch
		         IF FOUND()  &&  There is a matching batch, so it should be marked as a cstran entry
		            m.lCSTran = .T.
		         ENDIF
		      ENDIF
		      SELECT cwellid FROM wellinv WHERE cwellid = m.cwellid INTO ARRAY temp
		      IF _TALLY = 0
		         THISFORM.oMessage.Warning('Unable to allocate to well: ' + m.cwellid + ' This well has no owners')
		         REPL inctmp.lAllocated WITH .F.
		         LOOP
		      ENDIF
		
		      SELECT wells
		      SET ORDER TO cwellid
		      IF SEEK(m.cwellid)
		         m.cGroup = cGroup
		         IF INLIST(cWellStat,'I','S','P')  &&  Not active, so don't let them allocate those entries
		            THISFORM.oMessage.Warning('Well: ' + ALLT(m.cwellid) + ' is not active, so no entries can be allocated to it.')
		            LOOP
		         ENDIF
		      ELSE
		         LOOP
		      ENDIF
		
		      * Only fill in blank decks when sending straight to the income and expense tables
		      IF EMPTY(m.cDeck)
		         m.cDeck = oWellInv.DOIDeckNameLookup(m.cYear, m.cPeriod, m.cwellid)
		      ENDIF
		
		      m.cidinch = THISFORM.oRegistry.IncrementCounter('%Shared.Counters.Batch')
		      m.cidinco = THISFORM.oRegistry.IncrementCounter('%Shared.Counters.Income')
		      SELECT income1
		      SET ORDER TO cidinco
		      DO WHILE SEEK(m.cidinco)
		         m.cidinco = THISFORM.oRegistry.IncrementCounter('%Shared.Counters.Income')
		      ENDDO
		
		      IF EMPTY(m.cPeriod) AND EMPTY(m.cYear)
		         m.cPeriod = THISFORM.txtcPeriod.VALUE
		         m.cYear   = THISFORM.txtcYear.VALUE
		      ENDIF
		
		      INSERT INTO income FROM MEMVAR
		      lnCount = lnCount + 1
		      SET DELETED ON
		
		      SELECT incsusp
		      DELETE NEXT 1
		   ENDSCAN
		   SELECT inctmp
		   IF lAllocated = .T.  &&  Only delete if marked that way
		      DELETE NEXT 1
		   ENDIF
		ENDSCAN
		
		GO TOP
		THISFORM.txtnCount.VALUE = 0
		THISFORM.txtnTotal.VALUE = 0
		THISFORM.REFRESH()
		
		SELECT income
		=TABLEUPDATE()
		
		THISFORM.oMessage.DISPLAY('Allocated ' + ALLTRIM(STR(lnCount)) + ' Revenue Entries')
		
	ENDPROC

	PROCEDURE cmdDelete.Click
		SELECT inctmp
		lnrecno = RECNO()
		GO TOP
		IF EOF()
		   RETURN .F.
		ENDIF
		LOCATE FOR lAllocated
		IF NOT FOUND()
		   GOTO lnrecno
		   RETURN .F.
		ENDIF
		GOTO lnrecno
		
		IF !THISFORM.oMessage.CONFIRM('OK to delete the chosen revenue? Deleting the entry will NOT remove the entry from the G/L!')
		   WAIT WIND 'Deletion of revenue cancelled...'
		   RETURN
		ELSE
		   IF !thisform.oMessage.Confirm('Are you really sure you want to delete the entry?')
		      RETURN
		   ENDIF    
		ENDIF
		
		*
		*  Delete the expenses.
		*
		SELECT inctmp
		SCAN FOR lAllocated
		   SELECT incsusp
		   SCAN FOR cidincs = inctmp.cidincs
		      DELETE NEXT 1
		   ENDSCAN
		   SELECT inctmp
		   DELETE NEXT 1
		ENDSCAN
		GO TOP
		
		THISFORM.txtnCount.VALUE = 0
		THISFORM.txtnTotal.VALUE = 0
		
		THISFORM.REFRESH()
		
		THISFORM.oMessage.DISPLAY('The Selected Revenue Entries Were Deleted...')
		
	ENDPROC

	PROCEDURE cmdExit.Click
		IF thisform.beforeclose(1)
		   thisform.release()
		ENDIF   
	ENDPROC

	PROCEDURE cmdMark.Click
		thisform.txtnCount.value = 0
		thisform.txtnTotal.value = 0
		
		SELECT inctmp
		SCAN FOR lAllocated = .F.
		   REPL lAllocated WITH .T.
		ENDSCAN
		
		SELECT inctmp
		SCAN FOR lAllocated = .T.
		   thisform.txtnCount.value = thisform.txtnCount.value + 1
		   thisform.txtnTotal.value = thisform.txtnTotal.value + nTotalInc
		ENDSCAN
		GO top
		
		thisform.Refresh()
		
		   
	ENDPROC

	PROCEDURE cmdUnmark.Click
		thisform.txtnCount.value = 0
		thisform.txtnTotal.value = 0
		
		SELECT inctmp
		SCAN FOR lAllocated = .T.
		   REPL lAllocated WITH .F.
		ENDSCAN
		
		GO top
		
		thisform.Refresh()
		
		   
	ENDPROC

	PROCEDURE Grdgridcustom1.Column1.chkAllocated.InteractiveChange
		IF this.value 
		   thisform.txtnCount.value = thisform.txtnCount.value + 1
		   thisform.txtnTotal.value = thisform.txtnTotal.value + Inctmp.nTotalInc
		ELSE
		      thisform.txtnCount.value = thisform.txtnCount.value - 1
		      thisform.txtnTotal.value = thisform.txtnTotal.value - Inctmp.nTotalInc
		ENDIF      
		
		thisform.txtnCount.refresh()
		thisform.txtnTotal.refresh()
	ENDPROC

	PROCEDURE Grdgridcustom1.Column1.Header1.Click
		SELECT inctmp
		SET ORDER TO cwellid
		GO TOP
		THISFORM.Grdgridcustom1.REFRESH()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE Grdgridcustom1.Column10.Header1.Click
		SELECT inctmp
		SET ORDER TO cYearPrd
		GO TOP
		THISFORM.Grdgridcustom1.REFRESH()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE Grdgridcustom1.Column2.Header1.Click
		SELECT inctmp
		SET ORDER TO cwellid
		GO TOP
		THISFORM.Grdgridcustom1.REFRESH()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE Grdgridcustom1.Column2.Text1.When
		RETURN .F.
	ENDPROC

	PROCEDURE Grdgridcustom1.Column3.Header1.Click
		SELECT inctmp
		SET ORDER TO cwellname
		GO TOP
		THISFORM.Grdgridcustom1.REFRESH()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE Grdgridcustom1.Column3.Text1.MouseMove
		LPARAMETERS nButton, nShift, nXCoord, nYCoord
		
		IF LEN(ALLT(incsusp.cwellname)) >= 20  &&  Long name, so display it as a tooltip when hovering over it
		   THIS.TOOLTIPTEXT = incsusp.cwellname
		ELSE
		   THIS.TOOLTIPTEXT = ''
		ENDIF
		
		DODEFAULT(nButton, nShift, nXCoord, nYCoord)
		
	ENDPROC

	PROCEDURE Grdgridcustom1.Column3.Text1.When
		RETURN .F.
	ENDPROC

	PROCEDURE Grdgridcustom1.Column4.Header1.Click
		SELECT inctmp
		SET ORDER TO cSource
		GO TOP
		THISFORM.Grdgridcustom1.REFRESH()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE Grdgridcustom1.Column4.Text1.When
		RETURN .F.
	ENDPROC

	PROCEDURE Grdgridcustom1.Column5.Header1.Click
		SELECT inctmp
		SET ORDER TO dRevDate
		GO TOP
		THISFORM.Grdgridcustom1.REFRESH()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE Grdgridcustom1.Column5.Text1.When
		RETURN .F.
	ENDPROC

	PROCEDURE Grdgridcustom1.Column6.Header1.Click
		SELECT inctmp
		SET ORDER TO nTotalInc
		GO TOP
		THISFORM.Grdgridcustom1.REFRESH()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE Grdgridcustom1.Column6.Text1.When
		RETURN .F.
	ENDPROC

	PROCEDURE Grdgridcustom1.Column7.Header1.Click
		SELECT inctmp
		SET ORDER TO nUnits
		GO TOP
		THISFORM.Grdgridcustom1.REFRESH()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE Grdgridcustom1.Column8.Header1.Click
		SELECT inctmp
		SET ORDER TO nPrice
		GO TOP
		THISFORM.Grdgridcustom1.REFRESH()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE Grdgridcustom1.Column9.Header1.Click
		SELECT inctmp
		SET ORDER TO cYearPrd
		GO TOP
		THISFORM.Grdgridcustom1.REFRESH()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE Grdgridcustom1.Resize
		return .f.
	ENDPROC

	PROCEDURE opgShow.Click
		DODEFAULT()
		
		IF THIS.VALUE = 2  &&  Selected period, so enable those textboxes
		   THISFORM.txtcProdPeriod.ENABLED = .T.
		   THISFORM.txtcProdYear.ENABLED   = .T.
		ELSE
		   THISFORM.txtcProdPeriod.ENABLED = .F.
		   THISFORM.txtcProdYear.ENABLED   = .F.
		ENDIF
		
		thisform.updategrid()
	ENDPROC

	PROCEDURE Swgroup1.Init
		dodefault()
		
		this.listitemid = 1
	ENDPROC

	PROCEDURE Swgroup1.Valid
		dodefault()
		
		thisform.updategrid()
	ENDPROC

	PROCEDURE txtcPeriod.Init
		dodefault()
		
		THIS.SET('value',PADL(ALLT(STR(MONTH(DATE()))),2,'0'))
	ENDPROC

	PROCEDURE txtcPeriod.Valid
		IF NOT EMPTY(THIS.VALUE)
		   THIS.set('VALUE',PADL(ALLTRIM(THIS.VALUE),2,'0'))
		   IF NOT BETWEEN(THIS.VALUE,'01','12')
		      THISFORM.omessage.warning('Please enter a valid production period. The period must be between 01 and 12')
		      RETURN 0
		   ENDIF
		ELSE
		   THIS.SET('value',PADL(ALLT(STR(MONTH(DATE()))),2,'0'))
		ENDIF
		
	ENDPROC

	PROCEDURE txtcProdPeriod.Init
		dodefault()
		
		THIS.SET('value',PADL(ALLT(STR(MONTH(DATE()))),2,'0'))
	ENDPROC

	PROCEDURE txtcProdPeriod.Valid
		IF NOT EMPTY(THIS.VALUE)
		   THIS.set('VALUE',PADL(ALLTRIM(THIS.VALUE),2,'0'))
		   IF NOT BETWEEN(THIS.VALUE,'01','12')
		      THISFORM.omessage.warning('Please enter a valid production period. The period must be between 01 and 12')
		      RETURN 0
		   ENDIF
		ENDIF
		
		thisform.updategrid()
	ENDPROC

	PROCEDURE txtcProdYear.Init
		dodefault()
		
		THIS.SET('value',allt(str(year(date()))))
	ENDPROC

	PROCEDURE txtcProdYear.Valid
		DODEFAULT()
		
		IF NOT EMPTY(THIS.VALUE)
		   IF NOT BETWEEN(THIS.VALUE,'1980','2025')
		      WAIT WIND NOWAIT 'Invalid production year entered. Please correct.'
		      RETURN 0
		   ENDIF
		ENDIF
		
		thisform.updategrid()
	ENDPROC

	PROCEDURE txtcYear.Init
		dodefault()
		
		THIS.SET('value',allt(str(year(date()))))
	ENDPROC

	PROCEDURE txtcYear.Valid
		DODEFAULT()
		
		IF NOT EMPTY(THIS.VALUE)
		   IF NOT BETWEEN(THIS.VALUE,'1980','2025')
		      WAIT WIND NOWAIT 'Invalid production year entered. Please correct.'
		      RETURN 0
		   ENDIF
		ELSE
		   THIS.SET('value',allt(str(year(date()))))
		ENDIF
	ENDPROC

	PROCEDURE txtnCount.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtnTotal.When
		RETURN .F.
	ENDPROC

ENDDEFINE
