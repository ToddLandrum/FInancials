*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="aferpt.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor7" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 630
	Left = 80
	Name = "Dataenvironment"
	Top = 362
	Width = 954

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "afehdr", ;
		CursorSource = "afehdr", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Order = "cafeno", ;
		Top = 20, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "afedet", ;
		BufferModeOverride = 5, ;
		CursorSource = "afedet", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "expcat", ;
		CursorSource = "expcat", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "taxcodes", ;
		CursorSource = "taxcodes", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor4", ;
		Top = 140, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor5", ;
		Top = 140, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "afeopt", ;
		CursorSource = "afeopt", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor6", ;
		Top = 140, ;
		Width = 101
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor7' AS cursor WITH ;
		Alias = "options", ;
		CursorSource = "options", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 435, ;
		Name = "Cursor7", ;
		Top = 24, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formaferpt AS frmrptcriteria OF "..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="chklActual" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEndID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkCostPlus" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBegID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkCatDesc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkExpCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSelected" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSelected" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: calcafe
	*</DefinedPropArrayMethod>

	Caption = "AFE Reports"
	DataSession = 2
	DoCreate = .T.
	Height = 368
	HelpContextID = 639
	Name = "formaferpt"
	Width = 437
	Swrptcriteriabuttons1.CHKEXPORT.Alignment = 0
	Swrptcriteriabuttons1.CHKEXPORT.Name = "CHKEXPORT"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.cmdPreview.Name = "cmdPreview"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 101
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 10
	Swrptcriteriabuttons1.Top = 285
	Swrptcriteriabuttons1.ZOrderSet = 0

	ADD OBJECT 'chkCatDesc' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Use AFE Code Description Instead of Code Name", ;
		Left = 117, ;
		Name = "chkCatDesc", ;
		TabIndex = 5, ;
		Top = 161, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkCostPlus' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Include Cost Plus and Location Fees", ;
		Left = 116, ;
		Name = "chkCostPlus", ;
		TabIndex = 8, ;
		Top = 219
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkExpCode' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Include Expense Code On Report", ;
		Left = 116, ;
		Name = "chkExpCode", ;
		TabIndex = 9, ;
		Top = 248, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklActual' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Include Actual Costs", ;
		Left = 116, ;
		Name = "chklActual", ;
		TabIndex = 6, ;
		Top = 190, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSelected' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Choose Selected AFEs", ;
		Left = 118, ;
		Name = "chkSelected", ;
		TabIndex = 2, ;
		Top = 28, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'lblBegID' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Beginning AFE No:", ;
		Height = 16, ;
		Left = 13, ;
		Name = "lblBegID", ;
		TabIndex = 1, ;
		Top = 56, ;
		Width = 91, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblEndID' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Ending AFE No.:", ;
		Height = 16, ;
		Left = 25, ;
		Name = "lblEndID", ;
		TabIndex = 4, ;
		Top = 107, ;
		Width = 79, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSelected' AS lbllabelcustom WITH ;
		Caption = "All Owners Selected", ;
		ForeColor = 0,0,255, ;
		Left = 136, ;
		Name = "lblSelected", ;
		TabIndex = 7, ;
		Top = 86, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		Left = 116, ;
		Name = "Swrptlook1", ;
		TabIndex = 3, ;
		Top = 53, ;
		ZOrderSet = 3, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		TxtBegID.clistexpression = afehdr.cafeno, ;
		TxtBegID.clistworkarea = afehdr, ;
		TxtBegID.Name = "TxtBegID", ;
		TxtBegName.Name = "TxtBegName", ;
		TxtEndID.clistexpression = afehdr.cafeno, ;
		TxtEndID.clistworkarea = afehdr, ;
		TxtEndID.Name = "TxtEndID", ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />
	
	PROCEDURE builddata
		LOCAL nReportBy, cproducer, csortby, lcstart, lcend, lcsafety
		
		lcstart	  = THISFORM.swrptlook1.txtBegID.VALUE
		lcend	  = THISFORM.swrptlook1.txtEndID.VALUE
		cbetween  = 'afehdr.cafeno in (select cid from selected)'
		lcsafety  = SET('SAFETY')
		llCatDesc = THISFORM.chkcatdesc.VALUE
		llActual  = THISFORM.chklActual.VALUE
		llSelected  = THISFORM.chkselected.VALUE
		
		IF NOT llSelected
		   SELECT cafeno AS cid FROM afehdr ;
		      INTO CURSOR SELECTED ;
		      WHERE BETWEEN(cafeno,lcStart,lcEnd) ;
		      ORDER BY cid
		ENDIF
		
		THISFORM.ctitle1		 = 'AFE Totals'
		THISFORM.ctitle2		 = ''
		THISFORM.cselectcriteria = ''
		THISFORM.csortorder		 = ''
		
		llOldCalc = FILE(m.goapp.cCommonfolder+'afecalcold.txt')
		
		IF THISFORM.chkCostPlus.VALUE
		   THISFORM.creportname = '..\commonsource\aferpt'
		ELSE
		   THISFORM.creportname = '..\commonsource\aferpt1'
		ENDIF
		
		SET SAFETY OFF
		
		IF USED('temp')
		   USE IN temp
		ENDIF
		IF USED('tempafe')
		   USE IN tempafe
		ENDIF
		
		swselect('afeopt')
		GO TOP
		SCATTER MEMVAR
		
		IF llActual
		   swselect('afehdr')
		   SCAN 
		      SELECT selected
		      LOCATE FOR cid = afehdr.cafeno
		      IF FOUND()
		         lcWellID = afehdr.cwellid
		         lcBatch  = afehdr.cidafeh
		         IF llOldCalc
		            afecalcold(lcWellID, lcBatch)
		         ELSE    
		            afecalc(lcWellID, lcBatch, afehdr.cAFENO)
		         ENDIF    
		      ENDIF    
		   ENDSCAN
		   swselect('afedet', .T.)
		   = TABLEUPDATE(.T.)
		ENDIF
		
		IF NOT llCatDesc
		   SELE afehdr.cAFENO, afehdr.cwellid, wells.cwellname, wells.ctownship, wells.ccounty, wells.cstate, wells.ndepth, expcat.ccateg, ;
		      expcat.ccatcode, afedet.nestcost, afedet.nactcost, afedet.nvariance, taxcodes.cdesc, expcat.ctaxcode, ;
		      m.nCostPlus AS nCostPlus, m.nLocationFee AS nLocationFee, afehdr.cidafeh, afehdr.mremarks, llActual AS llActual ;
		      FROM afehdr, afedet, wells, expcat, taxcodes ;
		      WHERE &cbetween ;
		      AND afedet.cidafeh = afehdr.cidafeh ;
		      AND expcat.ccatcode = afedet.ccatcode;
		      AND taxcodes.ctaxcode = expcat.ctaxcode ;
		      AND wells.cwellid = afehdr.cwellid ;
		      AND ! DELETED() ;
		      ORDER BY afehdr.cAFENO, expcat.ccatcode, expcat.ctaxcode ;
		      INTO CURSOR temp
		ELSE
		   SELE afehdr.cAFENO, afehdr.cwellid, wells.cwellname, wells.ctownship, wells.ccounty, wells.cstate, wells.ndepth, expcat.cdescrip AS ccateg, ;
		      expcat.ccatcode, afedet.nestcost, afedet.nactcost, afedet.nvariance, taxcodes.cdesc, expcat.ctaxcode, ;
		      m.nCostPlus AS nCostPlus, m.nLocationFee AS nLocationFee, afehdr.cidafeh, afehdr.mremarks, llActual AS llActual ;
		      FROM afehdr, afedet, wells, expcat, taxcodes ;
		      WHERE &cbetween ;
		      AND afedet.cidafeh = afehdr.cidafeh ;
		      AND expcat.ccatcode = afedet.ccatcode;
		      AND taxcodes.ctaxcode = expcat.ctaxcode ;
		      AND wells.cwellid = afehdr.cwellid ;
		      AND ! DELETED() ;
		      ORDER BY afehdr.cAFENO, expcat.ccatcode, expcat.ctaxcode ;
		      INTO CURSOR temp
		ENDIF
		USE DBF('temp') AGAIN ALIAS tempafe IN 0
		
		SET SAFETY &lcsafety
		
		IF RECC() > 0
		   IF THISFORM.chkExpCode.VALUE
		      SELECT tempafe
		      SCAN
		         REPLACE ccateg WITH ccatcode + '-' + ccateg
		      ENDSCAN
		   ENDIF
		
		   INDEX ON cAFENO + ctaxcode + ccatcode TAG afekey
		   RETURN .T.
		ELSE
		   RETURN .F.
		ENDIF
		
		
		
		
		
	ENDPROC

	PROCEDURE calcafe
	ENDPROC

	PROCEDURE Init
		DODEFAULT()
		swselect('afehdr')
		SET ORDER TO cafeno
		GO TOP
		THISFORM.swrptlook1.txtBegID.VALUE     = cafeno
		THISFORM.swrptlook1.txtBegName.VALUE = 'Well: ' + cwellid
		GO BOTTOM
		THISFORM.swrptlook1.txtEndID.VALUE     = cafeno
		THISFORM.swrptlook1.txtEndName.VALUE = 'Well: ' + cwellid
		
		THISFORM.chkCostPlus.VALUE = .F.
		
		swselect('options')
		GO top
		IF lAcctDesc  &&  If the option is marked to use the category description on other reports, mark this option, too, by default
		   thisform.chkCatDesc.set('value',.t.)
		endif   
		
		* If we're in demo mode, tell the user that this is an optional module
		IF m.goapp.ldemo
		   THISFORM.omessage.warning('The AFE module is an optional module that can be purchased separately.' + ;
		      ' It is included in the demo for evaluation purposes.')
		ENDIF
		
		
		
		
		
		
		
		
	ENDPROC

	PROCEDURE chkSelected.Click
		IF this.Value
		   DO FORM commonsource\selected-ids WITH 'AFE' LINKED 
		   lnCount = RECCOUNT('selected')
		   thisform.lblselected.Caption = TRANSFORM(lnCount) + ' AFEs Selected'
		   thisform.lblselected.Visible = .T.
		   thisform.lblbegID.Visible = .F.
		   thisform.lblendID.Visible = .F.
		   thisform.swrptlook1.Visible = .F.
		ELSE
		   thisform.lblselected.Visible = .F.
		   thisform.lblbegID.Visible = .T.
		   thisform.lblendID.Visible = .T.
		   thisform.swrptlook1.Visible = .T.
		ENDIF 
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		IF USED('tempafe')
		   USE IN tempafe
		ENDIF
		IF USED('tempafe1')
		   USE IN tempafe1
		ENDIF
		
		llOK = .T.
		
		SELECT AfeHdr.cAfeNo, ;
		   AfeHdr.cWellID, ;
		   Wells.cWellName, ;
		   AfeHdr.dAfeDate, ;
		   AfeHdr.cidAfeH ;
		   FROM AfeHdr, Wells ;
		   WHERE AfeHdr.cWellID = Wells.cWellID ;
		   INTO CURSOR tempafe1 ;
		   ORDER BY cAfeNo
		
		IF _TALLY > 0
		   USE DBF('tempafe1') AGAIN IN 0 ALIAS tempafe EXCL
		   SELECT tempafe
		   SET SAFETY OFF
		   INDEX ON cWellID TAG cWellID
		   INDEX ON cAfeNo  TAG cAFENo
		   INDEX ON cWellName TAG cWellName
		   INDEX ON dAfeDate TAG dAFEDate
		
		   lcList = 'cAfeNo\AFE No.,cWellID\Well ID,cWellName\Well Name,dAfeDate\Date'
		
		   DO FORM ..\CUSTOM\PickList WITH 'tempafe', lcList, thisform.swrptlook1.txtbegid.value, 4, .T., .t.
		
		   IF llOK
		      SELECT afehdr
		      SET ORDER TO cidafeh
		      SEEK(tempafe.cidafeh)
		      THISFORM.swrptlook1.txtBegID.VALUE = tempafe.cAfeNo
		      THISFORM.swrptlook1.txtBegName.VALUE = 'Well: ' + tempafe.cwellID
		      THISFORM.swrptlook1.txtBegID.REFRESH()
		      THISFORM.swrptlook1.txtBegName.REFRESH()
		   ENDIF
		
		ELSE
		   THISFORM.oMessage.DISPLAY('There are no AFE records on which to report.')
		ENDIF
		
		THISFORM.setnextcontrol(THIS.PARENT.TxtBegID)
		
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		IF USED('tempafe')
		   USE IN tempafe
		ENDIF
		IF USED('tempafe1')
		   USE IN tempafe1
		ENDIF
		
		llOK = .T.
		
		SELECT AfeHdr.cAfeNo, ;
		   AfeHdr.cWellID, ;
		   Wells.cWellName, ;
		   AfeHdr.dAfeDate, ;
		   AfeHdr.cidAfeH ;
		   FROM AfeHdr, Wells ;
		   WHERE AfeHdr.cWellID = Wells.cWellID ;
		   INTO CURSOR tempafe1 ;
		   ORDER BY cAfeNo
		
		IF _TALLY > 0
		   USE DBF('tempafe1') AGAIN IN 0 ALIAS tempafe EXCL
		   set safety off
		   SELECT tempafe
		   INDEX ON cWellID TAG cWellID
		   INDEX ON cAfeNo  TAG cAFENo
		   INDEX ON cWellName TAG cWellName
		   INDEX ON dAfeDate TAG dAFEDate
		
		   lcList = 'cAfeNo\AFE No.,cWellID\Well ID,cWellName\Well Name,dAfeDate\Date'
		
		   DO FORM ..\CUSTOM\PickList WITH 'tempafe', lcList, thisform.swrptlook1.txtendid.value, 4, .T., .t.
		
		   IF llOK
		      SELECT afehdr
		      SET ORDER TO cidafeh
		      SEEK(tempafe.cidafeh)
		      THISFORM.swrptlook1.txtEndID.VALUE = tempafe.cAfeNo
		      THISFORM.swrptlook1.txtEndName.VALUE = 'Well: ' + tempafe.cwellID
		      THISFORM.swrptlook1.txtEndID.REFRESH()
		      THISFORM.swrptlook1.txtEndName.REFRESH()
		   ENDIF
		
		ELSE
		   THISFORM.oMessage.DISPLAY('There are no AFE records on which to report.')
		ENDIF
		
		THISFORM.setnextcontrol(THIS.PARENT.TxtEndID)
		
		
	ENDPROC

ENDDEFINE
