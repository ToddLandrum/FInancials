*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="apsalestx.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 200
	Left = 40
	Name = "Dataenvironment"
	Top = 235
	Width = 520

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "invhdr", ;
		CursorSource = "invhdr", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "invdet", ;
		CursorSource = "invdet", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "salestx", ;
		CursorSource = "salestx", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formapsalestx AS frmrptcriteria OF "..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtdDate1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtdDate2" UniqueID="" Timestamp="" />

	Caption = "Sales Taxes Payable"
	DataSession = 2
	DoCreate = .T.
	Height = 177
	HelpContextID = 406
	Name = "FormApsalestx"
	Width = 256
	Swrptcriteriabuttons1.chkSendFile.Alignment = 0
	Swrptcriteriabuttons1.chkSendFile.Name = "chkSendFile"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.cmdPreview.Name = "cmdPreview"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 11
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 6
	Swrptcriteriabuttons1.Top = 120

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Date Range", ;
		Height = 16, ;
		Left = 99, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 1, ;
		Top = 24, ;
		Width = 58
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "Date 1", ;
		Height = 16, ;
		Left = 55, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 2, ;
		Top = 50, ;
		Width = 33
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom3' AS lbllabelcustom WITH ;
		Caption = "Date 2", ;
		Height = 16, ;
		Left = 168, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 3, ;
		Top = 50, ;
		Width = 33
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'txtdDate1' AS dpk WITH ;
		Height = 20, ;
		Left = 34, ;
		Name = "txtdDate1", ;
		TabIndex = 4, ;
		Top = 72, ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtdDate2' AS dpk WITH ;
		Height = 20, ;
		Left = 147, ;
		Name = "txtdDate2", ;
		TabIndex = 5, ;
		Top = 72, ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />
	
	PROCEDURE builddata
		*
		*  Builds the cursor needed for the sales taxes payable report
		*
		CREATE CURSOR taxrpt ;
		   (GROUP     N(1), ;
		   TYPE      C(20), ;
		   CODE      C(20),  ;
		   nTaxRate  N(5,2), ;
		   amount    N(12,2))
		INDEX ON GROUP TAG GROUP
		
		SELECT invhdr.cTaxCode, ;  &&  Taxable Sales
		salestx.nTaxRate,  ;
		   SUM(invdet.nExtension) AS taxsale, ;
		   SUM(invhdr.nSalesTax) AS taxes ;
		   FROM invhdr, invdet  ;
		   WHERE BETWEEN(invhdr.dInvDate, THISFORM.txtdDate1.VALUE, THISFORM.txtdDate2.VALUE) ;
		   AND invhdr.cBatch = invdet.cBatch ;
		   AND invdet.cTaxable = 'T' ;
		   AND NOT EMPTY(invhdr.cTaxCode)  ;
		   INTO CURSOR staxtemp ;
		   ORDER BY invhdr.cTaxCode ;
		   GROUP BY invhdr.cTaxCode
		
		SELECT invhdr.cBatch, SUM(invdet.nExtension) AS TOTAL ;  &&  Gross Sales
		FROM invhdr, invdet ;
		   WHERE BETWEEN(invhdr.dInvDate, THISFORM.txtdDate1.VALUE, THISFORM.txtdDate2.VALUE) ;
		   AND invhdr.cBatch == invdet.cBatch  ;
		   INTO CURSOR totsales
		
		SELECT SUM(invdet.nExtension) AS TOTAL ;  &&  Exempt Sales
		FROM invdet, invhdr ;
		   WHERE BETWEEN(invhdr.dInvDate, THISFORM.txtdDate1.VALUE, THISFORM.txtdDate2.VALUE) ;
		   AND invdet.cBatch = invhdr.cBatch ;
		   AND (invdet.cTaxable <> 'T' OR EMPTY(invhdr.cTaxCode))  ;
		   INTO CURSOR exempt
		
		SELECT staxtemp
		SCAN
		   m.group    = 3
		   m.type     = 'Taxable Sales'
		   m.code     = cTaxCode
		   m.amount   = taxsale
		   SELECT salestx
		   LOCATE FOR cTaxCode = staxtemp.cTaxCode
		   IF FOUND()
		      m.nTaxRate = nTaxRate
		   ELSE
		      m.code = 'No tax table entered'
		      m.nTaxRate = 0
		   ENDIF
		   INSERT INTO taxrpt FROM MEMVAR
		ENDSCAN
		
		USE IN staxtemp
		
		SELECT totsales
		SCAN
		   m.group  = 1
		   m.type   = 'Gross Sales'
		   m.code   = ' '
		   m.amount = TOTAL
		   INSERT INTO taxrpt FROM MEMVAR
		ENDSCAN
		USE IN totsales
		
		SELECT exempt
		SCAN
		   m.group  = 2
		   m.type   = 'Exempt Sales'
		   m.code   = ' '
		   m.amount = TOTAL
		   INSERT INTO taxrpt FROM MEMVAR
		ENDSCAN
		USE IN exempt
		
		*
		*  Set the report critera property
		*
		THISFORM.cSelectCriteria = 'Date Range: ' + DTOC(THISFORM.txtdDate1.VALUE) + ;
		   ' - ' + DTOC(THISFORM.txtdDate2.VALUE)
		THISFORM.cSortOrder  = 'Sales Tax Code'
		THISFORM.cTitle1     = ''
		THISFORM.cTitle2     = ''
		
		*  Set the name of the report to print
		THISFORM.cReportName = 'apsalestx.frx'
		
		SELECT taxrpt
		SET ORDER TO GROUP
		GO TOP
		
		*  Return True if there are records to report on
		IF RECC() > 0
		   RETURN .T.
		ELSE
		   RETURN .F.
		ENDIF
		
		RETURN
		
	ENDPROC

	PROCEDURE Init
		DODEFAULT()
		*
		*  Initialize the date range to last month
		*
		LOCAL lnMonth, lcMonth, lnYear, lcYear, lcLastDay
		
		lnMonth = MONTH(DATE())
		lnYear  = YEAR(DATE())
		
		*  Acount for the current month being January.
		*  We want to find out what last month was so
		*  we can't subtract 1 from 1 and come up with
		*  12 automatically
		IF lnMonth > 1
		   lnMonth = lnMonth - 1
		ELSE
		   lnMonth = 12
		   lnYear  = lnYear - 1
		ENDIF      
		
		lcMonth = PADL(ALLTRIM(STR(lnMonth)),2,'0')
		lcYear  = ALLTRIM(STR(lnYear,4))
		
		*  Create the beginning date
		thisform.txtdDate1.value = DATE(INT(VAL(lcYear)),INT(VAL(lcMonth)),1)
		
		*
		*  Figure out what the last day of that month is
		*
		DO CASE
		   CASE INLIST(lcMonth,'01','03','05','07','08','10','12')
		      lcLastDay = '31'
		   CASE INLIST(lcMonth,'04','06','09','11')   
		      lcLastDay = '30'
		   CASE lcMonth = '02'
		      * Divide the current year by 4 to
		      * see if it's a leap year
		      IF MOD(lnYear,4) = 0
		         lcLastDay = '28'
		      ELSE
		         lcLastDay = '29'
		      ENDIF
		ENDCASE
		
		*  Create the ending date
		thisform.txtdDate2.value = DATE(INT(VAL(lcYear)),INT(VAL(lcMonth)),INT(VAL(lcLastDay))) 
		
		
	ENDPROC

ENDDEFINE
