*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="plugwellbal.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 454
	Left = 334
	Name = "Dataenvironment"
	Top = 92
	Width = 520

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "plugwellbal", ;
		CursorSource = "plugwellbal", ;
		Database = ..\amdata\appdata.dbc, ;
		Filter = "lManual = .T.", ;
		Height = 248, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 105
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "sysctl", ;
		CursorSource = "sysctl", ;
		Database = ..\amdata\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "investor", ;
		CursorSource = "investor", ;
		Database = ..\amdata\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\amdata\appdata.dbc, ;
		Height = 90, ;
		Left = 158, ;
		Name = "Cursor4", ;
		Top = 164, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "plugwell", ;
		CursorSource = "plugwell", ;
		Database = ..\amdata\appdata.dbc, ;
		Height = 90, ;
		Left = 348, ;
		Name = "Cursor5", ;
		Top = 180, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "wellinv", ;
		CursorSource = "wellinv", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 448, ;
		Name = "Cursor6", ;
		Top = 180, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formplugwellbal AS frmdatamanagerformcustom OF "..\..\dmie_rv\custom\cforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="txtWellID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtWellName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLookWell" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcOwnerID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcOwnerName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLookOwner" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lblfieldlabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtnCharged" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Dpk1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: fillstaticdata
		*m: setstate
	*</DefinedPropArrayMethod>

	Caption = "Plugging Fund Balance Adjustments"
	cdisplayname = Balance Adjustment
	cworkarea = Plugwellbal
	DoCreate = .T.
	Height = 226
	Name = "FormPlugWellBal"
	Width = 627
	_memberdata = <VFPData>
		<memberdata name="setstate" display="SetState"/>
		<memberdata name="fillstaticdata" display="FillStaticData"/>
		</VFPData>
	cmdatamanager.Name = "cmdatamanager"
	cmdatamanager.TabIndex = 1
	cmlookupmanager.Name = "cmlookupmanager"
	Mwresize1.lblHighLight.Name = "lblHighLight"
	Mwresize1.lblShading.Name = "lblShading"
	Mwresize1.Left = 540
	Mwresize1.Name = "Mwresize1"
	Mwresize1.TabIndex = 12
	Mwresize1.Top = 432

	ADD OBJECT 'cmdLookOwner' AS cmdcommandbuttoncustom WITH ;
		Caption = "Owner ID", ;
		Height = 26, ;
		Left = 30, ;
		Name = "cmdLookOwner", ;
		TabIndex = 5, ;
		TabStop = .F., ;
		Top = 68, ;
		Width = 75, ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdLookWell' AS cmdcommandbuttoncustom WITH ;
		Caption = " Well ID", ;
		Height = 25, ;
		Left = 30, ;
		Name = "cmdLookWell", ;
		TabIndex = 2, ;
		TabStop = .F., ;
		Top = 23, ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Dpk1' AS dpk WITH ;
		ControlSource = "plugwellbal.dacctdate", ;
		lcheckdate = .T., ;
		Left = 120, ;
		lrequired = .T., ;
		Name = "Dpk1", ;
		TabIndex = 8, ;
		Top = 121
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />

	ADD OBJECT 'Lblfieldlabelcustom2' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Accounting Date", ;
		Height = 16, ;
		Left = 23, ;
		Name = "Lblfieldlabelcustom2", ;
		TabIndex = 9, ;
		Top = 122, ;
		Width = 82, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Plugging Amount", ;
		Left = 23, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 10, ;
		Top = 168
		*< END OBJECT: ClassLib="..\..\dmie_rv\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		AutoSize = .F., ;
		Caption = "Entries made on this screen will not post to the G/L! You'll need to enter a journal entry to account for the entry.", ;
		FontSize = 10, ;
		ForeColor = 255,0,0, ;
		Height = 60, ;
		Left = 312, ;
		Name = "Lbllabelcustom2", ;
		Top = 132, ;
		Width = 288, ;
		WordWrap = .T.
		*< END OBJECT: ClassLib="..\..\dmie_rv\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'txtcOwnerID' AS txtquickfill WITH ;
		clistexpression = investor.cownerid, ;
		clistworkarea = investor, ;
		ControlSource = "plugwellbal.cownerid", ;
		Height = 20, ;
		InputMask = "XXXXXXXXXX", ;
		Left = 120, ;
		lrequired = .T., ;
		MaxLength = 10, ;
		Name = "txtcOwnerID", ;
		TabIndex = 6, ;
		Top = 70, ;
		Width = 106, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcOwnerName' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		ControlSource = "", ;
		Height = 20, ;
		Left = 250, ;
		Name = "txtcOwnerName", ;
		TabIndex = 7, ;
		Top = 70, ;
		Width = 362, ;
		ZOrderSet = 89
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtnCharged' AS txtnumeric WITH ;
		ControlSource = "plugwellbal.nplugging", ;
		Left = 120, ;
		Name = "txtnCharged", ;
		TabIndex = 11, ;
		Top = 168
		*< END OBJECT: ClassLib="..\..\dmie_rv\common\cmgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtWellID' AS txtquickfill WITH ;
		clistexpression = cwellid, ;
		clistworkarea = wells, ;
		ControlSource = "plugwellbal.cwellid", ;
		Height = 20, ;
		InputMask = "XXXXXXXXXX", ;
		Left = 120, ;
		MaxLength = 10, ;
		Name = "txtWellID", ;
		TabIndex = 3, ;
		Top = 24, ;
		Width = 106
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtWellName' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Enabled = .T., ;
		Height = 20, ;
		Left = 250, ;
		Name = "txtWellName", ;
		TabIndex = 4, ;
		Top = 24, ;
		Width = 362
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE fillstaticdata
		LPARAMETERS tlNew
		* Fill in the descriptions like Well Name and Expense Category
		
		thisform.txtwellID.Refresh()
		thisform.txtcOwnerID.Refresh()
		
		IF NOT tlNew
		   swselect('wells')
		   LOCATE FOR cwellid = THISFORM.txtwellid.VALUE
		   IF FOUND()
		      THISFORM.txtwellname.VALUE = wells.cwellname
		   ELSE
		      THISFORM.txtwellname.VALUE = ''
		   ENDIF
		ELSE
		   THISFORM.txtwellname.VALUE = ''
		   thisform.txtwellid.value = ''
		   thisform.txtwellName.Refresh()
		ENDIF
		
		IF NOT tlNew
		   swselect('investor')
		   LOCATE FOR cownerid = THISFORM.txtcOwnerID.VALUE
		   IF FOUND()
		      THISFORM.txtcOwnerName.VALUE = investor.cownname
		   ELSE
		      THISFORM.txtcOwnerName.VALUE = ''
		   ENDIF
		ELSE
		   THISFORM.txtcOwnerName.VALUE = ''
		   thisform.txtcownerid.Value = ''
		   thisform.txtcownername.Refresh()
		ENDIF
		
		
	ENDPROC

	PROCEDURE nicecursorname
		LPARAMETERS cWorkarea
		
		IF LOWER(cworkarea) = 'plugwellbal'
		   RETURN 'Balance Adjustment'
		ENDIF 
	ENDPROC

	PROCEDURE setstate
		this.lChanged = .T.
		m.goStateManager.RefreshAll('Form Edit')
	ENDPROC

	PROCEDURE cmdatamanager.afternav
		LPARAMETERS cWorkarea
		
		IF cworkarea = 'Plugwellbal'
		   thisform.FillStaticData()
		ENDIF 
	ENDPROC

	PROCEDURE cmdatamanager.afternew
		LPARAMETERS cWorkarea
		
		IF cWorkArea = 'Plugwellbal'
		   this.replace('PlugWellBal','lManual',.T.)
		   this.replace('Plugwellbal','nrunno',0)
		   this.replace('Plugwellbal','crunyear','')
		   thisform.FillStaticData(.t.)
		ENDIF 
	ENDPROC

	PROCEDURE cmdatamanager.beforeupdate
		LPARAMETERS cWorkareaList, lCurrentRecordOnly
		
		IF plugwellbal.nplugging = 0
		   MESSAGEBOX('A Plugging Amount must be specified in order to save the adjustment.',16,'Missing Amount')
		   RETURN .f.
		ENDIF 
		
		swselect('wellinv')
		LOCATE FOR cwellid = plugwellbal.cwellid AND ;
		           cownerid = plugwellbal.cownerid
		IF NOT FOUND()
		   MESSAGEBOX('An adjustment can not be entered for an owner that ' + ;
		              'does not have an interest in the well!',16,'No Interest')
		   RETURN .f.
		ELSE
		   IF wellinv.nplugpct = 0 
		      IF MESSAGEBOX('This owner does not have a plugging interest. ' + ;
		                    'Are you sure you want to add this adjustment?',36,'No Plugging Interest') = 7
		         RETURN .f.
		      ENDIF 
		   ENDIF 
		ENDIF 
	ENDPROC

	PROCEDURE cmdLookOwner.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cownerid,csortfield'
		
		DO FORM ..\custom\picklist WITH 'Investor', lcList, thisform.txtcownerid.value, 2
		
		IF llOK
		   thisform.cmdatamanager.replace('plugwellbal','cOwnerID', Investor.cownerid)
		   thisform.txtcOwnerID.refresh()
		   thisform.txtcOwnerName.value = investor.cOwnname
		   thisform.txtcOwnerName.refresh()
		   thisform.lchanged = .t.
		   thisform.setnextcontrol(thisform.txtcOwnerID)
		ENDIF   
	ENDPROC

	PROCEDURE cmdLookOwner.When
		RETURN NOT EOF('plugwellbal')
	ENDPROC

	PROCEDURE cmdLookWell.Click
		LOCAL lcList
		PRIV llOK
		
		llOK   = .F.
		lcList = 'cwellid,cwellname,cwellstat'
		
		DO FORM picklist WITH 'Wells', lcList, THISFORM.txtwellid.VALUE, 3
		
		IF llOK
		   THISFORM.txtwellid.SET('value', wells.cwellid)
		   THISFORM.txtwellname.SET('value', wells.cwellname)
		ENDIF
		
		THISFORM.setnextcontrol(THISFORM.txtwellid)
	ENDPROC

	PROCEDURE cmdLookWell.When
		RETURN NOT EOF('plugwellbal')
	ENDPROC

	PROCEDURE txtcOwnerID.GotFocus
		ON KEY LABEL F2 _screen.activeform.cmdLookOwner.Click()
		DODEFAULT()
	ENDPROC

	PROCEDURE txtcOwnerID.InteractiveChange
		IF DODEFAULT()
		   swselect('investor')
		   LOCATE FOR cownerid == this.Value
		   IF FOUND()
		      thisform.txtcOwnerName.set('value',investor.cownname)
		   ELSE
		      thisform.txtcOwnerName.set('value','')
		   ENDIF 
		ENDIF    
	ENDPROC

	PROCEDURE txtcOwnerID.LostFocus
		ON KEY LABEL f2
		DODEFAULT()
	ENDPROC

	PROCEDURE txtcOwnerID.Valid
		IF DODEFAULT()
		   swselect('wellinv')
		   IF NOT EMPTY(THIS.VALUE)
		      LOCATE FOR cownerid = THIS.VALUE AND cwellid = THISFORM.txtwellID.VALUE
		      IF NOT FOUND()
		         MESSAGEBOX('This owner does not have an interest in this well. ' + ;
		              'An adjustment cannot be entered for an owner who does ' + ;
		              'not have an interest in the well.', 16, 'No Interest')
		         RETURN 0
		      ENDIF
		   ENDIF
		ENDIF
	ENDPROC

	PROCEDURE txtcOwnerName.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtWellID.GotFocus
		ON KEY LABEL F2 _screen.ActiveForm.cmdLookWell.click()
		
		DODEFAULT()
	ENDPROC

	PROCEDURE txtWellID.InteractiveChange
		IF DODEFAULT()
		   SELECT wells
		   LOCATE FOR cwellid == this.Value
		   IF FOUND()
		      thisform.txtwellName.set('value',wells.cwellname)
		   ELSE
		      thisform.txtwellName.set('value','')
		   ENDIF 
		ENDIF    
	ENDPROC

	PROCEDURE txtWellID.Valid
		ON KEY LABEL F2
		IF DODEFAULT()
		   swselect('plugwell')
		   SET ORDER to cwellid
		   IF NOT SEEK(this.Value) AND NOT EMPTY(this.value)
		      MESSAGEBOX('An adjustment can not be entered for a well that ' + ;
		                 'has not had a target set up for it. Go to Maintain, ' + ;
		                 'Plugging Module, Plugging Fund Well Targets to set up ' + ;
		                 'a plugging target balance for this well.',16,'No Target Set')
		      thisform.setnextcontrol(this)           
		      RETURN 0
		   ELSE 
		      RETURN 
		   ENDIF
		ENDIF     
	ENDPROC

	PROCEDURE txtWellName.When
		RETURN .F.
	ENDPROC

ENDDEFINE
