*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="dmgasinvdel.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor9" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 516
	InitialSelectedAlias = "gasinv"
	Left = 89
	Name = "Dataenvironment"
	Top = 103
	Width = 792

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "gasinv", ;
		BufferModeOverride = 5, ;
		CursorSource = "gasinv", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "gasown", ;
		CursorSource = "gasown", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "investor", ;
		CursorSource = "investor", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "gasuse", ;
		BufferModeOverride = 5, ;
		CursorSource = "gasuse", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 430, ;
		Name = "Cursor4", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "glmaster", ;
		BufferModeOverride = 5, ;
		CursorSource = "glmaster", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 570, ;
		Name = "Cursor5", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "coabal", ;
		BufferModeOverride = 5, ;
		CursorSource = "coabal", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor6", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor7' AS cursor WITH ;
		Alias = "glopt", ;
		CursorSource = "glopt", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor7", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor8' AS cursor WITH ;
		Alias = "coa", ;
		CursorSource = "coa", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor8", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor9' AS cursor WITH ;
		Alias = "arpmtdet", ;
		CursorSource = "arpmtdet", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 226, ;
		Left = 430, ;
		Name = "Cursor9", ;
		Top = 140, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formdmgasinvdel AS frmdatamanagerformcustom OF "..\custom\cforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="txtcName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcMeterNo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcDescription" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcCurrent" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtnDue" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cmdcommandbuttoncustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cmdcommandbuttoncustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Glmaint" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="swlookupbutton1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtdInvDate" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: calcmcf
		*m: process
		*p: ncounterlen
		*a: laterms[1,0]
	*</DefinedPropArrayMethod>

	Caption = "Delete a Meter Reading"
	clistexpression = 
	cnavworkarea = 
	cworkarea = 
	DoCreate = .T.
	Height = 272
	HelpContextID = 122
	lexpliciteditmode = .F.
	lnonewask = .T.
	Name = "Formdmgasinvdel"
	Width = 364
	WindowState = 0
	cmdatamanager.Name = "cmdatamanager"
	cmdatamanager.TabIndex = 1
	cmlookupmanager.Name = "cmlookupmanager"

	ADD OBJECT 'Cmdcommandbuttoncustom1' AS cmdcommandbuttoncustom WITH ;
		Caption = "\<Delete", ;
		Left = 101, ;
		Name = "Cmdcommandbuttoncustom1", ;
		TabIndex = 15, ;
		Top = 233
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Cmdcommandbuttoncustom2' AS cmdcommandbuttoncustom WITH ;
		Caption = "E\<xit", ;
		Default = .T., ;
		Left = 188, ;
		Name = "Cmdcommandbuttoncustom2", ;
		TabIndex = 16, ;
		Top = 233
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Glmaint' AS glmaint WITH ;
		Height = 12, ;
		Left = 12, ;
		Name = "Glmaint", ;
		Top = 228, ;
		Width = 24
		*< END OBJECT: ClassLib="..\custom\swgl.vcx" BaseClass="custom" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Owner Name", ;
		Left = 43, ;
		Name = "Lbllabelcustom1", ;
		Top = 40
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom2' AS lbltextcustom WITH ;
		Caption = "Meter No.", ;
		Left = 61, ;
		Name = "Lbltextcustom2", ;
		TabIndex = 8, ;
		Top = 99
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom3' AS lbltextcustom WITH ;
		Caption = "Description", ;
		Left = 53, ;
		Name = "Lbltextcustom3", ;
		TabIndex = 10, ;
		Top = 127
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom4' AS lbltextcustom WITH ;
		Caption = "Meter Reading", ;
		Left = 38, ;
		Name = "Lbltextcustom4", ;
		TabIndex = 12, ;
		Top = 155
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom5' AS lbltextcustom WITH ;
		Caption = "Amount Used", ;
		Left = 42, ;
		Name = "Lbltextcustom5", ;
		TabIndex = 14, ;
		Top = 183
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom6' AS lbltextcustom WITH ;
		Caption = "Reading Date", ;
		Left = 43, ;
		Name = "Lbltextcustom6", ;
		TabIndex = 6, ;
		Top = 70
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'swlookupbutton1' AS cmdcommandbuttoncustom WITH ;
		Caption = "Select Reading", ;
		FontBold = .T., ;
		Height = 20, ;
		Left = 132, ;
		Name = "swlookupbutton1", ;
		TabIndex = 3, ;
		Top = 9, ;
		Width = 97
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'txtcCurrent' AS txttextboxcustom WITH ;
		ControlSource = "", ;
		Height = 20, ;
		Left = 119, ;
		Name = "txtcCurrent", ;
		ReadOnly = .T., ;
		TabIndex = 11, ;
		Top = 153, ;
		Width = 93
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcDescription' AS txttextboxcustom WITH ;
		ControlSource = "", ;
		Height = 20, ;
		Left = 119, ;
		Name = "txtcDescription", ;
		ReadOnly = .T., ;
		TabIndex = 9, ;
		Top = 125, ;
		Width = 192
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcMeterNo' AS txttextboxcustom WITH ;
		ControlSource = "", ;
		Height = 20, ;
		Left = 119, ;
		Name = "txtcMeterNo", ;
		ReadOnly = .T., ;
		TabIndex = 7, ;
		Top = 97, ;
		Width = 120
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcName' AS txttextboxcustom WITH ;
		ControlSource = "", ;
		Height = 20, ;
		Left = 119, ;
		lreadonly = .F., ;
		Margin = 1, ;
		Name = "txtcName", ;
		ReadOnly = .T., ;
		TabIndex = 4, ;
		Top = 39, ;
		Width = 234, ;
		ZOrderSet = 21
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtdInvDate' AS dpk WITH ;
		Alignment = 3, ;
		ControlSource = "", ;
		Height = 20, ;
		Left = 119, ;
		lnocurrentdate = .T., ;
		Name = "txtdInvDate", ;
		ReadOnly = .T., ;
		TabIndex = 5, ;
		Top = 69, ;
		Value = {}, ;
		Visible = .T., ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtnDue' AS txttextboxcustom WITH ;
		ControlSource = "", ;
		Height = 20, ;
		InputMask = "", ;
		Left = 119, ;
		Name = "txtnDue", ;
		ReadOnly = .T., ;
		TabIndex = 13, ;
		Top = 181, ;
		Width = 93
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE calcmcf
	ENDPROC

	PROCEDURE delete
		LPARAMETERS cworkarea
		
		return .f.
	ENDPROC

	PROCEDURE Init
		IF DODEFAULT()
		   * If we're in demo mode, tell the user that this is an optional module
		   IF m.goapp.ldemo
		      THISFORM.omessage.warning('The House Gas module is an optional module that can be purchased separately.' + ;
		         ' It is included in the demo for evaluation purposes.')
		   ENDIF
		
		   *  Get rid of invalid entries
		   SELECT gasuse
		   SCAN FOR EMPTY(dDate) OR EMPTY(cMeterNo)
		      SELECT gasinv
		      LOCATE FOR cidgasinv = gasuse.cInvToken
		      IF FOUND()
		         DELETE NEXT 1
		      ENDIF
		      SELECT gasuse
		      DELETE NEXT 1      
		   ENDSCAN
		   SELECT gasinv
		   =TABLEUPDATE(.t.)
		   SELECT gasuse
		   =TABLEUPDATE(.t.)
		ENDIF
		
	ENDPROC

	PROCEDURE new
		LPARAMETERS cworkarea
		
		return .f.
	ENDPROC

	PROCEDURE process
		lcOwner = ALLTRIM(THISFORM.txtcName.VALUE)
		ldDate = temp.dInvDate
		lccurrent = ALLTRIM(temp.ccurrent)
		lcMeterNo = temp.cMeterNo
		lcidgasinv = temp.cinvtoken
		lnUsed = temp.nUsed
		
		*  Make sure the period or year isn't closed
		IF NOT thisform.glmaint.CheckPeriod(ldDate)
		   THISFORM.omessage.warning('Unable to delete reading. Either the fiscal year or period represented by this date has been closed.')
		   RETURN .F.
		ENDIF   
		
		IF NOT EMPTY(lcOwner)
		   IF THISFORM.oMessage.CONFIRM('Are you sure you want to delete the meter reading for ' + lcOwner +  ;
		         ', dated ' + TRANSFORM(ldDate) + ', with a reading of ' + lccurrent + '?')
		      SELECT arpmtdet
		      LOCATE FOR cInvToken = lcidgasinv AND nAmtApp <> 0  &&  Find any payments for this reading, and don't let them delete it without getting rid of the payment first
		      IF FOUND()
		         thisform.oMessage.Warning('A payment has been applied to the invoice created by this reading.  Before the reading can be deleted, the payment must be deleted first.')
		         RETURN 
		      endif
		      
		      SELECT gasinv
		      LOCATE FOR cidgasinv = lcidgasinv
		      IF FOUND()
		         SELECT gasown
		         LOCATE FOR cMeterNo = lcMeterNo
		         IF FOUND()
		            REPLACE gasown.cLast WITH gasuse.cLast
		            replace gasown.nUsed with gasown.nUsed - lnUsed
		            =TABLEUPDATE()
		         ENDIF
		         SELECT gasinv
		         DELETE NEXT 1
		         =TABLEUPDATE()
		      ENDIF
		      SELECT gasuse
		      DELETE NEXT 1
		      =TABLEUPDATE()
		
		      if m.goapp.lAMVersion  &&  Only delete GL stuff if not a Disbmgr
		         THISFORM.glmaint.delbatch(lcidgasinv)
		         SELECT glmaster
		         =TABLEUPDATE(.t.)
		      endif
		
		      THISFORM.oMessage.DISPLAY('This reading has been deleted successfully.')
		      THISFORM.txtcName.SET('value','')
		      THISFORM.txtdInvdate.SET('value',{})
		      THISFORM.txtcDescription.SET('value','')
		      THISFORM.txtcMeterNo.SET('value','')
		      THISFORM.txtccurrent.SET('value','')
		      THISFORM.txtnDue.SET('value','')
		   ENDIF
		ENDIF
		
	ENDPROC

	PROCEDURE Cmdcommandbuttoncustom1.Click
		thisform.process()
	ENDPROC

	PROCEDURE Cmdcommandbuttoncustom2.Click
		thisform.release()
	ENDPROC

	PROCEDURE swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		SET DELETED ON
		
		IF USED('temp')
		   USE IN temp
		ENDIF
		IF USED('temp1')
		   USE IN temp1
		ENDIF
		
		llOK = .T.
		lcList = 'cownerid\Owner ID,cOwnName\Owner Name,cmeterno\Meter No,cdescription/cdescrip\Description,dinvdate\Date,ccurrent\Current Reading'
		
		SELECT gasown.cownerid,  ;
		   gasuse.cinvtoken,  ;
		   investor.cOwnName,  ;
		   gasown.cmeterno,  ;
		   gasown.cdescription,  ;
		   gasuse.ddate as dinvdate,  ;
		   gasuse.ccurrent,  ;
		   gasuse.nused  ;
		   FROM gasown,gasuse,investor   ;
		   WHERE gasown.cownerid = investor.cownerid   ;
		   AND gasuse.cownerid = investor.cownerid   ;
		   and gasuse.cMeterNo = gasown.cMeterNo  ;
		   INTO CURSOR temp1
		
		USE DBF('temp1') AGAIN IN 0 ALIAS temp
		SELECT temp
		INDEX ON cownerid+cmeterno TAG cownerid
		INDEX ON cOwnName+cMeterNo TAG cOwnName
		INDEX ON cmeterno TAG cmeterno
		INDEX ON cdescription TAG cdescrip
		INDEX ON allt(dtoc(dinvdate))+cownerid+cMeterNo TAG dinvdate
		INDEX ON ccurrent TAG ccurrent
		
		SELECT temp
		SET ORDER TO dinvdate DESC
		SCAN
		   ldInvDate = dinvdate
		   lcMeterNo = cmeterno
		   lcRecNo = RECNO()
		   DELETE FOR dinvdate < ldInvDate AND cmeterno = lcMeterNo
		   GOTO lcRecNo
		ENDSCAN
		
		DO FORM ..\CUSTOM\picklist WITH 'temp', lcList,'', 6, .T., .t.
		
		IF llOK
		   THISFORM.txtcName.SET('value',temp.cOwnName)
		   THISFORM.txtcMeterNo.SET('value',temp.cmeterno)
		   THISFORM.txtcDescription.SET('value',temp.cdescription)
		   THISFORM.txtccurrent.SET('value',temp.ccurrent)
		   THISFORM.txtnDue.SET('value',temp.nUsed)
		   THISFORM.txtdInvDate.SET('value',temp.dinvdate)
		   SELECT gasuse
		   LOCATE FOR cinvtoken = temp.cinvtoken
		ENDIF
		
	ENDPROC

	PROCEDURE txtcCurrent.When
		return .f.
		
	ENDPROC

	PROCEDURE txtcDescription.When
		return .f.
		
	ENDPROC

	PROCEDURE txtcMeterNo.When
		return .f.
		
	ENDPROC

	PROCEDURE txtcName.When
		DODEFAULT()
		RETURN .F.
	ENDPROC

	PROCEDURE txtdInvDate.When
		DODEFAULT()
		RETURN .F.
	ENDPROC

	PROCEDURE txtnDue.When
		return .f.
		
	ENDPROC

ENDDEFINE
