*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="cspickchk.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 200
	Left = 40
	Name = "Dataenvironment"
	Top = 235
	Width = 520

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "checks", ;
		CursorSource = "checks", ;
		Database = ..\datafiles\diversifiedoilgasincdata\appdata.dbc, ;
		Filter = "NOT DELETED()", ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formcspickchk AS frmformcustom OF "..\custom\cforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lstSelectChecks" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblIDCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblYearPrd" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAmount" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtnSelected" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtnDollars" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSelect" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSortMessage" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboOwnerType" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblShow" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblGroup" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: selectall
		*p: lreturn
		*p: lzipcode		&& Parameter passed from cschecks that tells whether they've chosen to print in zipcode order.
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	Caption = "Select Checks To Print"
	DoCreate = .T.
	Height = 494
	HelpContextID = 118
	Name = "FormCspickchk"
	Width = 663
	WindowType = 1
	_memberdata = <VFPData>
		<memberdata name="lzipcode" display="lZipCode"/>
		</VFPData>		&& XML Metadata for customizable properties
	Mwresize1.lblHighLight.Name = "lblHighLight"
	Mwresize1.lblShading.Name = "lblShading"
	Mwresize1.Name = "Mwresize1"

	ADD OBJECT 'cboOwnerType' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		ColumnCount = 1, ;
		Height = 20, ;
		Left = 103, ;
		Name = "cboOwnerType", ;
		TabIndex = 15, ;
		Top = 441, ;
		Visible = .F., ;
		Width = 192
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'cmdCancel' AS cmdcommandbuttoncustom WITH ;
		Caption = "\<Cancel", ;
		Height = 36, ;
		Left = 516, ;
		Name = "cmdCancel", ;
		TabIndex = 12, ;
		Top = 402, ;
		Width = 72
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOK' AS cmdcommandbuttoncustom WITH ;
		Caption = "\<OK", ;
		Height = 36, ;
		Left = 434, ;
		Name = "cmdOK", ;
		TabIndex = 11, ;
		Top = 402, ;
		Width = 72
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdSelect' AS cmdcommandbuttoncustom WITH ;
		Caption = "\<Select All Checks", ;
		Height = 23, ;
		Left = 251, ;
		Name = "cmdSelect", ;
		TabIndex = 9, ;
		Top = 396, ;
		Width = 108
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'lblAmount' AS lbllabelcustom WITH ;
		Caption = "Amount", ;
		FontBold = .T., ;
		FontUnderline = .T., ;
		ForeColor = 0,0,255, ;
		Left = 577, ;
		Name = "lblAmount", ;
		TabIndex = 6, ;
		Top = 30
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblDate' AS lbllabelcustom WITH ;
		Caption = "Date", ;
		FontBold = .T., ;
		FontUnderline = .T., ;
		ForeColor = 0,0,255, ;
		Left = 425, ;
		Name = "lblDate", ;
		TabIndex = 4, ;
		Top = 30
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblGroup' AS lbllabelcustom WITH ;
		Caption = "Grp", ;
		FontBold = .T., ;
		FontUnderline = .T., ;
		ForeColor = 0,0,255, ;
		Left = 90, ;
		Name = "lblGroup", ;
		TabIndex = 3, ;
		Top = 30
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblIDCode' AS lbllabelcustom WITH ;
		Caption = "ID Code", ;
		FontBold = .T., ;
		Left = 11, ;
		Name = "lblIDCode", ;
		TabIndex = 2, ;
		Top = 30
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom7' AS lbllabelcustom WITH ;
		Caption = "Checks Selected", ;
		Left = 131, ;
		Name = "Lbllabelcustom7", ;
		TabIndex = 10, ;
		Top = 398
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom8' AS lbllabelcustom WITH ;
		Caption = "Checks Total", ;
		Left = 131, ;
		Name = "Lbllabelcustom8", ;
		TabIndex = 14, ;
		Top = 417
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom9' AS lbllabelcustom WITH ;
		Caption = "* To select multiple checks, hold the CTRL key down while clicking on the checks to be selected *", ;
		Left = 71, ;
		Name = "Lbllabelcustom9", ;
		TabIndex = 17, ;
		Top = 474
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblName' AS lbllabelcustom WITH ;
		Caption = "Name", ;
		FontBold = .T., ;
		FontUnderline = .T., ;
		ForeColor = 0,0,255, ;
		Left = 126, ;
		Name = "lblName", ;
		TabIndex = 3, ;
		Top = 30
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblShow' AS lbllabelcustom WITH ;
		Caption = "Show:", ;
		Left = 62, ;
		Name = "lblShow", ;
		TabIndex = 16, ;
		Top = 443, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSortMessage' AS lbllabelcustom WITH ;
		Caption = "**  The list can be sorted by clicking any column heading  Checks will print in the order chosen.  **", ;
		FontBold = .T., ;
		FontSize = 8, ;
		ForeColor = 255,0,0, ;
		Left = 15, ;
		Name = "lblSortMessage", ;
		TabIndex = 1, ;
		Top = 8
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblYearPrd' AS lbllabelcustom WITH ;
		Caption = "Year/Prd", ;
		FontBold = .T., ;
		FontUnderline = .T., ;
		ForeColor = 0,0,255, ;
		Left = 478, ;
		Name = "lblYearPrd", ;
		TabIndex = 5, ;
		Top = 30
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lstSelectChecks' AS lstlistboxcustom WITH ;
		ColumnCount = 8, ;
		ColumnLines = .F., ;
		FontName = "Courier New", ;
		Height = 350, ;
		Left = 4, ;
		MultiSelect = .T., ;
		Name = "lstSelectChecks", ;
		RowSource = "picktmp.cid, cgroup, cPayeedisp, dCheckDate, cYear, cPeriod, nAmount, cidchec", ;
		RowSourceType = 6, ;
		TabIndex = 7, ;
		Top = 46, ;
		Width = 637
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="listbox" />

	ADD OBJECT 'txtnDollars' AS txttextboxcustom WITH ;
		Alignment = 1, ;
		BackColor = 212,208,200, ;
		BorderStyle = 0, ;
		Height = 20, ;
		InputMask = "99,999,999.99", ;
		Left = 28, ;
		Name = "txtnDollars", ;
		TabIndex = 13, ;
		Top = 416, ;
		Width = 96
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtnSelected' AS txttextboxcustom WITH ;
		Alignment = 1, ;
		BackColor = 212,208,200, ;
		BorderStyle = 0, ;
		Height = 20, ;
		InputMask = "99,999", ;
		Left = 52, ;
		Name = "txtnSelected", ;
		TabIndex = 8, ;
		Top = 396, ;
		Width = 72
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE Init
		LPARA tcType, tcAcctNo, tlZipCode
		LOCAL lnCount
		
		WAIT WIND 'Please Wait...Building a List of Checks' NOWAIT
		
		thisform.lZipCode = tlZipCode
		
		* If they chose to print by zipcode order don't show the message about different sorts
		IF thisform.lZipCode
		   thisform.lblsortMessage.Visible = .f.
		ELSE
		   thisform.lblsortMessage.Visible = .t.
		ENDIF 
		   
		CREATE CURSOR picktmp ;
		   (cid        C(12), ;
		   cidtype    C(1),  ;
		   cpayee     C(60), ;
		   cpayee2    C(60), ;
		   cPayeeDisp C(40), ;
		   dcheckdate D,     ;
		   cyear      C(4),  ;
		   cPeriod    C(2),  ;
		   nAmount    N(12,2), ;
		   chosen     C(1), ;
		   cmemo      C(60), ;
		   lprinted   L, ;
		   cidchec    C(8), ;
		   csource    C(2), ;
		   cTypeInv   C(2),  ;
		   czipcode   c(10), ;
		   lVoid      L, ;
		   lNoStub    L, ;
		   cbatch     C(8), ;
		   cgroup     C(4))
		
		IF m.goApp.lAMVersion
		   DO CASE
		      CASE tcType = "DM" OR tcType = 'PD'
		         SELECT cid, cidtype, cpayee, cpayee AS cPayeeDisp, dcheckdate, cyear, cPeriod, nAmount, ' ' AS chosen, ;
		            .F. AS lprinted, cmemo, cidchec, lVoid, cgroup, csource, cbatch, investor.lnostubDetail AS lNoStub, ;
		            SPACE(40) AS cpayee2, IIF(investor.lchktosec,investor.czip2,investor.czip1) as czipcode ;
		            FROM checks, investor ;
		            WHERE (EMPTY(cCheckno)) ;
		            AND lVoid = .F. ;
		            AND cidtype <> 'D' ;
		            AND cidtype <> 'V' ;
		            AND checks.cid = investor.cownerid ;
		            AND csource = tcType ;
		            AND checks.lhist = .F. ;
		            AND checks.lprinted = .F. ;
		            AND NOT DELETED() ;
		            AND cAcctNo = tcAcctNo ;
		            INTO CURSOR picktemp ;
		            ORDER BY cid, dcheckdate
		         lnChecks = _TALLY
		         m.nchecks = 1
		
		      CASE tcType = "AP"
		         SELECT cid, cidtype, cpayee, cpayee AS cPayeeDisp, dcheckdate, cyear, cPeriod, nAmount, ' ' AS chosen, ;
		            .F. AS lprinted, cmemo, cidchec, lVoid, cgroup, csource, cbatch, .F. AS lNoStub, ;
		            SPACE(40) AS cpayee2, SPACE(10) as czipcode ;
		            FROM checks ;
		            WHERE (EMPTY(cCheckno) OR (LEN(ALLTRIM(cCheckno)) = 1 AND ALLTRIM(cCheckno) = '0'))  ;
		            AND cidtype <> 'D'     ;
		            AND (INLIST(checks.csource,'AP','CS','CD') OR (checks.csource = 'DM' AND cidtype = 'V'))  ;
		            AND lVoid = .F. ;
		            AND checks.lhist = .F. ;
		            AND checks.lprinted = .F. ;
		            AND NOT DELETED() ;
		            AND cAcctNo = tcAcctNo ;
		            INTO CURSOR picktemp ;
		            ORDER BY cid, dcheckdate
		         lnChecks = _TALLY
		         m.nchecks = 1
		
		      CASE tcType = 'PR'
		         SELECT cid, cidtype, cpayee, cpayee AS cPayeeDisp, dcheckdate, cyear, cPeriod, nAmount, ' ' AS chosen, ;
		            .F. AS lprinted, cmemo, cidchec, lVoid, cgroup, csource, ;
		            SPACE(40) AS cpayee2, SPACE(10) as czipcode ;
		            FROM checks ;
		            WHERE (EMPTY(cCheckno)) ;
		            AND cidtype # 'D'  ;
		            AND csource = 'PR' ;
		            AND lVoid = .F. ;
		            AND checks.lhist = .F. ;
		            AND checks.lprinted = .F. ;
		            AND NOT DELETED() ;
		            AND cAcctNo = tcAcctNo ;
		            INTO CURSOR picktemp ;
		            ORDER BY cid, cyear, cPeriod
		         lnChecks = _TALLY
		         m.nchecks = 1
		
		      CASE tcType = 'LM'
		         SELECT cid, cidtype, cpayee, cpayee AS cPayeeDisp, dcheckdate, cyear, cPeriod, nAmount, ' ' AS chosen, ;
		            .F. AS lprinted, cmemo, cidchec, lVoid, cgroup, csource, ;
		            SPACE(40) AS cpayee2, SPACE(10) as czipcode ;
		            FROM checks ;
		            WHERE (EMPTY(cCheckno)) ;
		            AND cidtype # 'D'  ;
		            AND csource = 'LM' ;
		            AND lVoid = .F. ;
		            AND checks.lhist = .F. ;
		            AND checks.lprinted = .F. ;
		            AND NOT DELETED() ;
		            AND cAcctNo = tcAcctNo ;
		            INTO CURSOR picktemp ;
		            ORDER BY cid, cyear, cPeriod
		         lnChecks = _TALLY
		         m.nchecks = 1
		   ENDCASE
		ELSE
		   DO CASE
		      CASE tcType = "DM" OR tcType = 'PD'
		         SELECT cid, cidtype, cpayee, cpayee AS cPayeeDisp, dcheckdate, cyear, cPeriod, nAmount, ' ' AS chosen, ;
		            .F. AS lprinted, cmemo, cidchec, lVoid, cgroup, csource, cbatch, investor.lnostubDetail AS lNoStub,;
		            SPACE(40) AS cpayee2, IIF(investor.lchktosec,investor.czip2,investor.czip1) as czipcode ;
		            FROM checks, investor ;
		            WHERE (EMPTY(cCheckno) OR cCheckno = '         0') ;
		            AND lVoid = .F. ;
		            AND INLIST(cidtype,'I','M') ;
		            AND checks.cid = investor.cownerid ;
		            AND checks.lhist = .F. ;
		            AND checks.lprinted = .F. ;
		            AND checks.csource = tcType ;
		            AND NOT DELETED() ;
		            INTO CURSOR picktemp ;
		            ORDER BY cid, cyear, cPeriod
		         lnChecks = _TALLY
		         m.nchecks = 1
		
		      CASE tcType = "AP"
		         SELECT cid, cidtype, cpayee, cpayee AS cPayeeDisp, dcheckdate, cyear, cPeriod, nAmount, ' ' AS chosen, ;
		            .F. AS lprinted, cmemo, cidchec, lVoid, cgroup, csource, .F. AS lNoStub, ;
		            SPACE(40) AS cpayee2, SPACE(10) as czipcode ;
		            FROM checks ;
		            WHERE (EMPTY(cCheckno) OR cCheckno = '         0')  ;
		            AND cidtype = 'V'     ;
		            AND lVoid = .F. ;
		            AND checks.lhist = .F. ;
		            AND checks.lprinted = .F. ;
		            AND NOT DELETED() ;
		            INTO CURSOR picktemp ;
		            ORDER BY cid, cyear, cPeriod
		         lnChecks = _TALLY
		         m.nchecks = 1
		
		      CASE tcType = "LM"
		         SELECT cid, cidtype, cpayee, cpayee AS cPayeeDisp, dcheckdate, cyear, cPeriod, nAmount, ' ' AS chosen, ;
		            .F. AS lprinted, cmemo, cidchec, lVoid, cgroup, csource, .F. AS lNoStub, ;
		            SPACE(40) AS cpayee2, SPACE(10) as czipcode ;
		            FROM checks ;
		            WHERE (EMPTY(cCheckno) OR cCheckno = '         0')  ;
		            AND cidtype <> 'D'     ;
		            AND csource = 'LM' ;
		            AND lVoid = .F. ;
		            AND checks.lhist = .F. ;
		            AND checks.lprinted = .F. ;
		            AND NOT DELETED() ;
		            INTO CURSOR picktemp ;
		            ORDER BY cid, cyear, cPeriod
		         lnChecks = _TALLY
		         m.nchecks = 1
		
		   ENDCASE
		
		ENDIF
		WAIT CLEAR
		
		IF lnChecks = 0
		   THISFORM.oMessage.DISPLAY('No Checks Found To Print')
		   THISFORM.lReturn = .F.
		   RETURN .F.
		ENDIF
		
		SET SAFETY OFF 
		SELECT picktmp
		APPEND FROM DBF('picktemp')
		INDEX ON cpayee + DTOS(dcheckdate) TAG cpayee
		INDEX ON DTOS(dcheckdate) TAG dcheckdate
		INDEX ON cyear+cPeriod + DTOS(dcheckdate) TAG cyearprd
		INDEX ON nAmount TAG nAmount
		INDEX on czipcode+cid TAG zipcode 
		INDEX on cgroup+DTOS(dcheckdate)+cid TAG cgroup
		INDEX ON cid + DTOS(dcheckdate) TAG cid
		
		IF tlzipcode
		   SET ORDER to zipcode
		ENDIF 
		
		IF tcType = "DM"  &&  If owner checks are being printed, show the list of owner types, to be filtered on
		   swselect('sysctl')
		   SET ORDER to CDMBATCH   && CDMBATCH
		   SELECT picktmp
		   * Don't do the owner type processing if the check count is over 500.
		   * The processing is way too slow.
		   IF RECCOUNT() < 500
		      oprogress = thisform.omessage.progressbar('Building list of checks...Please wait.')
		      oprogress.setprogressrange(0,RECCOUNT())
		      lncount = 1
		      THISFORM.lblshow.VISIBLE = .T.
		      THISFORM.cboOwnerType.VISIBLE = .T.
		      SELECT picktmp
		      SCAN
		         swselect('sysctl')
		         IF SEEK(picktmp.cbatch)
		            oprogress.updateprogress(lnCount)
		            lnCount = lnCount + 1
		            lcRunYear = cRunYear + PADL(nrunno,3,'0')
		            swselect('disbhist')  &&  Try and find a record for WI and non-WI interests, so we can fill in the owner type correctly for future filtering
		            LOCATE FOR cownerid = picktmp.cid AND cRunYear+PADL(nrunno,3,'0') = lcRunYear AND cRecType = sysctl.cTypeClose AND cTypeInv <> 'W'
		            IF FOUND()
		               REPLACE picktmp.cTypeInv WITH ALLTRIM(picktmp.cTypeInv) + 'R'
		            ENDIF
		            LOCATE FOR cownerid = picktmp.cid AND cRunYear+PADL(nrunno,3,'0') = lcRunYear AND cRecType = sysctl.cTypeClose AND cTypeInv = 'W'
		            IF FOUND()
		               REPLACE picktmp.cTypeInv WITH 'W'
		            ENDIF
		         ENDIF
		      ENDSCAN
		      oprogress.closeprogress()
		      RELEASE oprogress
		   ENDIF
		ENDIF
		
		RETURN (DODEFAULT())
		
	ENDPROC

	PROCEDURE selectall
		LOCAL lnCount, lnTotal
		DO CASE
		   CASE thisform.cmdselect.caption = '\<Select All Checks'
		      thisform.cmdselect.caption = '\<Unselect All Checks'
		      STORE 0 TO lnCount, lnTotal
		      FOR lnX = 1 TO thisform.lstSelectChecks.ListCount
		          thisform.lstSelectChecks.Selected(lnX) = .T.
		          lnCount = lnCount + 1
		          lcidchec = thisform.lstSelectChecks.ListItem[lnX,8]
		          SELECT picktmp
		          LOCATE FOR cidchec == lcidchec
		          IF FOUND()
		             lnTotal = lnTotal + picktmp.nAmount
		          ENDIF
		      ENDFOR
		      
		   CASE thisform.cmdselect.caption = '\<Unselect All Checks'
		      thisform.cmdselect.caption = '\<Select All Checks'
		      STORE 0 TO lnCount, lnTotal
		      FOR lnX = 1 TO thisform.lstSelectChecks.ListCount
		          thisform.lstSelectChecks.Selected(lnX) = .F.
		      ENDFOR   
		ENDCASE
		
		thisform.lstSelectChecks.Refresh()
		thisform.txtnSelected.SetValue(lnCount)      
		thisform.txtnDollars.SetValue(lnTotal)      
		thisform.lstSelectChecks.Refresh()
		
	ENDPROC

	PROCEDURE Unload
		RETURN thisform.lReturn
	ENDPROC

	PROCEDURE cboOwnerType.Init
		this.AddListItem('**  All Owner Types  **',1,1)
		this.AddListItem('*',1,2)
		this.AddListItem('Working Interest Owners',2,1)
		this.AddListItem('W',2,2)
		this.AddListItem('Royalty Owners',3,1)
		this.AddListItem('R',3,2)
		
		this.ListItemId = 1
		
		DODEFAULT()
	ENDPROC

	PROCEDURE cboOwnerType.Valid
		DO CASE
		   CASE THIS.VALUE = '*'  &&  All Owners
		      SELECT picktmp
		      SET FILTER TO
		   CASE THIS.VALUE = 'W'
		      SELECT picktmp
		      SET FILTER TO 'W' $ cTypeInv
		   CASE THIS.VALUE = 'R'
		      SELECT picktmp
		      SET FILTER TO 'R' $ cTypeInv
		ENDCASE
		
		THISFORM.cmdSelect.CAPTION = '\<Unselect All Checks'
		THISFORM.selectall()
		thisform.lstSelectChecks.requery()
		
		DODEFAULT()
	ENDPROC

	PROCEDURE cmdCancel.Click
		thisform.lReturn = .F.
		thisform.release()
	ENDPROC

	PROCEDURE cmdOK.Click
		LOCAL lnX, lnCount, laSelected[1], lcidchec
		
		*  Initialize the count of selected items
		lnCount = 0
		
		*
		*  Check to see which items were selected, then pass the cidchec
		*  of those items back to the cschecks form.
		*
		FOR lnX = 1 TO THISFORM.lstSelectChecks.LISTCOUNT
		   IF THISFORM.lstSelectChecks.SELECTED(lnX)
		      lnCount = lnCount + 1
		      DIME laSelected[lnCount]
		      laSelected[lnCount] = THISFORM.lstSelectChecks.LISTITEM[lnX,8]
		   ENDIF
		ENDFOR
		
		*
		*  Now, loop through the array, if any items were selected, to change
		*  the chosen flag to 'Y' in the picktmp cursor.  We can tell how many
		*  were selected by checking lnCount
		*
		IF lnCount > 0
		   FOR lnX = 1 TO lnCount
		      lcidchec = laSelected[lnX]
		      SELECT picktmp
		      LOCATE FOR cidchec == lcidchec
		      IF FOUND()
		         REPL chosen WITH 'Y'
		      ENDIF
		   ENDFOR
		   lcOrder = ORDER('picktmp')
		   IF NOT THISFORM.lZipCode
		      IF lcOrder <> 'CID'
		         lcOrdDesc = 'ID Code'
		         IF lcOrder = 'CPAYEE'
		            lcOrdDesc = 'Payee'
		         ENDIF
		         IF lcOrder = 'DCHECKDATE'
		            lcOrdDesc = 'Check Date'
		         ENDIF
		         IF lcOrder = 'CYEARPRD'
		            lcOrdDesc = 'Year/Period'
		         ENDIF
		         IF lcOrder = 'NAMOUNT'
		            lcOrdDesc = 'Amount'
		         ENDIF
		         IF NOT THISFORM.omessage.CONFIRM('The checks will be printing in the alternate ' + lcOrdDesc + ' order selected on this screen. Is that OK?')
		            RETURN
		         ENDIF
		      ENDIF
		   ENDIF
		   SELECT picktmp
		   DELETE FOR chosen <> 'Y'
		   THISFORM.lReturn = .T.
		   THISFORM.RELEASE()
		ELSE
		   THISFORM.lReturn = .F.
		   THISFORM.omessage.DISPLAY('No checks were selected to print...')
		ENDIF
		
		
		
		
		
	ENDPROC

	PROCEDURE cmdSelect.Click
		DODEFAULT()
		
		thisform.selectall()
		
		
	ENDPROC

	PROCEDURE lblAmount.Click
		IF thisform.lZipCode
		   thisform.omessage.Warning('You have chosen to print in zipcode order on the Print Checks Screen. You cannot change the order here.')
		   RETURN
		ENDIF 
		
		THIS.PARENT.lblIDCode.FORECOLOR = RGB(0,0,255)
		THIS.PARENT.lblIDCode.FONTUNDERLINE = .T.
		THIS.PARENT.lblname.FONTUNDERLINE = .T.
		THIS.PARENT.lblname.FORECOLOR = RGB(0,0,255)
		THIS.PARENT.lblDate.FONTUNDERLINE = .T.
		THIS.PARENT.lblDate.FORECOLOR = RGB(0,0,255)
		THIS.PARENT.lblYearPrd.FONTUNDERLINE = .T.
		THIS.PARENT.lblYearPrd.FORECOLOR = RGB(0,0,255)
		THIS.PARENT.lblAmount.FONTUNDERLINE = .F.
		THIS.PARENT.lblAmount.FORECOLOR = RGB(0,0,0)
		
		
		SELECT picktmp
		IF ORDER('picktmp') = 'NAMOUNT'  &&  Don't try and sort the list again if it's already sorted by this column
		   RETURN
		ENDIF
		SET ORDER TO nAmount
		GO TOP
		thisform.lstSelectChecks.Requery()
		THISFORM.lstSelectChecks.REFRESH()
		
		THISFORM.cmdSelect.CAPTION = '\<Unselect All Checks'
		THISFORM.selectall()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE lblDate.Click
		IF thisform.lZipCode
		   thisform.omessage.Warning('You have chosen to print in zipcode order on the Print Checks Screen. You cannot change the order here.')
		   RETURN
		ENDIF 
		
		THIS.PARENT.lblIDCode.FORECOLOR = RGB(0,0,255)
		THIS.PARENT.lblIDCode.FONTUNDERLINE = .T.
		THIS.PARENT.lblname.FONTUNDERLINE = .T.
		THIS.PARENT.lblname.FORECOLOR = RGB(0,0,255)
		THIS.PARENT.lblDate.FONTUNDERLINE = .F.
		THIS.PARENT.lblDate.FORECOLOR = RGB(0,0,0)
		THIS.PARENT.lblYearPrd.FONTUNDERLINE = .T.
		THIS.PARENT.lblYearPrd.FORECOLOR = RGB(0,0,255)
		THIS.PARENT.lblAmount.FONTUNDERLINE = .T.
		THIS.PARENT.lblAmount.FORECOLOR = RGB(0,0,255)
		
		SELECT picktmp
		IF ORDER('picktmp') = 'DCHECKDATE'  &&  Don't try and sort the list again if it's already sorted by this column
		   RETURN
		ENDIF
		SET ORDER TO dCheckDate
		GO TOP
		THISFORM.lstSelectChecks.REQUERY()
		THISFORM.lstSelectChecks.REFRESH()
		
		THISFORM.cmdSelect.CAPTION = '\<Unselect All Checks'
		THISFORM.selectall()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE lblGroup.Click
		IF thisform.lZipCode
		   thisform.omessage.Warning('You have chosen to print in zipcode order on the Print Checks Screen. You cannot change the order here.')
		   RETURN
		ENDIF 
		THIS.PARENT.lblIDCode.FORECOLOR = RGB(0,0,255)
		THIS.PARENT.lblIDCode.FONTUNDERLINE = .T.
		THIS.PARENT.lblname.FONTUNDERLINE = .t.
		THIS.PARENT.lblname.FORECOLOR = RGB(0,0,255)
		THIS.PARENT.lblDate.FONTUNDERLINE = .T.
		THIS.PARENT.lblDate.FORECOLOR = RGB(0,0,255)
		THIS.PARENT.lblYearPrd.FONTUNDERLINE = .T.
		THIS.PARENT.lblYearPrd.FORECOLOR = RGB(0,0,255)
		THIS.PARENT.lblAmount.FONTUNDERLINE = .T.
		THIS.PARENT.lblAmount.FORECOLOR = RGB(0,0,255)
		THIS.PARENT.lblGroup.FONTUNDERLINE = .f.
		THIS.PARENT.lblGroup.FORECOLOR = RGB(0,0,0)
		
		SELECT picktmp
		IF ORDER('picktmp') = 'CGROUP'  &&  Don't try and sort the list again if it's already sorted by this column
		   RETURN
		ENDIF
		SET ORDER TO cGroup
		GO TOP
		THISFORM.lstSelectChecks.REQUERY()
		THISFORM.lstSelectChecks.REFRESH()
		
		THISFORM.cmdSelect.CAPTION = '\<Unselect All Checks'
		THISFORM.selectall()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE lblIDCode.Click
		IF thisform.lZipCode
		   thisform.omessage.Warning('You have chosen to print in zipcode order on the Print Checks Screen. You cannot change the order here.')
		   RETURN
		ENDIF 
		
		THIS.PARENT.lblIDCode.FORECOLOR = RGB(0,0,0)
		THIS.PARENT.lblIDCode.FONTUNDERLINE = .F.
		THIS.PARENT.lblname.FONTUNDERLINE = .T.
		THIS.PARENT.lblname.FORECOLOR = RGB(0,0,255)
		THIS.PARENT.lblDate.FONTUNDERLINE = .T.
		THIS.PARENT.lblDate.FORECOLOR = RGB(0,0,255)
		THIS.PARENT.lblYearPrd.FONTUNDERLINE = .T.
		THIS.PARENT.lblYearPrd.FORECOLOR = RGB(0,0,255)
		THIS.PARENT.lblAmount.FONTUNDERLINE = .T.
		THIS.PARENT.lblAmount.FORECOLOR = RGB(0,0,255)
		
		SELECT picktmp
		IF ORDER('picktmp') = 'CID'  &&  Don't try and sort the list again if it's already sorted by this column
		   RETURN
		ENDIF
		SET ORDER TO cID
		GO TOP
		THISFORM.lstSelectChecks.REQUERY()
		THISFORM.lstSelectChecks.REFRESH()
		
		THISFORM.cmdSelect.CAPTION = '\<Unselect All Checks'
		THISFORM.selectall()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE lblName.Click
		IF thisform.lZipCode
		   thisform.omessage.Warning('You have chosen to print in zipcode order on the Print Checks Screen. You cannot change the order here.')
		   RETURN
		ENDIF 
		THIS.PARENT.lblIDCode.FORECOLOR = RGB(0,0,255)
		THIS.PARENT.lblIDCode.FONTUNDERLINE = .T.
		THIS.PARENT.lblname.FONTUNDERLINE = .F.
		THIS.PARENT.lblname.FORECOLOR = RGB(0,0,0)
		THIS.PARENT.lblDate.FONTUNDERLINE = .T.
		THIS.PARENT.lblDate.FORECOLOR = RGB(0,0,255)
		THIS.PARENT.lblYearPrd.FONTUNDERLINE = .T.
		THIS.PARENT.lblYearPrd.FORECOLOR = RGB(0,0,255)
		THIS.PARENT.lblAmount.FONTUNDERLINE = .T.
		THIS.PARENT.lblAmount.FORECOLOR = RGB(0,0,255)
		THIS.PARENT.lblGroup.FONTUNDERLINE = .T.
		THIS.PARENT.lblGroup.FORECOLOR = RGB(0,0,255)
		
		SELECT picktmp
		IF ORDER('picktmp') = 'CPAYEE'  &&  Don't try and sort the list again if it's already sorted by this column
		   RETURN
		ENDIF
		SET ORDER TO cPayee
		GO TOP
		THISFORM.lstSelectChecks.REQUERY()
		THISFORM.lstSelectChecks.REFRESH()
		
		THISFORM.cmdSelect.CAPTION = '\<Unselect All Checks'
		THISFORM.selectall()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE lblYearPrd.Click
		IF thisform.lZipCode
		   thisform.omessage.Warning('You have chosen to print in zipcode order on the Print Checks Screen. You cannot change the order here.')
		   RETURN
		ENDIF 
		
		THIS.PARENT.lblIDCode.FORECOLOR = RGB(0,0,255)
		THIS.PARENT.lblIDCode.FONTUNDERLINE = .T.
		THIS.PARENT.lblname.FONTUNDERLINE = .T.
		THIS.PARENT.lblname.FORECOLOR = RGB(0,0,255)
		THIS.PARENT.lblDate.FONTUNDERLINE = .T.
		THIS.PARENT.lblDate.FORECOLOR = RGB(0,0,255)
		THIS.PARENT.lblYearPrd.FONTUNDERLINE = .F.
		THIS.PARENT.lblYearPrd.FORECOLOR = RGB(0,0,0)
		THIS.PARENT.lblAmount.FONTUNDERLINE = .T.
		THIS.PARENT.lblAmount.FORECOLOR = RGB(0,0,255)
		
		SELECT picktmp
		IF ORDER('picktmp') = 'CYEARPRD'  &&  Don't try and sort the list again if it's already sorted by this column
		   RETURN
		ENDIF
		SET ORDER TO cYearPrd
		GO TOP
		THISFORM.lstSelectChecks.REQUERY()
		THISFORM.lstSelectChecks.REFRESH()
		
		THISFORM.cmdSelect.CAPTION = '\<Unselect All Checks'
		THISFORM.selectall()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE lstSelectChecks.Click
		LOCAL lnCount 
		
		*DODEFAULT()
		
		*  Initialize the count of selected items
		lnCount = 0
		lnTotal = 0
		*
		*  Count the selected checks.
		*
		FOR lnX = 1 TO this.ListCount
		  IF this.Selected(lnX)
		     lnCount = lnCount + 1
		     lcidchec = thisform.lstSelectChecks.ListItem[lnX,8]
		     SELECT picktmp
		     LOCATE FOR cidchec == lcidchec
		     IF FOUND()
		        lnTotal = lnTotal + picktmp.nAmount
		     ENDIF
		  ENDIF
		ENDFOR
		
		thisform.txtnSelected.setvalue(lnCount)
		thisform.txtnDollars.setvalue(lnTotal)
		
	ENDPROC

	PROCEDURE lstSelectChecks.Init
		*
	ENDPROC

	PROCEDURE lstSelectChecks.InteractiveChange
		*
	ENDPROC

	PROCEDURE lstSelectChecks.When
		LOCAL lnCount 
		
		*DODEFAULT()
		
		*  Initialize the count of selected items
		lnCount = 0
		lnTotal = 0
		
		*
		*  Count the selected checks.
		*
		FOR lnX = 1 TO this.ListCount
		  IF this.Selected(lnX)
		     lnCount = lnCount + 1
		     lcidchec = thisform.lstSelectChecks.ListItem[lnX,8]
		     SELECT picktmp
		     LOCATE FOR cidchec == lcidchec
		     IF FOUND()
		        lnTotal = lnTotal + picktmp.nAmount
		     ENDIF
		  ENDIF
		ENDFOR
		
		thisform.txtnSelected.setvalue(lnCount)
		thisform.txtnDollars.setvalue(lnTotal)
		
	ENDPROC

	PROCEDURE txtnDollars.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtnSelected.When
		RETURN .F.
	ENDPROC

ENDDEFINE
