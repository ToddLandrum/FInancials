*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="cschkreg.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 200
	InitialSelectedAlias = "vendor"
	Left = 40
	Name = "Dataenvironment"
	Top = 235
	Width = 520

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "vendor", ;
		BufferModeOverride = 5, ;
		CursorSource = "vendor", ;
		Database = ..\datafiles\everfloweasterndata\appdata.dbc, ;
		Height = 90, ;
		Left = 4, ;
		Name = "Cursor1", ;
		Order = "cvendorid", ;
		Top = 27, ;
		Width = 89
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "coa", ;
		CursorSource = "coa", ;
		Database = ..\datafiles\everfloweasterndata\appdata.dbc, ;
		Height = 90, ;
		Left = 362, ;
		Name = "Cursor2", ;
		Top = 1, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "checks", ;
		BufferModeOverride = 5, ;
		CursorSource = "checks", ;
		Database = ..\datafiles\everfloweasterndata\appdata.dbc, ;
		Height = 90, ;
		Left = 236, ;
		Name = "Cursor3", ;
		Top = 27, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "custownvend", ;
		CursorSource = "custownvend", ;
		Database = ..\datafiles\everfloweasterndata\appdata.dbc, ;
		Height = 90, ;
		Left = 107, ;
		Name = "Cursor4", ;
		Top = 30, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "glopt", ;
		CursorSource = "glopt", ;
		Database = ..\datafiles\everfloweasterndata\appdata.dbc, ;
		Height = 90, ;
		Left = 6, ;
		Name = "Cursor5", ;
		Top = 148, ;
		Width = 97
		*< END OBJECT: BaseClass="cursor" />
	
	PROCEDURE BeforeOpenTables
		WAIT WINDOW NOWAIT 'Opening check register files...'
	ENDPROC

	PROCEDURE OpenTables
		DODEFAULT()
		WAIT CLEAR 
	ENDPROC

ENDDEFINE

DEFINE CLASS formcsreglist AS frmrptcriteria OF "..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="chkDeposits" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkOpenBal" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="opgProcessBy" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblProcessBy" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Runcombo1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcBegCheck" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcEndCheck" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkChecks" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Glmaint" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="opgSortBy" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkOwners" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkVendors" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="opgInclude" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblInclude" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkEmployees" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkManual" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSortby" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBegID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEndID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDateRange" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCheckRange" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtdbegdate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtdenddate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkPurchasers" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSelected" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSelected" UniqueID="" Timestamp="" />

	Caption = "Print Check Register"
	DataSession = 2
	DoCreate = .T.
	Height = 510
	HelpContextID = 186
	Name = "FormCsreglist"
	Visible = .T.
	Width = 463
	Swrptcriteriabuttons1.chkExport.Alignment = 0
	Swrptcriteriabuttons1.chkExport.Name = "chkExport"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.cmdPreview.Name = "cmdPreview"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 111
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 32
	Swrptcriteriabuttons1.Top = 432
	Swrptcriteriabuttons1.ZOrderSet = 0

	ADD OBJECT 'cboAcct' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		ColumnCount = 1, ;
		ControlSource = "", ;
		Height = 20, ;
		Left = 127, ;
		Margin = 2, ;
		Name = "cboAcct", ;
		TabIndex = 1, ;
		Top = 6, ;
		Width = 317, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'chkChecks' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "Show Checks", ;
		Height = 16, ;
		Left = 43, ;
		Name = "chkChecks", ;
		TabIndex = 9, ;
		Top = 144, ;
		Value = .T., ;
		Width = 86, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkDeposits' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "Show Deposits", ;
		Height = 16, ;
		Left = 167, ;
		Name = "chkDeposits", ;
		TabIndex = 10, ;
		Top = 144, ;
		Value = .T., ;
		Width = 92, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkEmployees' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Employees", ;
		Enabled = .T., ;
		Left = 287, ;
		Name = "chkEmployees", ;
		TabIndex = 15, ;
		Top = 171, ;
		Value = .T.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkManual' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Manual", ;
		Enabled = .T., ;
		Left = 378, ;
		Name = "chkManual", ;
		TabIndex = 17, ;
		Top = 171, ;
		Value = .T.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkOpenBal' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "Show Opening Balance", ;
		Enabled = .F., ;
		Height = 16, ;
		Left = 297, ;
		Name = "chkOpenBal", ;
		TabIndex = 11, ;
		Top = 144, ;
		Value = .T., ;
		Width = 132, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkOwners' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Owners", ;
		Enabled = .T., ;
		Left = 32, ;
		Name = "chkOwners", ;
		TabIndex = 12, ;
		Top = 171, ;
		Value = .T.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkPurchasers' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Purchasers", ;
		Enabled = .T., ;
		Left = 192, ;
		Name = "chkPurchasers", ;
		TabIndex = 14, ;
		Top = 171, ;
		Value = .T.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSelected' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Choose Selected IDs", ;
		Left = 169, ;
		Name = "chkSelected", ;
		TabIndex = 26, ;
		Top = 289, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkVendors' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Vendors", ;
		Enabled = .T., ;
		Left = 111, ;
		Name = "chkVendors", ;
		TabIndex = 13, ;
		Top = 171, ;
		Value = .T.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Glmaint' AS glmaint WITH ;
		Left = 0, ;
		Name = "Glmaint", ;
		Top = 478
		*< END OBJECT: ClassLib="..\custom\swgl.vcx" BaseClass="custom" />

	ADD OBJECT 'lblAcct' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Checking Account:", ;
		Height = 16, ;
		Left = 24, ;
		Name = "lblAcct", ;
		TabIndex = 2, ;
		Top = 8, ;
		Width = 93, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblBegID' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Beginning ID ", ;
		Height = 16, ;
		Left = 81, ;
		Name = "lblBegID", ;
		TabIndex = 30, ;
		Top = 313, ;
		Width = 64, ;
		ZOrderSet = 24
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblCheckRange' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Check Range:", ;
		Height = 16, ;
		Left = 76, ;
		Name = "lblCheckRange", ;
		TabIndex = 27, ;
		Top = 255, ;
		Width = 69, ;
		ZOrderSet = 27
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblDateRange' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Date Range:", ;
		Height = 16, ;
		Left = 84, ;
		Name = "lblDateRange", ;
		TabIndex = 20, ;
		Top = 202, ;
		Width = 61, ;
		ZOrderSet = 26
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblEndID' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Ending ID ", ;
		Height = 16, ;
		Left = 96, ;
		Name = "lblEndID", ;
		TabIndex = 31, ;
		Top = 364, ;
		Width = 49, ;
		ZOrderSet = 25
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblInclude' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		BackStyle = 1, ;
		Caption = "Include:", ;
		FontBold = .T., ;
		Height = 16, ;
		Left = 312, ;
		Name = "lblInclude", ;
		TabIndex = 5, ;
		Top = 40, ;
		Width = 45, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "-", ;
		Height = 16, ;
		Left = 265, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 28, ;
		Top = 255, ;
		Width = 6, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "Run No", ;
		Left = 108, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 23, ;
		Top = 230
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom3' AS lbllabelcustom WITH ;
		Caption = "-", ;
		FontBold = .T., ;
		Height = 16, ;
		Left = 271, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 21, ;
		Top = 203, ;
		Width = 6
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblProcessBy' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		BackStyle = 1, ;
		Caption = "Select By:", ;
		FontBold = .T., ;
		Height = 16, ;
		Left = 24, ;
		Name = "lblProcessBy", ;
		TabIndex = 3, ;
		Top = 40, ;
		Width = 55, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSelected' AS lbllabelcustom WITH ;
		Caption = "All Owners Selected", ;
		ForeColor = 0,0,255, ;
		Left = 187, ;
		Name = "lblSelected", ;
		TabIndex = 16, ;
		Top = 347, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSortby' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		BackStyle = 1, ;
		Caption = "Sort By:", ;
		FontBold = .T., ;
		Height = 16, ;
		Left = 159, ;
		Name = "lblSortby", ;
		TabIndex = 4, ;
		Top = 40, ;
		Width = 44, ;
		ZOrderSet = 22
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'opgInclude' AS opgoptiongroupcustom WITH ;
		AutoSize = .F., ;
		ButtonCount = 3, ;
		Height = 76, ;
		Left = 307, ;
		Name = "opgInclude", ;
		TabIndex = 8, ;
		Top = 47, ;
		Width = 127, ;
		ZOrderSet = 18, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "All Entries", ;
		Option1.FontSize = 8, ;
		Option1.Height = 16, ;
		Option1.Left = 5, ;
		Option1.Name = "optAll", ;
		Option1.TabIndex = 1, ;
		Option1.Top = 14, ;
		Option1.Width = 66, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "Cleared Entries", ;
		Option2.FontSize = 8, ;
		Option2.Height = 16, ;
		Option2.Left = 5, ;
		Option2.Name = "optCleared", ;
		Option2.TabIndex = 2, ;
		Option2.Top = 34, ;
		Option2.Width = 91, ;
		Option3.AutoSize = .T., ;
		Option3.Caption = "Uncleared Entries", ;
		Option3.FontSize = 8, ;
		Option3.Height = 16, ;
		Option3.Left = 5, ;
		Option3.Name = "optUnclear", ;
		Option3.TabIndex = 3, ;
		Option3.Top = 54, ;
		Option3.Width = 103
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'opgProcessBy' AS opgoptiongroupcustom WITH ;
		AutoSize = .F., ;
		ButtonCount = 3, ;
		Height = 76, ;
		Left = 19, ;
		Name = "opgProcessBy", ;
		TabIndex = 6, ;
		Top = 47, ;
		Width = 110, ;
		ZOrderSet = 4, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "Run No", ;
		Option1.FontSize = 8, ;
		Option1.Height = 16, ;
		Option1.Left = 5, ;
		Option1.Name = "optYear", ;
		Option1.TabIndex = 2, ;
		Option1.Top = 33, ;
		Option1.Width = 53, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "Date Range", ;
		Option2.FontSize = 8, ;
		Option2.Height = 16, ;
		Option2.Left = 5, ;
		Option2.Name = "optDateRange", ;
		Option2.TabIndex = 1, ;
		Option2.Top = 13, ;
		Option2.Width = 74, ;
		Option3.AutoSize = .T., ;
		Option3.Caption = "Check# Range", ;
		Option3.FontSize = 8, ;
		Option3.Height = 16, ;
		Option3.Left = 5, ;
		Option3.Name = "OptionCheck", ;
		Option3.TabIndex = 3, ;
		Option3.Top = 53, ;
		Option3.Width = 88
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'opgSortBy' AS opgoptiongroupcustom WITH ;
		AutoSize = .F., ;
		ButtonCount = 3, ;
		Height = 76, ;
		Left = 154, ;
		Name = "opgSortBy", ;
		TabIndex = 7, ;
		Top = 47, ;
		Width = 134, ;
		ZOrderSet = 14, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "Check#", ;
		Option1.FontSize = 8, ;
		Option1.Height = 16, ;
		Option1.Left = 5, ;
		Option1.Name = "optCknum", ;
		Option1.TabIndex = 2, ;
		Option1.Top = 33, ;
		Option1.Width = 54, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "Check Date/ Check#", ;
		Option2.FontSize = 8, ;
		Option2.Height = 16, ;
		Option2.Left = 5, ;
		Option2.Name = "optCkDate", ;
		Option2.TabIndex = 1, ;
		Option2.Top = 13, ;
		Option2.Width = 115, ;
		Option3.Caption = "Payee", ;
		Option3.FontSize = 8, ;
		Option3.Height = 17, ;
		Option3.Left = 5, ;
		Option3.Name = "optPayee", ;
		Option3.Top = 52, ;
		Option3.Width = 61
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'Runcombo1' AS runcombo WITH ;
		cshowwhat = R, ;
		Enabled = .F., ;
		Height = 20, ;
		Left = 167, ;
		lshownew = .F., ;
		Name = "Runcombo1", ;
		TabIndex = 22, ;
		Top = 226, ;
		Width = 257
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		Left = 167, ;
		Name = "Swrptlook1", ;
		TabIndex = 29, ;
		Top = 310, ;
		ZOrderSet = 23, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		TxtBegID.clistexpression = custownvend.cid, ;
		TxtBegID.clistworkarea = custownvend, ;
		TxtBegID.Name = "TxtBegID", ;
		TxtBegName.Name = "TxtBegName", ;
		TxtEndID.clistexpression = custownvend.cid, ;
		TxtEndID.clistworkarea = custownvend, ;
		TxtEndID.Name = "TxtEndID", ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />

	ADD OBJECT 'txtcBegCheck' AS txttextboxcustom WITH ;
		Enabled = .F., ;
		Height = 20, ;
		Left = 167, ;
		Margin = 1, ;
		Name = "txtcBegCheck", ;
		TabIndex = 24, ;
		Top = 253, ;
		Width = 94, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcEndCheck' AS txttextboxcustom WITH ;
		Enabled = .F., ;
		Height = 20, ;
		Left = 271, ;
		Margin = 1, ;
		Name = "txtcEndCheck", ;
		TabIndex = 25, ;
		Top = 253, ;
		Width = 94, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtdbegdate' AS dpk WITH ;
		ControlSource = "", ;
		Height = 20, ;
		Left = 168, ;
		Name = "txtdbegdate", ;
		TabIndex = 18, ;
		Top = 201, ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtdenddate' AS dpk WITH ;
		ControlSource = "", ;
		Height = 20, ;
		Left = 284, ;
		Name = "txtdenddate", ;
		TabIndex = 19, ;
		Top = 201, ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />
	
	PROCEDURE builddata
		LOCAL tnReportBy, tnOrder, tcYear, tcPeriod, tcCheck1, tcCheck2, tdDate1, tdDate2, tcID1, tcID2
		LOCAL tcAcctNo, tlShowCk, tlShowDP, tlOpenBal
		
		*
		*  Set the criteria variables so they will be easier to use.
		*  In easier, I mean that you won't have to use THISFORM.  etc...
		*
		tnReportBy  = THISFORM.opgProcessBy.VALUE
		tnOrder     = THISFORM.opgSortBy.VALUE
		tcYear      = THISFORM.runcombo1.LISTITEM[thisform.runcombo1.listitemid,2]
		tnRunNo     = INT(VAL(THISFORM.runcombo1.LISTITEM[thisform.runcombo1.listitemid,3]))
		tcDMBatch   = THISFORM.runcombo1.LISTITEM[thisform.runcombo1.listitemid,5]
		tcCheck1    = ALLTRIM(THISFORM.txtcBegCheck.VALUE)
		tcCheck2    = ALLTRIM(THISFORM.txtcEndCheck.VALUE)
		tdDate1     = THISFORM.txtdBegDate.VALUE
		tdDate2     = THISFORM.txtdEndDate.VALUE
		tcID1       = THISFORM.swrptlook1.txtBegID.VALUE
		tcID2       = THISFORM.swrptlook1.txtEndID.VALUE
		tcAcctNo    = THISFORM.cboAcct.VALUE
		tlShowCk    = THISFORM.chkChecks.VALUE
		tlShowDP    = THISFORM.chkDeposits.VALUE
		tlOpenBal   = THISFORM.chkOpenBal.VALUE
		tnClearType = THISFORM.opgInclude.VALUE
		llSelected  = THISFORM.chkselected.VALUE
		
		
		IF NOT llSelected
		   SELECT cid AS cid FROM custownvend ;
		      INTO CURSOR SELECTED ;
		      WHERE BETWEEN(cid,tcID1,tcID2) ;
		      ORDER BY cid
		ENDIF
		
		IF NOT tlShowCk AND NOT tlShowDP
		   THISFORM.omessage.severe('No report available.  Show Checks or Show Deposits MUST be checked.')
		   RETURN .F.
		ENDIF
		
		*
		*  Clear temporary cursors
		*
		IF USED('temp')
		   USE IN temp
		ENDIF
		IF USED('tempbal')
		   USE IN tempbal
		ENDIF
		
		*
		*  Set the order variable from the orderby option
		*  group chosen.  Also, set the sort order property
		*  to display the sort order on the report.
		*
		DO CASE
		   CASE tnOrder = 2
		      lcOrder = 'checks.dCheckDate, checks.cCheckNo'
		      THISFORM.cSortOrder = 'Date & Check No'
		   CASE tnOrder = 1
		      lcOrder = 'checks.cCheckNo'
		      THISFORM.cSortOrder = 'Check No'
		   CASE tnOrder = 3
		      lcOrder = 'checks.cID'
		      THISFORM.cSortOrder = 'Payee'
		ENDCASE
		
		*  Right justify the check numbers
		tcCheck1 = PADL(ALLTRIM(tcCheck1),10,' ')
		tcCheck2 = PADL(ALLTRIM(tcCheck2),10,' ')
		
		*  Create the report cursor
		CREATE CURSOR tempchk ;
		   (cid        C(10), ;
		   cidType    C(1),  ;
		   cType      C(17), ;
		   cBal       C(1),  ;
		   cpayee     C(40), ;
		   caddress1  C(60), ;
		   caddress2  C(60), ;
		   ccity      C(25), ;
		   cstate     C(2), ;
		   czip       C(10), ;
		   dcheckdate D,     ;
		   lCleared   L,     ;
		   cCheckno   C(10), ;
		   cacctdesc  C(30), ;
		   cidchec    C(8),  ;
		   namount    N(12,2))
		INDEX ON cBal+DTOS(dcheckdate)+cType+PADL(ALLTRIM(cCheckno),10,' ') TAG checks
		INDEX ON cBal+PADL(ALLTRIM(cCheckno),10,' ') TAG checkno
		INDEX ON cid+DTOS(dcheckdate)+cType+PADL(ALLTRIM(cCheckno),10,' ') TAG cid
		
		SELECT checks
		SCAN FOR EMPTY(ALLT(cyear))
		   m.dpostdate = dpostdate
		   m.cyear   = THISFORM.glmaint.getperiod(m.dpostdate,.T.)
		   m.cperiod = THISFORM.glmaint.getperiod(m.dpostdate,.F.)
		   SELECT checks
		   REPL cyear WITH m.cyear, ;
		      cperiod WITH m.cperiod
		ENDSCAN
		
		SELECT checks
		=TABLEUPDATE(.T.)
		
		*
		*  If checks are to be printed, populate the report cursor with
		*  the checks in the given range
		*
		IF tlShowCk
		   DO CASE
		         *  Report by Year and Period
		      CASE tnReportBy = 1
		         THISFORM.cTitle1 = 'For Run No: ' + ALLT(STR(tnRunNo))+'/'+tcYear
		         THISFORM.cTitle2 = ''
		         THISFORM.cSelectCriteria = ''
		         IF tcID1 = 'FIRST' AND tcID2 = 'LAST' AND NOT llSelected
		            SELECT checks.*, IIF(lprinted,'Check  ','*Check ') AS cType FROM checks;
		               WHERE cBatch = tcDMBatch ;
		               AND IIF(tcAcctNo='******',.T.,cAcctNo = tcAcctNo) ;
		               AND cEntryType <> 'D' ;
		               AND IIF(tnClearType=2, lCleared=.T.,IIF(tnClearType=3,lCleared=.F.,NOT EMPTY(dcheckdate))) ;
		               INTO CURSOR temp ;
		               ORDER BY &lcOrder
		         ELSE
		            SELECT checks.*, IIF(lprinted,'Check  ','*Check ') AS cType FROM checks;
		               WHERE cBatch = tcDMBatch ;
		               AND IIF(tcAcctNo='******',.T.,cAcctNo = tcAcctNo) ;
		               AND cEntryType <> 'D' ;
		               AND cid in (SELECT cid FROM selected) ;
		               INTO CURSOR temp ;
		               ORDER BY &lcOrder
		         ENDIF
		
		         *  Report by date ranges
		      CASE tnReportBy = 2
		
		         THISFORM.cTitle1 = 'By Date Range'
		         THISFORM.cTitle2 = ''
		         THISFORM.cSelectCriteria = 'Dates:  ' + DTOC(tdDate1) + ' - ' + DTOC(tdDate2)
		         IF tcID1 = 'FIRST' AND tcID2 = 'LAST' AND NOT llSelected
		            SELECT checks.*, IIF(lprinted,'Check  ','*Check ') AS cType FROM checks;
		               WHERE IIF(tcAcctNo='******',.T.,cAcctNo = tcAcctNo) ;
		               AND cEntryType <> 'D' ;
		               AND BETWEEN(dcheckdate, tdDate1, tdDate2) ;
		               AND IIF(tnClearType=2, lCleared=.T. AND dRecDate <= tdDate2,IIF(tnClearType=3,lCleared=.F.,NOT EMPTY(dcheckdate))) ;
		               INTO CURSOR temp ;
		               ORDER BY &lcOrder
		
		            IF tlOpenBal
		               SELECT SUM(IIF(cEntryType='C',namount*-1,namount)) AS namount ;
		                  FROM checks ;
		                  WHERE dcheckdate < tdDate1 ;
		                  AND IIF(tcAcctNo='******',.T.,cAcctNo = tcAcctNo) ;
		                  INTO CURSOR tempbal
		            ENDIF
		         ELSE
		            SELECT checks.*, IIF(lprinted,'Check  ','*Check ') AS cType FROM checks;
		               WHERE IIF(tcAcctNo='******',.T.,cAcctNo = tcAcctNo) ;
		               AND cEntryType <> 'D' ;
		               AND BETWEEN(dcheckdate, tdDate1, tdDate2) ;
		               AND cid in (SELECT cid FROM selected)  ;
		               AND IIF(tnClearType=2, lCleared=.T.,IIF(tnClearType=3,lCleared=.F.,NOT EMPTY(dcheckdate))) ;
		               INTO CURSOR temp ;
		               ORDER BY &lcOrder
		
		            IF tlOpenBal
		               SELECT SUM(IIF(cEntryType='C',namount*-1,namount)) AS namount ;
		                  FROM checks ;
		                  WHERE dcheckdate < tdDate1 ;
		                  AND cid in (SELECT cid FROM selected)  ;
		                  AND IIF(tcAcctNo='******',.T.,cAcctNo = tcAcctNo) ;
		                  INTO CURSOR tempbal
		            ENDIF
		         ENDIF
		
		         *  Report by check number ranges
		      CASE tnReportBy = 3
		         THISFORM.cTitle1 = 'By Check Range'
		         THISFORM.cTitle2 = ''
		         THISFORM.cSelectCriteria = 'Checks:  ' + tcCheck1 + ' - ' + tcCheck2
		         IF ALLTRIM(tcCheck1) = 'FIRST' AND ALLTRIM(tcCheck2) = 'LAST' AND NOT llSelected
		            IF tcID1 = 'FIRST' AND tcID2 = 'LAST' AND NOT llSelected
		               SELECT checks.*, IIF(lprinted,'Check  ','*Check ') AS cType FROM checks;
		                  WHERE IIF(tcAcctNo='******',.T.,cAcctNo = tcAcctNo) ;
		                  AND cEntryType <> 'D' ;
		                  AND IIF(tnClearType=2, lCleared=.T.,IIF(tnClearType=3,lCleared=.F.,NOT EMPTY(dcheckdate))) ;
		                  INTO CURSOR temp ;
		                  ORDER BY &lcOrder
		            ELSE
		               SELECT checks.*, IIF(lprinted,'Check  ','*Check ') AS cType FROM checks;
		                  WHERE IIF(tcAcctNo='******',.T.,cAcctNo = tcAcctNo) ;
		                  AND cEntryType <> 'D' ;
		                  AND cid in (SELECT cid FROM selected) ;
		                  AND IIF(tnClearType=2, lCleared=.T.,IIF(tnClearType=3,lCleared=.F.,NOT EMPTY(dcheckdate))) ;
		                  INTO CURSOR temp ;
		                  ORDER BY &lcOrder
		            ENDIF
		         ELSE
		            IF tcID1 = 'FIRST' AND tcID2 = 'LAST' AND NOT llSelected
		               SELECT checks.*, IIF(lprinted,'Check  ','*Check ') AS cType FROM checks;
		                  WHERE IIF(tcAcctNo='******',.T.,cAcctNo = tcAcctNo) ;
		                  AND cEntryType <> 'D' ;
		                  AND BETWEEN(cCheckno, tcCheck1, tcCheck2) ;
		                  AND IIF(tnClearType=2, lCleared=.T.,IIF(tnClearType=3,lCleared=.F.,NOT EMPTY(dcheckdate))) ;
		                  INTO CURSOR temp ;
		                  ORDER BY &lcOrder
		            ELSE
		               SELECT checks.*, IIF(lprinted,'Check  ','*Check ') AS cType FROM checks;
		                  WHERE IIF(tcAcctNo='******',.T.,cAcctNo = tcAcctNo) ;
		                  AND cEntryType <> 'D' ;
		                  AND BETWEEN(cCheckno, tcCheck1, tcCheck2) ;
		                  AND cid in (SELECT cid FROM selected)  ;
		                  AND IIF(tnClearType=2, lCleared=.T.,IIF(tnClearType=3,lCleared=.F.,NOT EMPTY(dcheckdate))) ;
		                  INTO CURSOR temp ;
		                  ORDER BY &lcOrder
		            ENDIF
		         ENDIF
		   ENDCASE
		
		   *  Check to see if the opening balance entry needs to be added to
		   *  the report cursor.  If so, add it.
		   IF USED('temp')
		      SELECT temp
		      IF RECC() > 0
		         SCAN
		            SCATTER MEMVAR
		            STORE '' TO m.caddress1, m.caddress2, m.ccity, m.czip
		            m.cBal = 'B'
		            IF lvoid
		               m.cType = '**Voided - ' + IIF(LEFT(ALLT(m.cType),1)='C','CHK','DEP')+'**'
		            ENDIF
		            IF THISFORM.chkOwners.VALUE AND m.cidType = 'I'
		               swselect('investor')
		               LOCATE FOR cownerid = m.cid
		               IF FOUND()
		                  IF investor.lcheckonly
		                     m.caddress1 = investor.caddress2a
		                     m.caddress2 = investor.caddress2b
		                     m.ccity     = investor.ccity2
		                     m.cstate    = investor.cstate2
		                     m.czip      = investor.czip2
		                  ELSE
		                     m.caddress1 = investor.caddress1a
		                     m.caddress2 = investor.caddress1b
		                     m.ccity     = investor.ccity1
		                     m.cstate    = investor.cstate1
		                     m.czip      = investor.czip1
		                  ENDIF 
		               ENDIF 
		               INSERT INTO tempchk FROM MEMVAR
		            ENDIF
		            IF THISFORM.chkVendors.VALUE AND m.cidType = 'V'
		               swselect('vendor')
		               LOCATE FOR cvendorid = m.cid
		               IF FOUND()
		                  m.caddress1 = vendor.cbaddr1
		                  m.caddress2 = vendor.cbaddr2
		                  m.ccity     = vendor.cbcity
		                  m.cstate    = vendor.cbstate
		                  m.czip      = vendor.cbzip
		               ENDIF 
		               INSERT INTO tempchk FROM MEMVAR
		            ENDIF
		            IF THISFORM.chkEmployees.VALUE AND m.cidType = 'E'
		               INSERT INTO tempchk FROM MEMVAR
		            ENDIF
		            IF THISFORM.chkPurchasers.VALUE AND m.cidType = 'P'
		               INSERT INTO tempchk FROM MEMVAR
		            ENDIF
		            IF THISFORM.chkManual.VALUE AND (m.cidType = 'M' OR m.cidType = 'O' OR EMPTY(m.cidType))
		               INSERT INTO tempchk FROM MEMVAR
		            ENDIF
		            IF m.cidType = 'D'
		               INSERT INTO tempchk FROM MEMVAR
		            ENDIF
		         ENDSCAN
		         IF tcAcctNo <> '******'
		            IF USED('tempbal')
		               SELECT tempbal
		               IF RECC() > 0
		                  m.cBal = 'A'
		                  m.namount = namount
		                  m.dcheckdate = tdDate1 - 1
		                  IF m.namount > 0
		                     m.cEntryType = 'D'
		                     m.cidType    = 'D'
		                     m.cType      = 'Deposit'
		                     m.cid        = ' '
		                     m.cCheckno   = 'OpenBal'
		                  ELSE
		                     m.cEntryType = 'C'
		                     m.cidType    = 'M'
		                     m.cType      = 'Check'
		                     m.cid        = ' '
		                     m.cCheckno   = 'OpenBal'
		                     m.namount    = m.namount *-1
		                  ENDIF
		                  m.cpayee = 'OPENING BALANCE'
		                  INSERT INTO tempchk FROM MEMVAR
		               ENDIF
		            ENDIF
		         ENDIF
		      ELSE
		         IF tcAcctNo <> '******'
		            IF USED('tempbal')
		               SELECT tempbal
		               IF RECC() > 0
		                  m.cBal = 'A'
		                  m.namount = namount
		                  m.dcheckdate = tdDate1 - 1
		                  IF m.namount > 0
		                     m.cEntryType = 'D'
		                     m.cidType    = 'D'
		                     m.cType      = 'Deposit'
		                     m.cid        = ' '
		                     m.cCheckno   = 'OpenBal'
		                  ELSE
		                     m.cEntryType = 'C'
		                     m.cidType    = 'M'
		                     m.cType      = 'Check'
		                     m.cid        = ' '
		                     m.cCheckno   = 'OpenBal'
		                     m.namount    = m.namount *-1
		                  ENDIF
		                  m.cpayee = 'OPENING BALANCE'
		                  INSERT INTO tempchk FROM MEMVAR
		               ENDIF
		            ENDIF
		         ENDIF
		      ENDIF
		   ELSE
		      IF tcAcctNo <> '******'
		         IF USED('tempbal')
		            SELECT tempbal
		            IF RECC() > 0
		               m.cBal = 'A'
		               m.namount = namount
		               m.dcheckdate = tdDate1 - 1
		               IF m.namount > 0
		                  m.cEntryType = 'D'
		                  m.cidType    = 'D'
		                  m.cType      = 'Deposit'
		                  m.cid        = ' '
		                  m.cCheckno   = 'OpenBal'
		               ELSE
		                  m.cEntryType = 'C'
		                  m.cidType    = 'M'
		                  m.cType      = 'Check'
		                  m.cid        = ' '
		                  m.cCheckno   = 'OpenBal'
		                  m.namount    = m.namount *-1
		               ENDIF
		               m.cpayee = 'OPENING BALANCE'
		               INSERT INTO tempchk FROM MEMVAR
		            ENDIF
		         ENDIF
		      ENDIF
		   ENDIF
		ENDIF
		
		*
		*  If deposits are to be shown, populate the report cursor with them
		*
		IF tlShowDP
		   DO CASE
		         *  Report by year and period
		      CASE tnReportBy = 1
		         THISFORM.cTitle1 = 'For Run No: ' + ALLT(STR(tnRunNo))+'/'+tcYear
		         THISFORM.cTitle2 = ''
		         THISFORM.cSelectCriteria = '' 
		         IF tcID1 = 'FIRST' AND tcID2 = 'LAST' AND NOT llSelected
		            SELECT checks.*, 'Deposit' AS cType FROM checks;
		               WHERE cBatch = tcDMBatch ;
		               AND IIF(tcAcctNo='******',.T.,cAcctNo = tcAcctNo) ;
		               AND cEntryType = 'D' ;
		               AND IIF(tnClearType=2, lCleared=.T.,IIF(tnClearType=3,lCleared=.F.,NOT EMPTY(dcheckdate))) ;
		               INTO CURSOR temp ;
		               ORDER BY &lcOrder
		         ELSE
		            SELECT checks.*, 'Deposit' AS cType FROM checks;
		               WHERE cBatch = tcDMBatch ;
		               AND IIF(tcAcctNo='******',.T.,cAcctNo = tcAcctNo) ;
		               AND cEntryType = 'D' ;
		               AND cid in (SELECT cid FROM selected)  ;
		               AND IIF(tnClearType=2, lCleared=.T.,IIF(tnClearType=3,lCleared=.F.,NOT EMPTY(dcheckdate))) ;
		               INTO CURSOR temp ;
		               ORDER BY &lcOrder
		         ENDIF
		
		         *  Report by date range
		      CASE tnReportBy = 2
		         THISFORM.cTitle1 = 'By Date Range'
		         THISFORM.cTitle2 = ''
		         THISFORM.cSelectCriteria = 'Dates:  ' + DTOC(tdDate1) + ' - ' + DTOC(tdDate2)
		         IF tcID1 = 'FIRST' AND tcID2 = 'LAST' AND NOT llSelected
		            SELECT checks.*, 'Deposit' AS cType FROM checks;
		               WHERE IIF(tcAcctNo='******',.T.,cAcctNo = tcAcctNo) ;
		               AND cEntryType = 'D' ;
		               AND BETWEEN(dcheckdate, tdDate1, tdDate2) ;
		               AND IIF(tnClearType=2, lCleared=.T.,IIF(tnClearType=3,lCleared=.F.,NOT EMPTY(dcheckdate))) ;
		               INTO CURSOR temp ;
		               ORDER BY &lcOrder
		         ELSE
		            SELECT checks.*, 'Deposit' AS cType FROM checks;
		               WHERE IIF(tcAcctNo='******',.T.,cAcctNo = tcAcctNo) ;
		               AND cEntryType = 'D' ;
		               AND BETWEEN(dcheckdate, tdDate1, tdDate2) ;
		               AND cid in (SELECT cid FROM selected)  ;
		               AND IIF(tnClearType=2, lCleared=.T.,IIF(tnClearType=3,lCleared=.F.,NOT EMPTY(dcheckdate))) ;
		               INTO CURSOR temp ;
		               ORDER BY &lcOrder
		         ENDIF
		
		         *  Report by check number range
		      CASE tnReportBy = 3
		         THISFORM.cTitle1 = 'By Check Range'
		         THISFORM.cTitle2 = ''
		         THISFORM.cSelectCriteria = 'Checks:  ' + tcCheck1 + ' - ' + tcCheck2
		         IF ALLTRIM(tcCheck1) = 'FIRST' AND ALLTRIM(tcCheck2) = 'LAST'
		            IF tcID1 = 'FIRST' AND tcID2 = 'LAST' AND NOT llSelected
		               SELECT checks.*, 'Deposit' AS cType FROM checks;
		                  WHERE IIF(tcAcctNo='******',.T.,cAcctNo = tcAcctNo) ;
		                  AND cEntryType = 'D' ;
		                  AND IIF(tnClearType=2, lCleared=.T.,IIF(tnClearType=3,lCleared=.F.,NOT EMPTY(dcheckdate))) ;
		                  INTO CURSOR temp ;
		                  ORDER BY &lcOrder
		            ELSE
		               SELECT checks.*, 'Deposit' AS cType FROM checks;
		                  WHERE IIF(tcAcctNo='******',.T.,cAcctNo = tcAcctNo) ;
		                  AND cEntryType = 'D' ;
		                  AND cid in (SELECT cid FROM selected)  ;
		                  AND IIF(tnClearType=2, lCleared=.T.,IIF(tnClearType=3,lCleared=.F.,NOT EMPTY(dcheckdate))) ;
		                  INTO CURSOR temp ;
		                  ORDER BY &lcOrder
		            ENDIF
		         ELSE
		            IF tcID1 = 'FIRST' AND tcID2 = 'LAST' AND NOT llSelected
		               SELECT checks.*, 'Deposit' AS cType FROM checks;
		                  WHERE IIF(tcAcctNo='******',.T.,cAcctNo = tcAcctNo) ;
		                  AND cEntryType = 'D' ;
		                  AND BETWEEN(cCheckno, tcCheck1, tcCheck2) ;
		                  AND IIF(tnClearType=2, lCleared=.T.,IIF(tnClearType=3,lCleared=.F.,NOT EMPTY(dcheckdate))) ;
		                  INTO CURSOR temp ;
		                  ORDER BY &lcOrder
		            ELSE
		               SELECT checks.*, 'Deposit' AS cType FROM checks;
		                  WHERE IIF(tcAcctNo='******',.T.,cAcctNo = tcAcctNo) ;
		                  AND cEntryType = 'D' ;
		                  AND BETWEEN(cCheckno, tcCheck1, tcCheck2) ;
		                  AND cid in (SELECT cid FROM selected)  ;
		                  AND IIF(tnClearType=2, lCleared=.T.,IIF(tnClearType=3,lCleared=.F.,NOT EMPTY(dcheckdate))) ;
		                  INTO CURSOR temp ;
		                  ORDER BY &lcOrder
		            ENDIF
		         ENDIF
		   ENDCASE
		   IF USED('temp')
		      SELECT temp
		      IF RECC() > 0
		         SELECT temp
		         SCAN
		            SCATTER MEMVAR
		            m.cBal = 'B'
		            IF lvoid
		               m.cType = '**Voided - ' + IIF(LEFT(ALLT(m.cType),1)='C','CHK','DEP')+'**'
		            ENDIF
		            INSERT INTO tempchk FROM MEMVAR
		         ENDSCAN
		      ENDIF
		   ENDIF
		ENDIF
		
		
		*
		*  Get the account description for the checking account
		*  the checks and deposits are in.
		*
		SELECT coa
		SET ORDER TO acctno
		IF SEEK(tcAcctNo)
		   m.cacctdesc = cacctdesc
		ELSE
		   m.cacctdesc = ' '
		ENDIF
		
		THISFORM.cTitle2 = cacctdesc
		
		*
		*  Set the title to show which entries were included
		*
		DO CASE
		   CASE tnClearType = 1
		      THISFORM.cTitle1 = 'All Entries ' + THISFORM.cTitle1
		   CASE tnClearType = 2
		      THISFORM.cTitle1 = 'Cleared Entries ' + THISFORM.cTitle1
		   CASE tnClearType = 3
		      THISFORM.cTitle1 = 'Uncleared Entries ' + THISFORM.cTitle1
		ENDCASE
		
		*
		*  Set the report cursor to the appropriate order
		*
		SELECT tempchk
		SCAN
		   REPLACE cCheckno WITH PADL(ALLTRIM(cCheckno),10,' ')
		ENDSCAN
		
		THISFORM.cReportName = 'cschkreg.frx'
		
		DO CASE
		   CASE tnOrder = 2
		      SET ORDER TO checks
		   CASE tnOrder = 1
		      SET ORDER TO checkno
		   CASE tnOrder = 3
		      SET ORDER TO cid
		      THISFORM.cReportName = 'cschkreg1'
		ENDCASE
		
		IF RECC() > 0
		   RETURN .T.
		ELSE
		   RETURN .F.
		ENDIF
		
		
	ENDPROC

	PROCEDURE Init
		SET DELETED ON
		
		SELECT checks
		SET ORDER TO datechk
		
		DODEFAULT()
		
		*
		*  Set the initial values for the criteria form
		*
		WITH THISFORM
		   GO TOP
		   .txtdBegDate.VALUE = dcheckdate
		   GO BOTTOM
		   .txtdEndDate.VALUE = dcheckdate
		   .txtcBegCheck.VALUE = 'FIRST'
		   .txtcEndCheck.VALUE = 'LAST'
		   .opgProcessBy.VALUE = 2
		   .opgProcessBy.optDateRange.TABINDEX = 1
		   .opgInclude.VALUE = 1
		   .opgSortby.VALUE = 2
		   .cboAcct.SETFOCUS()
		   .chkChecks.VALUE = .T.
		   .chkDeposits.VALUE = .T.
		   .chkOpenBal.VALUE = .T.
		   .swrptlook1.txtBegID.VALUE = 'FIRST'
		   .swrptlook1.txtBegName.VALUE = 'First Payee'
		   .swrptlook1.txtEndID.VALUE = 'LAST'
		   .swrptlook1.txtEndName.VALUE = 'Last Payee'
		ENDWITH
		
		
	ENDPROC

	PROCEDURE cboAcct.Init
		LOCAL lnCount
		*
		*  Builds the data displayed in the combo list box
		*
		
		IF TYPE('m.goApp') = 'O'
		   IF NOT m.goApp.lAMVersion
		      this.visible = .F.
		   ENDIF
		ENDIF      
		
		SELECT  cacctno+'-'+trim(cacctdesc), cAcctNo FROM coa INTO ARRAY laAcct WHERE lBankacct = .T. ORDER BY cAcctNo
		lnCount = _TALLY
		
		IF lnCount > 0
		   this.addlistitem('All Bank Accounts',1,1)
		   this.addlistitem('******',1,2)
		   FOR lnX = 1 TO ALEN(laAcct,1)
		      THIS.ADDLISTITEM(laAcct[lnX,1],lnX+1,1)
		      THIS.ADDLISTITEM(laAcct[lnX,2],lnX+1,2)
		   ENDFOR
		ENDIF
		
		THIS.LISTITEMID = 1
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE cboAcct.Valid
		IF DODEFAULT()
		   IF THIS.VALUE <> '******'
		      THISFORM.chkopenbal.ENABLED = .T.
		   ELSE
		      IF m.goApp.lAMVersion  &&  Only disable if not DM - BH 1/27/05
		         THISFORM.chkopenbal.ENABLED = .F.
		      ELSE
		         THISFORM.chkopenbal.ENABLED = .T.
		      ENDIF
		   ENDIF
		ENDIF
		
	ENDPROC

	PROCEDURE chkChecks.Valid
		if this.value
		   thisform.chkOwners.enabled = .t.
		   thisform.chkvendors.enabled = .t.
		   thisform.chkemployees.enabled = .t.
		else
		   thisform.chkOwners.enabled = .f.
		   thisform.chkvendors.enabled = .f.
		   thisform.chkemployees.enabled = .f.
		endif   
	ENDPROC

	PROCEDURE chkEmployees.Init
		IF m.goapp.lAmVersion = .f.
		   this.Visible = .f.
		ENDIF
		
		DODEFAULT()
	ENDPROC

	PROCEDURE chkOpenBal.Init
		IF NOT m.goApp.lAMVersion
		   THIS.ENABLED = .T.
		ELSE
		   THIS.ENABLED = .F.
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE chkPurchasers.Init
		IF m.goapp.lAmVersion = .f.
		   this.Visible = .f.
		ENDIF
		
		DODEFAULT()
	ENDPROC

	PROCEDURE chkSelected.Click
		IF this.Value
		   DO FORM commonsource\selected-ids WITH 'CUSTOWNVEND' LINKED 
		   lnCount = RECCOUNT('selected')
		   thisform.lblselected.Caption = TRANSFORM(lnCount) + ' IDs Selected'
		   thisform.lblselected.Visible = .T.
		   thisform.lblbegID.Visible = .F.
		   thisform.lblendID.Visible = .F.
		   thisform.swrptlook1.Visible = .F.
		ELSE
		   thisform.lblselected.Visible = .F.
		   thisform.lblbegID.Visible = .T.
		   thisform.lblendID.Visible = .T.
		   thisform.swrptlook1.Visible = .T.
		ENDIF 
	ENDPROC

	PROCEDURE chkVendors.Init
		IF m.goapp.lAmVersion = .f.
		   this.left = 201
		ENDIF
		
		DODEFAULT()
	ENDPROC

	PROCEDURE lblAcct.Init
		IF TYPE('m.goApp') = 'O'
		   IF NOT m.goApp.lAMVersion
		      this.visible = .F.
		   ENDIF
		ENDIF      
		
	ENDPROC

	PROCEDURE opgProcessBy.optDateRange.Click
		WITH THISFORM
			.txtdBegDate.Enabled = .T.
			.txtdEndDate.Enabled = .T.
			.txtdBegdate.SETFOCUS()
			.RunCombo1.Enabled    = .F.
			.txtcBegCheck.Enabled = .F.
			.txtcEndCheck.Enabled = .F.
			.chkdeposits.enabled = .T.
		ENDWITH
		
	ENDPROC

	PROCEDURE opgProcessBy.OptionCheck.Click
		
		WITH THISFORM
		    .RunCombo1.Enabled    = .F.
			.txtdBegDate.Enabled  = .F.
			.txtdEndDate.Enabled  = .F.
			.txtcBegCheck.Enabled = .T.
			.txtcEndCheck.Enabled = .T.
			.chkdeposits.enabled = .T.
			.txtcBegCheck.SETFOCUS()
		endwith
		
	ENDPROC

	PROCEDURE opgProcessBy.optYear.Click
		
		WITH THISFORM
		    .RunCombo1.Enabled    = .T.
			.txtdBegDate.Enabled = .F.
			.txtdEndDate.Enabled = .F.
			.txtcBegCheck.Enabled = .F.
			.txtcEndCheck.Enabled = .F.
			.chkdeposits.value = .F.
			.chkdeposits.enabled = .f.
			.RunCombo1.setfocus()
		endwith
		
	ENDPROC

	PROCEDURE Runcombo1.Init
		IF DODEFAULT()
		   this.listitemid = 1
		ENDIF   
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .T.
		
		lcList = 'cid\ID,cname\Payee,ctype\Type'
		
		SET SAFETY OFF
		SELECT * FROM custownvend INTO CURSOR names READWRITE 
		INDEX ON cid TAG cid
		INDEX ON cname TAG cname
		INDEX ON ctype TAG ctype
		
		DO FORM ..\CUSTOM\picklist WITH 'names', lcList, thisform.swrptlook1.txtbegid.value, 3,.t.,.t.
		
		IF llOK
		   THISFORM.swrptlook1.txtBegID.VALUE = names.cid
		   THISFORM.swrptlook1.txtBegName.VALUE = names.cname
		   THISFORM.REFRESH()
		ENDIF
		
		THISFORM.setnextcontrol(THIS.PARENT.txtBegID)
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .T.
		
		lcList = 'cid\ID,cname\Payee,ctype\Type'
		
		SET SAFETY OFF
		SELECT * FROM custownvend INTO CURSOR names READWRITE 
		INDEX ON cid TAG cid
		INDEX ON cname TAG cname
		INDEX ON ctype TAG ctype
		
		DO FORM ..\custom\picklist WITH 'names', lcList, thisform.swrptlook1.txtendid.value, 3, .t., .t.
		
		IF llOK
		   THISFORM.swrptlook1.txtEndID.VALUE = names.cid
		   THISFORM.swrptlook1.txtEndName.value = names.cname
		   THISFORM.Refresh()
		ENDIF   
		
		THISFORM.setnextcontrol(THIS.PARENT.txtEndID)
		
	ENDPROC

	PROCEDURE txtcBegCheck.Valid
		this.value = PADL(ALLT(THIS.VALUE),10,' ')
	ENDPROC

	PROCEDURE txtcEndCheck.Valid
		this.value = PADL(ALLT(THIS.VALUE),10,' ')
	ENDPROC

ENDDEFINE
