*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="dmrwprod.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor7" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 414
	Left = 171
	Name = "Dataenvironment"
	Top = 418
	Width = 634

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "groups", ;
		CursorSource = "groups", ;
		Database = ..\datafiles\00gcw\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\datafiles\00gcw\appdata.dbc, ;
		Filter = "lcompressor = .f.", ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "wellhist", ;
		CursorSource = "wellhist", ;
		Database = ..\datafiles\00gcw\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "glopt", ;
		CursorSource = "glopt", ;
		Database = ..\datafiles\00gcw\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor4", ;
		Top = 140, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "options", ;
		CursorSource = "options", ;
		Database = ..\datafiles\00gcw\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor5", ;
		Top = 140, ;
		Width = 101
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "disbhist", ;
		CursorSource = "disbhist", ;
		Database = ..\datafiles\00gcw\appdata.dbc, ;
		Height = 90, ;
		Left = 448, ;
		Name = "Cursor6", ;
		Top = 175, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor7' AS cursor WITH ;
		Alias = "suspense", ;
		CursorSource = "suspense", ;
		Database = ..\datafiles\00gcw\appdata.dbc, ;
		Height = 90, ;
		Left = 450, ;
		Name = "Cursor7", ;
		Top = 59, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formdmrwprod AS frmrptcriteria OF "..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="LblBegPeriod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblEndPeriod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swyear1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swyear2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swperiod1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swperiod2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="opgRange" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="opgGroupBy" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swgroup1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblBegYear" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblEndYear" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBegID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEndID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblGroup" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblAccDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblRange" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="ChkReportByMonth" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklActive" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklIncDirect" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Glmaint" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkRecalc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="swdate1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="swdate2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkNoProduction" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSelected" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSelected" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: calcpaidowners
	*</DefinedPropArrayMethod>

	Caption = "Well Production Reports"
	DoCreate = .T.
	Height = 543
	HelpContextID = 203
	Name = "FormDmrwprod"
	Width = 552
	Swrptcriteriabuttons1.chkExport.Alignment = 0
	Swrptcriteriabuttons1.chkExport.Name = "chkExport"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.CMDPREVIEW.Name = "CMDPREVIEW"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 168
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 28
	Swrptcriteriabuttons1.Top = 456
	Swrptcriteriabuttons1.ZOrderSet = 0

	ADD OBJECT 'chklActive' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Include Only Active Wells", ;
		Left = 48, ;
		Name = "chklActive", ;
		TabIndex = 24, ;
		Top = 352, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chklIncDirect' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Include Direct Paid Oil and Gas", ;
		Height = 16, ;
		Left = 312, ;
		Name = "chklIncDirect", ;
		TabIndex = 26, ;
		Top = 352, ;
		Value = .F., ;
		Width = 165
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkNoProduction' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Include Wells with No Production During Period", ;
		Height = 16, ;
		Left = 48, ;
		Name = "chkNoProduction", ;
		TabIndex = 25, ;
		Top = 388, ;
		Value = .F., ;
		Width = 242
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkRecalc' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Recalculate Working and Royalty Totals", ;
		Left = 312, ;
		Name = "chkRecalc", ;
		TabIndex = 27, ;
		Top = 388, ;
		Value = .T., ;
		Visible = .T.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'ChkReportByMonth' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		AutoSize = .T., ;
		Caption = "Report By Month", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 349, ;
		Name = "ChkReportByMonth", ;
		TabIndex = 8, ;
		Top = 103, ;
		Width = 98, ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSelected' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Choose Selected Wells", ;
		Left = 207, ;
		Name = "chkSelected", ;
		TabIndex = 18, ;
		Top = 175, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Glmaint' AS glmaint WITH ;
		Height = 24, ;
		Left = 97, ;
		Name = "Glmaint", ;
		Top = 49, ;
		Width = 24
		*< END OBJECT: ClassLib="..\custom\swgl.vcx" BaseClass="custom" />

	ADD OBJECT 'LblAccDate' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Accounting Date:", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 104, ;
		Name = "LblAccDate", ;
		TabIndex = 17, ;
		Top = 142, ;
		Width = 85, ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblBegID' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "First Well:", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 140, ;
		Name = "lblBegID", ;
		TabIndex = 20, ;
		Top = 210, ;
		Width = 49, ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblBegPeriod' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Period:", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 261, ;
		Name = "LblBegPeriod", ;
		TabIndex = 15, ;
		Top = 93, ;
		Width = 35, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblBegYear' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Beginning Year:", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 110, ;
		Name = "LblBegYear", ;
		TabIndex = 12, ;
		Top = 93, ;
		Width = 79, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblEndID' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Last Well:", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 140, ;
		Name = "lblEndID", ;
		TabIndex = 21, ;
		Top = 262, ;
		Width = 49, ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblEndPeriod' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Period:", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 261, ;
		Name = "LblEndPeriod", ;
		TabIndex = 16, ;
		Top = 117, ;
		Width = 35, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblEndYear' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Ending Year:", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 125, ;
		Name = "LblEndYear", ;
		TabIndex = 14, ;
		Top = 117, ;
		Width = 64, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblGroup' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Group:", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 154, ;
		Name = "LblGroup", ;
		TabIndex = 23, ;
		Top = 312, ;
		Width = 35, ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Group By:", ;
		Left = 313, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 4, ;
		Top = 12
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "-", ;
		FontBold = .T., ;
		Height = 16, ;
		Left = 307, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 5, ;
		Top = 142, ;
		Visible = .T., ;
		Width = 6
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblRange' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Report By:", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 116, ;
		Name = "LblRange", ;
		TabIndex = 3, ;
		Top = 12, ;
		Width = 53, ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSelected' AS lbllabelcustom WITH ;
		Caption = "All IDs Selected", ;
		ForeColor = 0,0,255, ;
		Left = 204, ;
		Name = "lblSelected", ;
		TabIndex = 17, ;
		Top = 240, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'opgGroupBy' AS opgoptiongroupcustom WITH ;
		BorderStyle = 0, ;
		ButtonCount = 2, ;
		Left = 365, ;
		Name = "opgGroupBy", ;
		TabIndex = 2, ;
		Top = 7, ;
		Option1.Caption = " Year", ;
		Option1.FontSize = 8, ;
		Option1.Height = 17, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Top = 5, ;
		Option1.Width = 61, ;
		Option2.Caption = " Well", ;
		Option2.FontSize = 8, ;
		Option2.Height = 17, ;
		Option2.Left = 5, ;
		Option2.Name = "Option2", ;
		Option2.Top = 24, ;
		Option2.Width = 61
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'opgRange' AS swrange_py_ay_ad WITH ;
		Left = 178, ;
		Name = "opgRange", ;
		TabIndex = 1, ;
		Top = 7, ;
		ZOrderSet = 8, ;
		AccDate.Left = 5, ;
		AccDate.Name = "AccDate", ;
		AccDate.Top = 57, ;
		AccYear.Left = 5, ;
		AccYear.Name = "AccYear", ;
		AccYear.Top = 31, ;
		ProdYear.Left = 5, ;
		ProdYear.Name = "ProdYear", ;
		ProdYear.Top = 5, ;
		ProdYear.Value = 1
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'swdate1' AS dpk WITH ;
		ControlSource = "", ;
		Height = 20, ;
		Left = 205, ;
		Name = "swdate1", ;
		TabIndex = 9, ;
		Top = 140, ;
		Visible = .T., ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />

	ADD OBJECT 'swdate2' AS dpk WITH ;
		ControlSource = "", ;
		Height = 20, ;
		Left = 322, ;
		Name = "swdate2", ;
		TabIndex = 11, ;
		Top = 140, ;
		Visible = .T., ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />

	ADD OBJECT 'Swgroup1' AS swgroup WITH ;
		Left = 204, ;
		Name = "Swgroup1", ;
		TabIndex = 22, ;
		Top = 310, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Swperiod1' AS swperiod WITH ;
		Left = 303, ;
		Name = "Swperiod1", ;
		TabIndex = 7, ;
		Top = 91, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'Swperiod2' AS swperiod WITH ;
		Left = 303, ;
		Name = "Swperiod2", ;
		TabIndex = 13, ;
		Top = 115, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		Left = 204, ;
		Name = "Swrptlook1", ;
		TabIndex = 19, ;
		Top = 208, ;
		ZOrderSet = 5, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		txtBegID.clistexpression = wells.cwellid, ;
		txtBegID.clistworkarea = wells, ;
		txtBegID.Name = "txtBegID", ;
		TxtBegName.Name = "TxtBegName", ;
		txtEndID.clistexpression = wells.cwellid, ;
		txtEndID.clistworkarea = wells, ;
		txtEndID.Name = "txtEndID", ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />

	ADD OBJECT 'Swyear1' AS swyear WITH ;
		Left = 204, ;
		Name = "Swyear1", ;
		TabIndex = 6, ;
		Top = 91, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'Swyear2' AS swyear WITH ;
		Left = 204, ;
		Name = "Swyear2", ;
		TabIndex = 10, ;
		Top = 115, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE builddata
		LOCAL llIncDirect, oDist, PRODYEAR, ACCTYEAR, ACCTDATE, BYMONTH, lcWhere1, lcWhere2
		LOCAL lcGroup, lcGroupBy, lcOrderBY, lcPeriod1, lcPeriod2, lcWellID1, lcWellID2, lcYear1, lcYear2
		LOCAL ldDate1, ldDate2, ldEndDate, ldStartDate, llActive, llCalendarFY, lnCount, lnRange
		LOCAL loError, llIncludeNoProduction
		
		*:Global cperiod, cyear, hdate, nWorking, ntotbbl, sort1, lcWhere2, tcWellID1, tcWellID2
		
		TRY
		
		   IF USED('welltmp')
		      USE IN welltmp
		   ENDIF
		
		   lcYear1               = THISFORM.swYear1.VALUE
		   lcYear2               = THISFORM.swYear2.VALUE
		   lcPeriod1             = THISFORM.swPeriod1.VALUE
		   lcPeriod2             = THISFORM.swPeriod2.VALUE
		   ldDate1               = THISFORM.swDate1.VALUE
		   ldDate2               = THISFORM.swDate2.VALUE
		   lnRange               = THISFORM.opgRange.VALUE
		   lcGroup               = THISFORM.swgroup1.VALUE
		   lnGroupby             = THISFORM.opgGroupBy.VALUE
		   lcWellID1             = THISFORM.swrptlook1.txtBegID.VALUE
		   lcWellID2             = THISFORM.swrptlook1.txtendID.VALUE
		   llIncludeNoProduction = THISFORM.chkNoProduction.VALUE
		   llSelected  = THISFORM.chkselected.VALUE
		
		   IF NOT llSelected
		      lcSelected = "between(wellhist.cwellid,lcWellID1,lcWellID2)"
		   ELSE
		      lcSelected = "wellhist.cwellid in (select cid from selected)"
		   ENDIF
		
		   * Set the Year and Date variables
		   PRODYEAR    = lnRange = 1
		   ACCTYEAR    = lnRange = 2
		   ACCTDATE    = lnRange = 3
		   GROUPBYYEAR = lnGroupby = 1
		   GROUPBYWELL = lnGroupby = 2
		
		   BYMONTH   = THISFORM.chkReportByMonth.VALUE
		
		   lcWhere1 = ''
		   lcWhere2 = ''
		
		   IF glopt.cfybegin <> '01' AND NOT EMPTY(glopt.cfybegin)
		      llCalendarFY = .F.
		   ELSE
		      IF EMPTY(glopt.cfybegin)
		         REPLACE glopt.cfybegin WITH '01'
		      ENDIF
		      llCalendarFY = .T.
		   ENDIF
		
		   llActive    = THISFORM.chklactive.VALUE
		   llIncDirect = THISFORM.chklincdirect.VALUE
		
		   THISFORM.cTitle1 = 'Well Production Summary'
		   WAIT WIND NOWAIT 'Processing Report Request...Please Wait...'
		
		   &&  Commented out because it caused many problems in the run number versions, and we're too lazy to fix it right... - BH 5/10/2004
		
		   *  Make sure working and royalty pmts are in wellhist
		
		   IF THISFORM.chkReCalc.VALUE = .T.
		      WAIT WIND NOWAIT 'Processing Well History...Please Wait'
		      llReturn = THISFORM.CalcPaidOwners()
		      * Don't continue if CalcPaidOwners returns false
		      IF NOT llReturn
		         EXIT
		      ENDIF
		      WAIT CLEAR
		   ENDIF
		
		   DO CASE
		         *  If Production Year is chosen, but report by month is not
		
		      CASE PRODYEAR AND BYMONTH = .F.
		         lcWhere1             = 'AND BETWEEN(wellhist.hyear + wellhist.hperiod,lcYear1 + lcPeriod1,lcYear2 + lcPeriod2)'
		         THISFORM.cReportName = 'commonsource\dmrwprod2'
		         THISFORM.cTitle2     = 'For Production Year ' + lcYear1 + '/' + lcPeriod1 + ' - ' + lcYear2 + '/' + lcPeriod2
		         THISFORM.cSelectCriteria = 'Well  ' + ALLTRIM(lcWellID1) + '  -  ' +  ;
		            ALLTRIM(lcWellID2) + ' in ' +  ;
		            IIF(SUBSTR(lcGroup, 1, 2) = '**', 'All', '') + ' Group'  +  ;
		            IIF(SUBSTR(lcGroup, 1, 2) = '**', 's ', ':  ') +  ;
		            IIF(SUBSTR(lcGroup, 1, 2) = '**', '', lcGroup)
		
		         *  If Production Year and Report by Month are both chosen
		      CASE PRODYEAR AND BYMONTH = .T.
		         lcWhere1             = 'AND BETWEEN(wellhist.hyear + wellhist.hperiod,lcYear1 + lcPeriod1,lcYear2 + lcPeriod2)'
		         THISFORM.cReportName = 'commonsource\dmrwprod1'
		         THISFORM.cTitle2     = 'For Production Year ' + lcYear1 + '/' + lcPeriod1 + ' - ' + lcYear2 + '/' + lcPeriod2
		         THISFORM.cSelectCriteria = 'Well  ' + ALLTRIM(lcWellID1) + '  -  ' +  ;
		            ALLTRIM(lcWellID2) + ' in ' +  ;
		            IIF(SUBSTR(lcGroup, 1, 2) = '**', 'All', '') + ' Group'  +  ;
		            IIF(SUBSTR(lcGroup, 1, 2) = '**', 's ', ':  ') +  ;
		            IIF(SUBSTR(lcGroup, 1, 2) = '**', '', lcGroup)
		
		         *  If Accounting Year is chosen, but Report by Month is not
		      CASE ACCTYEAR AND BYMONTH <> .T.
		         IF NOT llCalendarFY
		            ldStartDate = THISFORM.glmaint.getdate(lcYear1, lcPeriod1)
		            ldEndDate   = GOMONTH(THISFORM.glmaint.getdate(lcYear2, lcPeriod2), 1) - 1
		            lcWhere1    = 'AND BETWEEN(wellhist.hdate,ldStartDate,ldEndDate)'
		         ELSE
		            lcWhere1 = 'AND BETWEEN(TRANSFORM(YEAR(wellhist.hdate)) + PADL(TRANSFORM(MONTH(wellhist.hdate)),2,"0"),lcYear1 + lcPeriod1,lcYear2 + lcPeriod2)'
		         ENDIF
		         THISFORM.cReportName = 'commonsource\dmrwprod2'
		         THISFORM.cTitle2     = 'For Accounting Year ' + lcYear1 + '/' + lcPeriod1 + ' - ' + lcYear2 + '/' + lcPeriod2
		         THISFORM.cSelectCriteria = 'Well  ' + ALLTRIM(lcWellID1) + '  -  ' +  ;
		            ALLTRIM(lcWellID2) + ' in ' +  ;
		            IIF(SUBSTR(lcGroup, 1, 2) = '**', 'All', '') + ' Group'  +  ;
		            IIF(SUBSTR(lcGroup, 1, 2) = '**', 's ', ':  ') +  ;
		            IIF(SUBSTR(lcGroup, 1, 2) = '**', '', lcGroup)
		
		         *  If Accounting Year and Report by Month are both chosen
		      CASE ACCTYEAR AND BYMONTH = .T.
		         IF NOT llCalendarFY
		            ldStartDate = THISFORM.glmaint.getdate(lcYear1, lcPeriod1)
		            ldEndDate   = GOMONTH(THISFORM.glmaint.getdate(lcYear2, lcPeriod2), 1) - 1
		            lcWhere1    = 'AND BETWEEN(wellhist.hdate,ldStartDate,ldEndDate)'
		         ELSE
		            lcWhere1 = 'AND BETWEEN(TRANSFORM(YEAR(wellhist.hdate)) + PADL(TRANSFORM(MONTH(wellhist.hdate)),2,"0"),lcYear1 + lcPeriod1,lcYear2 + lcPeriod2)'
		         ENDIF
		         THISFORM.cReportName = 'commonsource\dmrwprod3'
		         THISFORM.cTitle2     = 'For Accounting Year ' + lcYear1 + '/' + lcPeriod1 + ' - ' + lcYear2 + '/' + lcPeriod2
		         THISFORM.cSelectCriteria = 'Well  ' + ALLTRIM(lcWellID1) + '  -  ' +  ;
		            ALLTRIM(lcWellID2) + ' in ' +  ;
		            IIF(SUBSTR(lcGroup, 1, 2) = '**', 'All', '') + ' Group'  +  ;
		            IIF(SUBSTR(lcGroup, 1, 2) = '**', 's ', ':  ') +  ;
		            IIF(SUBSTR(lcGroup, 1, 2) = '**', '', lcGroup)
		
		         *  If Accounting Date is chosen, but Report by Month is not
		      CASE ACCTDATE AND BYMONTH <> .T.
		         lcWhere1             = 'AND BETWEEN(wellhist.hdate,ldDate1,ldDate2)'
		         THISFORM.cReportName = 'commonsource\dmrwprod2'
		         THISFORM.cTitle2     = 'For Accounting Date ' + ALLTRIM(DTOC(ldDate1)) + ' - ' + DTOC(ldDate2)
		         THISFORM.cSelectCriteria = 'Well  ' + ALLTRIM(lcWellID1) + '  -  ' +  ;
		            ALLTRIM(lcWellID2) + ' in ' +  ;
		            IIF(SUBSTR(lcGroup, 1, 2) = '**', 'All', '') + ' Group'  +  ;
		            IIF(SUBSTR(lcGroup, 1, 2) = '**', 's ', ':  ') +  ;
		            IIF(SUBSTR(lcGroup, 1, 2) = '**', '', lcGroup)
		
		         *  If Accounting Date and Report by Month are both chosen
		      CASE ACCTDATE AND BYMONTH = .T.
		         lcWhere1             = 'AND BETWEEN(wellhist.hdate,ldDate1,ldDate2)'
		         THISFORM.cReportName = 'commonsource\dmrwprod1'
		         THISFORM.cTitle2     = 'For Accounting Date ' + ALLTRIM(DTOC(ldDate1)) + ' - ' + DTOC(ldDate2)
		         THISFORM.cSelectCriteria = 'Well  ' + ALLTRIM(lcWellID1) + '  -  ' +  ;
		            ALLTRIM(lcWellID2) + ' in ' +  ;
		            IIF(SUBSTR(lcGroup, 1, 2) = '**', 'All', '') + ' Group'  +  ;
		            IIF(SUBSTR(lcGroup, 1, 2) = '**', 's ', ':  ') +  ;
		            IIF(SUBSTR(lcGroup, 1, 2) = '**', '', lcGroup)
		
		   ENDCASE
		
		   IF llIncDirect
		      THISFORM.cTitle2 = ALLT(THISFORM.cTitle2) + ' (Including Direct Paid Revenue)'
		   ENDIF
		
		   DO CASE
		      CASE GROUPBYYEAR      && Year
		         IF BYMONTH = .T.
		            THISFORM.cReportName = 'commonsource\dmrwprod1'
		            lcOrderBY            = 'ORDER BY cYear, wellhist.cWellID, cPeriod'
		            lcGroupBy            = 'GROUP BY cYear, wellhist.cWellID, cPeriod'
		         ELSE
		            THISFORM.cReportName = 'commonsource\dmrwprod2'
		            lcOrderBY            = 'ORDER BY cYear, wellhist.cWellID'
		            lcGroupBy            = 'GROUP BY cYear, wellhist.cWellID'
		         ENDIF
		      CASE GROUPBYWELL      && Well
		         IF BYMONTH = .T.
		            THISFORM.cReportName = 'commonsource\dmrwprod3'
		            lcOrderBY            = 'ORDER BY wellhist.cWellID, cYear, cPeriod'
		            lcGroupBy            = 'GROUP BY wellhist.cWellID, cYear, cPeriod'
		         ELSE
		            THISFORM.cReportName = 'commonsource\dmrwprod4'
		            lcOrderBY            = 'ORDER BY wellhist.cWellID, cYear '
		            lcGroupBy            = 'GROUP BY wellhist.cWellID, cYear'
		         ENDIF
		   ENDCASE
		
		   DO CASE
		
		         *  If a group is specified
		      CASE lcGroup <> '** - All Groups'  &&  Changed to use wellhist, so it matches the group the well was in at the time of closing - BH 02/08/2007
		         lcWhere2 = 'AND wellhist.cgroup = SUBSTR(lcGroup,1,2)'
		      OTHERWISE
		         lcWhere2 = 'AND wellhist.cgroup in(select cgroup from groups)'
		
		   ENDCASE
		
		   SET TALK ON
		   DO CASE
		         *  If Production Year is checked and Report by Month is not
		      CASE PRODYEAR AND BYMONTH = .F.
		
		         SELECT  wells.cwellname,  ;
		            wells.cgroup,  ;
		            wellhist.cwellid,  ;
		            wellhist.hdate,  ;
		            wellhist.hyear AS cyear,  ;
		            wellhist.hperiod AS cperiod,  ;
		            SUM(wellhist.nroyint) AS nRoyalty, ;
		            SUM(wellhist.nwrkint) AS nWorking, ;
		            SUM(wellhist.ndayson) AS ndayson,  ;
		            IIF(llIncDirect,SUM(wellhist.ntotbbl), SUM(swNetRevenue(wellhist.cwellid,wellhist.ntotbbl,'O',,.T.,,,,,,wellhist.cdeck))) AS ntotbbl,  ;
		            IIF(llIncDirect,SUM(wellhist.ntotmcf), SUM(swNetRevenue(wellhist.cwellid,wellhist.ntotmcf,'O',,.T.,,,,,,wellhist.cdeck))) AS ntotmcf,  ;
		            IIF(llIncDirect, SUM(wellhist.ngrossgas), SUM(swNetRevenue(wellhist.cwellid,wellhist.ngrossgas,'G',,.T.,,,,,,wellhist.cdeck))) AS ngasinc,  ;
		            IIF(llIncDirect, SUM(wellhist.ngrossoil), SUM(swNetRevenue(wellhist.cwellid,wellhist.ngrossoil,'O',,.T.,,,,,,wellhist.cdeck))) AS noilinc,  ;
		            IIF(llIncDirect, SUM(wellhist.ntrpinc + wellhist.nothinc + wellhist.nmiscinc1 + wellhist.nmiscinc2), ;
		                SUM(swNetRevenue(wellhist.cwellid,wellhist.ntrpinc,  'T',,.T.,,,,,,wellhist.cdeck) + ;
		                    swNetRevenue(wellhist.cwellid,wellhist.nothinc,  'P',,.T.,,,,,,wellhist.cdeck) + ;
		                    swNetRevenue(wellhist.cwellid,wellhist.nmiscinc1,'1',,.T.,,,,,,wellhist.cdeck) + ;
		                    swNetRevenue(wellhist.cwellid,wellhist.nmiscinc2,'2',,.T.,,,,,,wellhist.cdeck))) AS ntrpinc,  ;
		            SUM(wellhist.ntotale + nexpcl1 + nexpcl2 + nexpcl3 + nexpcl4 + nexpcl5 + nexpcla + nexpclb + ntotmktg + wellhist.ngather + wellhist.ncompress) AS ntotale,  ;
		            SUM(wellhist.ntotbbltx1 + ntotbbltx2 + ntotbbltx3 + ntotbbltx4 + ntotbbltxw + ntotbbltxr) AS nTotBBLTx,  ;
		            SUM(wellhist.ntotmcftx1 + ntotmcftx2 + ntotmcftx3 + ntotmcftx4 + ntotmcftxw + ntotmcftxr) AS nTotMCFTx,  ;
		            SUM(wellhist.ntotothtx1 + ntotothtx2 + ntotothtx3 + ntotothtx4) AS nTotOthTx,  ;
		            wellhist.ngasint,  ;
		            wellhist.noilint  ;
		            FROM wellhist ;
		            JOIN wells ;
		            ON wellhist.cwellid = wells.cwellid ;
		            WHERE &lcSelected  ;
		            AND IIF(llActive, INLIST(wells.cwellstat, 'A', 'V'), .T.) ;
		            &lcWhere1  ;
		            &lcWhere2  ;
		            INTO CURSOR welltmp READWRITE  ;
		            &lcOrderBY ;
		            &lcGroupBy
		
		
		         *  If Production Year and Report by Month are both chosen
		      CASE PRODYEAR AND BYMONTH = .T.
		
		         SELECT  wells.cwellname,  ;
		            wells.cgroup,  ;
		            wellhist.cwellid,  ;
		            wellhist.hdate,  ;
		            wellhist.hyear AS cyear,  ;
		            wellhist.hperiod AS cperiod,  ;
		            SUM(wellhist.nroyint) AS nRoyalty, ;
		            SUM(wellhist.nwrkint) AS nWorking, ;
		            SUM(wellhist.ndayson) AS ndayson,  ;
		            IIF(llIncDirect,SUM(wellhist.ntotbbl), SUM(swNetRevenue(wellhist.cwellid,wellhist.ntotbbl,'O',,.T.,,,,,,wellhist.cdeck))) AS ntotbbl,  ;
		            IIF(llIncDirect,SUM(wellhist.ntotmcf), SUM(swNetRevenue(wellhist.cwellid,wellhist.ntotmcf,'O',,.T.,,,,,,wellhist.cdeck))) AS ntotmcf,  ;
		            IIF(llIncDirect, SUM(wellhist.ngrossgas), SUM(swNetRevenue(wellhist.cwellid,wellhist.ngrossgas,'G',,.T.,,,,,,wellhist.cdeck))) AS ngasinc,  ;
		            IIF(llIncDirect, SUM(wellhist.ngrossoil), SUM(swNetRevenue(wellhist.cwellid,wellhist.ngrossoil,'O',,.T.,,,,,,wellhist.cdeck))) AS noilinc,  ;
		            IIF(llIncDirect, SUM(wellhist.ntrpinc + wellhist.nothinc + wellhist.nmiscinc1 + wellhist.nmiscinc2), ;
		                SUM(swNetRevenue(wellhist.cwellid,wellhist.ntrpinc,  'T',,.T.,,,,,,wellhist.cdeck) + ;
		                    swNetRevenue(wellhist.cwellid,wellhist.nothinc,  'P',,.T.,,,,,,wellhist.cdeck) + ;
		                    swNetRevenue(wellhist.cwellid,wellhist.nmiscinc1,'1',,.T.,,,,,,wellhist.cdeck) + ;
		                    swNetRevenue(wellhist.cwellid,wellhist.nmiscinc2,'2',,.T.,,,,,,wellhist.cdeck))) AS ntrpinc,  ;
		            SUM(wellhist.ntotale + nexpcl1 + nexpcl2 + nexpcl3 + nexpcl4 + nexpcl5 + nexpcla + nexpclb + ntotmktg + wellhist.ngather + wellhist.ncompress) AS ntotale,  ;
		            SUM(wellhist.ntotbbltx1 + ntotbbltx2 + ntotbbltx3 + ntotbbltx4 + ntotbbltxw + ntotbbltxr) AS nTotBBLTx,  ;
		            SUM(wellhist.ntotmcftx1 + ntotmcftx2 + ntotmcftx3 + ntotmcftx4 + ntotmcftxw + ntotmcftxr) AS nTotMCFTx,  ;
		            SUM(wellhist.ntotothtx1 + ntotothtx2 + ntotothtx3 + ntotothtx4) AS nTotOthTx,  ;
		            wellhist.ngasint,  ;
		            wellhist.noilint  ;
		            FROM wellhist ;
		            JOIN wells ;
		            ON wellhist.cwellid = wells.cwellid ;
		            WHERE &lcSelected  ;
		            AND IIF(llActive, INLIST(wells.cwellstat, 'A', 'V'), .T.) ;
		            &lcWhere1  ;
		            &lcWhere2  ;
		            INTO CURSOR welltmp READWRITE  ;
		            &lcOrderBY  ;
		            &lcGroupBy
		
		         *  If Accounting Year or Accounting Date are chosen, but Report by Month is not
		      CASE ACCTYEAR AND BYMONTH = .F.
		
		         SELECT  wells.cwellname,  ;
		            wells.cgroup,  ;
		            wellhist.cwellid,  ;
		            wellhist.hdate,  ;
		            THISFORM.glmaint.getperiod(wellhist.hdate, .T.) AS cyear,  ;
		            THISFORM.glmaint.getperiod(wellhist.hdate, .F.) AS cperiod,  ;
		            SUM(wellhist.nroyint) AS nRoyalty, ;
		            SUM(wellhist.nwrkint) AS nWorking, ;
		            SUM(wellhist.ndayson) AS ndayson,  ;
		            IIF(llIncDirect,SUM(wellhist.ntotbbl), SUM(swNetRevenue(wellhist.cwellid,wellhist.ntotbbl,'O',,.T.,,,,,,wellhist.cdeck))) AS ntotbbl,  ;
		            IIF(llIncDirect,SUM(wellhist.ntotmcf), SUM(swNetRevenue(wellhist.cwellid,wellhist.ntotmcf,'O',,.T.,,,,,,wellhist.cdeck))) AS ntotmcf,  ;
		            IIF(llIncDirect, SUM(wellhist.ngrossgas), SUM(swNetRevenue(wellhist.cwellid,wellhist.ngrossgas,'G',,.T.,,,,,,wellhist.cdeck))) AS ngasinc,  ;
		            IIF(llIncDirect, SUM(wellhist.ngrossoil), SUM(swNetRevenue(wellhist.cwellid,wellhist.ngrossoil,'O',,.T.,,,,,,wellhist.cdeck))) AS noilinc,  ;
		            IIF(llIncDirect, SUM(wellhist.ntrpinc + wellhist.nothinc + wellhist.nmiscinc1 + wellhist.nmiscinc2), ;
		                SUM(swNetRevenue(wellhist.cwellid,wellhist.ntrpinc,  'T',,.T.,,,,,,wellhist.cdeck) + ;
		                    swNetRevenue(wellhist.cwellid,wellhist.nothinc,  'P',,.T.,,,,,,wellhist.cdeck) + ;
		                    swNetRevenue(wellhist.cwellid,wellhist.nmiscinc1,'1',,.T.,,,,,,wellhist.cdeck) + ;
		                    swNetRevenue(wellhist.cwellid,wellhist.nmiscinc2,'2',,.T.,,,,,,wellhist.cdeck))) AS ntrpinc,  ;
		            SUM(wellhist.ntotale + nexpcl1 + nexpcl2 + nexpcl3 + nexpcl4 + nexpcl5 + nexpcla + nexpclb + ntotmktg + wellhist.ngather + wellhist.ncompress) AS ntotale,  ;
		            SUM(wellhist.ntotbbltx1 + ntotbbltx2 + ntotbbltx3 + ntotbbltx4 + ntotbbltxw + ntotbbltxr) AS nTotBBLTx,  ;
		            SUM(wellhist.ntotmcftx1 + ntotmcftx2 + ntotmcftx3 + ntotmcftx4 + ntotmcftxw + ntotmcftxr) AS nTotMCFTx,  ;
		            SUM(wellhist.ntotothtx1 + ntotothtx2 + ntotothtx3 + ntotothtx4) AS nTotOthTx,  ;
		            wellhist.ngasint,  ;
		            wellhist.noilint  ;
		            FROM wellhist ;
		            JOIN wells ;
		            ON wellhist.cwellid = wells.cwellid ;
		            WHERE &lcSelected  ;
		            AND IIF(llActive, INLIST(wells.cwellstat, 'A', 'V'), .T.) ;
		            &lcWhere1  ;
		            &lcWhere2  ;
		            INTO CURSOR welltmp READWRITE  ;
		            &lcOrderBY ;
		            &lcGroupBy
		
		         *  If Accounting Date is chosen, but Report by Month is not
		      CASE ACCTDATE AND BYMONTH = .F.
		
		         SELECT  wells.cwellname,  ;
		            wells.cgroup,  ;
		            wellhist.cwellid,  ;
		            wellhist.hdate,  ;
		            ALLTRIM(STR(YEAR(wellhist.hdate), 4)) AS cyear,  ;
		            PADL(TRANSFORM(MONTH(wellhist.hdate)), 2, '0') AS cperiod,  ;
		            SUM(wellhist.nroyint) AS nRoyalty, ;
		            SUM(wellhist.nwrkint) AS nWorking, ;
		            SUM(wellhist.ndayson) AS ndayson,  ;
		            IIF(llIncDirect,SUM(wellhist.ntotbbl), SUM(swNetRevenue(wellhist.cwellid,wellhist.ntotbbl,'O',,.T.,,,,,,wellhist.cdeck))) AS ntotbbl,  ;
		            IIF(llIncDirect,SUM(wellhist.ntotmcf), SUM(swNetRevenue(wellhist.cwellid,wellhist.ntotmcf,'O',,.T.,,,,,,wellhist.cdeck))) AS ntotmcf,  ;
		            IIF(llIncDirect, SUM(wellhist.ngrossgas), SUM(swNetRevenue(wellhist.cwellid,wellhist.ngrossgas,'G',,.T.,,,,,,wellhist.cdeck))) AS ngasinc,  ;
		            IIF(llIncDirect, SUM(wellhist.ngrossoil), SUM(swNetRevenue(wellhist.cwellid,wellhist.ngrossoil,'O',,.T.,,,,,,wellhist.cdeck))) AS noilinc,  ;
		            IIF(llIncDirect, SUM(wellhist.ntrpinc + wellhist.nothinc + wellhist.nmiscinc1 + wellhist.nmiscinc2), ;
		                SUM(swNetRevenue(wellhist.cwellid,wellhist.ntrpinc,  'T',,.T.,,,,,,wellhist.cdeck) + ;
		                    swNetRevenue(wellhist.cwellid,wellhist.nothinc,  'P',,.T.,,,,,,wellhist.cdeck) + ;
		                    swNetRevenue(wellhist.cwellid,wellhist.nmiscinc1,'1',,.T.,,,,,,wellhist.cdeck) + ;
		                    swNetRevenue(wellhist.cwellid,wellhist.nmiscinc2,'2',,.T.,,,,,,wellhist.cdeck))) AS ntrpinc,  ;
		            SUM(wellhist.ntotale + nexpcl1 + nexpcl2 + nexpcl3 + nexpcl4 + nexpcl5 + nexpcla + nexpclb + ntotmktg + wellhist.ngather + wellhist.ncompress) AS ntotale,  ;
		            SUM(wellhist.ntotbbltx1 + ntotbbltx2 + ntotbbltx3 + ntotbbltx4 + ntotbbltxw + ntotbbltxr) AS nTotBBLTx,  ;
		            SUM(wellhist.ntotmcftx1 + ntotmcftx2 + ntotmcftx3 + ntotmcftx4 + ntotmcftxw + ntotmcftxr) AS nTotMCFTx,  ;
		            SUM(wellhist.ntotothtx1 + ntotothtx2 + ntotothtx3 + ntotothtx4) AS nTotOthTx,  ;
		            wellhist.ngasint,  ;
		            wellhist.noilint  ;
		            FROM wellhist ;
		            JOIN wells ;
		            ON wellhist.cwellid = wells.cwellid ;
		            WHERE &lcSelected  ;
		            AND IIF(llActive, INLIST(wells.cwellstat, 'A', 'V'), .T.) ;
		            &lcWhere1  ;
		            &lcWhere2  ;
		            INTO CURSOR welltmp READWRITE  ;
		            &lcOrderBY ;
		            &lcGroupBy
		
		         *  If Accounting Year or Accounting Date are chosen, and Report by Month is, too
		      CASE ACCTYEAR AND BYMONTH = .T.
		
		         SELECT  wells.cwellname,  ;
		            wells.cgroup,  ;
		            wellhist.cwellid,  ;
		            wellhist.hdate,  ;
		            THISFORM.glmaint.getperiod(wellhist.hdate, .T.) AS cyear,  ;
		            THISFORM.glmaint.getperiod(wellhist.hdate, .F.) AS cperiod,  ;
		            SUM(wellhist.nroyint) AS nRoyalty, ;
		            SUM(wellhist.nwrkint) AS nWorking, ;
		            SUM(wellhist.ndayson) AS ndayson,  ;
		            IIF(llIncDirect,SUM(wellhist.ntotbbl), SUM(swNetRevenue(wellhist.cwellid,wellhist.ntotbbl,'O',,.T.,,,,,,wellhist.cdeck))) AS ntotbbl,  ;
		            IIF(llIncDirect,SUM(wellhist.ntotmcf), SUM(swNetRevenue(wellhist.cwellid,wellhist.ntotmcf,'O',,.T.,,,,,,wellhist.cdeck))) AS ntotmcf,  ;
		            IIF(llIncDirect, SUM(wellhist.ngrossgas), SUM(swNetRevenue(wellhist.cwellid,wellhist.ngrossgas,'G',,.T.,,,,,,wellhist.cdeck))) AS ngasinc,  ;
		            IIF(llIncDirect, SUM(wellhist.ngrossoil), SUM(swNetRevenue(wellhist.cwellid,wellhist.ngrossoil,'O',,.T.,,,,,,wellhist.cdeck))) AS noilinc,  ;
		            IIF(llIncDirect, SUM(wellhist.ntrpinc + wellhist.nothinc + wellhist.nmiscinc1 + wellhist.nmiscinc2), ;
		                SUM(swNetRevenue(wellhist.cwellid,wellhist.ntrpinc,  'T',,.T.,,,,,,wellhist.cdeck) + ;
		                    swNetRevenue(wellhist.cwellid,wellhist.nothinc,  'P',,.T.,,,,,,wellhist.cdeck) + ;
		                    swNetRevenue(wellhist.cwellid,wellhist.nmiscinc1,'1',,.T.,,,,,,wellhist.cdeck) + ;
		                    swNetRevenue(wellhist.cwellid,wellhist.nmiscinc2,'2',,.T.,,,,,,wellhist.cdeck))) AS ntrpinc,  ;
		            SUM(wellhist.ntotale + nexpcl1 + nexpcl2 + nexpcl3 + nexpcl4 + nexpcl5 + nexpcla + nexpclb + ntotmktg + wellhist.ngather + wellhist.ncompress) AS ntotale,  ;
		            SUM(wellhist.ntotbbltx1 + ntotbbltx2 + ntotbbltx3 + ntotbbltx4 + ntotbbltxw + ntotbbltxr) AS nTotBBLTx,  ;
		            SUM(wellhist.ntotmcftx1 + ntotmcftx2 + ntotmcftx3 + ntotmcftx4 + ntotmcftxw + ntotmcftxr) AS nTotMCFTx,  ;
		            SUM(wellhist.ntotothtx1 + ntotothtx2 + ntotothtx3 + ntotothtx4) AS nTotOthTx,  ;
		            wellhist.ngasint,  ;
		            wellhist.noilint  ;
		            FROM wellhist ;
		            JOIN wells ;
		            ON wellhist.cwellid = wells.cwellid ;
		            WHERE &lcSelected  ;
		            AND IIF(llActive, INLIST(wells.cwellstat, 'A', 'V'), .T.) ;
		            &lcWhere1  ;
		            &lcWhere2  ;
		            INTO CURSOR welltmp READWRITE  ;
		            &lcOrderBY  ;
		            &lcGroupBy
		
		         *  If Accounting Date is chosen, and Report by Month is, too
		      CASE ACCTDATE AND BYMONTH = .T.
		
		         SELECT  wells.cwellname,  ;
		            wells.cgroup,  ;
		            wellhist.cwellid,  ;
		            wellhist.hdate,  ;
		            ALLTRIM(STR(YEAR(wellhist.hdate), 4)) AS cyear,  ;
		            PADL(TRANSFORM(MONTH(wellhist.hdate)), 2, '0') AS cperiod,  ;
		            SUM(wellhist.nroyint) AS nRoyalty, ;
		            SUM(wellhist.nwrkint) AS nWorking, ;
		            SUM(wellhist.ndayson) AS ndayson,  ;
		            IIF(llIncDirect,SUM(wellhist.ntotbbl), SUM(swNetRevenue(wellhist.cwellid,wellhist.ntotbbl,'O',,.T.,,,,,,wellhist.cdeck))) AS ntotbbl,  ;
		            IIF(llIncDirect,SUM(wellhist.ntotmcf), SUM(swNetRevenue(wellhist.cwellid,wellhist.ntotmcf,'O',,.T.,,,,,,wellhist.cdeck))) AS ntotmcf,  ;
		            IIF(llIncDirect, SUM(wellhist.ngrossgas), SUM(swNetRevenue(wellhist.cwellid,wellhist.ngrossgas,'G',,.T.,,,,,,wellhist.cdeck))) AS ngasinc,  ;
		            IIF(llIncDirect, SUM(wellhist.ngrossoil), SUM(swNetRevenue(wellhist.cwellid,wellhist.ngrossoil,'O',,.T.,,,,,,wellhist.cdeck))) AS noilinc,  ;
		            IIF(llIncDirect, SUM(wellhist.ntrpinc + wellhist.nothinc + wellhist.nmiscinc1 + wellhist.nmiscinc2), ;
		                SUM(swNetRevenue(wellhist.cwellid,wellhist.ntrpinc,  'T',,.T.,,,,,,wellhist.cdeck) + ;
		                    swNetRevenue(wellhist.cwellid,wellhist.nothinc,  'P',,.T.,,,,,,wellhist.cdeck) + ;
		                    swNetRevenue(wellhist.cwellid,wellhist.nmiscinc1,'1',,.T.,,,,,,wellhist.cdeck) + ;
		                    swNetRevenue(wellhist.cwellid,wellhist.nmiscinc2,'2',,.T.,,,,,,wellhist.cdeck))) AS ntrpinc,  ;
		            SUM(wellhist.ntotale + nexpcl1 + nexpcl2 + nexpcl3 + nexpcl4 + nexpcl5 + nexpcla + nexpclb + ntotmktg + wellhist.ngather + wellhist.ncompress) AS ntotale,  ;
		            SUM(wellhist.ntotbbltx1 + ntotbbltx2 + ntotbbltx3 + ntotbbltx4 + ntotbbltxw + ntotbbltxr) AS nTotBBLTx,  ;
		            SUM(wellhist.ntotmcftx1 + ntotmcftx2 + ntotmcftx3 + ntotmcftx4 + ntotmcftxw + ntotmcftxr) AS nTotMCFTx,  ;
		            SUM(wellhist.ntotothtx1 + ntotothtx2 + ntotothtx3 + ntotothtx4) AS nTotOthTx,  ;
		            wellhist.ngasint,  ;
		            wellhist.noilint  ;
		            FROM wellhist ;
		            JOIN wells ;
		            ON wellhist.cwellid = wells.cwellid ;
		            WHERE &lcSelected  ;
		            AND IIF(llActive, INLIST(wells.cwellstat, 'A', 'V'), .T.) ;
		            &lcWhere1  ;
		            &lcWhere2  ;
		            INTO CURSOR welltmp READWRITE  ;
		            &lcOrderBY  ;
		            &lcGroupBy
		   ENDCASE
		
		   SET TALK OFF
		
		   * Plug in net bbl and mcf totals
		   IF NOT llIncDirect
		      SELECT welltmp
		      SCAN
		         m.ntotbbl = swNetRevenue(welltmp.cwellid, welltmp.ntotbbl, 'O')
		         m.ntotmcf = swNetRevenue(welltmp.cwellid, welltmp.ntotmcf, 'G')
		         REPLACE welltmp.ntotbbl   WITH m.ntotbbl, ;
		            welltmp.ntotmcf   WITH m.ntotmcf
		      ENDSCAN
		   ENDIF
		
		   IF ACCTYEAR AND THISFORM.chkReportByMonth.VALUE
		      SELECT welltmp
		      SCAN
		         m.cyear   = cyear
		         m.cperiod = cperiod
		         m.hdate   = hdate
		         *         m.cyear   = THISFORM.glmaint.getperiod(m.hdate, .T.)
		         *         m.cperiod = THISFORM.glmaint.getperiod(m.hdate)
		         IF llIncDirect
		            m.nWorking = (ngasinc + noilinc + ntrpinc) - (ntotale + nTotBBLTx + nTotMCFTx + nTotOthTx) - nRoyalty
		         ELSE
		            m.nWorking = nWorking
		         ENDIF
		         SELECT welltmp
		         REPL cyear   WITH m.cyear, ;
		            cperiod WITH m.cperiod, ;
		            nWorking WITH m.nWorking
		      ENDSCAN
		      IF THISFORM.opgGroupBy.VALUE = 2
		         SELECT welltmp
		         INDEX ON cwellid + cyear + cperiod TAG wellkey
		      ELSE
		         SELECT welltmp
		         INDEX ON cyear + cwellid + cperiod TAG wellkey
		      ENDIF
		   ELSE
		      SELECT welltmp
		      SCAN
		         IF llIncDirect
		            m.nWorking = (ngasinc + noilinc + ntrpinc) - (ntotale + nTotBBLTx + nTotMCFTx + nTotOthTx) - nRoyalty
		         ELSE
		            m.nWorking = nWorking
		         ENDIF
		         SELECT welltmp
		         REPL nWorking WITH m.nWorking
		      ENDSCAN
		   ENDIF
		
		   IF NOT llIncludeNoProduction
		      SELECT welltmp
		      DELETE  FOR ngasinc = 0 AND ;
		         noilinc = 0 AND ;
		         ntrpinc = 0 AND ;
		         nTotBBLTx = 0 AND ;
		         nTotMCFTx = 0 AND ;
		         nRoyalty = 0 AND ;
		         nWorking = 0 AND ;
		         ntotale = 0
		   ENDIF
		
		   SELECT welltmp
		   COUNT FOR NOT DELETED() TO lnCount
		
		   IF lnCount > 0
		      llReturn = .T.
		   ELSE
		      llReturn = .F.
		   ENDIF
		
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'BuildData', loError.LINENO, 'Production Summary', loError.ERRORNO, loError.MESSAGE
		   MESSAGEBOX('Unable to process the report at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		      'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		WAIT CLEAR
		
		RETURN llReturn
		
	ENDPROC

	PROCEDURE calcpaidowners
		*
		*  Calculates the royalty and working interest payments and plugs them into wellhist
		*
		
		LOCAL lcPeriod1, lcPeriod2, lcWell1, lcWell2, lcYear1, lcYear2, ldDate1, ldDate2, llDirect
		LOCAL llIncDirect, lnRange, loError, llReturn
		
		TRY
		   lcYear1     = THISFORM.swYear1.VALUE
		   lcYear2     = THISFORM.swYear2.VALUE
		   lcPeriod1   = THISFORM.swPeriod1.VALUE
		   lcPeriod2   = THISFORM.swPeriod2.VALUE
		   ldDate1     = THISFORM.swdate1.VALUE
		   ldDate2     = THISFORM.swdate2.VALUE
		   lnRange     = THISFORM.opgRange.VALUE
		   llDirect    = THISFORM.chklIncDirect.VALUE
		   lcWell1     = THISFORM.swrptlook1.txtbegID.VALUE
		   lcWell2     = THISFORM.swrptlook1.txtendID.VALUE
		   llIncDirect = THISFORM.chklIncDirect.VALUE
		   llSelected  = thisform.chkselected.Value 
		   
		   IF NOT llSelected
		      SELECT cwellid as cid FROM wells WHERE BETWEEN(cwellid,lcWell1,lcWell2) INTO CURSOR selected
		   ENDIF 
		
		   IF RECC('disbhist') + RECCOUNT('suspense') = 0
		      llReturn = .T.
		      EXIT
		   ENDIF
		
		* Build the cursor of runs and production periods
		
		   CREATE CURSOR tempyears (crunyear c(4), nrunno I, cyear  c(4), cperiod c(2))
		
		   IF THISFORM.opgRange.VALUE # 1
		      IF THISFORM.opgRange.VALUE = 2
		         ldDate1 = CTOD(lcPeriod1 + '/01/' + lcYear1)
		         ldDate2 = CTOD(lcPeriod2 + '/01/' + lcYear2)
		         ldDate2 = goendmonth(ldDate2, 1, .T.)
		         SELECT  crunyear, ;
		                 nrunno ;
		             FROM sysctl ;
		             WHERE BETWEEN(TRANSFORM(YEAR(dacctdate)) + PADL(TRANSFORM(MONTH(dacctdate)), 2, '0'), lcYear1 + lcPeriod1, lcYear2 + lcPeriod2) ;
		             INTO CURSOR tempyear
		         SELECT tempyear
		         SCAN
		            SCATTER MEMVAR
		            lcRunYear = m.crunyear + PADL(TRANSFORM(nrunno), 3, '0')
		            SELECT  crunyear, ;
		                    nrunno, ;
		                    hyear, ;
		                    hperiod ;
		                FROM wellhist ;
		                WHERE crunyear + PADL(TRANSFORM(nrunno), 3, '0') = lcRunYear ;
		                INTO CURSOR rptperiods ;
		                ORDER BY crunyear, nrunno, hyear, hperiod ;
		                GROUP BY crunyear, nrunno, hyear, hperiod
		            SELECT rptperiods
		            SCAN
		               SCATTER MEMVAR
		               SELECT tempyears
		               LOCATE FOR cyear == m.hyear AND cperiod == m.hperiod AND crunyear == m.crunyear AND nrunno == m.nrunno
		               IF NOT FOUND()
		                  m.cyear   = m.hyear
		                  m.cperiod = m.hperiod
		                  INSERT INTO tempyears FROM MEMVAR
		               ENDIF
		            ENDSCAN
		         ENDSCAN
		      ELSE
		         SELECT crunyear, nrunno FROM sysctl WHERE BETWEEN(dacctdate, ldDate1, ldDate2) INTO CURSOR tempyear
		         SELECT tempyear
		         SCAN
		            SCATTER MEMVAR
		            lcRunYear = m.crunyear + PADL(TRANSFORM(nrunno), 3, '0')
		            SELECT  crunyear, ;
		                    nrunno, ;
		                    hyear, ;
		                    hperiod ;
		                FROM wellhist ;
		                WHERE crunyear + PADL(TRANSFORM(nrunno), 3, '0') = lcRunYear ;
		                INTO CURSOR rptperiods ;
		                ORDER BY crunyear, nrunno, hyear, hperiod ;
		                GROUP BY crunyear, nrunno, hyear, hperiod
		            SELECT rptperiods
		            SCAN
		               SCATTER MEMVAR
		               SELECT tempyears
		               LOCATE FOR cyear == m.hyear AND cperiod == m.hperiod
		               IF NOT FOUND()
		                  m.cyear   = m.hyear
		                  m.cperiod = m.hperiod
		                  INSERT INTO tempyears FROM MEMVAR
		               ENDIF
		            ENDSCAN
		         ENDSCAN
		      ENDIF
		   ENDIF
		
		   DO CASE
		      CASE lnRange = 1  && Production Year
		         SET TALK ON
		         IF llIncDirect
		            SELECT  cWellID, ;
		                    hyear, ;
		                    hperiod, ;
		                    cRecType, ;
		                    crunyear, ;
		                    nrunno, ;
		                    SUM(IIF(cTypeInv = 'W', noilrev + ngasrev + nothrev + ntrprev + ;
		                          nmiscrev1 + nmiscrev2 - nsevtaxes - nexpense - ntotale1 - ;
		                          ntotale2 - ntotale3 - ntotale4 - ntotale5 - ntotalea - ntotaleb, 0000000.00)) AS nworking, ;
		                    SUM(IIF(INLIST(cTypeInv, 'L', 'O'), noilrev + ngasrev + nothrev + ;
		                          ntrprev + nmiscrev1 + nmiscrev2 + nflatrate - nsevtaxes - nexpense - ;
		                          ntotale1 - ntotale2 - ntotale3 - ntotale4 - ntotale5 - ntotalea - ntotaleb, 0000000.00)) AS nroyalty ;
		                FROM disbhist ;
		                WHERE  EMPTY(csusptype) ;
		                    AND BETWEEN(hyear + hperiod, lcYear1 + lcPeriod1, lcYear2 + lcPeriod2) ;
		                    AND cwellid in (SELECT cid FROM selected) ;
		                    AND lProgram = .F. ;
		                    AND lManual  = .F. ;
		                    AND cRecType # 'P' ;
		                INTO CURSOR temphist READWRITE ;
		                ORDER BY cWellID, crunyear, nrunno, hyear, hperiod, cRecType ;
		                GROUP BY cWellID, crunyear, nrunno, hyear, hperiod, cRecType
		
		            SELECT  cWellID, ;
		                    hyear, ;
		                    hperiod, ;
		                    cRecType, ;
		                    crunyear_in AS crunyear, ;
		                    nrunno_in AS nrunno, ;
		                    SUM(IIF(cTypeInv = 'W', noilrev + ngasrev + nothrev + ntrprev + ;
		                          nmiscrev1 + nmiscrev2 - nsevtaxes - nexpense - ntotale1 - ;
		                          ntotale2 - ntotale3 - ntotale4 - ntotale5 - ntotalea - ntotaleb, 0000000.00)) AS nworking, ;
		                    SUM(IIF(INLIST(cTypeInv, 'L', 'O'), noilrev + ngasrev + nothrev + ;
		                          ntrprev + nmiscrev1 + nmiscrev2 + nflatrate - nsevtaxes - nexpense - ;
		                          ntotale1 - ntotale2 - ntotale3 - ntotale4 - ntotale5 - ntotalea - ntotaleb, 0000000.00)) AS nroyalty ;
		                FROM disbhist ;
		                WHERE NOT EMPTY(csusptype) ;
		                    AND BETWEEN(hyear + hperiod, lcYear1 + lcPeriod1, lcYear2 + lcPeriod2) ;
		                    AND cwellid in (SELECT cid FROM selected) ;
		                    AND lProgram = .F. ;
		                    AND lManual  = .F. ;
		                    AND cRecType # 'P' ;
		                INTO CURSOR temphista ;
		                ORDER BY cWellID, crunyear, nrunno, hyear, hperiod, cRecType ;
		                GROUP BY cWellID, crunyear, nrunno, hyear, hperiod, cRecType
		
		
		            SELECT  cWellID, ;
		                    hyear, ;
		                    hperiod, ;
		                    cRecType, ;
		                    crunyear_in AS crunyear, ;
		                    nrunno_in AS nrunno, ;
		                    SUM(IIF(cTypeInv = 'W', noilrev + ngasrev + nothrev + ntrprev + nmiscrev1 + ;
		                          nmiscrev2 - nsevtaxes - nexpense - ntotale1 - ntotale2 - ntotale3 - ;
		                          ntotale4 - ntotale5 - ntotalea - ntotaleb, 0000000.00)) AS nworking, ;
		                    SUM(IIF(INLIST(cTypeInv, 'L', 'O'), noilrev + ngasrev + nothrev + ntrprev + ;
		                          nmiscrev1 + nmiscrev2 + nflatrate - nsevtaxes - nexpense - ntotale1 - ;
		                          ntotale2 - ntotale3 - ntotale4 - ntotale5 - ntotalea - ntotaleb, 0000000.00)) AS nroyalty ;
		                FROM suspense ;
		                WHERE BETWEEN(hyear + hperiod, lcYear1 + lcPeriod1, lcYear2 + lcPeriod2) ;
		                    AND cwellid in (SELECT cid FROM selected) ;
		                    AND lProgram = .F. ;
		                    AND lManual  = .F. ;
		                    AND cRecType # 'P' ;
		                INTO CURSOR temphistb ;
		                ORDER BY cWellID, crunyear, nrunno, hyear, hperiod, cRecType ;
		                GROUP BY cWellID, crunyear, nrunno, hyear, hperiod, cRecType
		         ELSE
		            SELECT  cWellID, ;
		                    hyear, ;
		                    hperiod, ;
		                    cRecType, ;
		                    crunyear, ;
		                    nrunno, ;
		                    SUM(IIF(cTypeInv = 'W', nNetCheck, 0000000.00)) AS nworking, ;
		                    SUM(IIF(cTypeInv # 'W', nNetCheck, 0000000.00)) AS nroyalty ;
		                FROM disbhist ;
		                WHERE EMPTY(csusptype) ;
		                    AND BETWEEN(hyear + hperiod, lcYear1 + lcPeriod1, lcYear2 + lcPeriod2) ;
		                    AND cwellid in (SELECT cid FROM selected) ;
		                    AND lProgram = .F. ;
		                    AND lManual  = .F. ;
		                    AND cRecType # 'P' ;
		                INTO CURSOR temphist READWRITE ;
		                ORDER BY cWellID, crunyear, nrunno, hyear, hperiod, cRecType ;
		                GROUP BY cWellID, crunyear, nrunno, hyear, hperiod, cRecType
		
		            SELECT  cWellID, ;
		                    hyear, ;
		                    hperiod, ;
		                    cRecType, ;
		                    crunyear_in AS crunyear, ;
		                    nrunno_in AS nrunno, ;
		                    SUM(IIF(cTypeInv = 'W', nNetCheck, 0000000.00)) AS nworking, ;
		                    SUM(IIF(cTypeInv # 'W', nNetCheck, 0000000.00)) AS nroyalty ;
		                FROM disbhist ;
		                WHERE NOT EMPTY(csusptype) ;
		                    AND BETWEEN(hyear + hperiod, lcYear1 + lcPeriod1, lcYear2 + lcPeriod2) ;
		                    AND cwellid in (SELECT cid FROM selected) ;
		                    AND lProgram = .F. ;
		                    AND lManual  = .F. ;
		                    AND cRecType # 'P' ;
		                INTO CURSOR temphista ;
		                ORDER BY cWellID, crunyear, nrunno, hyear, hperiod, cRecType ;
		                GROUP BY cWellID, crunyear, nrunno, hyear, hperiod, cRecType
		
		            SELECT  cWellID, ;
		                    hyear, ;
		                    hperiod, ;
		                    cRecType, ;
		                    crunyear_in AS crunyear, ;
		                    nrunno_in AS nrunno, ;
		                    SUM(IIF(cTypeInv = 'W', nNetCheck, 0000000.00)) AS nworking, ;
		                    SUM(IIF(cTypeInv # 'W', nNetCheck, 0000000.00)) AS nroyalty ;
		                FROM suspense ;
		                WHERE BETWEEN(hyear + hperiod, lcYear1 + lcPeriod1, lcYear2 + lcPeriod2) ;
		                    AND cwellid in (SELECT cid FROM selected) ;
		                    AND lProgram = .F. ;
		                    AND lManual  = .F. ;
		                    AND cRecType # 'P' ;
		                INTO CURSOR temphistb ;
		                ORDER BY cWellID, crunyear, nrunno, hyear, hperiod, cRecType ;
		                GROUP BY cWellID, crunyear, nrunno, hyear, hperiod, cRecType
		         ENDIF
		         IF _TALLY > 0
		            SELECT temphist
		            APPEND FROM DBF('temphista')
		            APPEND FROM DBF('temphistb')
		         ENDIF
		         SELECT  cWellID, ;
		                 hyear, ;
		                 hperiod, ;
		                 cRecType, ;
		                 crunyear, ;
		                 nrunno, ;
		                 SUM(nworking) AS nworking, ;
		                 SUM(nroyalty) AS nroyalty ;
		             FROM temphist ;
		             INTO CURSOR temphist1 ;
		             ORDER BY cWellID, crunyear, nrunno, hyear, hperiod, cRecType ;
		             GROUP BY cWellID, crunyear, nrunno, hyear, hperiod, cRecType
		         SET TALK OFF
		         swselect('wellhist')
		         UPDATE  wellhist SET nRoyInt = 0, ;
		                 nWrkInt = 0 ;
		             WHERE cwellid in (SELECT cid FROM selected) ;
		                 AND BETWEEN(hyear + hperiod, lcYear1 + lcPeriod1, lcYear2 + lcPeriod2)
		         lnMax      = RECCOUNT('temphist')
		         lnProgress = 1
		         oProgress  = THISFORM.omessage.progressbarex('Updating royalty and working interest amounts...')
		         oProgress.setprogressrange(0, lnMax)
		         SELECT temphist1
		         SCAN
		            SCATTER MEMVAR
		            oProgress.setprogressmessage('Processing Owner Amounts for Well: ' + TRIM(m.cWellID) + ' Period: ' + m.hyear + '/' + m.hperiod)
		            oProgress.updateprogress(lnProgress)
		            lnProgress = lnProgress + 1
		            SELECT wellhist
		            SET ORDER TO wellhist
		            IF SEEK(m.cWellID + PADL(TRANSFORM(m.nrunno), 3, '0') + m.crunyear + m.hyear + m.hperiod + m.cRecType)
		               WAIT WIND NOWAIT 'Processing Well: ' + TRIM(m.cWellID) + ' Period: ' + m.hyear + '/' + m.hperiod
		               REPLACE nRoyInt WITH nRoyInt + m.nroyalty, ;
		                  nWrkInt WITH nWrkInt + m.nworking
		            ENDIF
		         ENDSCAN
		         oProgress.closeProgress()
		
		      CASE lnRange = 2 OR lnRange = 3 && Accounting Year or Accounting Date
		         SET TALK ON
		         IF llIncDirect
		            SELECT  cWellID, ;
		                    cownerid, ;
		                    hyear, ;
		                    hperiod, ;
		                    cRecType, ;
		                    crunyear, ;
		                    nrunno, ;
		                    SUM(IIF(cTypeInv = 'W', noilrev + ngasrev + nothrev + ntrprev + ;
		                          nmiscrev1 + nmiscrev2 - nsevtaxes - nexpense - ntotale1 - ;
		                          ntotale2 - ntotale3 - ntotale4 - ntotale5 - ntotalea - ntotaleb, 0000000.00)) AS nworking, ;
		                    SUM(IIF(cTypeInv # 'W', noilrev + ngasrev + nothrev + ;
		                          ntrprev + nmiscrev1 + nmiscrev2 + nflatrate - nsevtaxes - nexpense - ;
		                          ntotale1 - ntotale2 - ntotale3 - ntotale4 - ntotale5 - ntotalea - ntotaleb, 0000000.00)) AS nroyalty ;
		                FROM disbhist ;
		                WHERE EMPTY(csusptype) ;
		                    AND crunyear + PADL(TRANSFORM(nrunno), 3, '0') IN ;
		                    (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
		                         WHERE BETWEEN(dacctdate, ldDate1, ldDate2) ;
		                         FROM sysctl) ;
		                    AND cwellid in (SELECT cid FROM selected) ;
		                    AND lProgram = .F. ;
		                    AND lManual  = .F. ;
		                    AND cRecType # 'P' ;
		                INTO CURSOR temphist READWRITE ;
		                ORDER BY cWellID, cownerid, crunyear, nrunno, hyear, hperiod, cRecType ;
		                GROUP BY cWellID, cownerid, crunyear, nrunno, hyear, hperiod, cRecType
		
		            SELECT  cWellID, ;
		                    cownerid, ;
		                    hyear, ;
		                    hperiod, ;
		                    cRecType, ;
		                    crunyear_in AS crunyear, ;
		                    nrunno_in AS nrunno, ;
		                    SUM(IIF(cTypeInv = 'W', noilrev + ngasrev + nothrev + ntrprev + ;
		                          nmiscrev1 + nmiscrev2 - nsevtaxes - nexpense - ntotale1 - ;
		                          ntotale2 - ntotale3 - ntotale4 - ntotale5 - ntotalea - ntotaleb, 0000000.00)) AS nworking, ;
		                    SUM(IIF(cTypeInv # 'W', noilrev + ngasrev + nothrev + ;
		                          ntrprev + nmiscrev1 + nmiscrev2 + nflatrate - nsevtaxes - nexpense - ;
		                          ntotale1 - ntotale2 - ntotale3 - ntotale4 - ntotale5 - ntotalea - ntotaleb, 0000000.00)) AS nroyalty ;
		                FROM disbhist ;
		                WHERE NOT EMPTY(csusptype) ;
		                    AND crunyear_in + PADL(TRANSFORM(nrunno_in), 3, '0') IN ;
		                    (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
		                         WHERE BETWEEN(dacctdate, ldDate1, ldDate2) ;
		                         FROM sysctl) ;
		                    AND cwellid in (SELECT cid FROM selected) ;
		                    AND lProgram = .F. ;
		                    AND lManual  = .F. ;
		                    AND cRecType # 'P' ;
		                INTO CURSOR temphista ;
		                ORDER BY cWellID, cownerid, crunyear_in, nrunno_in, hyear, hperiod, cRecType ;
		                GROUP BY cWellID, cownerid, crunyear_in, nrunno_in, hyear, hperiod, cRecType
		
		            SELECT  cWellID, ;
		                    cOwnerID, ;
		                    hyear, ;
		                    hperiod, ;
		                    cRecType, ;
		                    crunyear_in AS crunyear, ;
		                    nrunno_in AS nrunno, ;
		                    SUM(IIF(cTypeInv = 'W', noilrev + ngasrev + nothrev + ntrprev + nmiscrev1 + ;
		                          nmiscrev2 - nsevtaxes - nexpense - ntotale1 - ntotale2 - ntotale3 - ;
		                          ntotale4 - ntotale5 - ntotalea - ntotaleb, 0000000.00)) AS nworking, ;
		                    SUM(IIF(cTypeInv # 'W', noilrev + ngasrev + nothrev + ntrprev + ;
		                          nmiscrev1 + nmiscrev2 + nflatrate - nsevtaxes - nexpense - ntotale1 - ;
		                          ntotale2 - ntotale3 - ntotale4 - ntotale5 - ntotalea - ntotaleb, 0000000.00)) AS nroyalty ;
		                FROM suspense ;
		                WHERE crunyear_in + PADL(TRANSFORM(nrunno_in), 3, '0') IN ;
		                    (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
		                         WHERE BETWEEN(dacctdate, ldDate1, ldDate2) ;
		                         FROM sysctl) ;
		                    AND cwellid in (SELECT cid FROM selected) ;
		                    AND lProgram = .F. ;
		                    AND lManual  = .F. ;
		                    AND cRecType # 'P' ;
		                INTO CURSOR temphistb ;
		                ORDER BY cWellID, cownerid, crunyear_in, nrunno_in, hyear, hperiod, cRecType ;
		                GROUP BY cWellID, cownerid, crunyear_in, nrunno_in, hyear, hperiod, cRecType
		         ELSE
		
		            SELECT  cWellID, ;
		                    cownerid, ;
		                    hyear, ;
		                    hperiod, ;
		                    cRecType, ;
		                    crunyear, ;
		                    nrunno, ;
		                    SUM(IIF(cTypeInv = 'W', nNetCheck, 0000000.00)) AS nworking, ;
		                    SUM(IIF(cTypeInv # 'W', nNetCheck, 0000000.00)) AS nroyalty ;
		                FROM disbhist ;
		                WHERE EMPTY(csusptype) ;
		                    AND crunyear + PADL(TRANSFORM(nrunno), 3, '0') IN ;
		                    (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
		                         WHERE BETWEEN(dacctdate, ldDate1, ldDate2) ;
		                         FROM sysctl) ;
		                    AND cwellid in (SELECT cid FROM selected) ;
		                    AND lProgram = .F. ;
		                    AND lManual  = .F. ;
		                    AND cRecType # 'P' ;
		                INTO CURSOR temphist READWRITE ;
		                ORDER BY cWellID, cownerid, crunyear, nrunno, hyear, hperiod, cRecType ;
		                GROUP BY cWellID, cownerid, crunyear, nrunno, hyear, hperiod, cRecType
		
		            SELECT  cWellID, ;
		                    cownerid, ;
		                    hyear, ;
		                    hperiod, ;
		                    cRecType, ;
		                    crunyear_in AS crunyear, ;
		                    nrunno_in AS nrunno, ;
		                    SUM(IIF(cTypeInv = 'W', nNetCheck, 0000000.00)) AS nworking, ;
		                    SUM(IIF(cTypeInv # 'W', nNetCheck, 0000000.00)) AS nroyalty ;
		                FROM disbhist ;
		                WHERE NOT EMPTY(csusptype) ;
		                    AND crunyear_in + PADL(TRANSFORM(nrunno_in), 3, '0') IN ;
		                    (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
		                         WHERE BETWEEN(dacctdate, ldDate1, ldDate2) ;
		                         FROM sysctl) ;
		                    AND cwellid in (SELECT cid FROM selected) ;
		                    AND lProgram = .F. ;
		                    AND lManual  = .F. ;
		                    AND cRecType # 'P' ;
		                INTO CURSOR temphista ;
		                ORDER BY cWellID, cownerid, crunyear_in, nrunno_in, hyear, hperiod, cRecType ;
		                GROUP BY cWellID, cownerid, crunyear_in, nrunno_in, hyear, hperiod, cRecType
		
		            SELECT  cWellID, ;
		                    hyear, ;
		                    cOwnerid, ;
		                    hperiod, ;
		                    cRecType, ;
		                    crunyear_in AS crunyear, ;
		                    nrunno_in AS nrunno, ;
		                    SUM(IIF(cTypeInv = 'W', nNetCheck, 0000000.00)) AS nworking, ;
		                    SUM(IIF(cTypeInv # 'W', nNetCheck, 0000000.00)) AS nroyalty ;
		                FROM suspense ;
		                WHERE crunyear_in + PADL(TRANSFORM(nrunno_in), 3, '0') IN ;
		                    (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') ;
		                         WHERE BETWEEN(dacctdate, ldDate1, ldDate2) ;
		                         FROM sysctl) ;
		                    AND cwellid in (SELECT cid FROM selected) ;
		                    AND lProgram = .F. ;
		                    AND lManual  = .F. ;
		                    AND cRecType # 'P' ;
		                INTO CURSOR temphistb ;
		                ORDER BY cWellID, cownerid, crunyear_in, nrunno_in, hyear, hperiod, cRecType ;
		                GROUP BY cWellID, cownerid, crunyear_in, nrunno_in, hyear, hperiod, cRecType
		         ENDIF
		         SELECT temphist
		         APPEND FROM DBF('temphista')
		         APPEND FROM DBF('temphistb')
		         SELECT  cWellID, ;
		                 hyear, ;
		                 hperiod, ;
		                 cRecType, ;
		                 crunyear, ;
		                 nrunno, ;
		                 SUM(nworking) AS nworking, ;
		                 SUM(nroyalty) AS nroyalty ;
		             FROM temphist ;
		             INTO CURSOR temphist1 ;
		             ORDER BY cWellID, crunyear, nrunno, hyear, hperiod, cRecType ;
		             GROUP BY cWellID, crunyear, nrunno, hyear, hperiod, cRecType
		         SET TALK OFF
		         SELECT tempyears
		         SCAN
		            SCATTER MEMVAR
		            swselect('wellhist')
		            UPDATE  wellhist SET nRoyInt = 0, ;
		                    nWrkInt = 0 ;
		                WHERE BETWEEN(cWellID, lcWell1, lcWell2) ;
		                    AND BETWEEN(hdate, ldDate1, ldDate2)
		         ENDSCAN
		
		         lnMax      = RECCOUNT('temphist')
		         lnProgress = 1
		         oProgress  = THISFORM.omessage.progressbarex('Updating royalty and working interest amounts...')
		         oProgress.setprogressrange(0, lnMax)
		         SELECT temphist1
		         SCAN
		            SCATTER MEMVAR
		            oProgress.setprogressmessage('Processing Owner Amounts for Well: ' + TRIM(m.cWellID) + ' Period: ' + m.hyear + '/' + m.hperiod)
		            oProgress.updateprogress(lnProgress)
		            lnProgress = lnProgress + 1
		            SELECT wellhist
		            SET ORDER TO wellhist
		            IF SEEK(m.cWellID + PADL(TRANSFORM(m.nrunno), 3, '0') + m.crunyear + m.hyear + m.hperiod + m.cRecType)
		               WAIT WIND NOWAIT 'Processing Well: ' + TRIM(m.cWellID) + ' Period: ' + m.hyear + '/' + m.hperiod
		               REPLACE nRoyInt WITH nRoyInt + m.nroyalty, ;
		                  nWrkInt WITH nWrkInt + m.nworking
		            ENDIF
		         ENDSCAN
		         oProgress.closeProgress()
		   ENDCASE
		
		   SELECT wellhist
		   = TABLEUPDATE(.T.)
		
		   WAIT CLEAR
		
		   IF USED('temphist')
		      USE IN temphist
		   ENDIF
		
		   llReturn = .T.
		
		CATCH TO loError
		   DO errorlog WITH 'CalcPaidOwners', loError.LINENO, 'Production Summary', loError.ERRORNO, loError.MESSAGE
		   MESSAGEBOX('Unable to process the report at this time. Check the System Log found under Other Reports for more information.', 16, 'Problem Encountered')
		   llReturn = .F.
		ENDTRY
		
		RETURN llReturn
	ENDPROC

	PROCEDURE Init
		DODEFAULT()
		
		SELECT wells
		SET ORDER TO cWellID
		
		GO TOP
		THISFORM.swrptlook1.txtBegName.VALUE = cwellname
		THISFORM.swrptlook1.txtBegID.VALUE = cWellID
		
		GO BOTTOM
		THISFORM.swrptlook1.txtEndName.VALUE = cwellname
		THISFORM.swrptlook1.txtEndID.VALUE = cWellID
		
		THISFORM.swdate1.ENABLED = .F.
		THISFORM.swdate2.ENABLED = .F.
		ldDate1 = DATE()
		ldDate2 = DATE()
		
		THISFORM.chkReportByMonth.VALUE = .F.
		
		THISFORM.chklActive.value = .F.
		THISFORM.chklIncDirect.value = .F.
		
		thisform.swperiod1.value = '01'
		thisform.swperiod2.value = '12'
		
		
	ENDPROC

	PROCEDURE chkSelected.Click
		IF this.Value
		   DO FORM commonsource\selected-ids WITH 'WELL' LINKED 
		   lnCount = RECCOUNT('selected')
		   thisform.lblselected.Caption = TRANSFORM(lnCount) + ' Wells Selected'
		   thisform.lblselected.Visible = .T.
		   thisform.lblbegID.Visible = .F.
		   thisform.lblendID.Visible = .F.
		   thisform.swrptlook1.Visible = .F.
		ELSE
		   thisform.lblselected.Visible = .F.
		   thisform.lblbegID.Visible = .T.
		   thisform.lblendID.Visible = .T.
		   thisform.swrptlook1.Visible = .T.
		ENDIF 
	ENDPROC

	PROCEDURE opgGroupBy.Init
		this.value = 1
	ENDPROC

	PROCEDURE opgGroupBy.Option1.GotFocus
		THISFORM.opgGroupBy.VALUE = 1
		
	ENDPROC

	PROCEDURE opgGroupBy.Option2.GotFocus
		THISFORM.opgGroupBy.VALUE = 2
		
	ENDPROC

	PROCEDURE opgRange.AccDate.Click
		THISFORM.swyear1.enabled = .f.
		THISFORM.swyear2.enabled = .f.
		THISFORM.swperiod1.enabled = .f.
		THISFORM.swperiod2.enabled = .f.
		THISFORM.swdate1.enabled = .t.
		THISFORM.swdate2.enabled = .t.
		
		DODEFAULT()
	ENDPROC

	PROCEDURE opgRange.AccDate.GotFocus
		THISFORM.opgRange.VALUE = 3
		THIS.CLICK()
		
	ENDPROC

	PROCEDURE opgRange.AccYear.Click
		THISFORM.swyear1.enabled = .t.
		THISFORM.swyear2.enabled = .t.
		THISFORM.swperiod1.enabled = .t.
		THISFORM.swperiod2.enabled = .t.
		THISFORM.swdate1.enabled = .f.
		THISFORM.swdate2.enabled = .f.
		
		DODEFAULT()
	ENDPROC

	PROCEDURE opgRange.AccYear.GotFocus
		THISFORM.opgRange.VALUE = 2
		THIS.CLICK()
		
	ENDPROC

	PROCEDURE opgRange.ProdYear.Click
		THISFORM.swyear1.enabled = .t.
		THISFORM.swyear2.enabled = .t.
		THISFORM.swperiod1.enabled = .t.
		THISFORM.swperiod2.enabled = .t.
		THISFORM.swdate1.enabled = .f.
		THISFORM.swdate2.enabled = .f.
		
		DODEFAULT()
	ENDPROC

	PROCEDURE opgRange.ProdYear.GotFocus
		THISFORM.opgRange.VALUE = 1
		THIS.CLICK()
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cwellid,cwellname,cgroup,cwellstat'
		DO FORM ..\custom\picklist WITH 'Wells', lcList, thisform.swrptlook1.txtbegid.value, 4
		
		IF llOK
		   thisform.swrptlook1.txtBegId.value = cwellid
		   thisform.swrptlook1.txtBegName.value = cwellname
		   thisform.swrptlook1.txtBegId.refresh()
		   thisform.swrptlook1.txtBegName.refresh()
		ENDIF   
		
		thisform.setnextcontrol(thisform.swrptlook1.txtBegId)
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cwellid,cwellname,cgroup,cwellstat'
		DO FORM ..\custom\picklist WITH 'Wells', lcList, thisform.swrptlook1.txtendid.value, 4
		
		IF llOK
		   thisform.swrptlook1.txtEndId.value = cwellid
		   thisform.swrptlook1.txtEndName.value = cwellname
		   thisform.swrptlook1.txtEndId.refresh()
		   thisform.swrptlook1.txtEndName.refresh()
		ENDIF   
		
		thisform.setnextcontrol(thisform.swrptlook1.txtEndId)
		
	ENDPROC

ENDDEFINE
