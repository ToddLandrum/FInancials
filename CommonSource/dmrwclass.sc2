*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="dmrwclass.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor10" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor11" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor12" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor13" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 640
	Left = -4
	Name = "Dataenvironment"
	Top = 57
	Width = 653

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "groups", ;
		CursorSource = "groups", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 8, ;
		Name = "Cursor1", ;
		Top = 14, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor10' AS cursor WITH ;
		Alias = "wellinv", ;
		CursorSource = "wellinv", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 22, ;
		Name = "Cursor10", ;
		Top = 387, ;
		Width = 101
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor11' AS cursor WITH ;
		Alias = "suspense", ;
		CursorSource = "suspense", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 410, ;
		Name = "Cursor11", ;
		Top = 394, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor12' AS cursor WITH ;
		Alias = "disbhist", ;
		CursorSource = "disbhist", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 447, ;
		Name = "Cursor12", ;
		Top = 239, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor13' AS cursor WITH ;
		Alias = "ownpcts", ;
		CursorSource = "ownpcts", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 179, ;
		Name = "Cursor13", ;
		Top = 427, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 151, ;
		Name = "Cursor2", ;
		Top = 33, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "expense", ;
		CursorSource = "expense", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 296, ;
		Name = "Cursor3", ;
		Top = 7, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "income", ;
		CursorSource = "income", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 98, ;
		Left = 8, ;
		Name = "Cursor4", ;
		Top = 160, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "expcat", ;
		CursorSource = "expcat", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 153, ;
		Name = "Cursor5", ;
		Top = 163, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "taxcodes", ;
		CursorSource = "taxcodes", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 324, ;
		Name = "Cursor6", ;
		Top = 128, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor7' AS cursor WITH ;
		Alias = "sysctl", ;
		CursorSource = "sysctl", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 467, ;
		Name = "Cursor7", ;
		Top = 11, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor8' AS cursor WITH ;
		Alias = "wellhist", ;
		CursorSource = "wellhist", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 84, ;
		Left = 154, ;
		Name = "Cursor8", ;
		Top = 295, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor9' AS cursor WITH ;
		Alias = "investor", ;
		CursorSource = "investor", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 273, ;
		Name = "Cursor9", ;
		Top = 279, ;
		Width = 101
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formdmrwclass AS frmrptcriteria OF "..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblBegPeriod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swperiod1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swyear1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEndPeriod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblGroup" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEndID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBegID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBegYear" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swperiod2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swgroup1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swyear2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEndYear" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="opgPeriod" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkOwner" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklDetail" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblClass" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboClass" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDateRange" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Runcombo1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="ChklShowFull" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="swdate1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="swdate2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblOwnerCount" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSelected" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSelected" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: builddetail		&& Builds the detail report by well
		*m: builddetailowner
		*m: buildseparate		&& Show expense codes (up to 9) totals
		*m: buildseparateowner		&& Show expense codes separate (up to 9) by owner
		*m: buildsummary		&& Builds the report by well.
		*m: buildsummaryowner
		*p: lexcludeall
		*p: nsaveddatasess		&& The original datasetssion id
	*</DefinedPropArrayMethod>

	Caption = "Well Expenses by Tax Section"
	DataSession = 2
	DoCreate = .T.
	Height = 525
	HelpContextID = 210
	Name = "FormDmrwclass"
	Width = 479
	Swrptcriteriabuttons1.chkExport.Alignment = 0
	Swrptcriteriabuttons1.chkExport.Name = "chkExport"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.cmdPreview.Name = "cmdPreview"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 112
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 28
	Swrptcriteriabuttons1.Top = 441
	Swrptcriteriabuttons1.ZOrderSet = 0

	ADD OBJECT 'cboClass' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		Height = 20, ;
		Left = 147, ;
		Name = "cboClass", ;
		TabIndex = 26, ;
		Top = 408, ;
		Visible = .F., ;
		Width = 216
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'chklDetail' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Show Detail", ;
		Left = 110, ;
		Name = "chklDetail", ;
		TabIndex = 24, ;
		Top = 359, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'ChklShowFull' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Show All Expense Sections Separately", ;
		Left = 240, ;
		Name = "ChklShowFull", ;
		TabIndex = 25, ;
		Top = 359, ;
		Value = .F., ;
		Visible = .T.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkOwner' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Calculate for specific owners", ;
		Left = 150, ;
		Name = "chkOwner", ;
		TabIndex = 21, ;
		Top = 269
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSelected' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Choose Selected Wells", ;
		Left = 179, ;
		Name = "chkSelected", ;
		TabIndex = 16, ;
		Top = 125, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'lblBegID' AS lbllabelcustom WITH ;
		Caption = "First Well:", ;
		Height = 16, ;
		Left = 89, ;
		Name = "lblBegID", ;
		TabIndex = 18, ;
		Top = 160, ;
		Width = 49, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblBegPeriod' AS lbllabelcustom WITH ;
		Caption = "Beginning Period:", ;
		Height = 16, ;
		Left = 217, ;
		Name = "lblBegPeriod", ;
		TabIndex = 7, ;
		Top = 68, ;
		Width = 85, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblBegYear' AS lbllabelcustom WITH ;
		Alignment = 1, ;
		Caption = "Beginning Year:", ;
		Height = 16, ;
		Left = 59, ;
		Name = "lblBegYear", ;
		TabIndex = 6, ;
		Top = 68, ;
		Width = 79, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblClass' AS lbltextcustom WITH ;
		Caption = "Section:", ;
		Left = 101, ;
		Name = "lblClass", ;
		TabIndex = 27, ;
		Top = 410, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblDateRange' AS lbllabelcustom WITH ;
		Caption = "Date Range:", ;
		Left = 77, ;
		Name = "lblDateRange", ;
		TabIndex = 10, ;
		Top = 79, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblEndID' AS lbllabelcustom WITH ;
		Caption = "Last Well:", ;
		Height = 16, ;
		Left = 89, ;
		Name = "lblEndID", ;
		TabIndex = 20, ;
		Top = 211, ;
		Width = 49, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblEndPeriod' AS lbllabelcustom WITH ;
		Caption = "Ending Period:", ;
		Height = 16, ;
		Left = 232, ;
		Name = "lblEndPeriod", ;
		TabIndex = 15, ;
		Top = 95, ;
		Width = 70, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblEndYear' AS lbllabelcustom WITH ;
		Caption = "Ending Year:", ;
		Height = 16, ;
		Left = 74, ;
		Name = "lblEndYear", ;
		TabIndex = 14, ;
		Top = 95, ;
		Width = 64, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblGroup' AS lbllabelcustom WITH ;
		Caption = "Group:", ;
		Height = 16, ;
		Left = 103, ;
		Name = "LblGroup", ;
		TabIndex = 23, ;
		Top = 315, ;
		Width = 35, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Report By:", ;
		Left = 85, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 2, ;
		Top = 7
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "-", ;
		FontBold = .T., ;
		Height = 16, ;
		Left = 251, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 11, ;
		Top = 80, ;
		Visible = .F., ;
		Width = 6
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblOwnerCount' AS lbllabelcustom WITH ;
		Caption = "No Owners Selected", ;
		Left = 176, ;
		Name = "lblOwnerCount", ;
		TabIndex = 29, ;
		Top = 288
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSelected' AS lbllabelcustom WITH ;
		Caption = "All IDs Selected", ;
		ForeColor = 0,0,255, ;
		Left = 178, ;
		Name = "lblSelected", ;
		TabIndex = 19, ;
		Top = 198, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'opgPeriod' AS opgoptiongroupcustom WITH ;
		AutoSize = .F., ;
		BorderStyle = 0, ;
		ButtonCount = 3, ;
		Height = 67, ;
		Left = 150, ;
		Name = "opgPeriod", ;
		TabIndex = 1, ;
		Top = 0, ;
		Width = 180, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "Production Period Range", ;
		Option1.FontSize = 8, ;
		Option1.Height = 16, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Top = 5, ;
		Option1.Width = 136, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "Run Number", ;
		Option2.FontSize = 8, ;
		Option2.Height = 16, ;
		Option2.Left = 5, ;
		Option2.Name = "Option2", ;
		Option2.Top = 25, ;
		Option2.Width = 77, ;
		Option3.AutoSize = .T., ;
		Option3.Caption = "Accounting Date Range", ;
		Option3.FontSize = 8, ;
		Option3.Height = 16, ;
		Option3.Left = 5, ;
		Option3.Name = "Option3", ;
		Option3.Top = 45, ;
		Option3.Width = 132
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'Runcombo1' AS runcombo WITH ;
		cshowwhat = B, ;
		Height = 20, ;
		Left = 148, ;
		Name = "Runcombo1", ;
		TabIndex = 4, ;
		Top = 66, ;
		Visible = .F., ;
		Width = 264
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'swdate1' AS dpk WITH ;
		ControlSource = "", ;
		Height = 20, ;
		Left = 148, ;
		Name = "swdate1", ;
		TabIndex = 8, ;
		Top = 78, ;
		Visible = .F., ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />

	ADD OBJECT 'swdate2' AS dpk WITH ;
		ControlSource = "", ;
		Height = 20, ;
		Left = 266, ;
		Name = "swdate2", ;
		TabIndex = 9, ;
		Top = 78, ;
		Visible = .F., ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />

	ADD OBJECT 'Swgroup1' AS swgroup WITH ;
		Height = 20, ;
		Left = 147, ;
		Name = "Swgroup1", ;
		TabIndex = 22, ;
		Top = 313, ;
		Width = 216, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Swperiod1' AS swperiod WITH ;
		Left = 309, ;
		MaxLength = 2, ;
		Name = "Swperiod1", ;
		TabIndex = 5, ;
		Top = 66, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'Swperiod2' AS swperiod WITH ;
		Left = 309, ;
		MaxLength = 2, ;
		Name = "Swperiod2", ;
		TabIndex = 13, ;
		Top = 93, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		Left = 147, ;
		Name = "Swrptlook1", ;
		TabIndex = 17, ;
		Top = 155, ;
		ZOrderSet = 5, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		txtBegID.clistexpression = wells.cwellid, ;
		txtBegID.clistworkarea = wells, ;
		txtBegID.Name = "txtBegID", ;
		TxtBegName.Name = "TxtBegName", ;
		txtEndID.clistexpression = wells.cwellid, ;
		txtEndID.clistworkarea = wells, ;
		txtEndID.Name = "txtEndID", ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />

	ADD OBJECT 'Swyear1' AS swyear WITH ;
		InputMask = "9999", ;
		Left = 147, ;
		MaxLength = 4, ;
		Name = "Swyear1", ;
		TabIndex = 3, ;
		Top = 66, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'Swyear2' AS swyear WITH ;
		InputMask = "9999", ;
		Left = 147, ;
		MaxLength = 4, ;
		Name = "Swyear2", ;
		TabIndex = 12, ;
		Top = 93, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE builddata
		LOCAL lcGroup, lcBegID, lcEndID, lcBegYear, lcEndYear, lcBegPeriod, lcEndPeriod, lcCriteria, lcClass
		priv lcWhere1, lcWhere2, lcWhere3, lcWhere4, lcWhere5, lcWhere6
		LOCAL lDelete, lcCount, lcDate1, lcDate2, lcOwner, lcRunYear, lcType
		LOCAL llTooManyCodes, lnAmount, lnCount, lnRunNo, lcOwnName, llReturn
		LOCAL tdDate1, tdDate2, llByOwner, llShowDetail, llSeparateSections, llSelected
		
		llReturn = .T.
		
		TRY
		   lnStart = SECONDS()
		   swlogging('Well Exp by Class', .T., lnStart)
		   
		   swclose('classtmp')
		   swclose('classtemp')
		   swclose('exptmp')
		   swclose('exptemp')
		   swclose('oetmp')
		   swclose('ictmp')
		   swclose('tctmp')
		   swclose('lctmp')
		   swclose('mitmp')
		   swclose('taxtmp')
		   swclose('inctmp')
		
		*  Give warning about expcats with missing tax codes.
		   lnCount = 0
		   SELECT expcat
		   SCAN FOR EMPTY(cTaxCode)
		      lnCount = lnCount + 1
		   ENDSCAN
		   IF lnCount > 0
		      MESSAGEBOX('There are ' + TRANSFORM(lnCount) + ;
		           ' expense codes without an expense section specified. ' + ;
		           'Those codes will not be included on this report.', 48, 'Missing Expense Sections')
		   ENDIF
		
		   lcGroup            = SUBSTR(THISFORM.swGroup1.VALUE, 1, 2)
		   lcBegID            = THISFORM.Swrptlook1.txtBegID.VALUE
		   lcEndID            = THISFORM.Swrptlook1.txtEndID.VALUE
		   lcBegYear          = THISFORM.swYear1.VALUE
		   lcEndYear          = THISFORM.swYear2.VALUE
		   lcBegPeriod        = THISFORM.swPeriod1.VALUE
		   lcEndPeriod        = THISFORM.swPeriod2.VALUE
		   lnTimeRange        = THISFORM.opgperiod.VALUE
		   lcRunYear          = THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID, 2)
		   lnRunNo            = INT(VAL(THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID, 3)))
		   lcType             = THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID, 6)
		   lcClass            = THISFORM.cboClass.VALUE
		   lcDate1            = ALLT(DTOC(THISFORM.swDate1.VALUE))
		   lcDate2            = ALLT(DTOC(THISFORM.swDate2.VALUE))
		   tdDate1            = THISFORM.swDate1.VALUE
		   tdDate2            = THISFORM.swDate2.VALUE
		   llSeparateSections = THISFORM.chklShowFull.VALUE
		   llShowDetail       = THISFORM.chklDetail.VALUE
		   llByOwner          = THISFORM.chkOwner.VALUE
		   llSelected         = thisform.chkSelected.Value 
		
		   IF lnTimeRange = 2  &&  By run number, so get the group from the dropdown
		      lcGroup = THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID, 4)
		   ENDIF
		   
		   IF NOT llSelected
		      SELECT cwellid as cid FROM wells ;
		         WHERE BETWEEN(cwellid,lcBegID,lcEndID) ;
		         INTO CURSOR selected ;
		         ORDER BY cid
		   ENDIF 
		
		   THISFORM.chkOwner.VALUE = .F.
		
		   STORE '' TO m.cowner, m.cownername
		
		   swselect('ownpcts')
		   SET ORDER TO ciddisb
		
		   IF EMPTY(lcType)
		      lcType = 'R'
		   ENDIF
		
		   IF llSeparateSections
		      CREATE CURSOR classtmp  ;
		         (cwellid     c(10),     ;
		           cwellname  c(40),    ;
		           cgroup     c(2),     ;
		           cowner     c(10), ;
		           ctypeinv   c(1), ;
		           cownername c(40), ;
		           n1        N(12, 2),  ;
		           n2        N(12, 2),  ;
		           n3        N(12, 2),  ;
		           n4        N(12, 2),  ;
		           n5        N(12, 2),  ;
		           n6        N(12, 2),  ;
		           n7        N(12, 2),  ;
		           n8        N(12, 2),  ;
		           n9        N(12, 2),  ;
		           c1        c(30),  ;
		           c2        c(30),  ;
		           c3        c(30),  ;
		           c4        c(30),  ;
		           c5        c(30),  ;
		           c6        c(30),  ;
		           c7        c(30),  ;
		           c8        c(30),  ;
		           c9        c(30))
		      INDEX ON cowner + cwellid+ctypeinv TAG cwellid
		   ELSE
		      CREATE CURSOR classtmp  ;
		         (cwellid     c(10),     ;
		           cwellname  c(40),    ;
		           cgroup     c(2),     ;
		           cowner     c(10), ;
		           ctypeinv   C(1), ;
		           cownername c(40), ;
		           nOE        N(12, 2),  ;
		           nIC        N(12, 2),  ;
		           nTC        N(12, 2),  ;
		           nLC        N(12, 2),  ;
		           nMI        N(12, 2),  ;
		           nRev       N(12, 2),  ;
		           nTotTax    N(12, 2))
		      INDEX ON cowner + cwellid+ctypeinv TAG cwellid
		   ENDIF && llSeparateSections
		
		   THISFORM.cTitle1    = 'Well Expenses by Tax Section'
		   THISFORM.cSortOrder = 'Well ID'
		
		   IF lcGroup = '**'  &&  If reporting for all groups
		      lcWhere1                 = 'wells.cGroup in(select cGroup from groups) AND wells.cgroup = groups.cGroup'
		      THISFORM.cSelectCriteria = 'All Groups'
		   ELSE  &&  Specific Group
		      lcWhere1                 = 'Wells.cGroup = lcGroup AND lcGroup = groups.cgroup'
		      THISFORM.cSelectCriteria = 'Group ' + lcGroup
		   ENDIF && lcGroup = '**'
		
		   DO CASE
		      CASE lnTimeRange = 1  &&  Period Range
		         THISFORM.cTitle2 = 'For Period Range: ' + lcBegYear + '/' + lcBegPeriod + ' - ' + lcEndYear + '/' + lcEndPeriod
		         lcWhere2         = 'between(expense.cyear+expense.cPeriod,lcBegYear+lcBegPeriod,lcEndYear+lcEndPeriod)'
		         lcWhere3         = 'between(disbhist.hyear+disbhist.hPeriod,lcBegYear+lcBegPeriod,lcEndYear+lcEndPeriod)'
		         lcWhere4         = 'between(wellhist.hyear+wellhist.hPeriod,lcBegYear+lcBegPeriod,lcEndYear+lcEndPeriod)'
		         lcWhere5         = 'between(exptemp.cYear+exptemp.cPeriod,lcBegYear+lcBegPeriod,lcEndYear+lcEndPeriod)'
		         lcWhere6         = 'between(suspense.hyear+suspense.hPeriod,lcBegYear+lcBegPeriod,lcEndYear+lcEndPeriod)'
		
		         IF llByOwner
					SELECT  disbhist.cwellid, ;
							disbhist.cownerid AS cowner, ;
							disbhist.ctypeinv, ;
							investor.cownname AS cownername, ;
							wells.cwellname, ;
							SPACE(30) AS cdesc ;
						FROM disbhist ;
						JOIN investor ;
							ON disbhist.cownerid == investor.cownerid ;
						JOIN wells    ;
							ON disbhist.cwellid == wells.cwellid ;
						WHERE &lcWhere3 ;
						    AND disbhist.cwellid in (SELECT cid FROM selected) ;
							AND disbhist.cownerid IN (SELECT  cownerid ;
														  FROM usersel) ;
						INTO CURSOR welltmp  ;
						ORDER BY disbhist.cownerid, disbhist.cwellid, disbhist.ctypeinv ;
						GROUP BY disbhist.cownerid, disbhist.cwellid, disbhist.ctypeinv
		
					SELECT  suspense.cwellid, ;
							suspense.cownerid AS cowner, ;
							suspense.ctypeinv, ;
							investor.cownname AS cownername, ;
							wells.cwellname, ;
							SPACE(30) AS cdesc ;
						FROM suspense ;
						JOIN investor ;
							ON suspense.cownerid == investor.cownerid ;
						JOIN wells    ;
							ON suspense.cwellid == wells.cwellid ;
						WHERE &lcWhere6 ;
						    AND suspense.cwellid in (SELECT cid FROM selected) ;
							AND suspense.cownerid IN (SELECT  cownerid ;
														  FROM usersel) ;
						INTO CURSOR welltmp1  ;
						ORDER BY suspense.cownerid, suspense.cwellid, suspense.ctypeinv ;
						GROUP BY suspense.cownerid, suspense.cwellid, suspense.ctypeinv
		         ELSE
					SELECT  wells.cwellid,  ;
							cwellname,  ;
							wells.cgroup,  ;
							cdesc  ;
						FROM wells, groups  ;
						INTO CURSOR welltmp  ;
						WHERE wells.cwellid in (select cid FROM selected) ;
							AND &lcWhere1
		         ENDIF && llByOwner
		
		      CASE lnTimeRange = 2  && Runno
		         IF lnRunNo <> 0
		            THISFORM.cTitle2 = 'For Run: ' + SUBSTR(THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID, 1), 5)
		         ELSE
		            THISFORM.cTitle2 = 'For a New Run'
		         ENDIF
		
		         IF lcType = 'R'  && Revenue run
		            lcWhere2 = 'expense.cRunYearRev = lcRunYear and expense.nRunNoRev = lnRunNo'
		         ELSE  &&  JIB Run
		            lcWhere2 = 'expense.cRunYearJIB = lcRunYear and expense.nRunNoJIB = lnRunNo'
		         ENDIF
		         lcWhere3 = 'disbhist.cRunYear = lcrunYear and disbhist.nRunNo = lnRunNo and crectype = lctype'
		         lcWhere4 = 'wellhist.cRunYear = lcrunYear and wellhist.nRunNo = lnRunNo and crectype = lctype'
		         IF lcType = 'R'  && Revenue run
		            lcWhere5 = 'exptemp.nRunNoRev = lnRunNo and exptemp.cRunYearRev = lcRunYear'
		         ELSE  &&  JIB Run
		            lcWhere5 = 'exptemp.nRunNoJIB = lnRunNo and exptemp.cRunYearJIB = lcRunYear'
		         ENDIF
		         lcWhere6 = 'suspense.cRunYear_in = lcrunYear and suspense.nRunNo_In = lnRunNo'
		
		         IF llByOwner
					SELECT  disbhist.cwellid, ;
							disbhist.cownerid AS cowner, ;
							disbhist.ctypeinv, ;
							investor.cownname AS cownername, ;
							wells.cwellname, ;
							SPACE(30) AS cdesc ;
						FROM disbhist ;
						JOIN investor ;
							ON disbhist.cownerid == investor.cownerid ;
						JOIN wells    ;
							ON disbhist.cwellid == wells.cwellid ;
						WHERE &lcWhere3 ;
						    AND disbhist.cwellid in (SELECT cid FROM selected) ;
							AND disbhist.cownerid IN (SELECT  cownerid ;
														  FROM usersel) ;
						INTO CURSOR welltmp  ;
						ORDER BY disbhist.cownerid, disbhist.cwellid, disbhist.ctypeinv ;
						GROUP BY disbhist.cownerid, disbhist.cwellid, disbhist.ctypeinv
					SELECT  suspense.cwellid, ;
							suspense.cownerid AS cowner, ;
							suspense.ctypeinv, ;
							investor.cownname AS cownername, ;
							wells.cwellname, ;
							SPACE(30) AS cdesc ;
						FROM suspense ;
						JOIN investor ;
							ON suspense.cownerid == investor.cownerid ;
						JOIN wells    ;
							ON suspense.cwellid == wells.cwellid ;
						WHERE &lcWhere6 ;
						    AND suspense.cwellid in (SELECT cid FROM selected) ;
							AND suspense.cownerid IN (SELECT  cownerid ;
														  FROM usersel) ;
						INTO CURSOR welltmp1  ;
						ORDER BY suspense.cownerid, suspense.cwellid, suspense.ctypeinv ;
						GROUP BY suspense.cownerid, suspense.cwellid, suspense.ctypeinv
		         ELSE
					SELECT  wells.cwellid,  ;
							cwellname,  ;
							wells.cgroup,  ;
							cdesc  ;
						FROM wells, groups  ;
						INTO CURSOR welltmp  ;
						WHERE wells.cwellid in (SELECT cid FROM selected) ;
							AND &lcWhere1
		         ENDIF && llByOwner
		
		      CASE lnTimeRange = 3  && Accounting Date Range
		         THISFORM.cTitle2 = 'For Date Range: ' + lcDate1 + ' - ' + lcDate2
		         lcWhere2 = "((expense.crunyearrev+PADL(TRANSFORM(expense.nrunnorev),3,'0')+'R' in (select crunyear+PADL(TRANSFORM(nrunno),3,'0')+ctypeclose from " + ;
		            "sysctl where BETWEEN(dacctdate,tdDate1,tdDate2))) OR " + ;
		            "(expense.crunyearjib+PADL(TRANSFORM(expense.nrunnojib),3,'0')+'J' in (select crunyear+PADL(TRANSFORM(nrunno),3,'0')+ctypeclose from " + ;
		            "sysctl where BETWEEN(dacctdate,tdDate1,tdDate2))))"
		         lcWhere3 = "((disbhist.crunyear+PADL(TRANSFORM(disbhist.nrunno),3,'0')+disbhist.crectype in (select crunyear+PADL(TRANSFORM(nrunno),3,'0')+ctypeclose from " + ;
		            "sysctl where BETWEEN(dacctdate,tdDate1,tdDate2)) or " + ;
		            "disbhist.crunyear_in+PADL(TRANSFORM(disbhist.nrunno_in),3,'0')+disbhist.crectype in (select crunyear+PADL(TRANSFORM(nrunno),3,'0')+ctypeclose from " + ;
		            "sysctl where BETWEEN(dacctdate,tdDate1,tdDate2))))"
		         lcWhere4 = "wellhist.crunyear+PADL(TRANSFORM(wellhist.nrunno),3,'0')+wellhist.crectype in (select crunyear+PADL(TRANSFORM(nrunno),3,'0')+ctypeclose from " + ;
		            "sysctl where BETWEEN(dacctdate,tdDate1,tdDate2))"
		         lcWhere5 = "((exptemp.crunyearrev+PADL(TRANSFORM(exptemp.nrunnorev),3,'0')+'R' in (select crunyear+PADL(TRANSFORM(nrunno),3,'0')+ctypeclose from " + ;
		            "sysctl where BETWEEN(dacctdate,tdDate1,tdDate2))) OR " + ;
		            "(exptemp.crunyearjib+PADL(TRANSFORM(exptemp.nrunnojib),3,'0')+'J' in (select crunyear+PADL(TRANSFORM(nrunno),3,'0')+ctypeclose from " + ;
		            "sysctl where BETWEEN(dacctdate,tdDate1,tdDate2))))"
		         lcWhere6 = "suspense.crunyear_in+PADL(TRANSFORM(suspense.nrunno_in),3,'0')+suspense.crectype in (select crunyear+PADL(TRANSFORM(nrunno),3,'0')+ctypeclose from " + ;
		            "sysctl where BETWEEN(dacctdate,tdDate1,tdDate2))"
		
		         IF llByOwner
					SELECT  disbhist.cwellid, ;
							disbhist.cownerid AS cowner, ;
							disbhist.ctypeinv, ;
							investor.cownname AS cownername, ;
							wells.cwellname, ;
							SPACE(30) AS cdesc ;
						FROM disbhist ;
						JOIN investor ;
							ON disbhist.cownerid == investor.cownerid ;
						JOIN wells    ;
							ON disbhist.cwellid == wells.cwellid ;
						WHERE BETWEEN(disbhist.cwellid, lcBegID, lcEndID) ;
						   AND &lcWhere3 ;
						   AND disbhist.cwellid in (SELECT cid FROM selected) ; 
							AND disbhist.cownerid IN (SELECT  cownerid ;
														  FROM usersel) ;
						INTO CURSOR welltmp  ;
						ORDER BY disbhist.cownerid, disbhist.cwellid, disbhist.ctypeinv ;
						GROUP BY disbhist.cownerid, disbhist.cwellid, disbhist.ctypeinv
		
					SELECT  suspense.cwellid, ;
							suspense.cownerid AS cowner, ;
							suspense.ctypeinv, ;
							investor.cownname AS cownername, ;
							wells.cwellname, ;
							SPACE(30) AS cdesc ;
						FROM suspense ;
						JOIN investor ;
							ON suspense.cownerid == investor.cownerid ;
						JOIN wells    ;
							ON suspense.cwellid == wells.cwellid ;
						WHERE BETWEEN(suspense.cwellid, lcBegID, lcEndID) ;
						    AND &lcWhere6 ;
						    AND suspense.cwellid in (SELECT cid FROM selected) ;
							AND suspense.cownerid IN (SELECT  cownerid ;
														  FROM usersel) ;
						INTO CURSOR welltmp1  ;
						ORDER BY suspense.cownerid, suspense.cwellid, ctypeinv ;
						GROUP BY suspense.cownerid, suspense.cwellid, ctypeinv
		         ELSE
					SELECT  wells.cwellid,  ;
							cwellname,  ;
							SPACE(10) AS cowner, ;
							SPACE(40) AS cownername, ;
							wells.cgroup,  ;
							cdesc  ;
						FROM wells, groups  ;
						INTO CURSOR welltmp  ;
						WHERE wells.cwellid in (SELECT cid FROM selected) ;
							AND &lcWhere1
		         ENDIF && llByOwner
		   ENDCASE
		
		   SELECT classtmp
		   APPEND FROM DBF('welltmp')
		   IF llByOwner
		      SELECT welltmp1
		      SCAN
		         SCATTER memvar
		         SELECT classtmp
		         LOCATE FOR cowner==m.cowner AND cwellid==m.cwellid AND ctypeinv==m.ctypeinv
		         IF NOT FOUND()
		            INSERT INTO classtmp FROM memvar
		         ENDIF 
		      ENDSCAN    
		   ENDIF    
		
		   WAIT WIND NOWAIT 'Building Report....Please Wait'
		
		   DO CASE
		      CASE llShowDetail AND llByOwner
		         llReturn = THISFORM.BuildDetailOwner(lcWhere1, lcWhere2, lcWhere3, lcWhere4, lcWhere5, lcWhere6)
		
		      CASE llShowDetail
		         llReturn = THISFORM.BuildDetail(lcWhere1, lcWhere2, lcWhere3, lcWhere4, lcWhere5, lcWhere6)
		
		      CASE llSeparateSections AND llByOwner
		         llReturn = THISFORM.BuildSeparateOwner(lcWhere1, lcWhere2, lcWhere3, lcWhere4, lcWhere5, lcWhere6)
		
		      CASE llSeparateSections
		         llReturn = THISFORM.BuildSeparate(lcWhere1, lcWhere2, lcWhere3, lcWhere4, lcWhere5, lcWhere6)
		
		      CASE NOT llShowDetail AND NOT llByOwner
		         llReturn = THISFORM.BuildSummary( lcWhere2, lcWhere3, lcWhere4, lcWhere5, lcWhere6)
		
		      CASE NOT llShowDetail AND llByOwner
		         llReturn = THISFORM.BuildSummaryOwner( lcWhere2, lcWhere3, lcWhere4, lcWhere5, lcWhere6)
		
		   ENDCASE
		
		   WAIT CLEAR
		
		   IF llReturn
		      IF llShowDetail
		         THISFORM.cReportName = 'dmrwclass2'
		         THISFORM.cSortOrder  = 'Tax Code, Well ID'
		
		         TRY
		            SELECT exptemp
		            COUNT FOR NOT DELETED() TO lnCount
		            IF lnCount > 0
		               llReturn = .T.
		            ELSE
		               llReturn = .F.
		            ENDIF
		         CATCH
		            llReturn = .F.
		         ENDTRY
		
		      ELSE
		         SELECT classtmp
		         COUNT FOR NOT DELETED() TO lnCount
		         IF lnCount > 0
		            llReturn = .T.
		         ELSE
		            llReturn = .F.
		         ENDIF
		      ENDIF && llShowDetail
		   ENDIF
		
		   THISFORM.lblOwnerCount.CAPTION = 'No owners selected'
		   
		   swlogging('Well Exp by Class', .F., lnStart, SECONDS())
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'BuildData', loError.LINENO, 'DMRWClass', loError.ERRORNO, loError.MESSAGE, '', loError
		   MESSAGEBOX('Unable to process the report at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	ENDPROC

	PROCEDURE builddetail		&& Builds the detail report by well
		LPARAMETERS lcWhere1, lcWhere2, lcWhere3, lcWhere4, lcWhere5, lcWhere6
		LOCAL lcGroup, lcBegID, lcEndID, lcBegYear, lcEndYear, lcBegPeriod, lcEndPeriod, lcCriteria, lcClass
		LOCAL lcWhere, lcWhere2, lcWhere3, lcWhere4, lcOwnName, llReturn
		LOCAL lDelete, lcCount, lcDate1, lcDate2, lcOwner, lcRunYear, lcType, lcWhere5, lcWhere6
		LOCAL llTooManyCodes, lnAmount, lnCount, lnRunNo
		LOCAL tdDate1, tdDate2, llByOwner, llShowDetail, llSeparateSections
		
		llReturn = .T.
		
		TRY
		
		   lcGroup            = SUBSTR(THISFORM.swGroup1.VALUE, 1, 2)
		   lcBegID            = THISFORM.Swrptlook1.txtBegID.VALUE
		   lcEndID            = THISFORM.Swrptlook1.txtEndID.VALUE
		   lcBegYear          = THISFORM.swYear1.VALUE
		   lcEndYear          = THISFORM.swYear2.VALUE
		   lcBegPeriod        = THISFORM.swPeriod1.VALUE
		   lcEndPeriod        = THISFORM.swPeriod2.VALUE
		   lnTimeRange        = THISFORM.opgperiod.VALUE
		   lcRunYear          = THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID, 2)
		   lnRunNo            = INT(VAL(THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID, 3)))
		   lcType             = THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID, 6)
		   lcClass            = THISFORM.cboClass.VALUE
		   lcDate1            = ALLT(DTOC(THISFORM.swDate1.VALUE))
		   lcDate2            = ALLT(DTOC(THISFORM.swDate2.VALUE))
		   tdDate1            = THISFORM.swDate1.VALUE
		   tdDate2            = THISFORM.swDate2.VALUE
		   llSeparateSections = THISFORM.chklShowFull.VALUE
		   llShowDetail       = THISFORM.chklDetail.VALUE
		   llByOwner          = THISFORM.chkOwner.VALUE
		   llSelected         = thisform.chkselected.Value 
		
		   IF lnTimeRange = 2  &&  By run number, so get the group from the dropdown
		      lcGroup = THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID, 4)
		   ENDIF
		
		   THISFORM.chkOwner.VALUE = .F.
		
		   STORE '' TO m.cowner, m.cownername
		
		   swselect('ownpcts')
		   SET ORDER TO ciddisb
		
		   IF EMPTY(lcType)
		      lcType = 'R'
		   ENDIF
		   
		   IF NOT llSelected
		      SELECT cwellid as cid FROM wells ;
		         WHERE BETWEEN(cwellid,lcBegID,lcEndID) ;
		         INTO CURSOR selected ;
		         ORDER BY cid
		   ENDIF 
		
		   SELECT  SPACE(10) AS cowner, SPACE(40) AS cownername, ;
				   expense.namount,  ;  &&  Expense Info
				   expense.cwellid,  ;
				   wells.cwellname,  ;
				   expense.cperiod,  ;
				   expense.cyear,  ;
				   expense.dexpdate,  ;
				   expense.crefid,  ;
				   expense.cpayee,  ;
				   expense.ccateg,  ;
				   expense.ccatcode,  ;
				   expcat.cTaxCode,  ;
				   expense.cexpclass,  ;
				   expense.cownerid,  ;
				   expense.nrunnorev, ;
				   expense.crunyearrev, ;
				   expense.nrunnojib, ;
				   expense.crunyearjib, ;
				   taxcodes.cdesc AS cTaxDesc  ;
			   FROM expense, expcat, taxcodes, wells, groups  ;
			   INTO CURSOR exptemp READWRITE   ;
			   WHERE expense.cwellid = wells.cwellid  ;
				   AND expense.cwellid in (select cid from selected) ;
				   AND &lcWhere1  ;
				   AND expense.ccatcode = expcat.ccatcode  ;
				   AND &lcWhere2  ;
				   AND taxcodes.cTaxCode = expcat.cTaxCode  ;
				   AND IIF(lcClass <> '**', expcat.cTaxCode = lcClass, .T.)
		
		   INDEX ON cwellid + cTaxCode + cyear + cperiod + DTOC(dexpdate) + crefid TAG CLASS
		
		   WAIT CLEAR
		
		   THISFORM.cReportName = 'dmrwclass2'
		   THISFORM.cSortOrder  = 'Tax Code, Well ID'
		
		   TRY
		      SELECT exptemp
		      COUNT FOR NOT DELETED() TO lnCount
		      IF lnCount > 0
		         llReturn = .T.
		      ELSE
		         llReturn = .F.
		      ENDIF
		   CATCH
		      llReturn = .F.
		   ENDTRY
		
		
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'BuildData', loError.LINENO, 'DMRWClass', loError.ERRORNO, loError.MESSAGE, '', loError
		   MESSAGEBOX('Unable to process the report at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	ENDPROC

	PROCEDURE builddetailowner
		LPARAMETERS lcWhere1, lcWhere2, lcWhere3, lcWhere4, lcWhere5, lcWhere6
		LOCAL lcGroup, lcBegID, lcEndID, lcBegYear, lcEndYear, lcBegPeriod, lcEndPeriod, lcCriteria, lcClass
		LOCAL lcWhere, lcOwnName, llReturn
		LOCAL lDelete, lcCount, lcDate1, lcDate2, lcOwner, lcRunYear, lcType
		LOCAL llTooManyCodes, lnAmount, lnCount, lnRunNo
		LOCAL tdDate1, tdDate2, llByOwner, llShowDetail, llSeparateSections
		
		llReturn = .T.
		
		TRY
		
		   lcGroup            = SUBSTR(THISFORM.swGroup1.VALUE, 1, 2)
		   lcBegID            = THISFORM.Swrptlook1.txtBegID.VALUE
		   lcEndID            = THISFORM.Swrptlook1.txtEndID.VALUE
		   lcBegYear          = THISFORM.swYear1.VALUE
		   lcEndYear          = THISFORM.swYear2.VALUE
		   lcBegPeriod        = THISFORM.swPeriod1.VALUE
		   lcEndPeriod        = THISFORM.swPeriod2.VALUE
		   lnTimeRange        = THISFORM.opgperiod.VALUE
		   lcRunYear          = THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID, 2)
		   lnRunNo            = INT(VAL(THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID, 3)))
		   lcType             = THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID, 6)
		   lcClass            = THISFORM.cboClass.VALUE
		   lcDate1            = ALLT(DTOC(THISFORM.swDate1.VALUE))
		   lcDate2            = ALLT(DTOC(THISFORM.swDate2.VALUE))
		   tdDate1            = THISFORM.swDate1.VALUE
		   tdDate2            = THISFORM.swDate2.VALUE
		   llSeparateSections = THISFORM.chklShowFull.VALUE
		   llShowDetail       = THISFORM.chklDetail.VALUE
		   llByOwner          = THISFORM.chkOwner.VALUE
		   llSelected         = thisform.chkselected.Value 
		
		   IF lnTimeRange = 2  &&  By run number, so get the group from the dropdown
		      lcGroup = THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID, 4)
		   ENDIF
		
		   THISFORM.chkOwner.VALUE = .F.
		
		   STORE '' TO m.cowner, m.cownername
		
		   swselect('ownpcts')
		   SET ORDER TO ciddisb
		
		   IF EMPTY(lcType)
		      lcType = 'R'
		   ENDIF
		   
		  IF NOT llSelected
		     SELECT cwellid as cid FROM wells ;
		     INTO CURSOR selected ;
		     WHERE BETWEEN(cwellid,lcBegID,lcEndID) ;
		     ORDER BY cwellid
		  ENDIF 
		
		   SELECT  classtmp.cowner, ;
				   classtmp.cownername, ;
				   classtmp.ctypeinv, ;
				   expense.namount,  ;  &&  Expense Info
				   expense.cwellid,  ;
				   wells.cwellname,  ;
				   expense.cperiod,  ;
				   expense.cyear,  ;
				   expense.dexpdate,  ;
				   expense.crefid,  ;
				   expense.cpayee,  ;
				   expense.ccateg,  ;
				   expense.ccatcode,  ;
				   expcat.cTaxCode,  ;
				   expense.cexpclass,  ;
				   expense.cownerid,  ;
				   expense.nrunnorev, ;
				   expense.crunyearrev, ;
				   expense.nrunnojib, ;
				   expense.crunyearjib, ;
				   taxcodes.cdesc AS cTaxDesc  ;
			   FROM classtmp ;
			   JOIN expense ;
				   ON classtmp.cwellid = expense.cwellid, ;
				   expcat, taxcodes, wells, groups  ;
			   INTO CURSOR exptemp READWRITE   ;
			   WHERE expense.cwellid = wells.cwellid  ;
				   AND  expense.cwellid in (select cid from selected) ;
				   AND &lcWhere1  ;
				   AND expense.ccatcode = expcat.ccatcode  ;
				   AND &lcWhere2  ;
				   AND taxcodes.cTaxCode = expcat.cTaxCode  ;
				   AND IIF(lcClass <> '**', expcat.cTaxCode = lcClass, .T.)
		
		   INDEX ON cowner + cwellid + ctypeinv + cTaxCode + cyear + cperiod + ccatcode + DTOC(dexpdate) + crefid TAG CLASS
		
		   SELE exptemp
		   SCAN
		      SCATTER MEMVAR
		      
		      WAIT WINDOW NOWAIT 'Processing owner: ' + m.cownerid + ' ' + m.cownername      
		*  Check to see if this is a one-man item.  This owner will either get all of it, or none of it
		      IF NOT EMPTY(m.cownerid)
		         IF m.cownerid <> m.cowner
		            SELECT exptemp
		            DELETE NEXT 1
		         ENDIF
		*  Whether it's been deleted or remains, we don't need to calculate this owner's percentage, so move on to the next record
		         LOOP
		      ENDIF && NOT EMPTY(m.cownerid)
		
		      SELE disbhist
		      lDelete = .T.
		      SCAN FOR cownerid = exptemp.cowner AND cwellid = exptemp.cwellid AND disbhist.ctypeinv = exptemp.ctypeinv ;
		            AND ((disbhist.crunyear = exptemp.crunyearrev AND disbhist.nrunno = exptemp.nrunnorev) OR ;
		              (disbhist.crectype = 'R' AND disbhist.crunyear_in = exptemp.crunyearrev AND disbhist.nrunno_in = exptemp.nrunnorev) OR  ;
		              (IIF(disbhist.crectype = 'J', disbhist.crunyear = exptemp.crunyearjib AND disbhist.nrunno = exptemp.nrunnojib, .F.))) ;
		            AND disbhist.hperiod = exptemp.cperiod AND disbhist.hyear = exptemp.cyear AND NOT lManual
		
		         SCATTER MEMVAR
		
		         IF m.nexpense + m.ntotale1 + m.ntotale2 + m.ntotale3 + m.ntotale4 + m.ntotale5 + m.ntotalea + m.ntotaleb = 0
		            LOOP
		         ENDIF
		
		         lDelete = .F.
		
		         SELECT ownpcts
		         IF SEEK(m.ciddisb)
		            SCATTER MEMVAR
		         ELSE 
		            LOOP
		         ENDIF
		
		         lnAmount = 0
		
		         DO CASE
		            CASE m.cexpclass = '0'
		               IF m.nexpense = 0
		                  lnAmount = 0
		               ELSE
		                  lnAmount = ROUND(m.namount * (m.nworkint / 100), 2)
		               ENDIF
		            CASE m.cexpclass = '1'
		               IF m.ntotale1 = 0
		                  lnAmount = 0
		               ELSE
		                  lnAmount = ROUND(m.namount * (m.nintclass1 / 100), 2)
		               ENDIF
		            CASE m.cexpclass = '2'
		               IF m.ntotale2 = 0
		                  lnAmount = 0
		               ELSE
		                  lnAmount = ROUND(m.namount * (m.nintclass2 / 100), 2)
		               ENDIF
		            CASE m.cexpclass = '3'
		               IF m.ntotale3 = 0
		                  lnAmount = 0
		               ELSE
		                  lnAmount = ROUND(m.namount * (m.nintclass3 / 100), 2)
		               ENDIF
		            CASE m.cexpclass = '4'
		               IF m.ntotale4 = 0
		                  lnAmount = 0
		               ELSE
		                  lnAmount = ROUND(m.namount * (m.nintclass4 / 100), 2)
		               ENDIF
		            CASE m.cexpclass = '5'
		               IF m.ntotale5 = 0
		                  lnAmount = 0
		               ELSE
		                  lnAmount = ROUND(m.namount * (m.nintclass5 / 100), 2)
		               ENDIF
		            CASE m.cexpclass = 'A'
		               IF m.ntotalea = 0
		                  lnAmount = 0
		               ELSE
		                  lnAmount = ROUND(m.namount * (m.nacpint / 100), 2)
		               ENDIF
		            CASE m.cexpclass = 'B'
		               IF m.ntotaleb = 0
		                  lnAmount = 0
		               ELSE
		                  lnAmount = ROUND(m.namount * (m.nbcpint / 100), 2)
		               ENDIF
		         ENDCASE
		         SELE exptemp
		         REPL namount WITH lnAmount
		      ENDSCAN && disbhist
		
		      SELE suspense
		      SCAN FOR cownerid = exptemp.cowner AND cwellid = exptemp.cwellid AND suspense.ctypeinv = exptemp.ctypeinv ;
		            AND suspense.crunyear_in = exptemp.crunyearrev AND suspense.nrunno_in = exptemp.nrunnorev  ;
		            AND suspense.hperiod = exptemp.cperiod AND suspense.hyear = exptemp.cyear AND NOT lManual
		
		         SCATTER MEMVAR
		
		         IF m.nexpense + m.ntotale1 + m.ntotale2 + m.ntotale3 + m.ntotale4 + m.ntotale5 + m.ntotalea + m.ntotaleb = 0
		            LOOP
		         ENDIF
		
		         lDelete = .F.
		
		         DO CASE
		            CASE m.cexpclass = '0'
		               IF m.nexpense = 0
		                  lnAmount = 0
		               ELSE
		                  lnAmount = ROUND(m.namount * (m.nworkint / 100), 2)
		               ENDIF
		            CASE m.cexpclass = '1'
		               IF m.ntotale1 = 0
		                  lnAmount = 0
		               ELSE
		                  lnAmount = ROUND(m.namount * (m.nintclass1 / 100), 2)
		               ENDIF
		            CASE m.cexpclass = '2'
		               IF m.ntotale2 = 0
		                  lnAmount = 0
		               ELSE
		                  lnAmount = ROUND(m.namount * (m.nintclass2 / 100), 2)
		               ENDIF
		            CASE m.cexpclass = '3'
		               IF m.ntotale3 = 0
		                  lnAmount = 0
		               ELSE
		                  lnAmount = ROUND(m.namount * (m.nintclass3 / 100), 2)
		               ENDIF
		            CASE m.cexpclass = '4'
		               IF m.ntotale4 = 0
		                  lnAmount = 0
		               ELSE
		                  lnAmount = ROUND(m.namount * (m.nintclass4 / 100), 2)
		               ENDIF
		            CASE m.cexpclass = '5'
		               IF m.ntotale5 = 0
		                  lnAmount = 0
		               ELSE
		                  lnAmount = ROUND(m.namount * (m.nintclass5 / 100), 2)
		               ENDIF
		            CASE m.cexpclass = 'A'
		               IF m.ntotalea = 0
		                  lnAmount = 0
		               ELSE
		                  lnAmount = ROUND(m.namount * (m.nacpint / 100), 2)
		               ENDIF
		            CASE m.cexpclass = 'B'
		               IF m.ntotaleb = 0
		                  lnAmount = 0
		               ELSE
		                  lnAmount = ROUND(m.namount * (m.nbcpint / 100), 2)
		               ENDIF
		         ENDCASE
		
		         SELE exptemp
		         REPL namount WITH lnAmount
		      ENDSCAN && suspense
		
		      IF lDelete
		         SELE exptemp
		         DELETE NEXT 1
		      ENDIF && lDelete
		
		   ENDSCAN && exptemp
		   
		   SELECT exptemp
		   DELETE FOR namount = 0
		   
		   WAIT CLEAR 
		   THISFORM.cReportName = 'dmrwclass2'
		   THISFORM.cSortOrder  = 'Tax Code, Well ID'
		
		   TRY
		      SELECT exptemp
		      COUNT FOR NOT DELETED() TO lnCount
		      IF lnCount > 0
		         llReturn = .T.
		      ELSE
		         llReturn = .F.
		      ENDIF
		   CATCH
		      llReturn = .F.
		   ENDTRY
		
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'BuildData', loError.LINENO, 'DMRWClass', loError.ERRORNO, loError.MESSAGE, '', loError
		   MESSAGEBOX('Unable to process the report at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	ENDPROC

	PROCEDURE buildseparate		&& Show expense codes (up to 9) totals
		LPARAMETERS lcWhere1, lcWhere2, lcWhere3, lcWhere4, lcWhere5, lcWhere6
		LOCAL lcGroup, lcBegID, lcEndID, lcBegYear, lcEndYear, lcBegPeriod, lcEndPeriod, lcCriteria, lcClass
		LOCAL lcWhere, lcWhere2, lcWhere3, lcWhere4, lcOwnName, llReturn
		LOCAL lDelete, lcCount, lcDate1, lcDate2, lcOwner, lcRunYear, lcType, lcWhere5, lcWhere6
		LOCAL llTooManyCodes, lnAmount, lnCount, lnRunNo
		LOCAL tdDate1, tdDate2, llByOwner, llByMonth, llShowDetail, llSeparateSections
		
		llReturn = .T.
		
		TRY
		   lcGroup            = SUBSTR(THISFORM.swGroup1.VALUE, 1, 2)
		   lcBegID            = THISFORM.Swrptlook1.txtBegID.VALUE
		   lcEndID            = THISFORM.Swrptlook1.txtEndID.VALUE
		   lcBegYear          = THISFORM.swYear1.VALUE
		   lcEndYear          = THISFORM.swYear2.VALUE
		   lcBegPeriod        = THISFORM.swPeriod1.VALUE
		   lcEndPeriod        = THISFORM.swPeriod2.VALUE
		   lnTimeRange        = THISFORM.opgperiod.VALUE
		   lcRunYear          = THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID, 2)
		   lnRunNo            = INT(VAL(THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID, 3)))
		   lcType             = THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID, 6)
		   lcClass            = THISFORM.cboClass.VALUE
		   lcDate1            = ALLT(DTOC(THISFORM.swDate1.VALUE))
		   lcDate2            = ALLT(DTOC(THISFORM.swDate2.VALUE))
		   tdDate1            = THISFORM.swDate1.VALUE
		   tdDate2            = THISFORM.swDate2.VALUE
		   llSeparateSections = THISFORM.chklShowFull.VALUE
		   llShowDetail       = THISFORM.chklDetail.VALUE
		   llByOwner          = THISFORM.chkOwner .VALUE
		   llSelected         = thisform.chkselected.value
		
		   IF lnTimeRange = 2  &&  By run number, so get the group from the dropdown
		      lcGroup = THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID, 4)
		   ENDIF
		
		   THISFORM.chkOwner.VALUE = .F.
		
		   STORE '' TO m.cowner, m.cownername
		
		   swselect('ownpcts')
		   SET ORDER TO ciddisb
		
		   IF EMPTY(lcType)
		      lcType = 'R'
		   ENDIF
		   
		    IF NOT llSelected
		     SELECT cwellid as cid FROM wells ;
		     INTO CURSOR selected ;
		     WHERE BETWEEN(cwellid,lcBegID,lcEndID) ;
		     ORDER BY cwellid
		  ENDIF 
		
		   THISFORM.cReportName = 'dmrwclass4.frx'
		
		*  Variable for tracking whether they've got more than 9 codes - give warning at end if they have that
		   llTooManyCodes = .F.
		
		   SELECT cTaxCode, cdesc FROM taxcodes WHERE NOT DELETED() INTO CURSOR taxtemp ORDER BY cdesc  &&  Get a listing of tax codes to scan through
		
		   SELECT classtmp
		   SCAN
		      lcOwner = cowner
		      lcWell  = cwellid
		
		      lnCount = 1
		
		      SELECT taxtemp
		      SCAN
		         lcCount     = ALLT(STR(lnCount))  &&  Assign character value of lnCount, so it can be used to create other variables
		         m.c&lcCount = cdesc
		
		         IF lnCount > 9
		            llTooManyCodes = .T.
		            LOOP
		         ENDIF
		
				 SELECT  SUM(expense.namount) AS namount,  ;  &&  Select and sum expenses for this tax code
						 expense.cperiod,  ;
						 expense.cyear,  ;
						 expense.dexpdate,  ;
						 expense.crefid,  ;
						 expense.cpayee,  ;
						 expense.ccatcode,  ;
						 expense.nrunnorev, ;
						 expcat.cTaxCode  ;
					 FROM expense, expcat  ;
					 INTO CURSOR exptmp  ;
					 WHERE expense.cwellid = classtmp.cwellid  ;
						 AND expense.cwellid in (select cid from selected) ;
						 AND expense.ccatcode = expcat.ccatcode  ;
						 AND &lcWhere2  ;
						 AND expcat.cTaxCode = taxtemp.cTaxCode  ;
		
		         IF _TALLY > 0
		            SELECT classtmp
		            REPLACE classtmp.N&lcCount WITH exptmp.namount, classtmp.c&lcCount WITH m.c&lcCount
		         ELSE
		            SELECT classtmp
		            REPLACE classtmp.c&lcCount WITH UPPER(m.c&lcCount)
		         ENDIF
		
		         swclose('exptmp')
		         lnCount = lnCount + 1
		
		
		      ENDSCAN && taxtmp
		   ENDSCAN  && classtmp
		
		*  Give warning about too many tax codes
		   IF llTooManyCodes
		      THISFORM.oMessage.Warning('More than 9 Expense Section Codes have been defined. This report will only include the first 9 codes, due to space constraints.')
		   ENDIF
		
		
		   WAIT CLEAR
		
		   SELECT classtmp
		   COUNT FOR NOT DELETED() TO lnCount
		   IF lnCount > 0
		      llReturn = .T.
		   ELSE
		      llReturn = .F.
		   ENDIF
		
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'BuildData', loError.LINENO, 'DMRWClass', loError.ERRORNO, loError.MESSAGE, '', loError
		   MESSAGEBOX('Unable to process the report at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	ENDPROC

	PROCEDURE buildseparateowner		&& Show expense codes separate (up to 9) by owner
		LPARAMETERS lcWhere1, lcWhere2, lcWhere3, lcWhere4, lcWhere5, lcWhere6
		LOCAL lcGroup, lcBegID, lcEndID, lcBegYear, lcEndYear, lcBegPeriod, lcEndPeriod, lcCriteria, lcClass
		LOCAL lcWhere, lcWhere2, lcWhere3, lcWhere4, lcOwnName, llReturn
		LOCAL lDelete, lcCount, lcDate1, lcDate2, lcOwner, lcRunYear, lcType, lcWhere5, lcWhere6
		LOCAL llTooManyCodes, lnAmount, lnCount, lnRunNo
		LOCAL tdDate1, tdDate2, llByOwner, llByMonth, llShowDetail, llSeparateSections
		
		llReturn = .T.
		
		TRY
		
		   lcGroup            = SUBSTR(THISFORM.swGroup1.VALUE, 1, 2)
		   lcBegID            = THISFORM.Swrptlook1.txtBegID.VALUE
		   lcEndID            = THISFORM.Swrptlook1.txtEndID.VALUE
		   lcBegYear          = THISFORM.swYear1.VALUE
		   lcEndYear          = THISFORM.swYear2.VALUE
		   lcBegPeriod        = THISFORM.swPeriod1.VALUE
		   lcEndPeriod        = THISFORM.swPeriod2.VALUE
		   lnTimeRange        = THISFORM.opgperiod.VALUE
		   lcRunYear          = THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID, 2)
		   lnRunNo            = INT(VAL(THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID, 3)))
		   lcType             = THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID, 6)
		   lcClass            = THISFORM.cboClass.VALUE
		   lcDate1            = ALLT(DTOC(THISFORM.swDate1.VALUE))
		   lcDate2            = ALLT(DTOC(THISFORM.swDate2.VALUE))
		   tdDate1            = THISFORM.swDate1.VALUE
		   tdDate2            = THISFORM.swDate2.VALUE
		   llSeparateSections = THISFORM.chklShowFull.VALUE
		   llShowDetail       = THISFORM.chklDetail.VALUE
		   llByOwner          = THISFORM.chkOwner .VALUE
		   llSelected         = thisform.chkselected.Value 
		
		   IF lnTimeRange = 2  &&  By run number, so get the group from the dropdown
		      lcGroup = THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID, 4)
		   ENDIF
		
		   THISFORM.chkOwner.VALUE = .F.
		
		   STORE '' TO m.cowner, m.cownername
		
		   swselect('ownpcts')
		   SET ORDER TO ciddisb
		
		   IF EMPTY(lcType)
		      lcType = 'R'
		   ENDIF
		   
		    IF NOT llSelected
		     SELECT cwellid as cid FROM wells ;
		     INTO CURSOR selected ;
		     WHERE BETWEEN(cwellid,lcBegID,lcEndID) ;
		     ORDER BY cwellid
		  ENDIF 
		
		   THISFORM.cReportName = 'dmrwclass4.frx'
		
		*  Variable for tracking whether they've got more than 9 codes - give warning at end if they have that
		   llTooManyCodes = .F.
		
		   SELECT cTaxCode, cdesc FROM taxcodes WHERE NOT DELETED() INTO CURSOR taxtemp ORDER BY cdesc  &&  Get a listing of tax codes to scan through
		
		   SELECT classtmp
		   SCAN
		      lcOwner = cowner
		      lcWell  = cwellid
		
		      lnCount = 1
		
		      SELECT taxtemp
		      SCAN
		         lcCount     = ALLT(STR(lnCount))  &&  Assign character value of lnCount, so it can be used to create other variables
		         m.c&lcCount = cdesc
		
		         IF lnCount > 9
		            llTooManyCodes = .T.
		            LOOP
		         ENDIF
		
				 SELECT  expense.namount,  ;  &&  Select individual expenses for this tax code
						 expense.cperiod,  ;
						 expense.cyear,  ;
						 expense.dexpdate,  ;
						 expense.cexpclass,  ;
						 expense.crefid,  ;
						 expense.cpayee,  ;
						 expense.ccatcode,  ;
						 expense.cownerid,  ;
						 expense.nrunnorev, ;
						 expense.crunyearrev, ;
						 expense.nrunnojib, ;
						 expense.crunyearjib, ;
						 expcat.cTaxCode  ;
					 FROM expense, expcat  ;
					 INTO CURSOR exptemp READWRITE  ;
					 WHERE expense.cwellid == lcWell  ;
						 AND expense.cwellid in (select cid from selected) ;
						 AND expense.ccatcode = expcat.ccatcode  ;
						 AND &lcWhere2  ;
						 AND expcat.cTaxCode = taxtemp.cTaxCode  ;
		
		         SELECT exptemp
		         SCAN
		            SCATTER MEMVAR
		
		*  Check to see if this is a one-man item.  This owner will either get all of it, or none of it
		            IF NOT EMPTY(m.cownerid)
		               SELECT usersel
		               LOCATE FOR cownerid = m.cownerid
		               IF NOT FOUND()
		                  SELECT exptemp
		                  DELETE NEXT 1
		               ENDIF
		*  Whether it's been deleted or remains, we don't need to calculate this owner's percentage, so move on to the next record
		               LOOP
		            ENDIF && NOT EMPTY(m.cownerid)
		
		            SELE disbhist.*, ownpcts.* ;
		               FROM disbhist ;
		               JOIN ownpcts ON disbhist.ciddisb == ownpcts.ciddisb ;
		               WHERE ((disbhist.crectype = 'R' AND disbhist.crunyear = exptemp.crunyearrev AND disbhist.nrunno = exptemp.nrunnorev) OR  ;
		                 (disbhist.crectype = 'R' AND disbhist.crunyear_in = exptemp.crunyearrev AND disbhist.nrunno_in = exptemp.nrunnorev) OR  ;
		                 (disbhist.crectype = 'J' AND disbhist.crunyear = exptemp.crunyearjib AND disbhist.nrunno = exptemp.nrunnojib)) ;
		               AND disbhist.hperiod = exptemp.cperiod AND disbhist.hyear = exptemp.cyear AND NOT lManual  ;
		               AND disbhist.cownerid = classtmp.cowner AND disbhist.cwellid = classtmp.cwellid ;
		               AND &lcWhere3;
		               INTO CURSOR temphist ;
		               ORDER BY disbhist.crunyear, disbhist.nrunno, disbhist.hyear, disbhist.hperiod ;
		               GROUP BY disbhist.crunyear, disbhist.nrunno, disbhist.hyear, disbhist.hperiod
		            lnAmount = 0
		            IF _TALLY > 0
		               SELECT temphist
		               SCATTER MEMVAR
		
		               IF m.nexpense + m.ntotale1 + m.ntotale2 + m.ntotale3 + m.ntotale4 + m.ntotale5 + m.ntotalea + m.ntotaleb = 0
		                  LOOP
		               ENDIF
		               DO CASE
		                  CASE m.cexpclass = '0'
		                     lnAmount = lnAmount + ROUND(m.namount * (m.nworkint / 100), 2)
		                  CASE m.cexpclass = '1'
		                     lnAmount = lnAmount + ROUND(m.namount * (m.nintclass1 / 100), 2)
		                  CASE m.cexpclass = '2'
		                     lnAmount = lnAmount + ROUND(m.namount * (m.nintclass2 / 100), 2)
		                  CASE m.cexpclass = '3'
		                     lnAmount = lnAmount + ROUND(m.namount * (m.nintclass3 / 100), 2)
		                  CASE m.cexpclass = '4'
		                     lnAmount = lnAmount + ROUND(m.namount * (m.nintclass4 / 100), 2)
		                  CASE m.cexpclass = '5'
		                     lnAmount = lnAmount + ROUND(m.namount * (m.nintclass5 / 100), 2)
		                  CASE m.cexpclass = 'A'
		                     lnAmount = lnAmount + ROUND(m.namount * (m.nacpint / 100), 2)
		                  CASE m.cexpclass = 'B'
		                     lnAmount = lnAmount + ROUND(m.namount * (m.nbcpint / 100), 2)
		               ENDCASE
		            ENDIF && _tally > 0
		
		            SELE * FROM suspense ;
		               WHERE suspense.cownerid == classtmp.cowner AND cwellid = classtmp.cwellid ;
		               AND suspense.crunyear_in = exptemp.crunyearrev AND suspense.nrunno_in = exptemp.nrunnorev  ;
		               AND suspense.hperiod = exptemp.cperiod AND suspense.hyear = exptemp.cyear AND NOT lManual  ;
		               AND &lcWhere6;
		               INTO CURSOR temphist ;
		               ORDER BY suspense.crunyear, suspense.nrunno, suspense.hyear, suspense.hperiod ;
		               GROUP BY suspense.crunyear, suspense.nrunno, suspense.hyear, suspense.hperiod
		            IF _TALLY > 0
		               SELECT temphist
		               SCATTER MEMVAR
		               DO CASE
		                  CASE m.cexpclass = '0'
		                     lnAmount = lnAmount + ROUND(m.namount * (m.nworkint / 100), 2)
		                  CASE m.cexpclass = '1'
		                     lnAmount = lnAmount + ROUND(m.namount * (m.nintclass1 / 100), 2)
		                  CASE m.cexpclass = '2'
		                     lnAmount = lnAmount + ROUND(m.namount * (m.nintclass2 / 100), 2)
		                  CASE m.cexpclass = '3'
		                     lnAmount = lnAmount + ROUND(m.namount * (m.nintclass3 / 100), 2)
		                  CASE m.cexpclass = '4'
		                     lnAmount = lnAmount + ROUND(m.namount * (m.nintclass4 / 100), 2)
		                  CASE m.cexpclass = '5'
		                     lnAmount = lnAmount + ROUND(m.namount * (m.nintclass5 / 100), 2)
		                  CASE m.cexpclass = 'A'
		                     lnAmount = lnAmount + ROUND(m.namount * (m.nacpint / 100), 2)
		                  CASE m.cexpclass = 'B'
		                     lnAmount = lnAmount + ROUND(m.namount * (m.nbcpint / 100), 2)
		               ENDCASE
		            ENDIF && _tally > 0
		
		            SELE exptemp
		            REPL namount WITH lnAmount
		         ENDSCAN && exptemp
		
				 SELECT  SUM(exptemp.namount) AS namount,  ;  &&  Pull reduced amounts from above to report on
						 exptemp.cperiod,  ;
						 exptemp.cyear,  ;
						 exptemp.dexpdate,  ;
						 exptemp.crefid,  ;
						 exptemp.cpayee,  ;
						 exptemp.ccatcode,  ;
						 exptemp.cTaxCode  ;
					 FROM exptemp  ;
					 INTO CURSOR exptmp  ;
					 WHERE &lcWhere5
		
		         IF _TALLY > 0
		            SELECT classtmp
		            REPLACE classtmp.N&lcCount WITH exptmp.namount, classtmp.c&lcCount WITH m.c&lcCount
		         ELSE
		            SELECT classtmp
		            REPLACE classtmp.c&lcCount WITH m.c&lcCount
		         ENDIF
		
		         SELECT exptmp
		         USE
		         SELECT exptemp
		         USE
		
		         lnCount = lnCount + 1
		
		      ENDSCAN && taxtmp
		   ENDSCAN  && classtmp
		
		*  Give warning about too many tax codes
		   IF llTooManyCodes
		      THISFORM.oMessage.Warning('More than 9 Expense Section Codes have been defined. This report will only include the first 9 codes, due to space constraints.')
		   ENDIF
		
		   WAIT CLEAR
		
		   SELECT classtmp
		   COUNT FOR NOT DELETED() TO lnCount
		   IF lnCount > 0
		      llReturn = .T.
		   ELSE
		      llReturn = .F.
		   ENDIF
		
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'BuildData', loError.LINENO, 'DMRWClass', loError.ERRORNO, loError.MESSAGE, '', loError
		   MESSAGEBOX('Unable to process the report at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	ENDPROC

	PROCEDURE buildsummary		&& Builds the report by well.
		LPARAMETERS lcWhere2, lcWhere3, lcWhere4, lcWhere5, lcWhere6
		LOCAL lcGroup, lcBegID, lcEndID, lcBegYear, lcEndYear, lcBegPeriod, lcEndPeriod, lcCriteria, lcClass
		LOCAL lcWhere, lcOwnName, llReturn
		LOCAL lDelete, lcCount, lcDate1, lcDate2, lcOwner, lcRunYear, lcType
		LOCAL llTooManyCodes, lnAmount, lnCount, lnRunNo
		LOCAL tdDate1, tdDate2, llByOwner, llShowDetail, llSeparateSections
		
		llReturn = .T.
		
		TRY
		
		   lcGroup            = SUBSTR(THISFORM.swGroup1.VALUE, 1, 2)
		   lcBegID            = THISFORM.Swrptlook1.txtBegID.VALUE
		   lcEndID            = THISFORM.Swrptlook1.txtEndID.VALUE
		   lcBegYear          = THISFORM.swYear1.VALUE
		   lcEndYear          = THISFORM.swYear2.VALUE
		   lcBegPeriod        = THISFORM.swPeriod1.VALUE
		   lcEndPeriod        = THISFORM.swPeriod2.VALUE
		   lnTimeRange        = THISFORM.opgperiod.VALUE
		   lcRunYear          = THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID, 2)
		   lnRunNo            = INT(VAL(THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID, 3)))
		   lcType             = THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID, 6)
		   lcClass            = THISFORM.cboClass.VALUE
		   lcDate1            = ALLT(DTOC(THISFORM.swDate1.VALUE))
		   lcDate2            = ALLT(DTOC(THISFORM.swDate2.VALUE))
		   tdDate1            = THISFORM.swDate1.VALUE
		   tdDate2            = THISFORM.swDate2.VALUE
		   llSeparateSections = THISFORM.chklShowFull.VALUE
		   llShowDetail       = THISFORM.chklDetail.VALUE
		   llByOwner          = THISFORM.chkOwner.VALUE
		   llSelected         = thisform.chkselected.Value 
		
		   IF lnTimeRange = 2  &&  By run number, so get the group from the dropdown
		      lcGroup = THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID, 4)
		   ENDIF
		
		   THISFORM.chkOwner.VALUE = .F.
		
		   STORE '' TO m.cowner, m.cownername
		
		   swselect('ownpcts')
		   SET ORDER TO ciddisb
		
		   IF EMPTY(lcType)
		      lcType = 'R'
		   ENDIF
		
		   WAIT WIND NOWAIT 'Building Report....Please Wait'
		
		   THISFORM.cReportName = 'dmrwclass.frx'
		
		   SELECT  expense.cwellid, ;
		           SUM(expense.namount) AS namount,  ;  &&  Expense Info
				   expcat.cTaxCode  ;
			   FROM expense, expcat  ;
			   INTO CURSOR exptmp READWRITE   ;
			   WHERE expense.cwellid IN (SELECT  cwellid ;
											 FROM classtmp)  ;
				   AND &lcWhere2  ;
				   AND IIF(lcClass <> '**', expcat.cTaxCode = lcClass, .T.) ;
				   AND expense.ccatcode = expcat.ccatcode  ;
			   ORDER BY expense.cwellid, expcat.cTaxCode ;
			   GROUP BY expense.cwellid, expcat.cTaxCode
		
		   SELECT exptmp
		   SCAN
		      m.cwellid = cwellid
		
		      SELECT classtmp
		      LOCATE FOR cwellid == m.cwellid
		      IF FOUND()
		         DO CASE
		            CASE exptmp.cTaxCode = 'OE'
		               REPLACE classtmp.nOE WITH classtmp.noe + exptmp.namount
		            CASE INLIST(exptmp.cTaxCode, 'IC', 'ID')
		               REPLACE classtmp.nIC WITH classtmp.nic + exptmp.namount
		            CASE INLIST(exptmp.cTaxCode, 'TC', 'TD')
		               REPLACE classtmp.nTC WITH classtmp.ntc + exptmp.namount
		            CASE exptmp.cTaxCode = 'LC'
		               REPLACE classtmp.nLC WITH classtmp.nlc + exptmp.namount
		            OTHERWISE
		               REPLACE classtmp.nMI WITH classtmp.nMI + exptmp.namount
		         ENDCASE
		      ENDIF
		   ENDSCAN
		
		   SELECT  cwellid, SUM(ngasinc + noilinc + nothinc + ntrpInc + nmiscinc1 + nmiscinc2) AS nRev ;
			   FROM wellhist ;
			   INTO CURSOR inctmp  ;  &&  Income
			   WHERE wellhist.cwellid IN (SELECT  cwellid ;
											  FROM classtmp) ;
				   AND &lcWhere4 ;
			   ORDER BY cwellid ;
			   GROUP BY cwellid
		
		   SELECT inctmp
		   SCAN
		      m.cwellid = cwellid
		      SELECT classtmp
		      LOCATE FOR cwellid == m.cwellid
		      IF FOUND()
		         REPLACE classtmp.nRev WITH inctmp.nRev
		      ENDIF
		   ENDSCAN
		
		   SELECT  cwellid, SUM(nTotBBLTx1 + nTotMCFTx1 + nTotOthTx1 +  ;
					   nTotBBLTx2 + nTotMCFTx2 + nTotOthTx2 +  ;
					   nTotBBLTx3 + nTotMCFTx3 + nTotOthTx3 +  ;
					   nTotBBLTx4 + nTotMCFTx4 + nTotOthTx4) AS nTotTax  ;
			   FROM wellhist ;
			   INTO CURSOR taxtmp ;
			   WHERE wellhist.cwellid IN (SELECT  cwellid ;
											  FROM classtmp) ;
				   AND &lcWhere4 ;
			   ORDER BY cwellid ;
			   GROUP BY cwellid
		
		   SELECT taxtmp
		   SCAN
		      m.cwellid = cwellid
		      SELECT classtmp
		      LOCATE FOR cwellid == m.cwellid
		      IF FOUND()
		         REPLACE classtmp.nTotTax WITH taxtmp.nTotTax
		      ENDIF
		   ENDSCAN
		
		   WAIT CLEAR
		
		   SELECT classtmp
		   COUNT FOR NOT DELETED() TO lnCount
		   IF lnCount > 0
		      llReturn = .T.
		   ELSE
		      llReturn = .F.
		   ENDIF
		
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'BuildSummary', loError.LINENO, 'DMRWClass', loError.ERRORNO, loError.MESSAGE, '', loError
		   MESSAGEBOX('Unable to process the report at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	ENDPROC

	PROCEDURE buildsummaryowner
		LPARAMETERS lcWhere2, lcWhere3, lcWhere4, lcWhere5, lcWhere6
		LOCAL lcGroup, lcBegID, lcEndID, lcBegYear, lcEndYear, lcBegPeriod, lcEndPeriod, lcCriteria, lcClass
		LOCAL lcWhere, lcWhere2, lcWhere3, lcWhere4, lcOwnName, llReturn
		LOCAL lDelete, lcCount, lcDate1, lcDate2, lcOwner, lcRunYear, lcType, lcWhere5, lcWhere6
		LOCAL llTooManyCodes, lnAmount, lnCount, lnRunNo
		LOCAL tdDate1, tdDate2, llByOwner, llShowDetail, llSeparateSections
		
		llReturn = .T.
		
		TRY
		   lcGroup            = SUBSTR(THISFORM.swGroup1.VALUE, 1, 2)
		   lcBegID            = THISFORM.Swrptlook1.txtBegID.VALUE
		   lcEndID            = THISFORM.Swrptlook1.txtEndID.VALUE
		   lcBegYear          = THISFORM.swYear1.VALUE
		   lcEndYear          = THISFORM.swYear2.VALUE
		   lcBegPeriod        = THISFORM.swPeriod1.VALUE
		   lcEndPeriod        = THISFORM.swPeriod2.VALUE
		   lnTimeRange        = THISFORM.opgperiod.VALUE
		   lcRunYear          = THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID, 2)
		   lnRunNo            = INT(VAL(THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID, 3)))
		   lcType             = THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID, 6)
		   lcClass            = THISFORM.cboClass.VALUE
		   lcDate1            = ALLT(DTOC(THISFORM.swDate1.VALUE))
		   lcDate2            = ALLT(DTOC(THISFORM.swDate2.VALUE))
		   tdDate1            = THISFORM.swDate1.VALUE
		   tdDate2            = THISFORM.swDate2.VALUE
		   llSeparateSections = THISFORM.chklShowFull.VALUE
		   llShowDetail       = THISFORM.chklDetail.VALUE
		   llByOwner          = THISFORM.chkOwner.VALUE
		
		   IF lnTimeRange = 2  &&  By run number, so get the group from the dropdown
		      lcGroup = THISFORM.RunCombo1.LISTITEM(THISFORM.RunCombo1.LISTITEMID, 4)
		   ENDIF
		
		   THISFORM.chkOwner.VALUE = .F.
		
		   STORE '' TO m.cowner, m.cownername
		
		   swselect('ownpcts')
		   SET ORDER TO ciddisb
		
		   IF EMPTY(lcType)
		      lcType = 'R'
		   ENDIF
		
		
		   THISFORM.cReportName = 'dmrwclass.frx'
		
		   SELECT  expense.cwellid, ;
				   expense.namount, ;
				   expcat.cTaxCode,  ;
				   expense.cexpclass, ;
				   expense.crunyearrev, ;
				   expense.nrunnorev, ;
				   expense.crunyearjib, ;
				   expense.nrunnojib, ;
				   expense.cyear, ;
				   expense.cperiod, ;
				   expense.cownerid  ;
			   FROM expense, expcat;
			   INTO CURSOR exptemp READWRITE   ;
			   WHERE expense.cwellid IN (SELECT  cwellid ;
											 FROM classtmp)  ;
				   AND EMPTY(cownerid) ;
				   AND expense.ccatcode = expcat.ccatcode  ;
				   AND &lcWhere2
		
		   SELECT  expense.cwellid, ;
				   expense.namount, ;
				   expcat.cTaxCode,  ;
				   expense.cexpclass, ;
				   expense.crunyearrev, ;
				   expense.nrunnorev, ;
				   expense.crunyearjib, ;
				   expense.nrunnojib, ;
				   expense.cyear, ;
				   expense.cperiod, ;
				   expense.cownerid  ;
			   FROM expense, expcat;
			   INTO CURSOR exptemp1 ;
			   WHERE expense.cwellid IN (SELECT  cwellid ;
											 FROM classtmp)  ;
				   AND NOT EMPTY(cownerid) ;
				   AND expense.ccatcode = expcat.ccatcode  ;
				   AND &lcWhere2
		
		   SELECT classtmp
		   SCAN
		      m.cwellid  = cwellid
		      m.cownerid = cowner
		      m.ctypeinv = ctypeinv
		      WAIT WINDOW NOWAIT 'Processing owner: ' + m.cownerid + ' ' + classtmp.cownername
		      STORE 0 TO lnOE, lnTC, lnIC, lnLC, lnMI
		
		      SELE exptemp
		      SCAN FOR cwellid == m.cwellid
		         m.cexpclass = cexpclass
		         m.namount   = namount
		
		         lDelete  = .T.
		         lnAmount = 0
		         SELE disbhist
		         LOCATE FOR cownerid == m.cownerid AND cwellid == m.cwellid AND ctypeinv = m.ctypeinv ;
		            AND disbhist.hperiod == exptemp.cperiod AND disbhist.hyear == exptemp.cyear ;
		            AND (disbhist.nrunno = exptemp.nrunnorev AND disbhist.crunyear = exptemp.crunyearrev AND disbhist.crectype='R' ;
		              OR disbhist.nrunno = exptemp.nrunnojib AND disbhist.crunyear = exptemp.crunyearjib AND disbhist.crectype='J' ;
		              OR disbhist.nrunno_in = exptemp.nrunnorev AND disbhist.crunyear_in = exptemp.crunyearrev AND disbhist.crectype='R' ;
		              OR disbhist.nrunno_in = exptemp.nrunnojib AND disbhist.crunyear_in = exptemp.crunyearjib AND disbhist.crectype='J');
		            AND NOT lManual
		
		         IF FOUND()
		            m.ciddisb = ciddisb
		            SELECT ownpcts
		            IF SEEK(m.ciddisb)
		               SCATTER MEMVAR
		               DO CASE
		                  CASE m.cexpclass = '0'
		                     lnAmount =  ROUND(m.namount * (m.nworkint / 100), 2)
		                  CASE m.cexpclass = '1'
		                     lnAmount =  ROUND(m.namount * (m.nintclass1 / 100), 2)
		                  CASE m.cexpclass = '2'
		                     lnAmount =  ROUND(m.namount * (m.nintclass2 / 100), 2)
		                  CASE m.cexpclass = '3'
		                     lnAmount =  ROUND(m.namount * (m.nintclass3 / 100), 2)
		                  CASE m.cexpclass = '4'
		                     lnAmount =  ROUND(m.namount * (m.nintclass4 / 100), 2)
		                  CASE m.cexpclass = '5'
		                     lnAmount =  ROUND(m.namount * (m.nintclass5 / 100), 2)
		                  CASE m.cexpclass = 'A'
		                     lnAmount =  ROUND(m.namount * (m.nacpint / 100), 2)
		                  CASE m.cexpclass = 'B'
		                     lnAmount =  ROUND(m.namount * (m.nbcpint / 100), 2)
		               ENDCASE
		            ENDIF
		         ELSE
		            SELE suspense
		            LOCATE FOR cownerid == m.cownerid AND cwellid == m.cwellid AND ctypeinv = m.ctypeinv ;
		               AND suspense.hperiod = exptemp.cperiod AND suspense.hyear = exptemp.cyear ;
		               AND (suspense.nrunno = exptemp.nrunnorev AND suspense.crunyear = exptemp.crunyearrev AND suspense.crectype='R' ;
		                 OR suspense.nrunno = exptemp.nrunnojib AND suspense.crunyear = exptemp.crunyearjib AND suspense.crectype='J');
		               AND NOT lManual
		            IF FOUND()
		               SCATTER MEMVAR
		               DO CASE
		                  CASE m.cexpclass = '0'
		                     lnAmount =  ROUND(m.namount * (m.nworkint / 100), 2)
		                  CASE m.cexpclass = '1'
		                     lnAmount =  ROUND(m.namount * (m.nintclass1 / 100), 2)
		                  CASE m.cexpclass = '2'
		                     lnAmount =  ROUND(m.namount * (m.nintclass2 / 100), 2)
		                  CASE m.cexpclass = '3'
		                     lnAmount =  ROUND(m.namount * (m.nintclass3 / 100), 2)
		                  CASE m.cexpclass = '4'
		                     lnAmount =  ROUND(m.namount * (m.nintclass4 / 100), 2)
		                  CASE m.cexpclass = '5'
		                     lnAmount =  ROUND(m.namount * (m.nintclass5 / 100), 2)
		                  CASE m.cexpclass = 'A'
		                     lnAmount =  ROUND(m.namount * (m.nacpint / 100), 2)
		                  CASE m.cexpclass = 'B'
		                     lnAmount =  ROUND(m.namount * (m.nbcpint / 100), 2)
		               ENDCASE
		            ELSE
		               swselect('wellinv')
		               LOCATE FOR cownerid == m.cownerid AND cwellid == m.cwellid AND ctypeinv = m.ctypeinv
		               IF FOUND()
		                  SCATTER MEMVAR
		                  DO CASE
		                     CASE m.cexpclass = '0'
		                        lnAmount =  ROUND(m.namount * (m.nworkint / 100), 2)
		                     CASE m.cexpclass = '1'
		                        lnAmount =  ROUND(m.namount * (m.nintclass1 / 100), 2)
		                     CASE m.cexpclass = '2'
		                        lnAmount =  ROUND(m.namount * (m.nintclass2 / 100), 2)
		                     CASE m.cexpclass = '3'
		                        lnAmount =  ROUND(m.namount * (m.nintclass3 / 100), 2)
		                     CASE m.cexpclass = '4'
		                        lnAmount =  ROUND(m.namount * (m.nintclass4 / 100), 2)
		                     CASE m.cexpclass = '5'
		                        lnAmount =  ROUND(m.namount * (m.nintclass5 / 100), 2)
		                     CASE m.cexpclass = 'A'
		                        lnAmount =  ROUND(m.namount * (m.nacpint / 100), 2)
		                     CASE m.cexpclass = 'B'
		                        lnAmount =  ROUND(m.namount * (m.nbcpint / 100), 2)
		                  ENDCASE
		               ENDIF
		            ENDIF
		         ENDIF
		
		         DO CASE
		            CASE exptemp.cTaxCode = 'OE'
		               lnOE = lnOE + lnAmount
		            CASE INLIST(exptemp.cTaxCode, 'IC', 'ID')
		               lnIC = lnIC + lnAmount
		            CASE INLIST(exptemp.cTaxCode, 'TC', 'TD')
		               lnTC = lnTC + lnAmount
		            CASE exptemp.cTaxCode = 'LC'
		               lnLC = lnLC + lnAmount
		            OTHERWISE
		               lnMI = lnMI + lnAmount
		         ENDCASE
		      ENDSCAN && exptemp
		
		      SELECT classtmp
		      REPLACE classtmp.nOE WITH lnOE
		      REPLACE classtmp.nIC WITH lnIC
		      REPLACE classtmp.nTC WITH lnTC
		      REPLACE classtmp.nLC WITH lnLC
		      REPLACE classtmp.nMI WITH lnMI
		
			  SELECT  SUM(nGasRev) AS nGasRev, SUM(nOilRev) AS nOilRev, ;
					  SUM(nOthRev) AS nOthRev, SUM(nTrpREv) AS nTrpREv, ;
					  SUM(nMiscRev1) AS nMiscRev1, SUM(nMiscRev2) AS nMiscRev2, ;
					  SUM(nOilTax1 + nOilTax2 + nOilTax3 + nOilTax4 + nGasTax1 + nGasTax2 + nGasTax3 + nGasTax4 +  ;
						  nOthTax1 + nOthTax2 + nOthTax3 + nOthTax4) AS nTotTax  ;
				  FROM disbhist ;
				  INTO CURSOR inctmp ;
				  WHERE disbhist.cwellid = classtmp.cwellid ;
					  AND disbhist.cownerid == m.cownerid ;
					  AND &lcWhere3
		
			  SELECT  SUM(nGasRev) AS nGasRev, SUM(nOilRev) AS nOilRev, ;
					  SUM(nOthRev) AS nOthRev, SUM(nTrpREv) AS nTrpREv, ;
					  SUM(nMiscRev1) AS nMiscRev1, SUM(nMiscRev2) AS nMiscRev2, ;
					  SUM(nOilTax1 + nOilTax2 + nOilTax3 + nOilTax4 + nGasTax1 + nGasTax2 + nGasTax3 + nGasTax4 +  ;
						  nOthTax1 + nOthTax2 + nOthTax3 + nOthTax4) AS nTotTax  ;
				  FROM suspense ;
				  INTO CURSOR inctmpsusp ;
				  WHERE suspense.cwellid = classtmp.cwellid ;
					  AND suspense.cownerid == m.cownerid ;
					  AND &lcWhere6
		
		      SELECT classtmp
		      REPLACE classtmp.nRev WITH inctmp.nGasRev + inctmp.nOilRev + inctmp.nMiscRev1 + inctmp.nMiscRev2 + inctmp.nOthRev + inctmp.nTrpREv,  ;
		         classtmp.nTotTax WITH inctmp.nTotTax
		
		      SELECT classtmp
		      REPLACE classtmp.nRev WITH classtmp.nRev + inctmpsusp.nGasRev + inctmpsusp.nOilRev + inctmpsusp.nMiscRev1 + inctmpsusp.nMiscRev2 + inctmpsusp.nOthRev + inctmpsusp.nTrpREv,  ;
		         classtmp.nTotTax WITH classtmp.nTotTax + inctmpsusp.nTotTax
		
		      STORE 0 TO lnOE, lnTC, lnIC, lnLC, lnMI
		
		* Process one-man item expenses
		      SELECT exptemp1
		      SCAN FOR cownerid == m.cownerid AND cwellid == m.cwellid
		         m.namount = namount
		         DO CASE
		            CASE exptemp1.cTaxCode = 'OE'
		               lnOE = lnOE + m.namount
		            CASE INLIST(exptemp1.cTaxCode, 'IC', 'ID')
		               lnIC = lnIC + m.namount
		            CASE INLIST(exptemp1.cTaxCode, 'TC', 'TD')
		               lnTC = lnTC + m.namount
		            CASE exptemp1.cTaxCode = 'LC'
		               lnLC = lnLC + m.namount
		            OTHERWISE
		               lnMI = lnMI + m.namount
		         ENDCASE
		      ENDSCAN && exptemp1
		
		      SELECT classtmp
		      REPLACE classtmp.nOE WITH nOE + lnOE
		      REPLACE classtmp.nIC WITH nIC + lnIC
		      REPLACE classtmp.nTC WITH nTC + lnTC
		      REPLACE classtmp.nLC WITH nLC + lnLC
		      REPLACE classtmp.nMI WITH nMI + lnMI
		
		   ENDSCAN && classtmp
		
		   WAIT CLEAR
		
		   SELECT classtmp
		   COUNT FOR NOT DELETED() TO lnCount
		   IF lnCount > 0
		      llReturn = .T.
		   ELSE
		      llReturn = .F.
		   ENDIF
		
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'BuildData', loError.LINENO, 'DMRWClass', loError.ERRORNO, loError.MESSAGE, '', loError
		   MESSAGEBOX('Unable to process the report at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	ENDPROC

	PROCEDURE Init
		IF DODEFAULT()
		   SET DELETED ON
		   SELECT wells
		   SET ORDER TO cWellID
		
		   GO TOP
		   THISFORM.swrptlook1.txtBegName.VALUE = cwellname
		   THISFORM.swrptlook1.txtBegID.VALUE = cWellID
		
		   GO BOTTOM
		   THISFORM.swrptlook1.txtEndName.VALUE = cwellname
		   THISFORM.swrptlook1.txtEndID.VALUE = cWellID
		
		   THISFORM.opgPeriod.VALUE = 1
		   THISFORM.cReportName = 'dmrwclass.frx'
		
		   THISFORM.swdate1.VALUE = DATE()-30
		   THISFORM.swdate2.VALUE = DATE()
		
		
		   THISFORM.chkowner.VALUE = .F.
		
		ENDIF
		
	ENDPROC

	PROCEDURE cboClass.Init
		THIS.ADDLISTITEM['** - All Classes',1,1]
		THIS.ADDLISTITEM['**',1,2]
		
		lnCount = 2
		SELECT taxcodes
		SCAN
		   THIS.ADDLISTITEM[taxcodes.cDesc,lnCount,1]
		   THIS.ADDLISTITEM[taxcodes.cTaxCode,lnCount,2]
		   lnCount = lnCount +1
		ENDSCAN
		
		THIS.LISTITEMID = 1
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE chklDetail.Click
		IF THIS.VALUE
		   thisform.lblClass.visible = .t.
		   thisform.cboClass.visible = .t.
		   thisform.chklShowFull.visible = .f.
		   thisform.chklShowFull.value = .f.
		ELSE
		   thisform.lblClass.visible = .f.
		   thisform.cboClass.visible = .f.
		   thisform.chklShowFull.visible = .t.
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE chkOwner.Click
		IF this.Value
		   do form commonsource\dmownersel
		   SELECT usersel
		   thisform.lblOwnerCount.Caption = TRANSFORM(RECCOUNT()) + ' owners selected'
		ELSE  
		   thisform.lblOwnerCount.Caption = 'No owners selected'   
		ENDIF   
	ENDPROC

	PROCEDURE chkSelected.Click
		IF this.Value
		   DO FORM commonsource\selected-ids WITH 'WELL' LINKED 
		   lnCount = RECCOUNT('selected')
		   thisform.lblselected.Caption = TRANSFORM(lnCount) + ' Wells Selected'
		   thisform.lblselected.Visible = .T.
		   thisform.lblbegID.Visible = .F.
		   thisform.lblendID.Visible = .F.
		   thisform.swrptlook1.Visible = .F.
		ELSE
		   thisform.lblselected.Visible = .F.
		   thisform.lblbegID.Visible = .T.
		   thisform.lblendID.Visible = .T.
		   thisform.swrptlook1.Visible = .T.
		ENDIF 
	ENDPROC

	PROCEDURE opgPeriod.Init
		IF DODEFAULT()
		   THIS.VALUE = 1
		ENDIF
		
	ENDPROC

	PROCEDURE opgPeriod.Option1.Click
		THISFORM.swperiod1.SET('visible',.T.)
		THISFORM.swyear1.SET('visible',.T.)
		THISFORM.swyear2.SET('visible',.T.)
		THISFORM.swperiod2.SET('visible',.T.)
		THISFORM.lblBegyear.CAPTION = 'Beginning Year:'
		thisform.lblBegYear.visible = .t.
		thisform.runcombo1.visible = .f.
		THISFORM.lblBegPeriod.VISIBLE = .T.
		THISFORM.lblEndYear.VISIBLE = .T.
		THISFORM.lblEndPeriod.VISIBLE = .T.
		THISFORM.lblDateRange.Visible = .F.
		THISFORM.swDate1.visible = .f.
		thisform.swdate2.visible = .f.
		thisform.swgroup1.Visible = .t.
		thisform.lblgroup.Visible = .t.
		DODEFAULT()
		
	ENDPROC

	PROCEDURE opgPeriod.Option2.Click
		THISFORM.swperiod1.SET('visible',.F.)
		THISFORM.swyear1.SET('visible',.F.)
		THISFORM.swyear2.SET('visible',.F.)
		THISFORM.swperiod2.SET('visible',.F.)
		THISFORM.lblBegyear.CAPTION = 'Run Number:'
		thisform.runcombo1.visible = .t.
		thisform.lblBegYear.visible = .t.
		THISFORM.lblBegPeriod.VISIBLE = .F.
		THISFORM.lblEndYear.VISIBLE = .F.
		THISFORM.lblEndPeriod.VISIBLE = .F.
		THISFORM.lblDateRange.Visible = .F.
		THISFORM.swDate1.visible = .f.
		thisform.swdate2.visible = .f.
		thisform.swgroup1.Visible = .f.
		thisform.lblgroup.Visible = .f.
		DODEFAULT()
		
	ENDPROC

	PROCEDURE opgPeriod.Option3.Click
		THISFORM.swperiod1.SET('visible',.F.)
		THISFORM.swyear2.SET('visible',.F.)
		THISFORM.swyear1.SET('visible',.F.)
		THISFORM.swperiod2.SET('visible',.F.)
		thisform.runcombo1.visible = .f.
		THISFORM.lblBegyear.Visible = .f.
		THISFORM.lblBegPeriod.VISIBLE = .F.
		THISFORM.lblEndYear.VISIBLE = .F.
		THISFORM.lblEndPeriod.VISIBLE = .F.
		THISFORM.lblDateRange.Visible = .T.
		THISFORM.swDate1.visible = .T.
		thisform.swdate2.visible = .T.
		thisform.swgroup1.Visible = .t.
		thisform.lblgroup.Visible = .t.
		DODEFAULT()
		
	ENDPROC

	PROCEDURE Runcombo1.Init
		IF DODEFAULT()
		   this.listitemid = 1
		ENDIF   
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cwellid,cwellname,cgroup,cwellstat'
		DO FORM ..\custom\picklist WITH 'Wells', lcList, thisform.swrptlook1.txtBegId.value, 4
		
		IF llOK
		   thisform.swrptlook1.txtBegId.value = cwellid
		   thisform.swrptlook1.txtBegName.value = cwellname
		   thisform.swrptlook1.txtBegId.refresh()
		   thisform.swrptlook1.txtBegName.refresh()
		ENDIF   
		
		thisform.setnextcontrol(thisform.swrptlook1.txtBegId)
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cwellid,cwellname,cgroup,cwellstat'
		DO FORM ..\custom\picklist WITH 'Wells', lcList, thisform.swrptlook1.txtEndId.value, 4
		
		IF llOK
		   thisform.swrptlook1.txtEndId.value = cwellid
		   thisform.swrptlook1.txtEndName.value = cwellname
		   thisform.swrptlook1.txtEndId.refresh()
		   thisform.swrptlook1.txtEndName.refresh()
		ENDIF   
		
		thisform.setnextcontrol(thisform.swrptlook1.txtEndId)
		
	ENDPROC

ENDDEFINE
