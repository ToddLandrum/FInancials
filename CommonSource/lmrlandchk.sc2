*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="lmrlandchk.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Relation2" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 200
	Left = 10
	Name = "Dataenvironment"
	Top = 337
	Width = 520

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "land", ;
		CursorSource = "land", ;
		Database = ..\ampro\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "leases", ;
		CursorSource = "leases", ;
		Database = ..\ampro\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "landhist", ;
		CursorSource = "landhist", ;
		Database = ..\ampro\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "checks", ;
		CursorSource = "checks", ;
		Database = ..\ampro\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor4", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "investor", ;
		CursorSource = "investor", ;
		Database = ..\ampro\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor5", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Relation2' AS relation WITH ;
		ChildAlias = "checks", ;
		ChildOrder = "id", ;
		Name = "Relation2", ;
		ParentAlias = "investor", ;
		RelationalExpr = "cownerid"
		*< END OBJECT: BaseClass="relation" />

ENDDEFINE

DEFINE CLASS formlmrlandchk AS frmrptcriteria OF "..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcCheckNo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swlookupbutton1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtcPayee" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: lcidchec
	*</DefinedPropArrayMethod>

	Caption = "Delay Rental Check Detail"
	DataSession = 2
	DoCreate = .T.
	Height = 233
	HelpContextID = 638
	Name = "Formlmrlandchk"
	Width = 427
	Swrptcriteriabuttons1.CHKSENDFILE.Alignment = 0
	Swrptcriteriabuttons1.CHKSENDFILE.Name = "CHKSENDFILE"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.CMDPREVIEW.Name = "CMDPREVIEW"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 96
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 5
	Swrptcriteriabuttons1.Top = 156

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "Check Number:", ;
		Left = 90, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 3, ;
		Top = 74
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Swlookupbutton1' AS swlookupbutton WITH ;
		Left = 253, ;
		Name = "Swlookupbutton1", ;
		TabIndex = 2, ;
		TabStop = .F., ;
		Top = 72
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'txtcCheckNo' AS txttextboxcustom WITH ;
		Height = 20, ;
		InputMask = "XXXXXXXXXX", ;
		Left = 168, ;
		Margin = 1, ;
		MaxLength = 10, ;
		Name = "txtcCheckNo", ;
		TabIndex = 1, ;
		Top = 72, ;
		Width = 79
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtcPayee' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		Enabled = .T., ;
		Height = 20, ;
		Left = 168, ;
		Name = "txtcPayee", ;
		TabIndex = 4, ;
		Top = 96, ;
		Width = 180
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />
	
	PROCEDURE builddata
		IF EMPTY(THISFORM.lcidchec)  &&  No check has been picked
		   RETURN .F.
		ENDIF
		
		LOCAL llFound
		
		THISFORM.cReportName = 'lmrlandchk.frx'
		THISFORM.cTitle1 = 'Delay Rental Report'
		THISFORM.cTitle2 = 'For Check #' + ALLTRIM(THISFORM.txtccheckNo.VALUE) + ' - ' + ALLTRIM(THISFORM.txtcPayee.VALUE)
		THISFORM.cSelectCriteria = 'Check #' + ALLTRIM(THISFORM.txtccheckNo.VALUE)
		
		llFound = .F.
		IF NOT EMPTY(THISFORM.txtccheckNo.VALUE)
		   SELECT checks
		   LOCATE FOR ALLTRIM(ccheckno) = ALLTRIM(THISFORM.txtccheckNo.VALUE)
		   IF FOUND()
		      SELECT landhist
		      LOCATE FOR cidchec = checks.cidchec
		      IF FOUND()
		         llFound = .T.
		         THISFORM.lcidchec = checks.cidchec
		      ELSE
		         THISFORM.oMessage.Warning('This check number was not used for a delay rental check.  Please re-enter the check number, or select the desired check from the list.')
		         RETURN .F.
		      ENDIF
		   ENDIF
		ENDIF
		
		SELECT landhist.cLeaseID,cLeaseName,nPmtAmount,nAcres,nPmtAcre  ;
		   FROM landhist,land WHERE cidchec = THISFORM.lcidchec AND land.cLeaseID = landhist.cLeaseID  ;
		   INTO CURSOR pmttemp ORDER BY landhist.cLeaseID
		
		
	ENDPROC

	PROCEDURE Init
		IF DODEFAULT()
		   * If we're in demo mode, tell the user that this is an optional module
		   IF m.goapp.ldemo
		      thisform.omessage.warning('The Land Management module is an optional module that can be purchased separately.' + ;
		                                ' It is included in the demo for evaluation purposes.')
		   ENDIF
		ENDIF 
	ENDPROC

	PROCEDURE Swlookupbutton1.Click
		IF USED('temp')
		   USE IN temp
		ENDIF
		IF USED('landtmp')
		   USE IN landtmp
		ENDIF
		llOK = .F.
		THISFORM.lcidchec = ''
		
		IF NOT m.goapp.lAMVersion  &&  DM only, so drop off the acctno column of the lookup
		     
		   SELECT cacctno, ccheckno, cid, cpayee, dcheckdate, namount, cidchec FROM checks  ;
		      WHERE NOT lvoid AND cidchec IN(SELECT cidchec FROM landhist) INTO CURSOR temp
		
		   USE DBF('temp') AGAIN IN 0 ALIAS landtmp
		
		   SELECT landtmp
		   INDEX ON cacctno+cid TAG cacctno
		   INDEX ON cpayee TAG cpayee
		   INDEX ON dcheckdate TAG dcheckdate
		   INDEX ON namount TAG namount
		   INDEX ON cid TAG cid
		   INDEX ON ccheckno TAG ccheckno
		
		   lcList = 'ccheckno\Check No,dcheckdate\Date,cid\Owner ID,cpayee\Name,namount\Amount'
		   DO FORM ..\CUSTOM\picklist WITH 'landtmp', lcList, THISFORM.txtcCheckNo.VALUE, 5,.T.,.T.
		   
		ELSE
		
		   SELECT cacctno, ccheckno, cid, cpayee, dcheckdate, namount, cidchec FROM checks  ;
		      WHERE NOT lvoid AND cidchec IN(SELECT cidchec FROM landhist) INTO CURSOR temp
		
		   USE DBF('temp') AGAIN IN 0 ALIAS landtmp
		
		   SELECT landtmp
		   INDEX ON cacctno+cid TAG cacctno
		   INDEX ON cpayee TAG cpayee
		   INDEX ON dcheckdate TAG dcheckdate
		   INDEX ON namount TAG namount
		   INDEX ON cid TAG cid
		   INDEX ON ccheckno TAG ccheckno
		
		   lcList = 'cacctno\Account No,dcheckdate\Date,ccheckno\Check No,cid\Owner ID,cpayee\Name,namount\Amount'
		   DO FORM ..\CUSTOM\picklist WITH 'landtmp', lcList, THISFORM.txtcCheckNo.VALUE, 6,.T.,.T.
		ENDIF
		
		
		IF llOK
		   THISFORM.lcidchec = landtmp.cidchec
		   THISFORM.txtcCheckNo.SET('value',landtmp.ccheckno)
		   THISFORM.txtcPayee.SET('value',landtmp.cpayee)
		ENDIF
		
	ENDPROC

	PROCEDURE txtcCheckNo.GotFocus
		ON KEY LABEL F2 _screen.activeform.swlookupbutton1.Click()
		DODEFAULT()
	ENDPROC

	PROCEDURE txtcCheckNo.LostFocus
		ON KEY LABEL F2 *
		DODEFAULT()
	ENDPROC

	PROCEDURE txtcCheckNo.Valid
		local llFound
		
		llfound = .f.
		
		if not empty(this.value)
		   this.Value = PADL(ALLTRIM(this.Value),10,' ')
		   select checks
		   scan for alltrim(ccheckno) = alltrim(this.value) 
		      select landhist
		      locate for cidchec = checks.cidchec
		      if found()
		         llFound = .t.
		         exit
		      endif
		   endscan
		   if llfound
		      thisform.txtcPayee.set('value',checks.cPayee)
		      thisform.lcidchec = checks.cidchec
		   else
		      WAIT WINDOW NOWAIT 'This check number was not used for a delay rental check.  Please re-enter the check number, or select the desired check from the list.'
		   endif
		endif
		
		dodefault()
	ENDPROC

	PROCEDURE txtcPayee.When
		return .f.
		
	ENDPROC

ENDDEFINE
