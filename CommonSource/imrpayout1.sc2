*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="imrpayout1.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor11" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor12" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Relation1" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 333
	Left = 40
	Name = "Dataenvironment"
	Top = 235
	Width = 585

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "decline", ;
		CursorSource = "decline", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor11' AS cursor WITH ;
		Alias = "expense", ;
		CursorSource = "expense", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor11", ;
		Top = 260, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor12' AS cursor WITH ;
		Alias = "expcat", ;
		CursorSource = "expcat", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 430, ;
		Name = "Cursor12", ;
		Top = 260, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "fields", ;
		CursorSource = "fields", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "groups", ;
		CursorSource = "groups", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "investor", ;
		CursorSource = "investor", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 430, ;
		Name = "Cursor4", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "options", ;
		CursorSource = "options", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor5", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor6", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor7' AS cursor WITH ;
		Alias = "wellinv", ;
		CursorSource = "wellinv", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor7", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor8' AS cursor WITH ;
		Alias = "wellhist", ;
		CursorSource = "wellhist", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 430, ;
		Name = "Cursor8", ;
		Top = 140, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor9' AS cursor WITH ;
		Alias = "disbhist", ;
		CursorSource = "disbhist", ;
		Database = ..\newdbc\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor9", ;
		Top = 260, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Relation1' AS relation WITH ;
		ChildAlias = "expense", ;
		ChildOrder = "ccatcode", ;
		Name = "Relation1", ;
		ParentAlias = "expcat", ;
		RelationalExpr = "ccatcode"
		*< END OBJECT: BaseClass="relation" />

ENDDEFINE

DEFINE CLASS formimpayout AS frmrptcriteria OF "..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom4" UniqueID="" Timestamp="" />

	Caption = "Well Payout Reports"
	DoCreate = .T.
	Height = 390
	HelpContextID = 643
	Name = "FormImpayout"
	Width = 424
	Swrptcriteriabuttons1.chkExport.Alignment = 0
	Swrptcriteriabuttons1.chkExport.Name = "chkExport"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.cmdPreview.Name = "cmdPreview"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 92
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 9
	Swrptcriteriabuttons1.Top = 323

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Beginning Well", ;
		Left = 55, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 4, ;
		Top = 52
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "Ending Well", ;
		Left = 70, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 5, ;
		Top = 102
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom3' AS lbllabelcustom WITH ;
		Caption = "Beginning Owner", ;
		Left = 41, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 7, ;
		Top = 190
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom4' AS lbllabelcustom WITH ;
		Caption = "Ending Owner", ;
		Left = 56, ;
		Name = "Lbllabelcustom4", ;
		TabIndex = 8, ;
		Top = 241
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		Left = 141, ;
		Name = "Swrptlook1", ;
		TabIndex = 3, ;
		Top = 50, ;
		ZOrderSet = 5, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		TxtBegID.clistexpression = wells.cwellid, ;
		TxtBegID.clistworkarea = wells, ;
		TxtBegID.Name = "TxtBegID", ;
		TxtBegName.Name = "TxtBegName", ;
		TxtEndID.clistexpression = wells.cwellid, ;
		TxtEndID.clistworkarea = wells, ;
		TxtEndID.Name = "TxtEndID", ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />

	ADD OBJECT 'Swrptlook2' AS swrptlook WITH ;
		Left = 141, ;
		Name = "Swrptlook2", ;
		TabIndex = 6, ;
		Top = 187, ;
		ZOrderSet = 3, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		txtBegID.clistexpression = investor.cownerid, ;
		txtBegID.clistworkarea = investor, ;
		txtBegID.Name = "txtBegID", ;
		TxtBegName.Name = "TxtBegName", ;
		txtEndID.clistexpression = investor.cownerid, ;
		txtEndID.clistworkarea = investor, ;
		txtEndID.Name = "txtEndID", ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />
	
	PROCEDURE builddata
		LOCAL tndectype, tcowner1, tcowner2, tclease1, tclease2, tnyears
		
		tcowner1  = THISFORM.swrptlook2.txtbegid.VALUE
		tcowner2  = THISFORM.swrptlook2.txtendid.VALUE
		tclease1  = THISFORM.swrptlook1.txtbegid.VALUE
		tclease2  = THISFORM.swrptlook1.txtendid.VALUE
		
		*  Get Drilling and Completion Costs
		SELECT expense.cwellid, expense.namount, expcat.ctaxcode ;
		   FROM expense, expcat ;
		   WHERE BETWEEN(expense.cwellid,tclease1,tclease2) ;
		   AND expense.ccateg = expcat.ccateg ;
		   AND INLIST(expcat.ctaxcode,'ID','TC','IC') ;
		   INTO CURSOR temp1
		
		SELECT cwellid, SUM(namount) AS namount FROM temp1 ORDER BY cwellid GROUP BY cwellid INTO CURSOR drillcomp
		
		*  Get gross loe costs
		SELECT expense.cwellid, expense.cyear, expense.cperiod, expense.namount, expcat.ctaxcode ;
		   FROM expense, expcat ;
		   WHERE BETWEEN(expense.cwellid,tclease1,tclease2) ;
		   AND expense.ccateg = expcat.ccateg ;
		   AND expcat.ctaxcode= 'OE' ;
		   AND expense.cyear <> 'FIXD' ;
		   INTO CURSOR temp1
		
		SELECT cwellid, cyear, cperiod, SUM(namount) AS nloe ;
		   FROM temp1 ;
		   ORDER BY cwellid, cyear, cperiod ;
		   GROUP BY cwellid, cyear, cperiod ;
		   INTO CURSOR loecosts
		
		*  Get surface costs
		SELECT cwellid, SUM(namount) AS nsurface ;
		   FROM expense ;
		   WHERE BETWEEN(expense.cwellid,tclease1,tclease2) ;
		   AND expense.ccatcode='2100' ;
		   AND expense.cyear <> 'FIXD' ;
		   INTO CURSOR surface ;
		   ORDER BY cwellid ;
		   GROUP BY cwellid
		
		*  Get gross revenue
		SELECT wellhist.cwellid, wellhist.hyear AS cyear, wellhist.hperiod AS cperiod, ;
		   SUM(ngasinc+noilinc+nmiscinc1+nmiscinc2+nothinc) AS ngrossrev, ;
		   SUM(ntotbbltx1+ntotbbltx2+ntotbbltx3+ntotbbltx4+ntotmcftx1+ntotmcftx2+ntotmcftx3+ntotmcftx4+ntotothtx1+ntotothtx2+ntotothtx3+ntotothtx4) AS ngrosstax ;
		   FROM wellhist ;
		   WHERE BETWEEN(wellhist.cwellid,tclease1,tclease2) ;
		   INTO CURSOR revenue ;
		   ORDER BY cwellid, hyear, hperiod ;
		   GROUP BY cwellid, hyear, hperiod
		
		CREATE CURSOR payout ;
		   (cownerid     c(10), ;
		   cownname     c(40), ;
		   caddress     c(60), ;
		   cwellid      c(10), ;
		   cwellname    c(40), ;
		   clegals      c(40), ;
		   dspuddate    d, ;
		   dcompdate    d, ;
		   ndrillcomp   N(12,2), ;
		   nowndc       N(12,2), ;
		   nworkint     N(11,7), ;
		   nnri         N(11,7), ;
		   nsurface     N(11,7), ;
		   nother       N(11,7), ;
		   nsurfacepen  N(11,7), ;
		   notherpen    N(11,7), ;
		   cyear        c(4), ;
		   cperiod      c(2), ;
		   nloe         N(12,2), ;
		   nownerloe    N(12,2), ;
		   ngrossrev    N(12,2), ;
		   ngrosstax    N(12,2), ;
		   nnetrev      N(12,2), ;
		   nownernetrev N(12,2), ;
		   npayout      N(12,2))
		
		SELECT cwellid, cwellname, csection, crange, ctnr, clocation, dspuddate, dcompdate ;
		   FROM wells ;
		   WHERE BETWEEN(wells.cwellid,tclease1,tclease2) ;
		   INTO CURSOR tempwell ;
		   ORDER BY cwellid ;
		   GROUP BY cwellid
		SELECT cownerid, cownname, caddress1a, ccity1, cstate1, czip1 ;
		   FROM investor ;
		   WHERE BETWEEN(cownerid,tcowner1,tcowner2) ;
		   INTO CURSOR tempowner ;
		   ORDER BY cownerid
		
		SELE tempwell
		SCAN
		   SCATTER MEMVAR
		   m.clegals = ALLT(m.clocation) + ' SECTION ' + ALLT(m.csection) + ' T'+ALLT(m.ctnr)+' R'+ALLT(m.crange)
		
		   SELE drillcomp
		   LOCATE FOR cwellid = m.cwellid
		   IF FOUND()
		      m.ndrillcomp = namount
		   ELSE
		      m.ndrillcomp = 0
		   ENDIF
		
		   SELE surface
		   LOCATE FOR cwellid = m.cwellid
		   IF FOUND()
		      m.nsurfacecost = nsurface
		   ELSE
		      m.nsurfacecost = 0
		   ENDIF
		
		   SELE tempowner
		   SCAN
		      SCATTER MEMVAR
		      m.caddress = ALLT(m.caddress1a) + ', ' + ALLT(m.ccity1)+', '+ m.cstate1+' '+m.czip1
		      SELE wellinv
		      LOCATE FOR cownerid = m.cownerid AND cwellid = m.cwellid
		      IF FOUND()
		         m.nsurfacepen = nsurfacepen
		         m.notherpen   = notherpen
		         m.nworkint    = nwi
		         m.nnri        = nri
		
		         m.nsurface = ROUND(m.nsurfacecost * (m.nsurfacepen/100),2)
		         m.nother   = ROUND((m.ndrillcomp-m.nsurfacecost) * (m.notherpen/100),2)
		
		         IF m.nsurface = 0 AND m.nother = 0
		            m.nowndc = ROUND(m.ndrillcomp*(m.nworkint/100),2)
		         ELSE
		            m.nowndc   = ROUND((m.nsurface+m.nother)*(m.nworkint/100),2)
		         ENDIF
		
		         SELE loecosts
		         SCAN FOR cwellid = m.cwellid
		            SCATTER MEMVAR
		
		            STORE 0 TO m.ngrossrev, m.ngrosstax, m.nnetrev, m.nownernetrev, m.nincome, m.ntaxes
		
		            m.nownerloe  = ROUND(m.nloe*(m.nworkint/100),2)
		
		            m.npayout = 0
		
		            INSERT INTO payout FROM MEMVAR
		         ENDSCAN && loecosts
		
		         SELE revenue
		         SCAN FOR cwellid = m.cwellid
		            SCATTER MEMVAR
		
		            m.nnetrev = m.ngrossrev - m.ngrosstax
		            m.nownernetrev = ROUND(m.nnetrev*(m.nnri/100),2)
		
		            SELE payout
		            LOCATE FOR cwellid = m.cwellid AND cyear = m.cyear AND cperiod = m.cperiod
		            IF FOUND()
		               REPL nnetrev WITH m.nnetrev, ;
		                  ngrossrev WITH m.ngrossrev, ;
		                  ngrosstax WITH m.ngrosstax, ;
		                  nownernetrev WITH m.nownernetrev
		            ELSE
		               INSERT INTO payout FROM MEMVAR
		            ENDIF
		         ENDSCAN
		
		      ENDIF
		   ENDSCAN  && tempowner
		ENDSCAN  && tempwell
		
		
		SELE payout
		GO TOP
		lnpayout = nowndc
		REPL npayout WITH nowndc
		SCAN
		   SCATTER MEMVAR
		   m.npayout = lnpayout + m.nownerloe - m.nownernetrev
		   REPL npayout WITH m.npayout
		   lnpayout = m.npayout
		ENDSCAN
		
		
		
		THISFORM.creportname = 'imrwpayout1'
		THISFORM.cselectcriteria = ''
		THISFORM.csortorder      = ''
		THISFORM.ctitle1         = ''
		
		SELECT payout
		IF RECC() > 0
		   RETURN .T.
		ELSE
		   RETURN .F.
		ENDIF
		
		
		
	ENDPROC

	PROCEDURE Init
		DODEFAULT()
		SELECT wells
		SET ORDER TO cwellid
		GO TOP
		thisform.swrptlook1.txtbegid.value = cwellid
		thisform.swrptlook1.txtbegname.value = cwellname
		GO BOTT
		thisform.swrptlook1.txtendid.value = cwellid
		thisform.swrptlook1.txtendname.value = cwellname
		
		SELECT investor
		SET ORDER TO cownerid
		GO TOP
		thisform.swrptlook2.txtbegid.value = cownerid
		thisform.swrptlook2.txtbegname.value = cownname
		GO BOTT
		thisform.swrptlook2.txtendid.value = cownerid
		thisform.swrptlook2.txtendname.value = cownname
		
		
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cwellid,cwellname,cgroup,cwellstat'
		DO FORM ..\custom\picklist WITH 'Wells', lcList, 'cwellid', 4
		
		IF llOK
		   thisform.swrptlook1.txtBegId.value = cwellid
		   thisform.swrptlook1.txtBegName.value = cwellname
		   thisform.swrptlook1.txtBegId.SetFocus()
		   thisform.swrptlook1.txtBegId.refresh()
		   thisform.swrptlook1.txtBegName.refresh()
		ENDIF   
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cwellid,cwellname,cgroup,cwellstat'
		DO FORM ..\custom\picklist WITH 'Wells', lcList, 'cwellid', 4
		
		IF llOK
		   thisform.swrptlook1.txtEndId.value = cwellid
		   thisform.swrptlook1.txtEndName.value = cwellname
		   thisform.swrptlook1.txtEndId.SetFocus()
		   thisform.swrptlook1.txtEndId.refresh()
		   thisform.swrptlook1.txtEndName.refresh()
		ENDIF   
	ENDPROC

	PROCEDURE Swrptlook2.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cownerid,cownname'
		
		DO FORM ..\custom\picklist WITH 'Investor', lcList, thisform.swrptlook2.txtBegId.value, 2
		
		IF llOK
		   thisform.swrptlook2.txtBegId.value = cOwnerID
		   thisform.swrptlook2.txtBegName.value = cOwnname
		   thisform.swrptlook2.txtBegId.refresh()
		   thisform.swrptlook2.txtBegName.refresh()
		ENDIF   
		
		thisform.setnextcontrol(thisform.swrptlook2.txtBegId)
		
	ENDPROC

	PROCEDURE Swrptlook2.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cownerid,cownname'
		
		DO FORM ..\custom\picklist WITH 'Investor', lcList, thisform.swrptlook2.txtEndId.value, 2
		
		IF llOK
		   thisform.swrptlook2.txtEndId.value = cOwnerID
		   thisform.swrptlook2.txtEndName.value = cOwnname
		   thisform.swrptlook2.txtEndId.refresh()
		   thisform.swrptlook2.txtEndName.refresh()
		ENDIF   
		
		thisform.setnextcontrol(thisform.swrptlook2.txtEndId)
		
	ENDPROC

	PROCEDURE Swrptlook2.txtBegID.GotFocus
		ON KEY LABEL F2 _screen.activeform.swrptlook2.swlookupbutton1.Click()
	ENDPROC

	PROCEDURE Swrptlook2.txtBegID.LostFocus
		on key label F2 *
	ENDPROC

	PROCEDURE Swrptlook2.txtEndID.Click
		IF NOT EMPTY(THIS.VALUE)
		   SELECT investor
		   IF SEEK(THIS.VALUE)
		      THISFORM.swrptlook1.txtEndName.VALUE = cownname
		      THISFORM.swrptlook1.txtEndName.REFRESH()
		   ELSE
		      WAIT WIND NOWAIT 'Invalid Owner ID Entered...'
		      THISFORM.swrptlook1.txtEndName.VALUE = ''
		      THISFORM.swrptlook1.txtEndName.REFRESH()
		      RETURN 0
		   ENDIF
		ENDIF
		
	ENDPROC

	PROCEDURE Swrptlook2.txtEndID.GotFocus
		ON KEY LABEL F2 _screen.activeform.swrptlook2.swlookupbutton2.Click()
	ENDPROC

	PROCEDURE Swrptlook2.txtEndID.LostFocus
		on key label F2 *
	ENDPROC

ENDDEFINE
