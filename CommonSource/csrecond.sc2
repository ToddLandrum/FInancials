*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="csrecond.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor11" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor12" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 548
	InitialSelectedAlias = "checks"
	Left = 104
	Name = "Dataenvironment"
	Top = 143
	Width = 748

	ADD OBJECT 'Cursor11' AS cursor WITH ;
		Alias = "uncleared_checksd", ;
		CursorSource = "uncleared_checksd", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 146, ;
		Name = "Cursor11", ;
		Top = 320, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor12' AS cursor WITH ;
		Alias = "chkclear", ;
		BufferModeOverride = 5, ;
		CursorSource = "chkclear", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor12", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "checks", ;
		BufferModeOverride = 5, ;
		CursorSource = "checks", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 129, ;
		Name = "Cursor2", ;
		Top = 22, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "checkrec", ;
		BufferModeOverride = 5, ;
		CursorSource = "checkrec", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 256, ;
		Name = "Cursor3", ;
		Top = 19, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "reconsav", ;
		BufferModeOverride = 5, ;
		CursorSource = "reconsav", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 365, ;
		Name = "Cursor4", ;
		Top = 22, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "uncleared_checks", ;
		CursorSource = "uncleared_checks", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 143, ;
		Name = "Cursor5", ;
		NoDataOnLoad = .T., ;
		Top = 155, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "checkbal", ;
		BufferModeOverride = 5, ;
		CursorSource = "checkbal", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 286, ;
		Name = "Cursor6", ;
		Top = 162, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor8' AS cursor WITH ;
		Alias = "glopt", ;
		CursorSource = "glopt", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 84, ;
		Left = 509, ;
		Name = "Cursor8", ;
		Top = 10, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor9' AS cursor WITH ;
		Alias = "checkbal1", ;
		CursorSource = "checkbal", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 430, ;
		Name = "Cursor9", ;
		Top = 160, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formcsrecon AS frmdatamanagerformcustom OF "..\custom\cforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Shpshapecustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboCashAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCashAcct" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblClear" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lblfieldlabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblOpnBal" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEndBal" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtOpnBal" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtEndBal" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDiff" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblItems" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column1.Chkcheckboxcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column2.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column3.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column3.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column4.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column4.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column5.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column5.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column6.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Grdgridcustom1.Column6.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtDiff" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdMarkall" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdUnmarkAll" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOldrpts" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDepand" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblChkand" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdRefresh" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEnd" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdReconRpt" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdDocument" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtRecDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdACH" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtDepCnt" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtChkCnt" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtChkAmt" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtDepAmt" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtClearBal" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkStmtEnding" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtEnding" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: askexit
		*m: keepit
		*m: loadtran
		*m: lookieacct
		*m: lookscacct
		*m: markach		&& Marks all ACH entries cleared.
		*m: marktran
		*m: prelimreport
		*m: process
		*m: reconrpt		&& Prints preliminary recon detail report of marked items.
		*m: recon_rpt
		*m: requerychks		&& Requeries the uncleared checks view
		*m: unmarkach		&& Un Marks ACH entries.
		*m: viewdocument
		*p: account
		*p: ndoubleclickspeed
	*</DefinedPropArrayMethod>

	Caption = "Reconcile Bank Accounts"
	cnavworkarea = checks
	cworkarea = checks
	DoCreate = .T.
	Height = 538
	HelpContextID = 113
	lexpliciteditmode = .F.
	Name = "FormCsrecon"
	ndoubleclickspeed = 0
	Visible = .T.
	Width = 694
	_memberdata = <VFPData>
		<memberdata name="viewdocument" display="ViewDocument"/>
		</VFPData>
	cmdatamanager.lrecyclerecords = .T.
	cmdatamanager.Name = "cmdatamanager"
	cmdatamanager.TabIndex = 6
	cmdatamanager.ZOrderSet = 0
	cmlookupmanager.Name = "cmlookupmanager"
	Mwresize1.lblHighLight.Name = "lblHighLight"
	Mwresize1.lblShading.Name = "lblShading"
	Mwresize1.Name = "Mwresize1"

	ADD OBJECT 'cboCashAcct' AS cbocomboboxcustom WITH ;
		BoundColumn = 2, ;
		ControlSource = "", ;
		Height = 20, ;
		Left = 86, ;
		Name = "cboCashAcct", ;
		RowSource = "", ;
		RowSourceType = 0, ;
		TabIndex = 1, ;
		Top = 9, ;
		Width = 286, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'chkStmtEnding' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Only To This Date", ;
		Left = 580, ;
		Name = "chkStmtEnding", ;
		Top = 11, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\..\dmie_rv\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdACH' AS cmdcommandbuttoncustom WITH ;
		Caption = "Mark ACH", ;
		Height = 28, ;
		Left = 603, ;
		Name = "cmdACH", ;
		TabIndex = 20, ;
		Top = 432, ;
		Visible = .F., ;
		Width = 75, ;
		ZOrderSet = 40
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdCancel' AS cmdcommandbuttoncustom WITH ;
		Caption = "\<Cancel", ;
		Height = 36, ;
		Left = 603, ;
		Name = "cmdCancel", ;
		TabIndex = 30, ;
		Top = 100, ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdDocument' AS cmdcommandbuttoncustom WITH ;
		Caption = "\<Documents", ;
		Height = 37, ;
		Left = 603, ;
		Name = "cmdDocument", ;
		TabIndex = 17, ;
		TabStop = .F., ;
		Top = 157, ;
		Width = 75, ;
		ZOrderSet = 27
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdMarkall' AS cmdcommandbuttoncustom WITH ;
		Caption = "\<Mark All", ;
		Height = 20, ;
		Left = 603, ;
		Name = "cmdMarkall", ;
		TabIndex = 11, ;
		Top = 280, ;
		Width = 75, ;
		ZOrderSet = 38
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOK' AS cmdcommandbuttoncustom WITH ;
		Caption = "\<OK", ;
		Height = 36, ;
		Left = 603, ;
		Name = "cmdOK", ;
		TabIndex = 29, ;
		Top = 52, ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOldrpts' AS cmdcommandbuttoncustom WITH ;
		Caption = "Past \<Reports", ;
		Height = 28, ;
		Left = 603, ;
		Name = "cmdOldrpts", ;
		TabIndex = 21, ;
		Top = 492, ;
		Width = 75, ;
		ZOrderSet = 40
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdReconRpt' AS cmdcommandbuttoncustom WITH ;
		Caption = "Prelim Rpt", ;
		Height = 28, ;
		Left = 603, ;
		Name = "cmdReconRpt", ;
		TabIndex = 20, ;
		Top = 372, ;
		Width = 75, ;
		ZOrderSet = 40
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdRefresh' AS cmdcommandbuttoncustom WITH ;
		Caption = "Re\<fresh", ;
		Height = 36, ;
		Left = 604, ;
		Name = "cmdRefresh", ;
		TabIndex = 28, ;
		Top = 208, ;
		Width = 72
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdUnmarkAll' AS cmdcommandbuttoncustom WITH ;
		Caption = "\<Unmark All", ;
		Height = 20, ;
		Left = 603, ;
		Name = "cmdUnmarkAll", ;
		TabIndex = 12, ;
		Top = 309, ;
		Width = 75, ;
		ZOrderSet = 39
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Grdgridcustom1' AS grdgridcustom WITH ;
		ColumnCount = 6, ;
		Height = 324, ;
		lcolumnmemory = .F., ;
		Left = 12, ;
		Name = "Grdgridcustom1", ;
		Panel = 1, ;
		RecordSource = "checkbal", ;
		TabIndex = 5, ;
		Top = 128, ;
		Width = 576, ;
		Column1.ColumnOrder = 1, ;
		Column1.ControlSource = "checkbal.lclear", ;
		Column1.FontSize = 8, ;
		Column1.Name = "Column1", ;
		Column1.Sparse = .F., ;
		Column1.Visible = .T., ;
		Column1.Width = 22, ;
		Column2.ColumnOrder = 3, ;
		Column2.ControlSource = "checkbal.dcheckdate", ;
		Column2.FontSize = 8, ;
		Column2.Name = "Column2", ;
		Column2.Visible = .T., ;
		Column2.Width = 67, ;
		Column3.ColumnOrder = 4, ;
		Column3.ControlSource = "checkbal.ccheckno", ;
		Column3.FontSize = 8, ;
		Column3.Name = "Column3", ;
		Column3.Visible = .T., ;
		Column3.Width = 71, ;
		Column4.ColumnOrder = 5, ;
		Column4.ControlSource = "checkbal.cpayee", ;
		Column4.FontSize = 8, ;
		Column4.Name = "Column4", ;
		Column4.Visible = .T., ;
		Column4.Width = 251, ;
		Column5.ColumnOrder = 6, ;
		Column5.ControlSource = "checkbal.namount", ;
		Column5.FontSize = 8, ;
		Column5.Name = "Column5", ;
		Column5.Visible = .T., ;
		Column5.Width = 92, ;
		Column6.ColumnOrder = 2, ;
		Column6.ControlSource = "checkbal.centrytype", ;
		Column6.Name = "Column6", ;
		Column6.Width = 35
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="grid" />

	ADD OBJECT 'Grdgridcustom1.Column1.Chkcheckboxcustom1' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "", ;
		ControlSource = "checkbal.lclear", ;
		Left = 7, ;
		Name = "Chkcheckboxcustom1", ;
		Top = 32
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Grdgridcustom1.Column1.Header1' AS header WITH ;
		Caption = "Clr", ;
		FontSize = 8, ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grdgridcustom1.Column2.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "Date", ;
		FontSize = 8, ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grdgridcustom1.Column2.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ControlSource = "checkbal.dcheckdate", ;
		FontSize = 8, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		Visible = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Grdgridcustom1.Column3.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "Check #", ;
		FontSize = 8, ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grdgridcustom1.Column3.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ControlSource = "checkbal.ccheckno", ;
		FontSize = 8, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		Visible = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Grdgridcustom1.Column4.Header1' AS header WITH ;
		Caption = "Payee", ;
		FontSize = 8, ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grdgridcustom1.Column4.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ControlSource = "checkbal.cpayee", ;
		FontSize = 8, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		Visible = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Grdgridcustom1.Column5.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "Amount", ;
		FontSize = 8, ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grdgridcustom1.Column5.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ControlSource = "checkbal.namount", ;
		FontSize = 8, ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		Visible = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Grdgridcustom1.Column6.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "Type", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'Grdgridcustom1.Column6.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		ControlSource = "checkbal.centrytype", ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'lblCashAcct' AS lbllabelcustom WITH ;
		Caption = "Bank Account", ;
		Left = 12, ;
		Name = "lblCashAcct", ;
		TabIndex = 7, ;
		Top = 11, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblChkand' AS lbllabelcustom WITH ;
		Alignment = 1, ;
		Caption = "Checks and Payments", ;
		Height = 16, ;
		Left = 104, ;
		Name = "lblChkand", ;
		TabIndex = 23, ;
		Top = 499, ;
		Width = 109, ;
		ZOrderSet = 42
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblClear' AS lbllabelcustom WITH ;
		Caption = "Cleared Balance", ;
		Height = 16, ;
		Left = 372, ;
		Name = "lblClear", ;
		TabIndex = 25, ;
		Top = 486, ;
		Width = 81, ;
		ZOrderSet = 44
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblDepand' AS lbllabelcustom WITH ;
		Alignment = 1, ;
		AutoSize = .F., ;
		Caption = "Deposits and Other Credits", ;
		Height = 17, ;
		Left = 61, ;
		Name = "lblDepand", ;
		TabIndex = 22, ;
		Top = 473, ;
		Width = 152, ;
		ZOrderSet = 41
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblDiff' AS lbllabelcustom WITH ;
		Caption = "Difference", ;
		Height = 16, ;
		Left = 372, ;
		Name = "lblDiff", ;
		TabIndex = 26, ;
		Top = 513, ;
		Width = 53, ;
		ZOrderSet = 45
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblEnd' AS lbllabelcustom WITH ;
		Caption = "Ending Balance", ;
		Height = 16, ;
		Left = 372, ;
		Name = "lblEnd", ;
		TabIndex = 34, ;
		Top = 459, ;
		Width = 76, ;
		ZOrderSet = 43
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblEndBal' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Ending Balance", ;
		Height = 16, ;
		Left = 378, ;
		Name = "lblEndBal", ;
		TabIndex = 24, ;
		Top = 37, ;
		Width = 76, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lblfieldlabelcustom1' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Reconciliation Date", ;
		Height = 16, ;
		Left = 378, ;
		Name = "Lblfieldlabelcustom1", ;
		TabIndex = 8, ;
		Top = 11, ;
		Width = 93, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblItems' AS lbllabelcustom WITH ;
		Caption = "Items you have marked cleared", ;
		Height = 16, ;
		Left = 30, ;
		Name = "lblItems", ;
		TabIndex = 27, ;
		Top = 454, ;
		Width = 152, ;
		ZOrderSet = 46
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Alignment = 2, ;
		Caption = "Make sure you've entered any service charges or interest via a general journal entry or other method before beginning the reconciliation.", ;
		FontSize = 10, ;
		ForeColor = 0,0,160, ;
		Height = 34, ;
		Left = 64, ;
		Name = "Lbllabelcustom1", ;
		Top = 74, ;
		Width = 448, ;
		WordWrap = .T.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblOpnBal' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Opening Balance:", ;
		Height = 16, ;
		Left = 12, ;
		Name = "lblOpnBal", ;
		TabIndex = 9, ;
		Top = 37, ;
		Width = 87, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Shpshapecustom1' AS shpshapecustom WITH ;
		Height = 60, ;
		Left = 8, ;
		Name = "Shpshapecustom1", ;
		Top = 62, ;
		Width = 580, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="shape" />

	ADD OBJECT 'txtChkAmt' AS txttextboxcustom WITH ;
		Alignment = 1, ;
		Height = 20, ;
		InputMask = "999,999,999.99", ;
		Left = 233, ;
		lreadonly = .T., ;
		Name = "txtChkAmt", ;
		ReadOnly = .F., ;
		TabIndex = 15, ;
		TabStop = .F., ;
		Top = 497, ;
		Width = 92, ;
		ZOrderSet = 33
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtChkCnt' AS txttextboxcustom WITH ;
		Height = 20, ;
		Left = 28, ;
		lreadonly = .T., ;
		Name = "txtChkCnt", ;
		ReadOnly = .F., ;
		TabIndex = 14, ;
		TabStop = .F., ;
		Top = 497, ;
		Width = 44, ;
		ZOrderSet = 32
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtClearBal' AS txttextboxcustom WITH ;
		Alignment = 1, ;
		Height = 20, ;
		InputMask = "999,999,999.99", ;
		Left = 456, ;
		lreadonly = .T., ;
		Name = "txtClearBal", ;
		ReadOnly = .F., ;
		TabIndex = 17, ;
		TabStop = .F., ;
		Top = 484, ;
		Width = 109, ;
		ZOrderSet = 35
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtDepAmt' AS txttextboxcustom WITH ;
		Alignment = 1, ;
		Height = 20, ;
		InputMask = "999,999,999.99", ;
		Left = 233, ;
		lreadonly = .T., ;
		Name = "txtDepAmt", ;
		ReadOnly = .F., ;
		TabIndex = 16, ;
		TabStop = .F., ;
		Top = 471, ;
		Width = 92, ;
		ZOrderSet = 34
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtDepCnt' AS txttextboxcustom WITH ;
		Height = 20, ;
		InputMask = "999", ;
		Left = 28, ;
		lreadonly = .T., ;
		Name = "txtDepCnt", ;
		ReadOnly = .F., ;
		TabIndex = 13, ;
		TabStop = .F., ;
		Top = 471, ;
		Width = 44, ;
		ZOrderSet = 31
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtDiff' AS txttextboxcustom WITH ;
		Alignment = 1, ;
		Height = 20, ;
		InputMask = "999,999,999.99", ;
		Left = 456, ;
		lreadonly = .T., ;
		Name = "txtDiff", ;
		ReadOnly = .F., ;
		TabIndex = 19, ;
		TabStop = .F., ;
		Top = 511, ;
		Width = 109, ;
		ZOrderSet = 37
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtEndBal' AS txttextboxcustom WITH ;
		Alignment = 1, ;
		Format = "K", ;
		Height = 20, ;
		InputMask = "999,999,999.99", ;
		Left = 458, ;
		MaxLength = 9, ;
		Name = "txtEndBal", ;
		TabIndex = 4, ;
		Top = 35, ;
		Width = 117, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtEnding' AS txttextboxcustom WITH ;
		Alignment = 1, ;
		Height = 20, ;
		InputMask = "999,999,999.99", ;
		Left = 456, ;
		lreadonly = .T., ;
		Name = "txtEnding", ;
		ReadOnly = .F., ;
		TabIndex = 18, ;
		TabStop = .F., ;
		Top = 457, ;
		Width = 109, ;
		ZOrderSet = 36
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtOpnBal' AS txttextboxcustom WITH ;
		BackColor = 212,208,200, ;
		BackStyle = 1, ;
		ControlSource = "", ;
		Format = "", ;
		Height = 20, ;
		InputMask = "999,999,999.99", ;
		Left = 115, ;
		lreadonly = .F., ;
		Name = "txtOpnBal", ;
		ReadOnly = .F., ;
		TabIndex = 3, ;
		Top = 35, ;
		Width = 113, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtRecDate' AS dpk WITH ;
		ControlSource = "", ;
		Height = 20, ;
		Left = 477, ;
		Name = "txtRecDate", ;
		TabIndex = 2, ;
		Top = 10, ;
		Visible = .T., ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />
	
	PROCEDURE askexit
	ENDPROC

	PROCEDURE beforeclose
		LPARAMETERS nCloseReason
		
		thisform.cmdCancel.click()
	ENDPROC

	PROCEDURE Init
		LOCAL m.nChkCnt, lcAcctNo
		PRIV lcRecAcct
		DIME laAccounts[1]
		
		STORE '' TO m.cAcctNo
		
		IF NOT m.goApp.lAMVersion
		   THISFORM.lblCashAcct.VISIBLE = .F.
		   THISFORM.cboCashAcct.VISIBLE = .F.
		   THISFORM.CAPTION = 'Reconcile Bank Account'
		ELSE
		   SELECT cAcctDesc, cAcctNo FROM COA WHERE lBankAcct = .T. ;
		      INTO ARRAY laAccounts ORDER BY cAcctNo
		
		   IF _TALLY > 0
		      m.cAcctNo = laAccounts[1,2]
		   ELSE
		      m.cAcctNo = ' '
		      DIME laAccounts[1,2]
		      laAccounts[1,1] = ' '
		      laAccounts[1,2] = ' '
		   ENDIF
		ENDIF
		
		SET DELETED ON
		
		WITH THISFORM
		   .txtDepCnt.VALUE = 0
		   .txtChkCnt.VALUE = 0
		   .txtChkAmt.VALUE = 0
		   .txtClearBal.VALUE = 0
		   .txtDepAmt.VALUE = 0
		   .txtEnding.VALUE = 0
		   .txtDiff.VALUE = 0
		   .txtEndBal.VALUE = 0
		ENDWITH
		
		lnOpenBal = 0
		lnTran    = 1
		m.cSCAcct = ' '
		m.cIEAcct = ' '
		llDate    = .F.
		llCheck   = .T.
		
		
		WAIT WIND NOWAIT 'Building Reconciliation Files...Please Wait'
		
		STORE 0 TO m.nDepCnt, m.nChkCnt, m.nDepAmt, m.nChkAmt, ;
		   m.nEndingBal, m.nClearBal, m.nDiffBal, ;
		   m.nOpenBal, m.nEndBal, m.nServChg, m.nIntEarned
		
		m.dServChg   = DATE()
		m.dIntEarned = DATE()
		m.drecdate   = DATE()
		STORE 0 TO m.nEndBal, m.nClearBal, m.nDiffBal, m.nDepCnt, m.nChkCnt, ;
		   m.nDepAmt, m.nChkAmt
		
		lcRecAcct = m.cAcctNo
		THIS.account = lcRecAcct
		
		THISFORM.loadtran(m.cAcctNo)
		
		IF FILE('datafiles\markach.cfg')
		   thisform.cmdACH.visible = .t.
		ENDIF 
		
		IF m.goApp.lDocuments
		   thisform.AddObject('oFileDialog','sffiledialog')
		   thisform.cmdDocument.visible = .t.
		ELSE
		   thisform.cmdDocument.visible = .f.
		ENDIF 
		
		
		swSELECT('checkbal')
		
	ENDPROC

	PROCEDURE keepit
		LOCAL llReturn, loError
		LOCAL cAcctNo, cidchec, drecDate, nEndBal
		
		llReturn = .T.
		
		TRY
		   m.cAcctNo  = THISFORM.cboCashAcct.VALUE
		   m.drecDate = THISFORM.txtRecDate.VALUE
		   m.nEndBal  = THISFORM.txtEndBal.VALUE
		
		   swSELECT('reconsav')
		   IF m.goApp.lAMVersion
		      DELETE FOR cAcctNo = m.cAcctNo
		   ELSE
		      DELETE ALL
		   ENDIF
		
		   swSELECT('checkbal')
		   SCAN FOR lClear = .T.
		      m.cidchec = cidchec
		      INSERT INTO reconsav FROM MEMVAR
		   ENDSCAN
		
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'KeepIT', loError.LINENO, 'Bank Recon', loError.ERRORNO, loError.MESSAGE, '', loError
		   MESSAGEBOX('Unable to process the reconciliation at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
	ENDPROC

	PROCEDURE loadtran
		LPARA tcAcctno
		
		LOCAL llFound, llReturn, loError
		LOCAL cAcctNo, cidchec, nChkAmt, nChkCnt, nClearBal, nDepAmt, nDepCnt, nDiffBal, nEndBal
		LOCAL nopenbal, tempbal1, tempbal2
		
		thisform.LockScreen = .t. 
		
		llReturn = .T.
		
		TRY
		   WAIT WIND NOWAIT 'Building Reconciliation Files...Please Wait'
		
		   SET DELETED ON
		
		   m.cAcctNo = tcAcctno
		   STORE 0 TO m.nChkCnt, m.nChkAmt, m.nDepCnt, m.nDepAmt
		
		   m.nEndBal = THISFORM.txtEndBal.VALUE
		
		   THISFORM.txtDepCnt.VALUE   = 0
		   THISFORM.txtChkCnt.VALUE   = 0
		   THISFORM.txtDepAmt.VALUE   = 0
		   THISFORM.txtChkAmt.VALUE   = 0
		   THISFORM.txtClearBal.VALUE = 0
		   THISFORM.txtDiff.VALUE     = 0
		   THISFORM.txtopnBal.VALUE   = 0
		
		   IF m.goApp.lAMVersion
		      IF thisform.chkStmtEnding.Value 
		         SELECT dRecDate, nEndBal FROM checkrec ;
		            WHERE cAcctNo = m.cAcctNo ;
		              AND dRecDate <= thisform.txtrecDate.Value ;
		            INTO CURSOR tempbal ;
		            ORDER BY dRecDate DESC
		      ELSE
		         SELECT dRecDate, nEndBal ;
		            FROM checkrec ;
		            WHERE cAcctNo = m.cAcctNo ;
		            INTO CURSOR tempbal ;
		            ORDER BY dRecDate DESC
		      ENDIF    
		   ELSE
		      IF thisform.chkStmtEnding.value
		         SELECT dRecDate, nEndBal ;
		            FROM checkrec ;
		            WHERE dRecDate <= thisform.txtrecDate.Value ;
		            INTO CURSOR tempbal ;
		            ORDER BY dRecDate DESC
		      ELSE
		         SELECT dRecDate, nEndBal ;
		            FROM checkrec ;
		            INTO CURSOR tempbal ;
		            ORDER BY dRecDate DESC
		      ENDIF       
		   ENDIF
		
		   IF _TALLY > 0
		      SELE tempbal
		      GO TOP
		      m.nopenbal                 = tempbal.nEndBal
		      THISFORM.txtopnBal.VALUE   = m.nopenbal
		      THISFORM.txtClearBal.VALUE = m.nopenbal
		      m.nClearBal                = m.nopenbal
		      m.nDiffBal                 = m.nEndBal - m.nClearBal
		      THISFORM.txtDiff.VALUE     = m.nDiffBal
		      THISFORM.requerychks(tcAcctno, .T.)
		   ELSE
		      IF m.goApp.lAMVersion
		         *  Calculate the opening balance.
		       SELECT  SUM(nAmount) AS nopenbal ;
		          FROM checks ;
		          WHERE lCleared = .T. ;
		             AND lHist    = .F. ;
		             AND cAcctNo = tcAcctno ;
		             AND cEntryType = 'D';
		          INTO CURSOR temp1
		      ELSE
		       SELECT  SUM(nAmount) AS nopenbal ;
		          FROM checks ;
		          WHERE lCleared = .T. ;
		             AND lHist    = .F. ;
		             AND cEntryType = 'D';
		          INTO CURSOR temp1
		      ENDIF
		
		      IF _TALLY > 0
		         SELECT temp1
		         GO TOP
		         IF ISNULL(nopenbal)
		            m.tempbal1 = 0
		         ELSE
		            m.tempbal1 = nopenbal
		         ENDIF
		      ELSE
		         m.tempbal1 = 0
		      ENDIF
		
		      IF m.goApp.lAMVersion
		       SELECT  SUM(nAmount) AS nopenbal ;
		          FROM checks ;
		          WHERE lCleared = .T. ;
		             AND lHist    = .F. ;
		             AND cAcctNo = tcAcctno ;
		             AND cEntryType = 'C' ;
		          INTO CURSOR temp2
		      ELSE
		       SELECT  SUM(nAmount) AS nopenbal ;
		          FROM checks ;
		          WHERE lCleared = .T. ;
		             AND lHist    = .F. ;
		             AND cEntryType = 'C' ;
		          INTO CURSOR temp2
		      ENDIF
		
		      IF _TALLY > 0
		         SELECT temp2
		         GO TOP
		         IF ISNULL(nopenbal)
		            m.tempbal2 = 0
		         ELSE
		            m.tempbal2 = nopenbal
		         ENDIF
		      ELSE
		         m.tempbal2 = 0
		      ENDIF
		
		      m.nopenbal                 = m.tempbal1 - m.tempbal2
		
		      THISFORM.txtopnBal.VALUE   = m.nopenbal
		      THISFORM.txtClearBal.VALUE = m.nopenbal
		      m.nClearBal                = m.nopenbal
		      m.nDiffBal                 = m.nEndBal - m.nClearBal
		      THISFORM.txtDiff.VALUE     = m.nDiffBal
		      THISFORM.requerychks(tcAcctno, .T.)
		   ENDIF
		
		
		   swSELECT('checkbal')
		   SET ORDER TO cidchec
		
		   *
		   *  Mark previously saved cleared transactions
		   *
		   swSELECT('reconsav')
		   IF m.goApp.lAMVersion
		      LOCATE FOR cAcctNo = tcAcctno
		      llFound = FOUND()
		   ELSE
		      llFound = .T.
		   ENDIF
		   IF llFound
		      THISFORM.txtRecDate.VALUE = dRecDate
		      THISFORM.txtEndBal.VALUE  = nEndBal
		      THISFORM.txtEnding.VALUE  = nEndBal
		      m.nEndBal                 = nEndBal
		      IF NOT m.goApp.lAMVersion
		         SCAN
		            m.cidchec = cidchec
		            SELECT checkbal
		            IF SEEK(m.cidchec)
		               REPLACE lClear WITH .T.
		               IF cEntryType = 'D'
		                  m.nDepCnt                  = m.nDepCnt + 1
		                  m.nClearBal                = m.nClearBal + nAmount
		                  m.nDepAmt                  = m.nDepAmt + nAmount
		                  THISFORM.txtDepCnt.VALUE   = THISFORM.txtDepCnt.VALUE + 1
		                  THISFORM.txtClearBal.VALUE = THISFORM.txtClearBal.VALUE + nAmount
		                  THISFORM.txtDepAmt.VALUE   = THISFORM.txtDepAmt.VALUE + nAmount
		               ELSE
		                  m.nChkCnt                  = m.nChkCnt + 1
		                  m.nClearBal                = m.nClearBal + nAmount
		                  m.nChkAmt                  = m.nChkAmt + nAmount
		                  THISFORM.txtChkCnt.VALUE   = THISFORM.txtChkCnt.VALUE + 1
		                  THISFORM.txtClearBal.VALUE = THISFORM.txtClearBal.VALUE - nAmount
		                  THISFORM.txtChkAmt.VALUE   = THISFORM.txtChkAmt.VALUE - nAmount
		               ENDIF
		            ENDIF
		         ENDSCAN
		      ELSE
		         swSELECT('checkbal')
		         SET ORDER TO cidchec
		         SELECT reconsav
		         SET ORDER TO cAcctNo
		         IF SEEK(tcAcctno)
		            SCAN FOR cAcctNo = tcAcctno
		               m.cidchec = cidchec
		               SELECT checkbal
		               IF SEEK(m.cidchec)
		                  REPLACE lClear WITH .T.
		                  IF cEntryType = 'D'
		                     m.nDepCnt                  = m.nDepCnt + 1
		                     m.nClearBal                = m.nClearBal + nAmount
		                     m.nDepAmt                  = m.nDepAmt + nAmount
		                     THISFORM.txtDepCnt.VALUE   = THISFORM.txtDepCnt.VALUE + 1
		                     THISFORM.txtClearBal.VALUE = THISFORM.txtClearBal.VALUE + nAmount
		                     THISFORM.txtDepAmt.VALUE   = THISFORM.txtDepAmt.VALUE + nAmount
		                  ELSE
		                     m.nChkCnt                  = m.nChkCnt + 1
		                     m.nClearBal                = m.nClearBal + nAmount
		                     m.nChkAmt                  = m.nChkAmt + nAmount
		                     THISFORM.txtChkCnt.VALUE   = THISFORM.txtChkCnt.VALUE + 1
		                     THISFORM.txtClearBal.VALUE = THISFORM.txtClearBal.VALUE - nAmount
		                     THISFORM.txtChkAmt.VALUE   = THISFORM.txtChkAmt.VALUE - nAmount
		                  ENDIF
		               ENDIF
		            ENDSCAN
		         ENDIF
		      ENDIF
		   ENDIF
		
		   THISFORM.txtDiff.VALUE = THISFORM.txtEnding.VALUE - THISFORM.txtClearBal.VALUE
		   m.nDiffBal             = m.nEndBal - m.nClearBal
		
		   IF USED('temp')
		      SELECT temp
		      USE
		   ENDIF
		
		   swSELECT('checkbal')
		   GO TOP
		
		   THISFORM.grdgridcustom1.REFRESH()
		*   THISFORM.REFRESH()
		   thisform.LockScreen = .f.
		   WAIT CLEAR
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'LoadTran', loError.LINENO, 'Bank Recon', loError.ERRORNO, loError.MESSAGE, '', loError
		   MESSAGEBOX('Unable to process the reconciliation at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
		
		
		
		
		
		
	ENDPROC

	PROCEDURE lookieacct
	ENDPROC

	PROCEDURE lookscacct
	ENDPROC

	PROCEDURE markach		&& Marks all ACH entries cleared.
		LOCAL ldACHDate, llReturn, loError
		llReturn = .T.
		
		TRY
		   DO FORM SOURCE\csgetdate WITH 'RE' TO ldACHDate
		
		   IF VARTYPE(ldACHDate) <> 'D'
		      ldACHDate = {01/01/1980}
		   ENDIF
		
		   swSELECT('checkbal')
		
		   WITH THISFORM
		      SCAN FOR dcheckdate = ldACHDate AND 'DIRDEP' $ cCheckNo
		         REPLACE lclear WITH .T.
		         .txtChkCnt.VALUE   = .txtChkCnt.VALUE + 1
		         .txtClearBal.VALUE = THISFORM.txtClearBal.VALUE - nAmount
		         .txtChkAmt.VALUE   = .txtChkAmt.VALUE + nAmount
		      ENDSCAN
		
		      .txtDiff.VALUE = .txtEnding.VALUE - .txtClearBal.VALUE
		   ENDWITH
		
		   THISFORM.REFRESH()
		
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'MarkACH', loError.LINENO, 'Bank Recon', loError.ERRORNO, loError.MESSAGE, '', loError
		   MESSAGEBOX('Unable to process the reconciliation at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
		
		
	ENDPROC

	PROCEDURE marktran
		&&  marktran
		
		llReturn = .T.
		
		TRY 
		swSELECT('checkbal')
		
		WITH THISFORM
			IF lClear = .T.
				IF centrytype = 'D'
					.txtDepCnt.VALUE   = .txtDepCnt.VALUE + 1
					.txtClearBal.VALUE = .txtClearBal.VALUE + nAmount
					.txtDepAmt.VALUE   = .txtDepAmt.VALUE + nAmount
				ELSE
					.txtChkCnt.VALUE   = .txtChkCnt.VALUE + 1
					.txtClearBal.VALUE = .txtClearBal.VALUE - nAmount
					.txtChkAmt.VALUE   = .txtChkAmt.VALUE - nAmount
				ENDIF
			ELSE
				IF centrytype = 'D'
					.txtDepCnt.VALUE   = .txtDepCnt.VALUE - 1
					.txtClearBal.VALUE = .txtClearBal.VALUE - nAmount
					.txtDepAmt.VALUE   = .txtDepAmt.VALUE - nAmount
				ELSE
					.txtChkCnt.VALUE   = .txtChkCnt.VALUE - 1
					.txtClearBal.VALUE = .txtClearBal.VALUE + nAmount
					.txtChkAmt.VALUE   = .txtChkAmt.VALUE + nAmount
				ENDIF
			ENDIF
		
			.txtDiff.VALUE = .txtEnding.VALUE - .txtClearBal.VALUE
		ENDWITH
		
		thisform.refresh()
		
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'MarkTran', loError.LineNo, 'Bank Recon', loError.ERRORNO, loError.MESSAGE, '', loError
		   MESSAGEBOX('Unable to process the reconciliation at this time. Check the System Log found under Other Reports for more information.' + CHR(10)+CHR(10) + ;
		              'Contact SherWare Support for help at support@sherware.com',16,'Problem Encountered')
		ENDTRY
		
		RETURN llReturn 
	ENDPROC

	PROCEDURE prelimreport
		LOCAL lcAcctDesc, lcAcctno
		LOCAL laclrchk[1], laclrdep[1], launcchk[1], launcdep[1], llAcctMgr, llReturn, loError
		*:Global cProcessor, cProducer, dRecDate, nClrAmtC, nClrAmtD, nClrCntC, nClrCntD, nEndBal, nOpenBal
		*:Global nUncAmtC, nUncAmtD, nUncCntC, nUncCntD, test
		PRIV m.dRecDate
		
		SET DELETED ON
		
		llReturn = .T.
		*!*	set
		*!*	SET STEP on
		TRY
		
		   SWSELECT('coa')
		   SWSELECT('checks')
		   SWSELECT('checkrec')
		
		   tdRecDate  = THISFORM.txtrecDate.VALUE
		   tcAcctNo   = THISFORM.cboCashAcct.VALUE
		   m.nOpenBal = THISFORM.txtopnBal.VALUE
		   m.nEndBal  = THISFORM.txtendBal.VALUE
		
		   IF TYPE('m.goApp') = 'O'
		      m.cProducer = m.goApp.cCompanyName
		      llAcctMgr   = m.goApp.lAMVersion
		   ELSE
		      m.cProducer = 'Development Company, Inc.'
		      llAcctMgr   = .F.
		   ENDIF
		
		   IF TYPE('tcAcctNo') # 'C'
		      llAcctMgr = .F.
		   ENDIF
		
		   IF TYPE('m.cProcessor') # 'C'
		      m.cProcessor = ''
		   ENDIF
		
		   IF llAcctMgr
		      SWSELECT('coa')
		      SET ORDER TO acctno
		      IF SEEK(tcAcctNo)
		         lcAcctDesc = cAcctDesc
		      ENDIF
		   ENDIF
		
		   lcAcctno = THISFORM.cboCashAcct.VALUE
		
		   CREATE CURSOR rptrecon ;
		      (ccheckno   C(10), ;
		        cacctno    C(6), ;
		        cidchec    C(8), ;
		        dCheckDate D, ;
		        cid        C(10), ;
		        centrytype C(1), ;
		        cpayee     C(40), ;
		        lCleared   L, ;
		        cClear     C(1), ;
		        dRecDate   D, ;
		        namount    N(12, 2))
		   INDEX ON cClear + centrytype + DTOS(dCheckDate) + ccheckno TAG idtype
		
		   SWSELECT('checks')
		   SCAN FOR lCleared AND EMPTY(dRecDate)
		      REPL dRecDate WITH {01/01/1980}
		   ENDSCAN
		
		   SWSELECT('checks')
		   SCAN FOR (dRecDate = tdRecDate OR ;
		            (dRecDate > tdRecDate AND dCheckDate <= tdRecDate) OR ;
		            (EMPTY(dRecDate) AND dCheckDate <= tdRecDate)) AND ;
		            lCleared = .f. AND ;
		            cacctno = tcAcctNo
		      m.cidchec = cidchec
		      SCATTER MEMVAR
		      INSERT INTO rptrecon FROM MEMVAR
		   ENDSCAN
		
		   SELECT rptrecon
		   SET ORDER TO
		   SCAN
		      m.cidchec = cidchec
		      SELECT checkbal
		      LOCATE FOR cidchec == m.cidchec
		      IF FOUND() AND lclear
		         SELECT rptrecon
		         REPLACE lcleared WITH .t.
		         REPLACE cClear WITH '*'
		      ENDIF 
		      
		      IF centrytype # 'D' AND centrytype # 'T'
		         REPLACE namount WITH namount * -1
		      ENDIF
		   ENDSCAN
		
		
		*  Get a total of cleared checks
		   SELECT  SUM(namount) AS clrcheck,;
				   COUNT(*) AS chkcnt ;
			   FROM rptrecon ;
			   WHERE cClear = '*' ;
				   AND centrytype # 'D' ;
			   INTO ARRAY laclrchk
		
		   IF _TALLY > 0
		      m.nClrAmtC = laclrchk[1, 1]
		      m.nClrCntC = laclrchk[1, 2]
		   ELSE
		      m.nClrAmtC = 0
		      m.nClrCntC = 0
		   ENDIF
		
		*
		*  Get a total of cleared deposits
		*
		   SELECT  SUM(namount) AS clrcheck,;
				   COUNT(*) AS chkcnt ;
			   FROM rptrecon ;
			   WHERE cClear = '*' ;
				   AND centrytype = 'D' ;
			   INTO ARRAY laclrdep
		
		   IF _TALLY > 0
		      m.nClrAmtD = laclrdep[1, 1]
		      m.nClrCntD = laclrdep[1, 2]
		   ELSE
		      m.nClrAmtD = 0
		      m.nClrCntD = 0
		   ENDIF
		
		*
		*  Get a total of uncleared checks
		*
		   SELECT  SUM(namount),;
				   COUNT(*) ;
			   FROM rptrecon ;
			   WHERE cClear = ' ' ;
				   AND centrytype # 'D' ;
				   AND dCheckDate <= tdRecDate ;
			   INTO ARRAY launcchk
		
		   IF _TALLY > 0
		      m.nUncAmtC = launcchk[1, 1] * -1
		      m.nUncCntC = launcchk[1, 2] * -1
		   ELSE
		      m.nUncAmtC = 0
		      m.nUncCntC = 0
		   ENDIF
		
		*
		*  Get a total of uncleared deposits
		*
		   SELECT  SUM(namount),;
				   COUNT(*) ;
			   FROM rptrecon ;
			   WHERE cClear = ' ' ;
				   AND centrytype = 'D' ;
				   AND dCheckDate <= tdRecDate  ;
			   INTO ARRAY launcdep
		
		   IF _TALLY > 0
		      m.nUncAmtD = launcdep[1, 1]
		      m.nUncCntD = launcdep[1, 2]
		   ELSE
		      m.nUncAmtD = 0
		      m.nUncCntD = 0
		   ENDIF
		
		*
		*  Make the cProducer variable a default value for development purposes
		*
		   IF TYPE('m.goApp') = 'O'
		      m.cProducer = m.goApp.cCompanyName
		   ELSE
		      m.cProducer = 'Development Company, Inc.'
		   ENDIF
		
		   IF TYPE('m.cProcessor') # 'C'
		      m.cProcessor = ''
		   ENDIF
		
		   CREATE CURSOR temp ;
		      (test  C(1), ;
		        dRecDate D)
		
		   m.dRecDate = tdRecDate
		
		   SELECT temp
		   m.test = ' '
		   INSERT INTO temp FROM MEMVAR
		   GO TOP
		
		* Turn off help for reports
		   ON KEY LABEL F1 *
		
		   REPORT FORM csrecsum.frx PREVIEW
		
		   SELECT rptrecon
		   GO TOP
		   SET ORDER TO idtype
		
		   REPORT FORM csrecdet.frx PREVIEW
		
		   IF THIS.oMessage.CONFIRM('Send the report to the printer now?')
		      SELECT temp
		      REPORT FORM csrecsum.frx TO PRINTER PROMPT NOCONSOLE NOEJECT
		      SELECT rptrecon
		      REPORT FORM csrecdet.frx TO PRINTER PROMPT NOCONSOLE NOEJECT
		   ENDIF
		
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'RptRecon', loError.LINENO, 'GlMaint', loError.ERRORNO, loError.MESSAGE, '', loError
		   MESSAGEBOX('Unable to process the report at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
		
	ENDPROC

	PROCEDURE process
		LOCAL ldRecDate, lcAcctNo, lnOpenBal, lnEndBal, ldIntEarned, ldServChg, lcIntAcct, lcSCAcct
		LOCAL llFound, llReturn, loError
		LOCAL cAcctNo, cType, cidchkrec, dRecDate, nEndBal, nOpenBal
		
		llReturn = .T.
		
		TRY
		   lcAcctNo  = THISFORM.cboCashAcct.VALUE
		   ldRecDate = THISFORM.txtRecDate.VALUE
		   lnOpenBal = THISFORM.txtOpnBal.VALUE
		   lnEndBal  = THISFORM.txtEndBal.VALUE
		
		   swSELECT('checkrec')  &&  Find any other reconciliations that have been done on this day, and don't let them save a duplicate
		   LOCATE FOR cAcctNo = lcAcctNo AND dRecDate = ldRecDate
		   IF FOUND()
		      THISFORM.oMessage.Warning('This account has already been reconciled on this date.  Please choose another date for this reconciliation.')
		      llReturn = .F.
		      EXIT
		   ENDIF
		
		   IF THISFORM.txtDiff.VALUE <> 0
		      WAIT WIND NOWAIT 'The reconciliation is not in balance. Your work will be saved...'
		
		      THISFORM.keepit()
		      swSELECT('checkbal')
		      DELETE ALL
		      THISFORM.cmdatamanager.UpdateAll()
		   ELSE
		      m.cAcctNo   = lcAcctNo
		      m.dRecDate  = ldRecDate
		      m.nOpenBal  = lnOpenBal
		      m.nEndBal   = lnEndBal
		      llFound     = .F.
		      m.cidchkrec = THISFORM.oregistry.incrementcounter('%Shared.Counters.Check Recon')
		      SET DELETED OFF
		      swSELECT('checkrec')
		      SET ORDER TO cidchkrec
		      DO WHILE SEEK(m.cidchkrec)
		         m.cidchkrec = THISFORM.oregistry.incrementcounter('%Shared.Counters.Check Recon')
		      ENDDO
		      SET DELETED ON
		      INSERT INTO checkrec FROM MEMVAR
		
		      swSELECT('checkbal')
		      SCAN FOR lClear = .T. AND NOT DELETED()
		         SCATTER MEMVAR
		         m.cType = m.cEntryType
		         llFound = .T.
		         swSELECT('checks')
		         SET ORDER TO cidchec
		         IF SEEK (m.cidchec)
		            REPLACE lCleared WITH .T., ;
		               dRecDate WITH ldRecDate
		            m.dRecDate = ldRecDate
		            INSERT INTO chkclear FROM MEMVAR
		         ENDIF
		      ENDSCAN
		      IF llFound
		         THISFORM.oMessage.DISPLAY('Congratulations! You Reconciled Successfully.')
		         IF THISFORM.oMessage.CONFIRM('Do you want to print a reconciliation report now?')
		            THISFORM.recon_rpt(checkrec.dRecDate, .T., checkrec.cAcctNo)
		         ENDIF
		      ENDIF
		      swSELECT('reconsav')
		      DELETE FOR cAcctNo = lcAcctNo
		      swSELECT('checkbal')
		      DELETE ALL
		      THISFORM.cmdatamanager.UpdateAll()
		   ENDIF
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'Process', loError.LINENO, 'Bank Recon', loError.ERRORNO, loError.MESSAGE, '', loError
		   MESSAGEBOX('Unable to process the reconciliation at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
		 
	ENDPROC

	PROCEDURE reconrpt		&& Prints preliminary recon detail report of marked items.
		LOCAL lcAcctDesc, lcAcctno
		LOCAL llReturn, loError
		PRIV cProcessor, cProducer, cidchec, dRecDate, tdrecdate
		PRIV m.dRecDate
		
		llReturn = .T.
		
		TRY
		   SET DELETED ON
		
		   IF m.goapp.lAMVersion
		      swselect('coa')
		   ENDIF
		
		   swselect('checks')
		   swselect('checkrec')
		
		   tdrecdate   = THISFORM.txtrecdate.VALUE
		   m.dRecDate  = tdrecdate
		   m.cProducer = m.goapp.cCompanyName
		
		   IF TYPE('m.cProcessor') <> 'C'
		      m.cProcessor = ''
		   ENDIF
		
		   lcAcctDesc = THISFORM.cbocashacct.DISPLAYVALUE
		   lcAcctno   = LEFT(THISFORM.cbocashacct.DISPLAYVALUE, 6)
		   
		   CREATE CURSOR rptrecon ;
		      (ccheckno   C(10), ;
		        cacctno    C(6), ;
		        cidchec    C(8), ;
		        dCheckDate D, ;
		        cid        C(10), ;
		        centrytype C(1), ;
		        cpayee     C(40), ;
		        lCleared   L, ;
		        cClear     C(1), ;
		        dRecDate   D, ;
		        namount    N(12, 2))
		   INDEX ON cClear + centrytype + DTOS(dCheckDate) + ccheckno TAG idtype
		
		   SELE checkbal
		   SCAN FOR lclear
		      m.cidchec = cidchec
		      SELECT checks
		      SCAN FOR cidchec = m.cidchec
		         SCATTER MEMVAR
		         INSERT INTO rptrecon FROM MEMVAR
		      ENDSCAN
		   ENDSCAN
		
		   SELECT rptrecon
		   SET ORDER TO
		   SCAN
		      REPLACE cClear WITH '*'
		      IF centrytype <> 'D' AND centrytype <> 'T'
		         REPLACE namount WITH namount * -1
		      ENDIF
		   ENDSCAN
		
		
		*
		*  Make the cProducer variable a default value for development purposes
		*
		   IF TYPE('m.goApp') = 'O'
		      m.cProducer = m.goapp.cCompanyName
		   ELSE
		      m.cProducer = 'Development Company, Inc.'
		   ENDIF
		
		   IF TYPE('m.cProcessor') <> 'C'
		      m.cProcessor = ''
		   ENDIF
		
		
		   SELECT rptrecon
		   IF RECCOUNT() = 0
		* Bail out if there's nothing to report on
		      THISFORM.omessage.DISPLAY('There are no checks or deposits marked to report on.')
		      llReturn = .T.
		      EXIT 
		   ENDIF
		
		   GO TOP
		   SET ORDER TO idtype
		   m.dRecDate = tdrecdate
		   REPORT FORM csrecdet.frx PREVIEW
		
		   IF THIS.omessage.CONFIRM('Send the report to the printer now?')
		      SELECT rptrecon
		      REPORT FORM csrecdet.frx TO PRINTER PROMPT NOCONSOLE NOEJECT
		   ENDIF
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'ReconRpt', loError.LINENO, 'Bank Recon', loError.ERRORNO, loError.MESSAGE, '', loError
		   MESSAGEBOX('Unable to process the report at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
	ENDPROC

	PROCEDURE recon_rpt
		LPARAMETERS ldRecDate, llType, lcAcctNo
		LOCAL oglmaint, llReturn
		
		llReturn = .t. 
		
		TRY
		    oglmaint = CREATEOBJECT('glmaint')
		    oglmaint.rptrecon(ldRecDate, llType, lcAcctNo)
		CATCH TO loError
		    llReturn = .F.
		    DO errorlog WITH 'Recon_Rpt', loError.LINENO, 'Csrecon', loError.ERRORNO, loError.MESSAGE, '', loError
		    MESSAGEBOX('Unable to process the report at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		          'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		RELEASE oglmaint
		
		
		
	ENDPROC

	PROCEDURE requerychks		&& Requeries the uncleared checks view
		LPARA lcAcctNo, lDeleteAll
		
		LOCAL llReturn, loError
		llReturn = .T.
		
		TRY
		   IF m.goApp.lAMVersion
		      = REQUERY('Uncleared_checks')
		   ELSE
		      = REQUERY('Uncleared_checksd')
		   ENDIF
		
		   IF lDeleteAll
		      swSELECT('checkbal')
		      DELETE ALL
		   ENDIF
		
		   IF m.goApp.lAMVersion
		      SELECT checkbal
		      IF thisform.chkStmtEnding.value
		         APPEND FROM DBF('uncleared_checks') FOR dCheckDate <= thisform.txtrecDate.Value 
		      ELSE
		         APPEND FROM DBF('uncleared_checks')
		      ENDIF    
		   ELSE
		      SELECT checkbal
		      IF thisform.chkStmtEnding.value
		         APPEND FROM DBF('uncleared_checksd') FOR dCheckDate <= thisform.txtrecDate.Value 
		      ELSE
		         APPEND FROM DBF('uncleared_checksd')
		      ENDIF    
		   ENDIF
		
		   SELECT checkbal
		   GO TOP
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'RequeryChks', loError.LINENO, 'Bank Recon', loError.ERRORNO, loError.MESSAGE, '', loError
		   MESSAGEBOX('Unable to process the reconciliation at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
		
		
	ENDPROC

	PROCEDURE save
		LPARAMETERS cworkarealist
		
		IF thisform.process()
		   thisform.loadtran(thisform.cboCashAcct.value)
		endif
	ENDPROC

	PROCEDURE Unload
		ON KEY LABEL ENTER
		ON KEY LABEL SPACEBAR
		DODEFAULT()
	ENDPROC

	PROCEDURE unmarkach		&& Un Marks ACH entries.
		LOCAL llReturn, loError
		llReturn = .T.
		
		TRY
		   swSELECT('checkbal')
		
		   WITH THISFORM
		      SCAN FOR 'DIRDEP' $ cCheckNo AND lClear
		         REPLACE lClear WITH .F.
		         .txtChkCnt.VALUE   = .txtChkCnt.VALUE - 1
		         .txtClearBal.VALUE = THISFORM.txtClearBal.VALUE + nAmount
		         .txtChkAmt.VALUE   = .txtChkAmt.VALUE - nAmount
		      ENDSCAN
		      .txtDiff.VALUE = .txtEnding.VALUE - .txtClearBal.VALUE
		   ENDWITH
		
		   THISFORM.REFRESH()
		
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'UnMarkACH', loError.LINENO, 'Bank Recon', loError.ERRORNO, loError.MESSAGE, '', loError
		   MESSAGEBOX('Unable to process the ACH entries at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
	ENDPROC

	PROCEDURE viewdocument
		LPARAMETERS tcBatch
		
		LOCAL lnReturn, llReturn, lcOutputFile
		LOCAL liKey, lcPath
		
		
		swselect('documents')
		SET ORDER TO cFK
		IF SEEK(tcBatch)
		   lcOutputFile = cPath
		
		   llReturn = .T.
		
		   IF NOT FILE(lcOutputFile)
		      llReturn = .F.
		   ENDIF
		
		   TRY
		      IF llReturn
		         DECLARE INTEGER ShellExecute IN "Shell32.dll" ;
		            INTEGER HWND, ;
		            STRING lpVerb, ;
		            STRING lpFile, ;
		            STRING lpParameters, ;
		            STRING lpDirectory, ;
		            LONG nShowCmd
		
		         lnReturn = ShellExecute(0, "Open", lcOutputFile, "", "", 1)
		      ENDIF
		
		      THIS.nReturnValue = lnReturn
		
		      IF lnReturn > 32
		         llReturn = .T.
		      ELSE
		         llReturn = .F.
		      ENDIF
		   CATCH TO loError
		   ENDTRY
		
		   RETURN (llReturn)
		
		ENDIF
	ENDPROC

	PROCEDURE cboCashAcct.Init
		LOCAL lnX, laBankAcct[1,1], lnCount
		
		IF m.goapp.lAMVersion
		   SELECT cAcctno, cAcctDesc FROM coa WHERE lbankacct = .T. INTO ARRAY laBankAcct ORDER BY cAcctno
		
		   lnCount = _TALLY
		
		   IF lnCount > 0
		      FOR lnX = 1 TO ALEN(laBankAcct,1)
		         THIS.ADDLISTITEM(laBankAcct[lnX,1]+'-'+TRIM(laBankAcct[lnX,2]),lnX,1)
		         THIS.ADDLISTITEM(laBankAcct[lnX,1],lnX,2)
		      ENDFOR
		   ENDIF
		ENDIF
		THIS.LISTITEMID = 1
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE cboCashAcct.Valid
		IF THIS.lchanged = .T.
		   lcAcctno = SUBSTR(THIS.VALUE,1,6)
		   this.Refresh()
		   THISFORM.loadtran(lcAcctno)
		ENDIF
		
	ENDPROC

	PROCEDURE chkStmtEnding.Click
		lcAcctno = SUBSTR(THISFORM.cboCashAcct.VALUE,1,6)
		THISFORM.keepit()
		THISFORM.loadtran(lcAcctno)
		    
	ENDPROC

	PROCEDURE cmdACH.Click
		IF this.Caption = 'Mark ACH'
		   thisform.markach()
		   this.Caption = 'Un-Mark ACH'
		ELSE
		   thisform.unmarkach()
		   this.Caption = 'Mark ACH'
		ENDIF    
	ENDPROC

	PROCEDURE cmdCancel.Click
		LOCAL llFound, lcAcctNo
		
		lcAcctNo = thisform.cboCashAcct.value
		
		llFound = .F.
		swSELECT('checkbal')
		SCAN FOR lClear = .T.
		   llFound = .T.
		   EXIT
		ENDSCAN
		
		IF llFound = .T.
		   WAIT WIND NOWAIT 'The reconciliation is not in balance. Your work will be saved...'
		   thisform.keepit()
		   swSELECT('checkbal')
		   DELETE ALL
		   thisform.cmdatamanager.updateall()
		ENDIF
		
		THISFORM.RELEASE()
		
	ENDPROC

	PROCEDURE cmdDocument.Click
		LOCAL llNewDoc
		LOCAL llReturn
		*:Global cDocLink, cfk, cpath
		
		llNewDoc = .T.
		TRY
		   swSELECT('documents')
		   SET ORDER TO cFK
		   m.cFK      = 'CS' + checkrec.cidchkrec
		   IF SEEK(m.cFK)
		      IF MESSAGEBOX('View the document? Choosing No will allow you to attach a new document.', 36, 'Attached Document') = 6
		         THISFORM.viewdocument(m.cFK)
		         llNewDoc = .F.
		      ELSE
		         llNewDoc = .t.
		         DELETE FOR cFK == m.cFK
		      ENDIF
		   ENDIF 
		   IF llNewDoc
		      LOCAL lnx
		      THISFORM.oFileDialog.FileName = ''
		      llReturn                      = THISFORM.oFileDialog.openfile()
		      IF llReturn
		         m.cDocLink = 'CS'
		         m.cpath    = UPPER(THISFORM.oFileDialog.aFiles[1])
		         swSELECT('documents')
		         LOCATE FOR cFK == m.cFK
		         IF NOT FOUND()
		            INSERT INTO documents FROM MEMVAR
		         ELSE
		            REPLACE cpath WITH m.cpath
		         ENDIF
		      ENDIF
		   ENDIF
		CATCH TO loError
		   MESSAGEBOX('Error: ' + loError.MESSAGE, 48, 'View Document',2)
		ENDTRY
	ENDPROC

	PROCEDURE cmdMarkall.Click
		swSELECT('checkbal')
		
		WITH THISFORM
		     .txtDepCnt.value = 0
		     .txtClearBal.value = .txtOpnBal.value
		     .txtDepAmt.value = 0
		     .txtChkCnt.value = 0
		     .txtChkAmt.value = 0
			 SCAN
				REPLACE lClear WITH .T.
				IF cEntryType = 'D'
		    	.txtDepCnt.VALUE = THISFORM.txtDepCnt.VALUE + 1
				.txtClearBal.VALUE = THISFORM.txtClearBal.VALUE + nAmount
				.txtDepAmt.VALUE   = THISFORM.txtDepAmt.VALUE + nAmount
				ELSE
				.txtChkCnt.VALUE = .txtChkCnt.VALUE + 1
				.txtClearBal.VALUE = THISFORM.txtClearBal.VALUE - nAmount
				.txtChkAmt.VALUE   = .txtChkAmt.VALUE + nAmount
				ENDIF
			ENDSCAN
			GO TOP
			.txtDiff.VALUE = .txtEnding.VALUE - .txtClearBal.VALUE
		ENDWITH
		
		THISFORM.REFRESH()
		
		DODEFAULT()
		
		
	ENDPROC

	PROCEDURE cmdOK.Click
		IF thisform.process()
		   thisform.Release()
		endif
	ENDPROC

	PROCEDURE cmdOldrpts.Click
		LOCAL lcList
		PRIV llOK
		
		swselect('checkrec')
		
		llOK = .T.
		IF m.goapp.lAMVersion
		   lcList = 'cacctno\Account,drecdate\Date,nopenbal\Opening Balance,nendbal\Ending Balance'
		   SELE checkrec
		   SET ORDER TO reckey
		
		   DO FORM ..\CUSTOM\picklist WITH 'Checkrec', lcList, 'cacctno', 4, .F., .T.
		ELSE
		   lcList = 'drecdate\Date,nopenbal\Opening Balance,nendbal\Ending Balance'
		   SELE checkrec
		   SET ORDER TO reckey
		
		   DO FORM ..\CUSTOM\picklist WITH 'Checkrec', lcList, 'cacctno', 3, .F., .T.
		
		ENDIF
		
		IF llOK
		   THISFORM.recon_rpt(checkrec.drecdate,.T.,checkrec.cacctno)
		ENDIF
		
	ENDPROC

	PROCEDURE cmdReconRpt.Click
		thisform.prelimreport()
	ENDPROC

	PROCEDURE cmdRefresh.Click
		WAIT WIND NOWAIT 'Refreshing transaction list....'
		lcAcctno = SUBSTR(THISFORM.cboCashAcct.VALUE,1,6)
		THISFORM.keepit()
		THISFORM.loadtran(lcAcctno)
		WAIT CLEAR
	ENDPROC

	PROCEDURE cmdUnmarkAll.Click
		swSELECT('checkbal')
		
		WITH THISFORM
		    SCAN FOR lClear
				REPLACE lClear WITH .f.
			ENDSCAN
			GO TOP
			.txtDepCnt.VALUE   = 0
		    .txtClearBal.VALUE = thisform.txtopnbal.value
			.txtDepAmt.VALUE   = 0
			.txtChkCnt.VALUE   = 0
			.txtChkAmt.VALUE   = 0
			.txtDiff.VALUE = .txtEnding.VALUE - .txtClearBal.VALUE
		ENDWITH
		
		THISFORM.REFRESH()
		
		DODEFAULT()
		
		
	ENDPROC

	PROCEDURE Grdgridcustom1.Column1.Chkcheckboxcustom1.GotFocus
		thisform.ndoubleclickspeed = _dblclick
		
		_dblclick = .05
		
		DODEFAULT()
	ENDPROC

	PROCEDURE Grdgridcustom1.Column1.Chkcheckboxcustom1.LostFocus
		_dblclick = thisform.ndoubleclickspeed
		
		DODEFAULT()
	ENDPROC

	PROCEDURE Grdgridcustom1.Column1.Chkcheckboxcustom1.Valid
		
		thisform.marktran()
		DODEFAULT()
		
	ENDPROC

	PROCEDURE Grdgridcustom1.Column2.Header1.Click
		SELE checkbal
		SET ORDER TO dcheckdate
		GO TOP
		THISFORM.REFRESH()
	ENDPROC

	PROCEDURE Grdgridcustom1.Column2.Text1.When
		RETURN .F.
	ENDPROC

	PROCEDURE Grdgridcustom1.Column3.Header1.Click
		SELE checkbal
		SET ORDER TO ccheckno
		GO TOP
		THISFORM.REFRESH()
	ENDPROC

	PROCEDURE Grdgridcustom1.Column3.Text1.When
		RETURN .F.
	ENDPROC

	PROCEDURE Grdgridcustom1.Column4.Header1.Click
		SELE checkbal
		SET ORDER TO cpayee
		GO TOP
		THISFORM.REFRESH()
	ENDPROC

	PROCEDURE Grdgridcustom1.Column4.Text1.When
		RETURN .F.
	ENDPROC

	PROCEDURE Grdgridcustom1.Column5.Header1.Click
		SELE Checkbal
		SET ORDER TO namount
		GO TOP
		THISFORM.REFRESH()
	ENDPROC

	PROCEDURE Grdgridcustom1.Column5.Text1.When
		RETURN .F.
	ENDPROC

	PROCEDURE Grdgridcustom1.Column6.Header1.Click
		SELE checkbal
		SET ORDER TO
		GO TOP
		THISFORM.REFRESH()
	ENDPROC

	PROCEDURE Grdgridcustom1.Column6.Text1.When
		RETURN .F.
	ENDPROC

	PROCEDURE Grdgridcustom1.Init
		FOR EACH oCol IN THIS.Columns
		 oCol.DynamicForeColor = "IIF(checkbal.centrytype='D',rgb(0,0,255),rgb(255,0,0))"
		ENDFOR
		DODEFAULT()
	ENDPROC

	PROCEDURE txtChkAmt.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtChkCnt.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtClearBal.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtDepAmt.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtDepCnt.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtDiff.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtEndBal.Valid
		THISFORM.txtEnding.VALUE = THIS.VALUE
		THISFORM.txtDiff.value   = THISFORM.txtEnding.value - THISFORM.txtClearBal.value
		
		DODEFAULT()
	ENDPROC

	PROCEDURE txtEnding.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtOpnBal.When
		RETURN .F.
	ENDPROC

	PROCEDURE txtRecDate.Valid
		swselect('checkbal')
		
		LOCATE FOR ccheckno = 'DIRDEP'
		IF FOUND()
		    IF MESSAGEBOX('There are uncleared ACH entries before this reconciliation date. Do you want to mark them as cleared?',36,'Mark ACH Entries') = 6
		        WITH THISFORM
		            SCAN FOR ccheckno='DIRDEP'
		                REPLACE lClear WITH .T.
		                IF cEntryType = 'D'
		                    .txtDepCnt.VALUE = THISFORM.txtDepCnt.VALUE + 1
		                    .txtClearBal.VALUE = THISFORM.txtClearBal.VALUE + nAmount
		                    .txtDepAmt.VALUE   = THISFORM.txtDepAmt.VALUE + nAmount
		                ELSE
		                    .txtChkCnt.VALUE = .txtChkCnt.VALUE + 1
		                    .txtClearBal.VALUE = THISFORM.txtClearBal.VALUE - nAmount
		                    .txtChkAmt.VALUE   = .txtChkAmt.VALUE + nAmount
		                ENDIF
		            ENDSCAN
		            GO TOP
		            .txtDiff.VALUE = .txtEnding.VALUE - .txtClearBal.VALUE
		        ENDWITH
		
		        THISFORM.REFRESH()
		    ENDIF
		ENDIF
		
		DODEFAULT()
		
	ENDPROC

ENDDEFINE
