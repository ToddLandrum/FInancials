*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="lmrland.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 200
	Left = 40
	Name = "Dataenvironment"
	Top = 235
	Width = 520

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "land", ;
		CursorSource = "land", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "landowner", ;
		CursorSource = "landowner", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formlmrland AS frmrptcriteria OF "..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBegID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEndID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkIncLandowner" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboLeaseStatus" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkExceptions" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSelected" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSelected" UniqueID="" Timestamp="" />

	Caption = "Lease Reports"
	DataSession = 2
	DoCreate = .T.
	Height = 351
	HelpContextID = 636
	Name = "FormLmrland"
	Width = 411
	Swrptcriteriabuttons1.chkExport.Alignment = 0
	Swrptcriteriabuttons1.chkExport.Name = "chkExport"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.CMDPREVIEW.Name = "CMDPREVIEW"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 84
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 9
	Swrptcriteriabuttons1.Top = 262

	ADD OBJECT 'cboLeaseStatus' AS cbocomboboxcustom WITH ;
		Height = 20, ;
		Left = 114, ;
		lrequired = .T., ;
		Margin = 2, ;
		Name = "cboLeaseStatus", ;
		TabIndex = 5, ;
		Top = 150, ;
		Width = 144, ;
		ZOrderSet = 49
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'chkExceptions' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Only Show Leases Not Totaling 100%", ;
		Left = 114, ;
		Name = "chkExceptions", ;
		TabIndex = 7, ;
		Top = 219, ;
		Value = .F., ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkIncLandowner' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Include Landowner Information", ;
		Left = 114, ;
		Name = "chkIncLandowner", ;
		TabIndex = 8, ;
		Top = 197
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSelected' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Choose Selected Leases", ;
		Left = 117, ;
		Name = "chkSelected", ;
		TabIndex = 1, ;
		Top = 11, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'lblBegID' AS lbllabelcustom WITH ;
		Caption = "First Lease", ;
		Left = 53, ;
		Name = "lblBegID", ;
		TabIndex = 3, ;
		Top = 41
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblEndID' AS lbllabelcustom WITH ;
		Caption = "Last Lease", ;
		Left = 53, ;
		Name = "lblEndID", ;
		TabIndex = 4, ;
		Top = 92
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom3' AS lbllabelcustom WITH ;
		Caption = "Status", ;
		Left = 76, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 6, ;
		Top = 152
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSelected' AS lbllabelcustom WITH ;
		Caption = "All IDs Selected", ;
		ForeColor = 0,0,255, ;
		Left = 116, ;
		Name = "lblSelected", ;
		TabIndex = 10, ;
		Top = 77, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		Left = 114, ;
		Name = "Swrptlook1", ;
		TabIndex = 2, ;
		Top = 38, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		TxtBegID.clistexpression = land.cleaseid, ;
		TxtBegID.clistworkarea = land, ;
		TxtBegID.Name = "TxtBegID", ;
		TxtBegName.Name = "TxtBegName", ;
		TxtEndID.clistexpression = land.cleaseid, ;
		TxtEndID.clistworkarea = land, ;
		TxtEndID.Name = "TxtEndID", ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />
	
	PROCEDURE builddata
		LOCAL lcLease1, lcLease2, llIncLandowner
		LOCAL llReturn, loError
		
		llReturn = .T.
		
		TRY
		   lcLease1       = THISFORM.swrptlook1.txtBegID.VALUE
		   lcLease2       = THISFORM.swrptlook1.txtEndID.VALUE
		   llIncLandowner = THISFORM.chkIncLandowner.VALUE
		   llSelected     = thisform.chkSelected.Value
		   
		   IF NOT llSelected
		      SELECT cleaseid as cid FROM land WHERE BETWEEN(cleaseid,lcLease1,lcLease2) INTO CURSOR selected
		   ENDIF 
		
		   THISFORM.cSelectCriteria = 'Leases: ' + ALLTRIM(lcLease1) + ' - ' + ALLTRIM(lcLease2)
		   THISFORM.cSortOrder      = 'Lease ID'
		
		   THISFORM.cReportName = 'lmrland1'
		   THISFORM.cTitle1     = 'Land Records'
		
		   IF THISFORM.chkExceptions.VALUE
		      THISFORM.cTitle2     = 'Lease Exceptions'
		   ELSE
		      THISFORM.cTitle2     = ''
		   ENDIF
		 
		   IF USED('tempowner')
		      USE IN tempowner
		   ENDIF
		   IF USED('temp')
		      USE IN temp
		   ENDIF
		   IF USED('tempexcept')
		      USE IN tempexcept
		   ENDIF
		   IF USED('temp1')
		      USE IN temp1
		   ENDIF
		   IF USED('templease')
		      USE IN templease
		   ENDIF
		
		   SELECT  land.*, ' ' AS temp ;
			   FROM land ;
			   WHERE cleaseid in (SELECT cid FROM selected) ;
				   AND IIF(THISFORM.cboLeaseStatus.VALUE <> '** Any Status **', cLeaseStatus = THISFORM.cboLeaseStatus.VALUE, .T.)  ;
			   INTO CURSOR  temp1 ;
			   ORDER BY cLeaseID
		
		   USE DBF('temp1') AGAIN ALIAS templease IN 0
		   SELECT templease
		
		   IF llIncLandowner
		      THISFORM.cReportName = '..\commonsource\lmrland2'
		      THISFORM.cTitle1     = 'Land Records'
		      THISFORM.cTitle2     = 'Including Land Owners'
			  SELECT  landowner.*, investor.cownname ;
				  FROM landowner, investor ;
				  WHERE landowner.cleaseid in (SELECT cid FROM selected) ;
					  AND landowner.cownerid = investor.cownerid ;
				  INTO CURSOR temp ;
				  ORDER BY landowner.cLeaseID, landowner.cownerid
		
		      USE DBF('temp') AGAIN IN 0 ALIAS tempowner
		      SELE tempowner
		      INDEX ON cLeaseID TAG cLeaseID
		
		      IF THISFORM.chkExceptions.VALUE
		         SELE cLeaseID, SUM(npct) AS npct FROM tempowner INTO CURSOR tempexcept ORDER BY cLeaseID GROUP BY cLeaseID
		
		         SELE tempexcept
		         SCAN FOR npct = 100
		            m.cLeaseID = cLeaseID
		            SELE templease
		            DELE FOR cLeaseID == m.cLeaseID
		            SELE tempowner
		            DELE FOR cLeaseID == m.cLeaseID
		         ENDSCAN
		      ENDIF
		
		*
		*  Build the relation so the report can use both tables
		*
		      SELECT templease
		      SET RELATION TO cLeaseID INTO tempowner
		      SET SKIP TO tempowner
		   ENDIF
		
		   SELECT templease
		   IF RECC() > 0
		      llReturn = .T.
		   ELSE
		      llReturn = .F.
		   ENDIF
		
		CATCH TO loError
		   llReturn = .F.
		   DO errorlog WITH 'BuildData', loError.LINENO, 'Land Reports', loError.ERRORNO, loError.MESSAGE
		   MESSAGEBOX('Unable to process the report at this time. Check the System Log found under Other Reports for more information.' + CHR(10) + CHR(10) + ;
		        'Contact SherWare Support for help at support@sherware.com', 16, 'Problem Encountered')
		ENDTRY
		
		RETURN llReturn
		
		
		 
	ENDPROC

	PROCEDURE Init
		IF DODEFAULT()
		   SET DELETED ON
		   SELECT land
		   SET ORDER TO cLeaseID
		   GO TOP
		   THISFORM.swrptlook1.txtBegID.VALUE = cLeaseID
		   THISFORM.swrptlook1.txtBegName.VALUE = cLeaseName
		   GO BOTT
		   THISFORM.swrptlook1.txtEndID.VALUE = cLeaseID
		   THISFORM.swrptlook1.txtEndName.VALUE = cLeaseName
		
		   THISFORM.chkIncLandowner.VALUE = .F.
		
		   * If we're in demo mode, tell the user that this is an optional module
		   IF m.goapp.ldemo
		      THISFORM.omessage.warning('The Land Management module is an optional module that can be purchased separately.' + ;
		         ' It is included in the demo for evaluation purposes.')
		   ENDIF
		
		ENDIF
		
	ENDPROC

	PROCEDURE cboLeaseStatus.Init
		THIS.ADDLISTITEM('** Any Status **',1,1)
		   this.addlistitem('Active',2,1)
		   this.addlistitem('Active',2,2)
		   this.addlistitem('Pending',3,1)
		   this.addlistitem('Pending',3,2)
		   this.addlistitem('Dedicated',4,1)
		   this.addlistitem('PD',4,2)
		   this.addlistitem('Expired',5,1)   
		   this.addlistitem('Expired',5,2)
		   this.addlistitem('HBP',6,1)
		   this.addlistitem('HBP',6,2)
		   this.addlistitem('Paid-Up',7,1)
		   this.addlistitem('Paid-Up',7,2)
		   this.addlistitem('Sold',8,1)
		   this.addlistitem('Sold',8,2)
		   this.addlistitem('Mandatory Pool',9,1)
		   this.addlistitem('MP',9,2)
		   this.addlistitem('ROW',10,1)
		   this.addlistitem('ROW',10,2)
		   this.addlistitem('Location Agree',11,1)
		   this.addlistitem('LA',11,2)
		   this.addlistitem('Plugged',12,1)
		   this.addlistitem('PL',12,2)
		
		this.ListItemID = 1
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE chkIncLandowner.Click
		if this.value and file('summarypost.cfg')  &&  Only show this option if that file exists - Everflow specific - BH 06/22/07
		   thisform.chkExceptions.visible = .t.
		else
		   thisform.chkExceptions.visible = .f.
		endif   
	ENDPROC

	PROCEDURE chkSelected.Click
		IF this.Value
		   DO FORM commonsource\selected-ids WITH 'LAND' LINKED 
		   lnCount = RECCOUNT('selected')
		   thisform.lblselected.Caption = TRANSFORM(lnCount) + ' Leases Selected'
		   thisform.lblselected.Visible = .T.
		   thisform.lblbegID.Visible = .F.
		   thisform.lblendID.Visible = .F.
		   thisform.swrptlook1.Visible = .F.
		ELSE
		   thisform.lblselected.Visible = .F.
		   thisform.lblbegID.Visible = .T.
		   thisform.lblendID.Visible = .T.
		   thisform.swrptlook1.Visible = .T.
		ENDIF 
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cleaseid\Lease ID,cleasename\Lease Name'
		
		DO FORM ..\custom\picklist WITH 'Land', lcList, thisform.swrptlook1.txtBegID.value, 2,.f.,.t.
		
		IF llOK
		   thisform.swrptlook1.txtBegID.value = land.cleaseid
		   thisform.swrptlook1.txtBegName.value = land.cleasename
		   thisform.swrptlook1.txtBegID.Refresh()
		   thisform.swrptlook1.txtBegName.Refresh()
		   thisform.setnextcontrol(thisform.swrptlook1.txtbegid)
		ENDIF   
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cleaseid\Lease ID,cleasename\Lease Name'
		
		DO FORM ..\custom\picklist WITH 'Land', lcList, thisform.swrptlook1.txtEndID.value, 2,.f.,.t.
		
		IF llOK
		   thisform.swrptlook1.txtEndID.value = land.cleaseid
		   thisform.swrptlook1.txtEndName.value = land.cleasename
		   thisform.swrptlook1.txtEndID.Refresh()
		   thisform.swrptlook1.txtEndName.Refresh()
		   thisform.setnextcontrol(thisform.swrptlook1.txtEndid)
		ENDIF   
	ENDPROC

ENDDEFINE
