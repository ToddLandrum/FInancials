*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="dmrwiedet.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor9" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 369
	Left = 24
	Name = "Dataenvironment"
	Top = 429
	Width = 867

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "groups", ;
		CursorSource = "groups", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 183, ;
		Name = "Cursor1", ;
		Order = "cgroup", ;
		Top = 205, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 126, ;
		Name = "Cursor2", ;
		Order = "cwellid", ;
		Top = 22, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "expense", ;
		CursorSource = "expense", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 251, ;
		Name = "Cursor3", ;
		Top = 24, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "income", ;
		CursorSource = "income", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 368, ;
		Name = "Cursor4", ;
		Top = 28, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "sysctl", ;
		CursorSource = "sysctl", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor5", ;
		Top = 15, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "revsrc", ;
		CursorSource = "revsrc", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 412, ;
		Name = "Cursor6", ;
		Top = 171, ;
		Width = 101
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor7' AS cursor WITH ;
		Alias = "options", ;
		CursorSource = "options", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 37, ;
		Name = "Cursor7", ;
		Top = 169, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor8' AS cursor WITH ;
		Alias = "glopt", ;
		CursorSource = "glopt", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 554, ;
		Name = "Cursor8", ;
		Top = 39, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor9' AS cursor WITH ;
		Alias = "ownpcts", ;
		CursorSource = "ownpcts", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 605, ;
		Name = "Cursor9", ;
		Top = 181, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formdmrwiedet AS frmrptcriteria OF "..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Runcombo1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swyear1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swyear2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swperiod1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swperiod2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblProdYear" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swgroup1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEndID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBegID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="LblGroup" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblRunNo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="opgReportBy" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAcctDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chklExclude" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSlash1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSlash2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblHyphen" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtAcctDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkPageBreak" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSelected" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSelected" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: lcloserun
	*</DefinedPropArrayMethod>

	Caption = "Revenue/Expense Detail"
	DataSession = 2
	DoCreate = .T.
	Height = 453
	HelpContextID = 197
	Name = "FormDmrwiedet"
	Width = 575
	Swrptcriteriabuttons1.chkExport.Alignment = 0
	Swrptcriteriabuttons1.chkExport.Name = "chkExport"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.cmdPreview.Name = "cmdPreview"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 167
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 23
	Swrptcriteriabuttons1.Top = 375
	Swrptcriteriabuttons1.ZOrderSet = 1

	ADD OBJECT 'chklExclude' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Exclude Expenses", ;
		Left = 144, ;
		Name = "chklExclude", ;
		TabIndex = 21, ;
		Top = 327, ;
		Value = .F., ;
		ZOrderSet = 16
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkPageBreak' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Page Break by Well", ;
		Left = 288, ;
		Name = "chkPageBreak", ;
		TabIndex = 22, ;
		Top = 327, ;
		Value = .F., ;
		ZOrderSet = 21
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSelected' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Choose Selected Wells", ;
		Left = 223, ;
		Name = "chkSelected", ;
		TabIndex = 17, ;
		Top = 177, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'lblAcctDate' AS lbllabelcustom WITH ;
		Caption = "Accounting Date:", ;
		Left = 115, ;
		Name = "lblAcctDate", ;
		TabIndex = 16, ;
		Top = 144, ;
		Visible = .T., ;
		ZOrderSet = 15
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblBegID' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "First Well:", ;
		Height = 16, ;
		Left = 115, ;
		Name = "lblBegID", ;
		TabIndex = 19, ;
		Top = 214, ;
		Width = 49, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblEndID' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Last Well:", ;
		Height = 16, ;
		Left = 115, ;
		Name = "lblEndID", ;
		TabIndex = 20, ;
		Top = 264, ;
		Width = 49, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblGroup' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Group:", ;
		Height = 16, ;
		Left = 115, ;
		Name = "LblGroup", ;
		TabIndex = 14, ;
		Top = 109, ;
		Visible = .T., ;
		Width = 35, ;
		ZOrderSet = 11
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblHyphen' AS lbltextcustom WITH ;
		Caption = "-", ;
		FontSize = 11, ;
		Left = 275, ;
		Name = "lblHyphen", ;
		TabIndex = 10, ;
		Top = 77, ;
		Visible = .F., ;
		ZOrderSet = 19
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "Report By:", ;
		Left = 120, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 2, ;
		Top = 12, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'LblProdYear' AS lbllabelcustom WITH ;
		AutoSize = .T., ;
		Caption = "Period Range:", ;
		Height = 16, ;
		Left = 115, ;
		Name = "LblProdYear", ;
		TabIndex = 11, ;
		Top = 78, ;
		Visible = .F., ;
		Width = 69, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblRunNo' AS lbllabelcustom WITH ;
		Caption = "Run No", ;
		Left = 115, ;
		Name = "lblRunNo", ;
		TabIndex = 12, ;
		Top = 78, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSelected' AS lbllabelcustom WITH ;
		Caption = "All IDs Selected", ;
		ForeColor = 0,0,255, ;
		Left = 222, ;
		Name = "lblSelected", ;
		TabIndex = 24, ;
		Top = 243, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSlash1' AS lbltextcustom WITH ;
		Caption = "/", ;
		FontBold = .F., ;
		FontSize = 12, ;
		Left = 241, ;
		Name = "lblSlash1", ;
		TabIndex = 5, ;
		Top = 76, ;
		Visible = .F., ;
		ZOrderSet = 17
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSlash2' AS lbltextcustom WITH ;
		Caption = "/", ;
		FontBold = .F., ;
		FontSize = 12, ;
		Left = 326, ;
		Name = "lblSlash2", ;
		TabIndex = 8, ;
		Top = 76, ;
		Visible = .F., ;
		ZOrderSet = 18
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'opgReportBy' AS opgoptiongroupcustom WITH ;
		BorderStyle = 0, ;
		ButtonCount = 3, ;
		Height = 35, ;
		Left = 111, ;
		Name = "opgReportBy", ;
		TabIndex = 1, ;
		Top = 26, ;
		Width = 393, ;
		ZOrderSet = 13, ;
		Option1.Caption = "Run No", ;
		Option1.FontSize = 8, ;
		Option1.Height = 17, ;
		Option1.Left = 14, ;
		Option1.Name = "Option1", ;
		Option1.Top = 7, ;
		Option1.Width = 61, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "Production Period Range", ;
		Option2.FontSize = 8, ;
		Option2.Height = 16, ;
		Option2.Left = 93, ;
		Option2.Name = "Option2", ;
		Option2.Top = 7, ;
		Option2.Width = 136, ;
		Option3.AutoSize = .T., ;
		Option3.Caption = "Accounting Period Range", ;
		Option3.FontSize = 8, ;
		Option3.Height = 16, ;
		Option3.Left = 246, ;
		Option3.Name = "Option3", ;
		Option3.Top = 7, ;
		Option3.Width = 140
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'Runcombo1' AS runcombo WITH ;
		cshowwhat = R, ;
		Height = 20, ;
		Left = 202, ;
		Name = "Runcombo1", ;
		TabIndex = 3, ;
		Top = 76, ;
		Width = 257, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Swgroup1' AS swgroup WITH ;
		Left = 202, ;
		Name = "Swgroup1", ;
		TabIndex = 13, ;
		Top = 107, ;
		Visible = .T., ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="combobox" />

	ADD OBJECT 'Swperiod1' AS swperiod WITH ;
		Left = 247, ;
		Name = "Swperiod1", ;
		TabIndex = 6, ;
		Top = 76, ;
		Visible = .F., ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'Swperiod2' AS swperiod WITH ;
		Left = 333, ;
		Name = "Swperiod2", ;
		TabIndex = 9, ;
		Top = 76, ;
		Visible = .F., ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		Left = 202, ;
		Name = "Swrptlook1", ;
		TabIndex = 18, ;
		Top = 209, ;
		ZOrderSet = 6, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		txtBegID.clistexpression = wells.cwellid, ;
		txtBegID.clistworkarea = wells, ;
		txtBegID.Name = "txtBegID", ;
		TxtBegName.Name = "TxtBegName", ;
		txtEndID.clistexpression = wells.cwellid, ;
		txtEndID.clistworkarea = wells, ;
		txtEndID.Name = "txtEndID", ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />

	ADD OBJECT 'Swyear1' AS swyear WITH ;
		Left = 202, ;
		Name = "Swyear1", ;
		TabIndex = 4, ;
		Top = 76, ;
		Visible = .F., ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'Swyear2' AS swyear WITH ;
		Left = 287, ;
		Name = "Swyear2", ;
		TabIndex = 7, ;
		Top = 76, ;
		Visible = .F., ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtAcctDate' AS dpk WITH ;
		ControlSource = "", ;
		Height = 20, ;
		Left = 202, ;
		Name = "txtAcctDate", ;
		TabIndex = 15, ;
		Top = 142, ;
		Visible = .T., ;
		Width = 75, ;
		ZOrderSet = 20
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />
	
	PROCEDURE builddata
		LOCAL lcWell, lcexpselect, lcincselect, lcrevkey, lcwellid, lnBreak, lnNet, lnamount
		LOCAL llReturn, loError, llByRunNo, llByProdPrd, llByAcctPrd, llSelected, oWellInv
		
		TRY
		   STORE .F. TO llByRunNo, llByProdPrd, llByAcctPrd
		
		   llSelected = THISFORM.chkSelected.VALUE
		   
		   oWellInv = CREATEOBJECT('swbizobj_wellinv')
		
		   lnStart = SECONDS()
		   swlogging('Well Rev/Exp Detail', .T., lnStart)
		   DO CASE
		      CASE THISFORM.opgreportby.VALUE = 1  &&  Run No
		         tcyear    = THISFORM.runcombo1.LISTITEM[thisform.runcombo1.listitemid, 2]
		         tnrunno   = INT(VAL(THISFORM.runcombo1.LISTITEM[thisform.runcombo1.listitemid, 3]))
		         tcgroup   = THISFORM.runcombo1.LISTITEM[thisform.runcombo1.listitemid, 4]
		         tcdmbatch = THISFORM.runcombo1.LISTITEM[thisform.runcombo1.listitemid, 5]
		         tcperiod1 = '01'
		         tcyear1   = tcyear
		         IF tnrunno = 0
		            tcgroup = LEFT(THISFORM.swgroup1.VALUE, 2)
		         ENDIF
		         llByRunNo = .T.
		
		      CASE THISFORM.opgreportby.VALUE = 2  && Production Period Range
		         tcyear1   = THISFORM.swyear1.VALUE
		         tcperiod1 = THISFORM.swperiod1.VALUE
		         tcyear2   = THISFORM.swyear2.VALUE
		         tcperiod2 = THISFORM.swperiod2.VALUE
		         tcgroup   = LEFT(THISFORM.swgroup1.VALUE, 2)
		         tnrunno   = 0
		         llByProdPrd = .T.
		
		      CASE THISFORM.opgreportby.VALUE = 3  && Accounting Period Range
		         tcyear1   = THISFORM.swyear1.VALUE
		         tcperiod1 = THISFORM.swperiod1.VALUE
		         tcyear2   = THISFORM.swyear2.VALUE
		         tcperiod2 = THISFORM.swperiod2.VALUE
		         tcgroup   = LEFT(THISFORM.swgroup1.VALUE, 2)
		         DO CASE
		            CASE INLIST(tcperiod2,'01','03','05','07','08','10','12')
		               lcDay = '31'
		            CASE INLIST(tcperiod2,'04','06','09','11')
		               lcDay = '30'
		            CASE tcperiod2 = '02'
		               IF swLeapYear(tcYear2)
		                  lcDay = '29'
		               ELSE
		                  lcDay = '28'
		               ENDIF    
		            OTHERWISE
		               lcDay = '30'
		         ENDCASE
		 
		         tdDate1   = CTOD(tcperiod1+'/01/'+tcyear1)
		         tdDate2   = CTOD(tcperiod2+'/'+lcDay+'/'+tcyear2)
		         tnrunno   = 0
		         llByAcctPrd = .T.
		
		   ENDCASE
		
		   IF llSelected
		      SELECT SELECTED
		      GO TOP
		      tcBegID = cid
		      GO BOTT
		      tcEndID = cid
		   ELSE
		      tcBegID = THISFORM.swrptlook1.txtbegid.VALUE
		      tcEndID = THISFORM.swrptlook1.txtendid.VALUE
		
		      SELECT cwellid AS cid FROM wells ;
		         WHERE BETWEEN(cwellid,tcBegID,tcEndID) ;
		         INTO CURSOR SELECTED ;
		         ORDER BY cwellid
		   ENDIF
		
		   WAIT WIND NOWAIT 'Building Report...Please Wait'
		
		   IF tnrunno = 0
		      lcincselect = 'income.nrunno = 0 AND income.drevdate <= tdAcctDate'
		      lcexpselect = 'expense.nrunnorev = 0 AND expense.dexpdate <= tdAcctDate'
		      tdacctdate  = THISFORM.txtacctdate.VALUE
		   ELSE
		      lcincselect = 'income.crunyear=tcYear AND income.nrunno=tnRunNo'
		      lcexpselect = 'expense.crunyearrev=tcYear AND expense.nrunnorev=tnRunNo'
		      tdacctdate  = CTOD(THISFORM.runcombo1.LISTITEM[thisform.runcombo1.listitemid, 7])
		   ENDIF
		
		   IF llByRunNo
		      IF tnrunno = 0
		         IF tcgroup = '**'
		            groupinclude = ' and .t.'
		         ELSE
		            groupinclude = 'AND wells.cgroup = tcGroup'
		         ENDIF
		      ELSE
		         groupinclude = 'AND .t.'
		      ENDIF
		   ELSE
		      IF tcgroup <> '**'
		         groupinclude = 'AND wells.cgroup = tcGroup'
		      ELSE
		         groupinclude = 'AND .T. '
		      ENDIF
		   ENDIF
		
		   CREATE CURSOR welldet ;
		      (ipagebreak i, ;
		      cwellid    c(10), ;
		      cdeck      c(10), ;
		      cwellname  c(30), ;
		      crectype   c(1),  ;
		      cperiod    c(2), ;
		      cyear      c(4), ;
		      ddate      d,  ;
		      csource    c(5),  ;
		      ccategory  c(60),  ;
		      crefid     c(20), ;
		      crevkey    c(10), ;
		      cownerid   c(10), ;
		      nprice     N(12, 4),  ;
		      cdescrip   c(60),  ;
		      cexpclass  c(1),  ;
		      ccatcode   c(4), ;
		      cafeno     c(10), ;
		      nunits     N(12, 4),  ;
		      nrunno     N(3, 0),  ;
		      namount    N(12, 4),  ;
		      nnettotal  N(12, 2), ;
		      ntotal     N(12, 2))
		   INDEX ON cwellid + crectype + cyear + cperiod + cexpclass + crefid TAG cwellid
		
		   WAIT WIND NOWAIT 'Selecting Expenses...'
		   IF THISFORM.chklexclude.VALUE = .F.  &&  Not excluding expenses
		      SET TALK ON
		      DO CASE
		         CASE llByProdPrd
		            SELECT  expense.cwellid,  ;  && Expenses
		            wells.cwellname,  ;
		            	expense.cdeck, ;
		               expense.dexpdate AS ddate,  ;
		               CAST(1 AS i) AS ipagebreak, ;
		               expense.cyear,  ;
		               expense.cexpclass, ;
		               expense.ccatcode, ;
		               expense.cafeno, ;
		               expense.cperiod,  ;
		               'E' AS crectype,  ;
		               expense.crefid,  ;
		               expense.cownerid, ;
		               expense.cpayee AS cdescrip,  ;
		               expense.ccateg AS ccategory,  ;
		               expense.namount AS ntotal  ;
		               FROM expense, wells, expcat  ;
		               WHERE BETWEEN(expense.cyear + expense.cperiod, tcyear1 + tcperiod1, tcyear2 + tcperiod2)  ;
		               AND expense.cwellid = wells.cwellid  ;
		               AND expense.cyear <> 'FIXD' ;
		               AND expense.cwellid IN (SELECT cid FROM SELECTED) ;
		               AND expense.ccatcode == expcat.ccatcode ;
		               AND NOT expcat.ljibonly ;
		               &groupinclude  ;
		               INTO CURSOR welltmp  ;
		               ORDER BY ipagebreak, wells.cwellid, expense.cyear, expense.cperiod
		
		         CASE llByRunNo
		            SELECT  expense.cwellid,  ;  && Expenses
		            wells.cwellname,  ;
		            	expense.cdeck, ;
		               expense.dexpdate AS ddate,  ;
		               CAST(1 AS i) AS ipagebreak, ;
		               expense.cyear,  ;
		               expense.cexpclass, ;
		               expense.ccatcode, ;
		               expense.cafeno, ;
		               expense.cperiod,  ;
		               'E' AS crectype,  ;
		               expense.crefid,  ;
		               expense.cownerid, ;
		               expense.cpayee AS cdescrip,  ;
		               expense.ccateg AS ccategory,  ;
		               expense.namount AS ntotal  ;
		               FROM expense, wells, expcat  ;
		               WHERE expense.cwellid IN (SELECT cid FROM SELECTED) ;
		               AND expense.cwellid = wells.cwellid  ;
		               AND IIF(tcgroup <> '**', wells.cGroup = tcgroup, .T.)  ;
		               AND expense.cyear <> 'FIXD' ;
		               AND expense.ccatcode == expcat.ccatcode ;
		               AND NOT expcat.ljibonly ;
		               AND &lcexpselect ;
		               &groupinclude  ;
		               INTO CURSOR welltmp  ;
		               ORDER BY ipagebreak, wells.cwellid, expense.cyear, expense.cperiod
		
		         CASE llByAcctPrd
		            SELECT  expense.cwellid,  ;  && Expenses
		            wells.cwellname,  ;
		            	expense.cdeck, ;
		               expense.dexpdate AS ddate,  ;
		               CAST(1 AS i) AS ipagebreak, ;
		               getfiscalyear(expense.dexpdate) AS cyear,  ;
		               expense.cexpclass, ;
		               expense.cafeno, ;
		               expense.ccatcode, ;
		               getfiscalperiod(expense.dexpdate) AS cperiod,  ;
		               'E' AS crectype,  ;
		               expense.crefid,  ;
		               expense.cownerid, ;
		               expense.cpayee AS cdescrip,  ;
		               expense.ccateg AS ccategory,  ;
		               expense.namount AS ntotal,  ;
		               expense.crunyearrev, expense.nrunnorev ;
		               FROM expense, wells, expcat  ;
		               WHERE (expense.crunyearrev + PADL(TRANSFORM(expense.nrunnorev), 3, '0') ;
		               IN (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') FROM sysctl WHERE BETWEEN(dacctdate,tdDate1,tdDate2) AND ctypeclose='R'));
		               AND expense.cwellid = wells.cwellid  ;
		               AND expense.cyear <> 'FIXD' ;
		               AND expense.cwellid IN (SELECT cid FROM SELECTED) ;
		               AND expense.ccatcode == expcat.ccatcode ;
		               AND NOT expcat.ljibonly ;
		               &groupinclude  ;
		               INTO CURSOR welltmp  ;
		               ORDER BY ipagebreak, wells.cwellid, expense.cyear, expense.cperiod
		      ENDCASE
		      SET TALK OFF
		
		      SELECT welldet
		      APPEND FROM DBF('welltmp')
		
		      WAIT WIND NOWAIT 'Netting Expenses...'
		      SELECT welldet
		      SCAN
		         m.amount    = ntotal
		         m.cwellid   = cwellid
		         m.cexpclass = cexpclass
		         m.cownerid  = cownerid
		         m.ccatcode  = ccatcode
		         m.cdeck     = cdeck 
		         
		         IF EMPTY(m.cDeck)
		            m.cDeck = oWellInv.DOIDeckNameLookup(welldet.cyear, welldet.cperiod, m.cwellid)
		         ENDIF
		         
		         IF NOT EMPTY(cownerid) OR ccatcode = 'MKTG'  &&  Don't net out anything if it's a one-man item - BH 8/26/04 or a MKTG Expense - PWS 12/1/05
		            IF ccatcode = 'MKTG'  &&  If MKTG, net it down using the gasrev percentage - BH 8/9/06
		               lnNet = swNetRevenue(m.cwellid, m.amount, 'G', .F., .T., .F., m.cownerid,,,,m.cDeck)
		            ELSE
		               swselect('investor')
		               SET ORDER TO cownerid
		               IF SEEK(m.cownerid) AND NOT lDummy
		                  lnNet = m.amount
		               ELSE
		                  lnNet = 0
		               ENDIF
		            ENDIF
		         ELSE
		            lnNet = swNetExp(m.amount, m.cwellid, .T., m.cexpclass, 'N', .F., m.cownerid, m.ccatcode, m.cDeck)
		         ENDIF
		         rectype = 'E'
		         SELECT welldet
		         REPLACE nnettotal WITH lnNet
		      ENDSCAN
		   ENDIF
		
		   THISFORM.creportname     = 'dmrwiedet'
		   THISFORM.cselectcriteria = 'Well  ' + ALLTRIM(tcBegID) + '  -  ' +  ALLTRIM(tcEndID) + IIF(THISFORM.chklexclude.VALUE, ' Revenue Only', '')
		   THISFORM.csortorder      = 'Well ID'
		   THISFORM.ctitle1         = 'Well Revenue/Expense Detail'
		
		   DO CASE
		      CASE THISFORM.opgreportby.VALUE = 2
		         THISFORM.ctitle2 = 'For Production Period Range ' + THISFORM.swperiod1.VALUE + '/' + THISFORM.swyear1.VALUE + ' To ' + ;
		            THISFORM.swperiod2.VALUE + '/' + THISFORM.swyear2.VALUE + ' Group: ' + tcgroup
		      CASE THISFORM.opgreportby.VALUE = 3
		         THISFORM.ctitle2 = 'For Accounting Period Range ' + THISFORM.swperiod1.VALUE + '/' + THISFORM.swyear1.VALUE + ' To ' + ;
		            THISFORM.swperiod2.VALUE + '/' + THISFORM.swyear2.VALUE + ' Group: ' + tcgroup
		      OTHERWISE
		         IF tnrunno = 0
		            THISFORM.ctitle2 = 'New Run - Group: ' + tcgroup
		         ELSE
		            THISFORM.ctitle2 = 'Run No: ' + PADL(ALLT(STR(tnrunno)), 3, '0') + '/' + tcyear + ' Group: ' + tcgroup
		         ENDIF
		   ENDCASE
		
		   WAIT WIND NOWAIT 'Selecting Revenue...'
		   SET TALK ON
		   DO CASE
		      CASE llByProdPrd
		         SELECT  income.cwellid,  ;  && Income
		         wells.cwellname,  ;
		            income.cdeck, ;
		            income.drevdate AS ddate,  ;
		            CAST(1 AS i) AS ipagebreak, ;
		            income.cyear,  ;
		            income.cperiod,  ;
		            'A' AS crectype,  ;
		            income.crefid,  ;
		            income.crevkey, ;
		            income.csource AS cdescrip,  ;
		            income.csource,  ;
		            income.nunits,  ;
		            income.cownerid, ;
		            income.nprice AS nprice,  ;
		            income.ntotalinc AS ntotal ;
		            FROM income, wells  ;
		            WHERE income.cwellid IN (SELECT cid FROM SELECTED) ;
		            AND NOT 'TAX' $ csource ;
		            AND income.cwellid = wells.cwellid  ;
		            AND BETWEEN(income.cyear + income.cperiod, tcyear1 + tcperiod1, tcyear2 + tcperiod2)  ;
		            &groupinclude  ;
		            INTO CURSOR welltmp  ;
		            ORDER BY ipagebreak, wells.cwellid, income.cyear, income.cperiod
		
		      CASE llByRunNo
		         SELECT  income.cwellid,  ;  && Income
		         wells.cwellname,  ;
		         	income.cdeck, ;
		            income.drevdate AS ddate,  ;
		            CAST(1 AS i) AS ipagebreak, ;
		            income.cyear,  ;
		            income.cperiod,  ;
		            'A' AS crectype,  ;
		            income.crefid,  ;
		            income.crevkey, ;
		            income.csource AS cdescrip,  ;
		            income.csource,  ;
		            income.nunits,  ;
		            income.cownerid, ;
		            income.nrunno,  ;
		            income.nprice AS nprice,  ;
		            income.ntotalinc AS ntotal ;
		            FROM income, wells  ;
		            WHERE income.cwellid IN (SELECT cid FROM SELECTED) ;
		            AND NOT 'TAX' $ csource ;
		            AND income.cwellid = wells.cwellid  ;
		            AND IIF(tcgroup <> '**', wells.cGroup = tcgroup, .T.)  ;
		            AND &lcincselect ;
		            &groupinclude  ;
		            INTO CURSOR welltmp  ;
		            ORDER BY ipagebreak, wells.cwellid, income.cyear, income.cperiod
		
		      CASE llByAcctPrd
		         SELECT  income.cwellid,  ;  && Income
		         wells.cwellname,  ;
		         	income.cdeck, ;
		            income.drevdate AS ddate,  ;
		            CAST(1 AS i) AS ipagebreak, ;
		            getfiscalyear(income.drevdate) AS cyear,  ;
		            getfiscalperiod(income.drevdate) AS cperiod,  ;
		            'A' AS crectype,  ;
		            income.crefid,  ;
		            income.crevkey, ;
		            income.csource AS cdescrip,  ;
		            income.csource,  ;
		            income.nunits,  ;
		            income.cownerid, ;
		            income.nprice AS nprice,  ;
		            income.ntotalinc AS ntotal ;
		            FROM income, wells  ;
		            WHERE income.cwellid IN (SELECT cid FROM SELECTED) ;
		            AND NOT 'TAX' $ csource ;
		            AND income.cwellid = wells.cwellid  ;
		            AND (income.crunyear + PADL(TRANSFORM(income.nrunno), 3, '0') ;
		            IN (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') FROM sysctl WHERE BETWEEN(dacctdate,tdDate1,tdDate2) AND ctypeclose='R'));
		            &groupinclude  ;
		            INTO CURSOR welltmp  ;
		            ORDER BY ipagebreak, wells.cwellid, income.cyear, income.cperiod
		   ENDCASE
		   SET TALK OFF
		
		   SELECT welldet
		   APPEND FROM DBF('welltmp')
		
		   DO CASE
		      CASE llByProdPrd
		         SELECT  income.cwellid,  ;  && Income
		         wells.cwellname,  ;
			        income.cdeck, ;
		            income.drevdate AS ddate,  ;
		            CAST(1 AS i) AS ipagebreak, ;
		            income.cyear,  ;
		            income.cperiod,  ;
		            'B' AS crectype,  ;
		            income.crefid,  ;
		            income.crevkey, ;
		            income.csource AS cdescrip,  ;
		            income.csource,  ;
		            income.nunits,  ;
		            income.cownerid, ;
		            income.nprice AS nprice,  ;
		            income.ntotalinc AS ntotal ;
		            FROM income, wells  ;
		            WHERE income.cwellid IN (SELECT cid FROM SELECTED) ;
		            AND 'TAX' $ csource ;
		            AND income.cwellid = wells.cwellid  ;
		            AND BETWEEN(income.cyear + income.cperiod, tcyear1 + tcperiod1, tcyear2 + tcperiod2)  ;
		            &groupinclude  ;
		            INTO CURSOR welltmp  ;
		            ORDER BY ipagebreak, wells.cwellid, income.cyear, income.cperiod
		      CASE llByRunNo
		         SELECT  income.cwellid,  ;  && Income
		         wells.cwellname,  ;
		         	income.cdeck, ;
		            income.drevdate AS ddate,  ;
		            CAST(1 AS i) AS ipagebreak, ;
		            income.cyear,  ;
		            income.cperiod,  ;
		            'B' AS crectype,  ;
		            income.crefid,  ;
		            income.crevkey, ;
		            income.csource AS cdescrip,  ;
		            income.csource,  ;
		            income.nunits,  ;
		            income.cownerid, ;
		            income.nrunno,  ;
		            income.nprice AS nprice,  ;
		            income.ntotalinc AS ntotal ;
		            FROM income, wells  ;
		            WHERE income.cwellid IN (SELECT cid FROM SELECTED) ;
		            AND 'TAX' $ csource ;
		            AND income.cwellid = wells.cwellid  ;
		            AND IIF(tcgroup <> '**', wells.cGroup = tcgroup, .T.)  ;
		            AND &lcincselect ;
		            &groupinclude  ;
		            INTO CURSOR welltmp  ;
		            ORDER BY ipagebreak, wells.cwellid, income.cyear, income.cperiod
		
		      CASE llByAcctPrd
		         SELECT  income.cwellid,  ;  && Income
		         wells.cwellname,  ;
		         	income.cdeck, ;
		            income.drevdate AS ddate,  ;
		            CAST(1 AS i) AS ipagebreak, ;
		            getfiscalyear(income.drevdate) AS cyear,  ;
		            getfiscalperiod(income.drevdate) AS cperiod,  ;
		            'B' AS crectype,  ;
		            income.crefid,  ;
		            income.crevkey, ;
		            income.csource AS cdescrip,  ;
		            income.csource,  ;
		            income.nunits,  ;
		            income.cownerid, ;
		            income.nprice AS nprice,  ;
		            income.ntotalinc AS ntotal ;
		            FROM income, wells  ;
		            WHERE income.cwellid IN (SELECT cid FROM SELECTED) ;
		            AND 'TAX' $ csource ;
		            AND income.cwellid = wells.cwellid  ;
		            AND (income.crunyear + PADL(TRANSFORM(income.nrunno), 3, '0') ;
		            IN (SELECT  crunyear + PADL(TRANSFORM(nrunno), 3, '0') FROM sysctl WHERE BETWEEN(dacctdate,tdDate1,tdDate2)));
		            &groupinclude  ;
		            INTO CURSOR welltmp  ;
		            ORDER BY ipagebreak, wells.cwellid, income.cyear, income.cperiod
		   ENDCASE
		
		   THISFORM.creportname = 'dmrwiedet'
		
		   SELECT welldet
		   APPEND FROM DBF('welltmp')
		
		   WAIT WIND NOWAIT 'Netting Revenue...'
		   SELECT welldet
		   SCAN FOR crectype = 'A' OR crectype = 'B'
		      lnamount   = ntotal
		      lcwellid   = cwellid
		      lcrevkey   = crevkey
		      m.cownerid = cownerid
		      m.cDeck    = cDeck
		      
		      IF EMPTY(m.cDeck)
		            m.cDeck = oWellInv.DOIDeckNameLookup(welldet.cyear, welldet.cperiod, m.cwellid)
		      ENDIF
		         
		      DO CASE
		         CASE NOT EMPTY(m.cownerid)
		            swselect('investor')
		            SET ORDER TO cownerid
		            IF SEEK(m.cownerid) AND lDummy
		               lnNet = 0
		            ELSE
		               lnNet = lnamount
		            ENDIF
		         CASE INLIST(csource, 'BBL', 'OTAX1', 'OTAX2', 'OTAX3', 'OTAX4')
		            IF csource = 'BBL'
		               lnNet = swNetRevenue(lcwellid, lnamount, 'O', .F., .T., .F., .F., .F., NOT welldet.nrunno = 0, .F., m.cDeck)
		            ELSE
		               lnNet = swNetRevenue(lcwellid, lnamount, 'O' + RIGHT(TRIM(csource), 1), .F., .T., .F., .F., .F., NOT welldet.nrunno = 0, .F., m.cDeck)
		            ENDIF
		         CASE INLIST(csource, 'MCF', 'GTAX1', 'GTAX2', 'GTAX3', 'GTAX4')
		            IF csource = 'MCF'
		               lnNet = swNetRevenue(lcwellid, lnamount, 'G', .F., .T., .F., .F., .F., NOT welldet.nrunno = 0, .F., m.cDeck)
		            ELSE
		               lnNet = swNetRevenue(lcwellid, lnamount, 'G' + RIGHT(TRIM(csource), 1), .F., .T., .F., .F., .F., NOT welldet.nrunno = 0, .F., m.cDeck)
		            ENDIF
		         CASE INLIST(csource, 'OTH', 'PTAX1', 'PTAX2', 'PTAX3', 'PTAX4')
		            lnNet = swNetRevenue(lcwellid, lnamount, 'P', .F., .T., .F., .F., .F., NOT welldet.nrunno = 0, .F., m.cDeck)
		         CASE csource = 'TRANS'
		            lnNet = swNetRevenue(lcwellid, lnamount, 'T', .F., .T., .F., .F., .F., NOT welldet.nrunno = 0, .F., m.cDeck)
		         CASE csource = 'MISC1'
		            lnNet = swNetRevenue(lcwellid, lnamount, '1', .F., .T., .F., .F., .F., NOT welldet.nrunno = 0, .F., m.cDeck)
		         CASE csource = 'MISC2'
		            lnNet = swNetRevenue(lcwellid, lnamount, '2', .F., .T., .F., .F., .F., NOT welldet.nrunno = 0, .F., m.cDeck)
		         OTHERWISE
		            lnNet = lnamount
		      ENDCASE
		      swselect('revsrc')
		      LOCATE FOR crevkey = lcrevkey
		      IF FOUND()
		         m.cdescrip = crevname
		      ELSE
		         m.cdescrip = ''
		      ENDIF
		      SELECT welldet
		      REPLACE nnettotal WITH lnNet, ;
		         cdescrip  WITH m.cdescrip
		   ENDSCAN
		
		   IF THISFORM.chkpageBreak.VALUE = .T.
		      lnBreak = 0
		      lcWell  = '*****'
		      SELECT welldet
		      SCAN
		         IF cwellid <> lcWell
		            lnBreak = lnBreak + 1
		            lcWell  = cwellid
		         ENDIF
		         REPLACE ipagebreak WITH lnBreak
		      ENDSCAN
		   ENDIF
		
		   WAIT CLEAR
		   SELECT welldet
		   INDEX ON PADL(ipagebreak, 10, '0') + cwellid + crectype + cyear + cperiod + cexpclass + crefid TAG cwellidp
		   IF RECC() > 0
		      llReturn = .T.
		   ELSE
		      llReturn = .F.
		   ENDIF
		   swlogging('Well Rev/Exp Detail', .F., lnStart, SECONDS())
		CATCH TO loError
		   DO errorlog WITH 'BuildData', loError.LINENO, 'Well Inc/Exp Detail', loError.ERRORNO, loError.MESSAGE
		   MESSAGEBOX('Unable to process the report at this time. Check the System Log found under Other Reports for more information.', 16, 'Problem Encountered')
		   llReturn = .F.
		ENDTRY
		
		RETURN llReturn
		
		
		
		
		
		
		
	ENDPROC

	PROCEDURE Init
		DODEFAULT()
		
		SELECT wells
		SET ORDER TO cWellID
		
		GO TOP
		THISFORM.swrptlook1.txtBegName.VALUE = cwellname
		THISFORM.swrptlook1.txtBegID.VALUE = cWellID
		
		GO BOTTOM
		THISFORM.swrptlook1.txtEndName.VALUE = cwellname
		THISFORM.swrptlook1.txtEndID.VALUE = cWellID
		
		SELECT sysctl
		SET ORDER TO yrprdkey
		GO TOP
		SCAN FOR lDisbman AND cTypeClose = 'R'
		   THISFORM.swYear1.VALUE = cYear
		   THISFORM.swPeriod1.VALUE = cPeriod
		   THISFORM.swYear2.VALUE = cYear
		   THISFORM.swPeriod2.VALUE = cPeriod
		   IF THISFORM.swGroup1.lExcludeAll
		      lnListCount = THISFORM.swGroup1.LISTCOUNT
		   ELSE
		      lnListCount = THISFORM.swGroup1.LISTCOUNT + 1
		   ENDIF
		
		   FOR lnX = 1 TO lnListCount
		      IF LEFT(THISFORM.swGroup1.LISTITEM[lnX],2) = cGroup
		         THISFORM.swGroup1.LISTITEMID = lnX
		         EXIT
		      ENDIF
		   ENDFOR
		   EXIT
		ENDSCAN
		
		thisform.txtacctdate.value = DATE()
		
		
	ENDPROC

	PROCEDURE chkSelected.Click
		IF this.Value
		   DO FORM commonsource\selected-ids WITH 'WELL' LINKED 
		   lnCount = RECCOUNT('selected')
		   thisform.lblselected.Caption = TRANSFORM(lnCount) + ' Wells Selected'
		   thisform.lblselected.Visible = .T.
		   thisform.lblbegID.Visible = .F.
		   thisform.lblendID.Visible = .F.
		   thisform.swrptlook1.Visible = .F.
		ELSE
		   thisform.lblselected.Visible = .F.
		   thisform.lblbegID.Visible = .T.
		   thisform.lblendID.Visible = .T.
		   thisform.swrptlook1.Visible = .T.
		ENDIF 
	ENDPROC

	PROCEDURE opgReportBy.Init
		if dodefault()
		   this.value = 1
		endif   
	ENDPROC

	PROCEDURE opgReportBy.Option1.Click
		
		IF NOT 'NEW' $ UPPER(THISFORM.runcombo1.DISPLAYVALUE)
		   THISFORM.lblacctdate.VISIBLE = .F.
		   THISFORM.txtacctdate.VISIBLE = .F.
		   THISFORM.lblgroup.VISIBLE    = .T.
		   THISFORM.swgroup1.VISIBLE    = .T.
		ELSE
		   THISFORM.lblacctdate.VISIBLE = .T.
		   THISFORM.txtacctdate.VISIBLE = .T.
		   THISFORM.lblgroup.VISIBLE    = .F.
		   THISFORM.swgroup1.VISIBLE    = .F.
		ENDIF
		
	ENDPROC

	PROCEDURE opgReportBy.Valid
		DO CASE
		   CASE THIS.VALUE = 1
		      THISFORM.lblProdYear.VISIBLE = .F.
		      THISFORM.swperiod1.VISIBLE   = .F.
		      THISFORM.swyear1.VISIBLE     = .F.
		      THISFORM.swperiod2.VISIBLE   = .F.
		      THISFORM.swyear2.VISIBLE     = .F.
		      THISFORM.lblRunNo.VISIBLE    = .T.
		      THISFORM.runcombo1.VISIBLE   = .T.
		      THISFORM.lblSlash1.VISIBLE   = .F.
		      THISFORM.lblSlash2.VISIBLE   = .F.
		      THISFORM.lblHyphen.VISIBLE   = .F.
		      IF NOT 'NEW' $ UPPER(thisform.runcombo1.DisplayValue)
		         THISFORM.lblacctdate.VISIBLE = .f.
		         THISFORM.txtacctdate.VISIBLE = .f.
		         thisform.lblgroup.Visible    = .t.
		         thisform.swgroup1.Visible    = .t.
		      ELSE
		         THISFORM.lblacctdate.VISIBLE = .T.
		         THISFORM.txtacctdate.VISIBLE = .T.
		         thisform.lblgroup.Visible    = .f.
		         thisform.swgroup1.Visible    = .f.
		      ENDIF   
		
		   CASE THIS.VALUE = 2
		      THISFORM.lblProdYear.VISIBLE = .T.
		      THISFORM.swperiod1.VISIBLE   = .T.
		      THISFORM.swyear1.VISIBLE     = .T.
		      THISFORM.swperiod2.VISIBLE   = .T.
		      THISFORM.swyear2.VISIBLE     = .T.
		      THISFORM.lblRunNo.VISIBLE    = .F.
		      THISFORM.runcombo1.VISIBLE   = .F.
		      THISFORM.lblSlash1.VISIBLE   = .T.
		      THISFORM.lblSlash2.VISIBLE   = .T.
		      THISFORM.lblHyphen.VISIBLE   = .T.
		      THISFORM.lblacctdate.VISIBLE = .F.
		      THISFORM.txtacctdate.set('visible',.f.)
		      thisform.lblgroup.Visible    = .t.
		         thisform.swgroup1.Visible    = .t.
		   CASE THIS.VALUE = 3
		      THISFORM.lblProdYear.VISIBLE = .T.
		      THISFORM.swperiod1.VISIBLE   = .T.
		      THISFORM.swyear1.VISIBLE     = .T.
		      THISFORM.swperiod2.VISIBLE   = .T.
		      THISFORM.swyear2.VISIBLE     = .T.
		      THISFORM.lblRunNo.VISIBLE    = .F.
		      THISFORM.runcombo1.VISIBLE   = .F.
		      THISFORM.lblSlash1.VISIBLE   = .T.
		      THISFORM.lblSlash2.VISIBLE   = .T.
		      THISFORM.lblHyphen.VISIBLE   = .T.
		      THISFORM.lblacctdate.VISIBLE = .F.
		      THISFORM.txtacctdate.set('visible',.f.)
		      thisform.lblgroup.Visible    = .t.
		         thisform.swgroup1.Visible    = .t.
		ENDCASE
	ENDPROC

	PROCEDURE Runcombo1.Init
		IF DODEFAULT()
		   this.listitemid = 1
		ENDIF   
	ENDPROC

	PROCEDURE Runcombo1.Valid
		IF 'New' $ this.value
		   thisform.swgroup1.visible = .t.
		   thisform.lblgroup.visible = .t.
		   thisform.lblacctdate.visible = .t.
		   thisform.txtacctdate.visible = .t.
		ELSE   
		   thisform.swgroup1.visible = .f.
		   thisform.lblgroup.visible = .f.
		   thisform.lblacctdate.visible = .f.
		   thisform.txtacctdate.visible = .f.
		ENDIF   
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cwellid,cwellname,cgroup,cwellstat'
		DO FORM ..\custom\picklist WITH 'Wells', lcList, thisform.swrptlook1.txtbegid.value, 4
		
		IF llOK
		   thisform.swrptlook1.txtBegId.value = cwellid
		   thisform.swrptlook1.txtBegName.value = cwellname
		   thisform.swrptlook1.txtBegId.refresh()
		   thisform.swrptlook1.txtBegName.refresh()
		ENDIF   
		
		thisform.setnextcontrol(thisform.swrptlook1.txtBegId)
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cwellid,cwellname,cgroup,cwellstat'
		DO FORM ..\custom\picklist WITH 'Wells', lcList, thisform.swrptlook1.txtendid.value, 4
		
		IF llOK
		   thisform.swrptlook1.txtEndId.value = cwellid
		   thisform.swrptlook1.txtEndName.value = cwellname
		   thisform.swrptlook1.txtEndId.refresh()
		   thisform.swrptlook1.txtEndName.refresh()
		ENDIF   
		
		thisform.setnextcontrol(thisform.swrptlook1.txtEndId)
		
	ENDPROC

ENDDEFINE
