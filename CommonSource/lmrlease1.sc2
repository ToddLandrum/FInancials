*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="lmrlease1.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 200
	Left = 40
	Name = "Dataenvironment"
	Top = 235
	Width = 520

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "land", ;
		CursorSource = "land", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "landowner", ;
		CursorSource = "landowner", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "investor", ;
		CursorSource = "investor", ;
		Database = ..\datafiles\data\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formlmrland AS frmrptcriteria OF "..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lstStatus" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom4" UniqueID="" Timestamp="" />

	Caption = "Lease Permitting Report"
	DataSession = 2
	DoCreate = .T.
	Height = 352
	HelpContextID = 167
	Name = "FormLmrland"
	Width = 375
	Swrptcriteriabuttons1.CHKSENDFILE.Alignment = 0
	Swrptcriteriabuttons1.CHKSENDFILE.Name = "CHKSENDFILE"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.CMDPREVIEW.Name = "CMDPREVIEW"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 72
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 6
	Swrptcriteriabuttons1.Top = 288

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "First Prospect:", ;
		Left = 27, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 2, ;
		Top = 36
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "Last Prospect:", ;
		Left = 26, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 3, ;
		Top = 87
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom3' AS lbllabelcustom WITH ;
		Caption = "Status", ;
		Left = 64, ;
		Name = "Lbllabelcustom3", ;
		TabIndex = 5, ;
		Top = 145
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom4' AS lbllabelcustom WITH ;
		AutoSize = .F., ;
		Caption = "NOTE: Hold the Ctrl key down to select multiple status codes.", ;
		ForeColor = 255,0,0, ;
		Height = 36, ;
		Left = 96, ;
		Name = "Lbllabelcustom4", ;
		Top = 252, ;
		Width = 204, ;
		WordWrap = .T.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lstStatus' AS lstlistboxcustom WITH ;
		BoundColumn = 2, ;
		Height = 108, ;
		Left = 102, ;
		MultiSelect = .T., ;
		Name = "lstStatus", ;
		TabIndex = 4, ;
		Top = 144, ;
		Width = 192
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="listbox" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		Left = 102, ;
		Name = "Swrptlook1", ;
		TabIndex = 1, ;
		Top = 33, ;
		Swlookupbutton1.Left = 193, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton1.Top = 0, ;
		Swlookupbutton2.Left = 193, ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		Swlookupbutton2.Top = 52, ;
		TxtBegID.clistexpression = prospect.cprospect, ;
		TxtBegID.clistworkarea = prospect, ;
		TxtBegID.Height = 22, ;
		TxtBegID.InputMask = "", ;
		TxtBegID.Left = 0, ;
		TxtBegID.Name = "TxtBegID", ;
		TxtBegID.Top = 0, ;
		TxtBegID.Width = 186, ;
		TxtBegName.Name = "TxtBegName", ;
		TxtBegName.Visible = .F., ;
		TxtEndID.clistexpression = prospect.cprospect, ;
		TxtEndID.clistworkarea = prospect, ;
		TxtEndID.Height = 22, ;
		TxtEndID.InputMask = "", ;
		TxtEndID.Left = 0, ;
		TxtEndID.Name = "TxtEndID", ;
		TxtEndID.Top = 52, ;
		TxtEndID.Width = 186, ;
		TxtEndName.Name = "TxtEndName", ;
		TxtEndName.Visible = .F.
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />
	
	PROCEDURE builddata
		LOCAL lcLease1, lcLease2, llIncLandowner
		
		lcLease1 = THISFORM.swrptlook1.txtBegID.VALUE
		lcLease2 = THISFORM.swrptlook1.txtEndID.VALUE
		
		THISFORM.cSelectCriteria = 'Prospects: ' + ALLTRIM(lcLease1) + ' - ' + ALLTRIM(lcLease2)
		THISFORM.cSortOrder      = 'Prospect'
		
		THISFORM.cReportName = 'lmrPermit'
		THISFORM.cTitle1     = 'Lease Permitting Report'
		
		THISFORM.cTitle2     = ''
		
		CREATE CURSOR templease ;
		   (cleaseid   c(10), ;
		     cprospect  c(30), ;
		     cleasestatus c(10), ;
		     cownerid   c(10), ;
		     cname      c(60), ;
		     caddress1  c(60), ;
		     caddress2  c(60), ;
		     caddress3  c(60), ;
		     npct       N(9, 4), ;
		     ngross     N(9, 4), ;
		     nacres     N(9, 4))
		
		INDEX ON cprospect + cname TAG ckey
		
		CREATE CURSOR statuscodes ;
		   (cstatus   c(10))
		
		FOR lnx = 1 TO THISFORM.lstStatus.LISTCOUNT
		   IF THIS.lstStatus.SELECTED(lnx)
		      m.cstatus = THISFORM.lstStatus.LIST(lnx, 2)
		      INSERT INTO statuscodes FROM MEMVAR
		   ENDIF
		ENDFOR
		
		swclose('tempowner')
		swclose('temp')
		swclose('tempexcept')
		swclose('temp1')
		
		SELECT  land.cprospect,;
				land.cleaseid,;
				land.cleasestatus,;
				land.ngrossacre AS ngross, ;
				land.nnetacres AS nacres ;
			FROM land ;
			WHERE BETWEEN(cprospect, lcLease1, lcLease2) ;
				AND cleasestatus IN (SELECT  cstatus ;
										 FROM statuscodes)   ;
			INTO CURSOR  temp1 ;
			ORDER BY cprospect
		
		swselect('investor')
		SET ORDER TO cownerid
		
		SELE temp1
		SCAN
		   SCATTER MEMVAR
		   swselect('landowner')
		   SCAN FOR cleaseid == m.cleaseid
		      m.cownerid = cownerid
		      m.npct     = npct
		      swselect('investor')
		      IF SEEK(m.cownerid)
		         m.cname     = csortfield
		         m.caddress1 = caddress1a
		         IF EMPTY(caddress1b)
		            m.caddress2 = ALLT(ccity1) + ' ' + cstate1 + ' ' + czip1
		            m.caddress3 = ''
		         ELSE
		            m.caddress2 = caddress1b
		            m.caddress3 = ALLT(ccity1) + ' ' + cstate1 + ' ' + czip1
		         ENDIF
		         INSERT INTO templease FROM MEMVAR
		      ENDIF
		   ENDSCAN
		ENDSCAN
		
		
		SELE templease
		
		IF RECC() > 0
		   RETURN .T.
		ELSE
		   RETURN .F.
		ENDIF
		
		
		
	ENDPROC

	PROCEDURE Init
		IF DODEFAULT()
		   SET DELETED ON
		   SELECT prospect
		   GO TOP
		   THISFORM.swrptlook1.txtBegID.VALUE = cprospect
		   THISFORM.swrptlook1.txtBegName.VALUE = cprospect
		   GO BOTT
		   THISFORM.swrptlook1.txtEndID.VALUE = cprospect
		   THISFORM.swrptlook1.txtEndName.VALUE = cprospect
		ENDIF
		
	ENDPROC

	PROCEDURE Load
		
		if dodefault()
		
		   sele cprospect from land where not empty(cprospect) into cursor prospect order by cprospect group by cprospect
		   index on cprospect tag cprospect
		endif
		
	ENDPROC

	PROCEDURE lstStatus.Init
		if dodefault()
		   this.addlistitem('Active',1,1)
		   this.addlistitem('Active',1,2)
		   this.addlistitem('Pending',2,1)
		   this.addlistitem('Pending',2,2)
		   this.addlistitem('Dedicated',3,1)
		   this.addlistitem('PD',3,2)
		   this.addlistitem('Expired',4,1)   
		   this.addlistitem('Expired',4,2)
		   this.addlistitem('HBP',5,1)
		   this.addlistitem('HBP',5,2)
		   this.addlistitem('Paid-Up',6,1)
		   this.addlistitem('Paid-Up',6,2)
		   this.addlistitem('Sold',7,1)
		   this.addlistitem('Sold',7,2)
		   this.addlistitem('Mandatory Pool',8,1)
		   this.addlistitem('MP',8,2)
		   this.addlistitem('ROW',9,1)
		   this.addlistitem('ROW',9,2)
		   this.addlistitem('Location Agree',10,1)
		   this.addlistitem('LA',10,2)
		   this.addlistitem('Plugged',11,1)
		   this.addlistitem('PL',11,2)
		   this.addlistitem('Tank Battery',12,1)
		   this.addlistitem('TB',11,2)
		   THIS.ADDLISTITEM('Inactive',13,1)
		   THIS.ADDLISTITEM('IN',13,2)
		   THIS.AddListItem('TA',14,1)
		   THIS.ADDLISTITEM('Temporary Access',14,2)
		   this.AddListItem('TBE',15,1)
		   this.AddListItem('Tank Battery, Etc',15,2)
		   this.addlistitem('MS',16,1)
		   this.AddListItem('Meter Site',16,2)
		endif   
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cprospect'
		
		DO FORM picklist WITH 'Prospect', lcList, thisform.swrptlook1.txtBegID.value, 1, .t.
		
		IF llOK
		   thisform.swrptlook1.txtBegID.value = prospect.cprospect
		   thisform.swrptlook1.txtBegName.value = prospect.cprospect
		   thisform.swrptlook1.txtBegID.Refresh()
		   thisform.swrptlook1.txtBegName.Refresh()
		   thisform.setnextcontrol(thisform.swrptlook1.txtbegid)
		ENDIF   
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		llOK = .F.
		lcList = 'cprospect'
		
		DO FORM picklist WITH 'Prospect', lcList, thisform.swrptlook1.txtEndID.value, 1, .t.
		
		IF llOK
		   thisform.swrptlook1.txtEndID.value = prospect.cprospect
		   thisform.swrptlook1.txtEndName.value = prospect.cprospect
		   thisform.swrptlook1.txtEndID.Refresh()
		   thisform.swrptlook1.txtEndName.Refresh()
		   thisform.setnextcontrol(thisform.swrptlook1.txtEndid)
		ENDIF   
	ENDPROC

ENDDEFINE
