*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="afedetrpt.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor10" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor11" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor12" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor13" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cursor14" UniqueID="" Timestamp="" />

	AutoOpenTables = .F.
	DataSource = .NULL.
	Height = 659
	Left = 26
	Name = "Dataenvironment"
	Top = 32
	Width = 635

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "afehdr", ;
		CursorSource = "afehdr", ;
		Database = ..\..\ampro_rv\datafiles\northwoodexplorationdata\appdata.dbc, ;
		Height = 296, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Order = "cafeno", ;
		Top = 20, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor10' AS cursor WITH ;
		Alias = "wellinv", ;
		CursorSource = "wellinv", ;
		Database = ..\..\ampro_rv\datafiles\northwoodexplorationdata\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor10", ;
		Top = 260, ;
		Width = 90
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor11' AS cursor WITH ;
		Alias = "appurchd", ;
		CursorSource = "appurchd", ;
		Database = ..\..\ampro_rv\datafiles\northwoodexplorationdata\appdata.dbc, ;
		Height = 90, ;
		Left = 445, ;
		Name = "Cursor11", ;
		Top = 291, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor12' AS cursor WITH ;
		Alias = "appurchh", ;
		CursorSource = "appurchh", ;
		Database = ..\..\ampro_rv\datafiles\northwoodexplorationdata\appdata.dbc, ;
		Height = 90, ;
		Left = 449, ;
		Name = "Cursor12", ;
		Top = 425, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor13' AS cursor WITH ;
		Alias = "csdisdet", ;
		CursorSource = "csdisdet", ;
		Database = ..\..\ampro_rv\datafiles\northwoodexplorationdata\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor13", ;
		Top = 380, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor14' AS cursor WITH ;
		Alias = "csdishdr", ;
		CursorSource = "csdishdr", ;
		Database = ..\..\ampro_rv\datafiles\northwoodexplorationdata\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor14", ;
		Top = 380, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor2' AS cursor WITH ;
		Alias = "afedet", ;
		CursorSource = "afedet", ;
		Database = ..\..\ampro_rv\datafiles\northwoodexplorationdata\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor2", ;
		Top = 20, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor3' AS cursor WITH ;
		Alias = "expcat", ;
		CursorSource = "expcat", ;
		Database = ..\..\ampro_rv\datafiles\northwoodexplorationdata\appdata.dbc, ;
		Height = 90, ;
		Left = 290, ;
		Name = "Cursor3", ;
		Top = 20, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor4' AS cursor WITH ;
		Alias = "taxcodes", ;
		CursorSource = "taxcodes", ;
		Database = ..\..\ampro_rv\datafiles\northwoodexplorationdata\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor4", ;
		Top = 140, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor5' AS cursor WITH ;
		Alias = "wells", ;
		CursorSource = "wells", ;
		Database = ..\..\ampro_rv\datafiles\northwoodexplorationdata\appdata.dbc, ;
		Height = 90, ;
		Left = 150, ;
		Name = "Cursor5", ;
		Top = 140, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor6' AS cursor WITH ;
		Alias = "expense", ;
		CursorSource = "expense", ;
		Database = ..\..\ampro_rv\datafiles\northwoodexplorationdata\appdata.dbc, ;
		Height = 90, ;
		Left = 292, ;
		Name = "Cursor6", ;
		Top = 144, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor8' AS cursor WITH ;
		Alias = "vendor", ;
		CursorSource = "vendor", ;
		Database = ..\..\ampro_rv\datafiles\northwoodexplorationdata\appdata.dbc, ;
		Height = 90, ;
		Left = 273, ;
		Name = "Cursor8", ;
		Top = 252, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

	ADD OBJECT 'Cursor9' AS cursor WITH ;
		Alias = "investor", ;
		CursorSource = "investor", ;
		Database = ..\..\ampro_rv\datafiles\northwoodexplorationdata\appdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor9", ;
		Top = 260, ;
		Width = 91
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS formafedetrpt AS frmrptcriteria OF "..\source\appforms.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="txtAFENo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Swrptlook1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEndID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblBegID" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLookAFE" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbltextcustom1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkByOwner" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbllabelcustom2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="swdate1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="swdate2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkExpCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSelected" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSelected" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: calcafe
	*</DefinedPropArrayMethod>

	Caption = "AFE Detail Reports"
	DataSession = 2
	DoCreate = .T.
	Height = 407
	HelpContextID = 641
	Name = "formafedetrpt"
	Width = 419
	Swrptcriteriabuttons1.chkExport.Alignment = 0
	Swrptcriteriabuttons1.chkExport.Name = "chkExport"
	Swrptcriteriabuttons1.cmdclose.Name = "cmdclose"
	Swrptcriteriabuttons1.cmdPreview.Name = "cmdPreview"
	Swrptcriteriabuttons1.cmdPrint.Name = "cmdPrint"
	Swrptcriteriabuttons1.Left = 81
	Swrptcriteriabuttons1.Name = "Swrptcriteriabuttons1"
	Swrptcriteriabuttons1.TabIndex = 15
	Swrptcriteriabuttons1.Top = 316
	Swrptcriteriabuttons1.ZOrderSet = 0

	ADD OBJECT 'chkByOwner' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Calculate by Owner", ;
		Left = 141, ;
		Name = "chkByOwner", ;
		TabIndex = 8, ;
		Top = 94, ;
		Value = .T.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkExpCode' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Include Expense Code On Report", ;
		Left = 141, ;
		Name = "chkExpCode", ;
		TabIndex = 10, ;
		Top = 118, ;
		Value = .F., ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSelected' AS chkcheckboxcustom WITH ;
		Alignment = 0, ;
		Caption = "Choose Selected Owners", ;
		Left = 143, ;
		Name = "chkSelected", ;
		TabIndex = 11, ;
		Top = 162, ;
		Value = .F.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdLookAFE' AS cmdcommandbuttoncustom WITH ;
		Caption = "...", ;
		FontBold = .T., ;
		Height = 20, ;
		Left = 250, ;
		Name = "cmdLookAFE", ;
		TabIndex = 2, ;
		TabStop = .F., ;
		Top = 22, ;
		Width = 20
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'lblBegID' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Beginning Owner:", ;
		Height = 16, ;
		Left = 38, ;
		Name = "lblBegID", ;
		TabIndex = 13, ;
		Top = 189, ;
		Width = 89, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblEndID' AS lblfieldlabelcustom WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Ending Owner:", ;
		Height = 16, ;
		Left = 53, ;
		Name = "lblEndID", ;
		TabIndex = 14, ;
		Top = 240, ;
		Width = 74, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom1' AS lbllabelcustom WITH ;
		Caption = "AFE No:", ;
		Left = 86, ;
		Name = "Lbllabelcustom1", ;
		TabIndex = 3, ;
		Top = 24
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbllabelcustom2' AS lbllabelcustom WITH ;
		Caption = "-", ;
		FontBold = .T., ;
		Height = 16, ;
		Left = 246, ;
		Name = "Lbllabelcustom2", ;
		TabIndex = 4, ;
		Top = 60, ;
		Width = 6
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'lblSelected' AS lbllabelcustom WITH ;
		Caption = "All Owners Selected", ;
		ForeColor = 0,0,255, ;
		Left = 161, ;
		Name = "lblSelected", ;
		TabIndex = 9, ;
		Top = 220, ;
		Visible = .F.
		*< END OBJECT: ClassLib="..\..\wellprofits\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'Lbltextcustom1' AS lbltextcustom WITH ;
		Caption = "Date Range:", ;
		Left = 66, ;
		Name = "Lbltextcustom1", ;
		TabIndex = 7, ;
		Top = 60
		*< END OBJECT: ClassLib="..\custom\ccontrol.vcx" BaseClass="label" />

	ADD OBJECT 'swdate1' AS dpk WITH ;
		ControlSource = "", ;
		Height = 20, ;
		Left = 141, ;
		Name = "swdate1", ;
		TabIndex = 5, ;
		Top = 58, ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />

	ADD OBJECT 'swdate2' AS dpk WITH ;
		ControlSource = "", ;
		Height = 20, ;
		Left = 261, ;
		Name = "swdate2", ;
		TabIndex = 6, ;
		Top = 58, ;
		Width = 75
		*< END OBJECT: ClassLib="..\custom\swdate.vcx" BaseClass="textbox" />

	ADD OBJECT 'Swrptlook1' AS swrptlook WITH ;
		Left = 141, ;
		Name = "Swrptlook1", ;
		TabIndex = 12, ;
		Top = 186, ;
		ZOrderSet = 3, ;
		Swlookupbutton1.Name = "Swlookupbutton1", ;
		Swlookupbutton2.Name = "Swlookupbutton2", ;
		TxtBegID.clistexpression = investor.cownerid, ;
		TxtBegID.clistworkarea = investor, ;
		TxtBegID.Name = "TxtBegID", ;
		TxtBegName.Name = "TxtBegName", ;
		TxtEndID.clistexpression = investor.cownerid, ;
		TxtEndID.clistworkarea = investor, ;
		TxtEndID.Name = "TxtEndID", ;
		TxtEndName.Name = "TxtEndName"
		*< END OBJECT: ClassLib="..\custom\swcontrol.vcx" BaseClass="container" />

	ADD OBJECT 'txtAFENo' AS txtquickfill WITH ;
		clistexpression = afehdr.cafeno, ;
		clistworkarea = afehdr, ;
		Height = 20, ;
		Left = 141, ;
		MaxLength = 10, ;
		Name = "txtAFENo", ;
		TabIndex = 1, ;
		Top = 22, ;
		Width = 104
		*< END OBJECT: ClassLib="..\custom\cgadget.vcx" BaseClass="textbox" />
	
	PROCEDURE builddata
		LOCAL nReportBy, cproducer, csortby, lcstart, lcend, lcsafety, ldDate1, ldDate2
		LOCAL lExpCode, llActual, llByOwner, lnCount
		
		tcowner1   = THISFORM.swrptlook1.txtBegID.VALUE
		tcowner2   = THISFORM.swrptlook1.txtEndID.VALUE
		tcafeno    = THISFORM.txtafeno.VALUE
		lcsafety   = SET('SAFETY')
		m.ldDate1  = THISFORM.swDate1.VALUE
		m.ldDate2  = THISFORM.swDate2.VALUE
		llByOwner  = THISFORM.chkByOwner.VALUE
		m.lExpCode = THISFORM.chkexpCode.VALUE
		llSelected  = THISFORM.chkselected.VALUE
		
		IF NOT llSelected
		   SELECT cownerid AS cid FROM investor ;
		      INTO CURSOR SELECTED ;
		      WHERE BETWEEN(cownerid,tcOwner1,tcOwner2) ;
		      ORDER BY cid
		ENDIF
		
		SET SAFETY OFF
		
		IF USED('temp')
		   USE IN temp
		ENDIF
		IF USED('tempafe')
		   USE IN tempafe
		ENDIF
		
		CREATE CURSOR afedetail ;
		   (cafeno      C(10), ;
		   cownerid     C(10), ;
		   cownname     C(40), ;
		   cwellid      C(10), ;
		   cwellname    C(30), ;
		   ctaxcode     C(2), ;
		   ctaxdesc     C(30), ;
		   ccatcode     C(4), ;
		   ccateg       C(30), ;
		   dexpdate     d, ;
		   dAFEDate     d,  ;
		   dCompDate    d,  ;
		   cdescription C(40), ;
		   cvendorid    C(10), ;
		   cvendname    C(40), ;
		   crefid       C(10), ;
		   ninterest    N(11, 7), ;
		   namount      N(12, 2), ;
		   ntotest      N(12, 2), ;
		   ntotestTax   N(12, 2), ;
		   ntotvartax   N(12, 2), ;
		   ntotvar      N(12, 2), ;
		   nownamt      N(12, 2), ;
		   nownesttax   N(12, 2), ;
		   nownVarTax   N(12, 2), ;
		   nacttax      N(12, 2), ;
		   nestcost     N(12, 2), ;
		   nactcost     N(12, 2), ;
		   nownestcost  N(12, 2), ;
		   nownvar      N(12, 2), ;
		   nownest      N(12, 2), ;
		   ldDate1      d,  ;
		   ldDate2      d,  ;
		   lExpCode     L)
		
		INDEX ON cafeno + ctaxcode + ccateg TAG afetag
		INDEX ON cownerid + ctaxcode + ccateg + DTOS(dexpdate) TAG cownerid
		
		SWSELECT('afehdr')
		LOCATE FOR cafeno = tcafeno
		IF FOUND()
		   IF NOT EMPTY(dAFEDate) AND dAFEDate <> m.ldDate1
		      THISFORM.oMessage.Warning('The beginning date for this report does not match the Start Date set up for this AFE, which is '  ;
		         + ALLTRIM(DTOC(afehdr.dAFEDate)) + '. Setting a different date range for this report may cause the totals to not match other AFE reports.')
		   ENDIF
		ENDIF
		
		IF llByOwner
		   DO CASE
		      CASE FILE(m.goapp.cRptsFolder+'afedetrpt1.frx')
		         THISFORM.creportname = m.goapp.cRptsFolder+'afedetrpt1'
		      CASE FILE(m.goapp.cRptsFolder+'afedetrpt2.frx')
		         THISFORM.creportname = m.goapp.cRptsFolder+'afedetrpt2'
		      OTHERWISE
		         THISFORM.creportname = 'afedetrpt'
		   ENDCASE
		   IF m.goapp.lAMVersion
		      SWSELECT('afehdr')
		      LOCATE FOR cafeno = tcafeno
		      IF FOUND()
		         m.cafeno    = cafeno
		         m.cwellid   = cwellid
		         m.cidafeh   = cidafeh
		         m.dAFEDate  = dAFEDate
		         m.dCompDate = dCompDate
		
		         SWSELECT('wells')
		         LOCATE FOR cwellid = m.cwellid
		         IF FOUND()
		            m.cwellname = cwellname
		         ELSE
		            m.cwellname = 'Unknown'
		         ENDIF
		
		         SWSELECT('wellinv')
		         SCAN FOR cwellid == m.cwellid AND ctypeinv = 'W'  ;
		               AND (nworkint <> 0 OR nIntClass1 <> 0 OR nIntClass2 <> 0 OR nIntClass3 <> 0  ;
		               OR nIntClass4 <> 0 OR nIntClass5 <> 0 OR nBCPInt <> 0 OR nACPInt <> 0)
		            
		            SELECT selected
		            LOCATE FOR cid = wellinv.cownerid
		            IF NOT FOUND()
		               LOOP
		            ENDIF
		            SELECT wellinv    
		            m.cownerid   = cownerid
		            m.nworkint   = nworkint
		            m.nIntClass1 = nIntClass1
		            m.nIntClass2 = nIntClass2
		            m.nIntClass3 = nIntClass3
		            m.nIntClass4 = nIntClass4
		            m.nIntClass5 = nIntClass5
		            m.nIntClassB = nBCPInt
		            m.nIntClassA = nACPInt
		
		            SWSELECT('investor')
		            SET ORDER TO cownerid
		            IF SEEK(m.cownerid)
		               m.cownname = cownname
		            ELSE
		               m.cownname = 'Unknown'
		            ENDIF
		
		            SWSELECT('afedet')
		            SCAN FOR cidafeh = m.cidafeh
		               llActual   = .F.
		               m.ccatcode = ccatcode
		               m.ntotest  = nestcost
		               STORE SPACE(1) TO m.cvendorid, m.cvendname, m.crefid
		               STORE 0 TO m.namount
		               STORE {} TO m.dexpdate
		
		               SWSELECT('expcat')
		               LOCATE FOR ccatcode = m.ccatcode
		               IF FOUND()
		                  m.ccateg    = ccateg
		                  m.ctaxcode  = ctaxcode
		                  m.ccatcode  = ccatcode
		                  m.cExpClass = cExpClass
		
		                  m.ninterest = IIF(m.cExpClass = '1', m.nIntClass1, IIF(m.cExpClass = '2', m.nIntClass2, IIF(m.cExpClass = '3',  ;
		                     m.nIntClass3, IIF(m.cExpClass = '4', m.nIntClass4, IIF(m.cExpClass = '5', m.nIntClass5, IIF(m.cExpClass = 'B',  ;
		                     m.nIntClassB, IIF(m.cExpClass = 'A', m.nIntClassA, m.nworkint)))))))
		
		                  IF NOT USED('glmaster')
		                     USE glmaster IN 0
		                  ENDIF
		
		                  SWSELECT('glmaster')
		                  SCAN FOR cunitno = m.cwellid AND cafeno = m.cafeno AND ccatcode = m.ccatcode
		                     m.cvendorid = cid
		                     SWSELECT('vendor')
		                     LOCATE FOR cvendorid = m.cvendorid
		                     IF FOUND()
		                        m.cvendname = cvendname
		                     ELSE
		                        m.cvendname = glmaster.cdesc
		                     ENDIF
		                     SWSELECT('glmaster')
		                     m.namount  = (ndebits - ncredits)
		                     m.dexpdate = ddate
		                     m.crefid   = STRTRAN(cref, 'Pur:', '')
		                     llActual   = .T.
		                     INSERT INTO afedetail FROM MEMVAR
		                  ENDSCAN
		                  IF NOT llActual
		                     INSERT INTO afedetail FROM MEMVAR
		                  ENDIF
		               ENDIF
		            ENDSCAN
		         ENDSCAN
		      ENDIF
		   ELSE
		      SWSELECT('afehdr')
		      LOCATE FOR cafeno = tcafeno
		      IF FOUND()
		         m.cafeno    = cafeno
		         m.cwellid   = cwellid
		         m.cidafeh   = cidafeh
		         m.dAFEDate  = dAFEDate
		         m.dCompDate = dCompDate
		
		         SWSELECT('wells')
		         LOCATE FOR cwellid = m.cwellid
		         IF FOUND()
		            m.cwellname = cwellname
		         ELSE
		            m.cwellname = 'Unknown'
		         ENDIF
		
		         SWSELECT('wellinv')
		         SCAN FOR cwellid = m.cwellid AND ctypeinv = 'W'  ;
		               AND (nworkint <> 0 OR nIntClass1 <> 0 OR nIntClass2 <> 0 OR nIntClass3 <> 0  ;
		               OR nIntClass4 <> 0 OR nIntClass5 <> 0 OR nBCPInt <> 0 OR nACPInt <> 0)
		               
		            SELECT selected
		            LOCATE FOR cid = wellinv.cownerid
		            IF NOT FOUND()
		               LOOP
		            ENDIF
		            SELECT wellinv    
		               
		            m.cownerid   = cownerid
		            m.nworkint   = nworkint
		            m.nIntClass1 = nIntClass1
		            m.nIntClass2 = nIntClass2
		            m.nIntClass3 = nIntClass3
		            m.nIntClass4 = nIntClass4
		            m.nIntClass5 = nIntClass5
		            m.nIntClassB = nBCPInt
		            m.nIntClassA = nACPInt
		
		            SWSELECT('investor')
		            SET ORDER TO cownerid
		            IF SEEK(m.cownerid)
		               m.cownname = cownname
		            ELSE
		               m.cownname = 'Unknown'
		            ENDIF
		
		            SWSELECT('afedet')
		            SCAN FOR cidafeh == m.cidafeh
		               llActual   = .F.
		               m.ccatcode = ccatcode
		               m.ntotest  = nestcost
		               STORE SPACE(1) TO m.cvendorid, m.cvendname, m.crefid
		               STORE 0 TO m.namount
		               STORE {} TO m.dexpdate
		               SWSELECT('expcat')
		               LOCATE FOR ccatcode == m.ccatcode
		               IF FOUND()
		                  m.ccateg    = ccateg
		                  m.ctaxcode  = ctaxcode
		                  m.ccatcode  = ccatcode
		                  m.cExpClass = cExpClass
		               ELSE
		                  m.cExpClass = '0'
		                  m.ccateg    = 'Unknown'
		                  m.ccatcode  = '????'
		               ENDIF
		
		               m.ninterest = IIF(m.cExpClass = '1', m.nIntClass1, IIF(m.cExpClass = '2', m.nIntClass2, IIF(m.cExpClass = '3',  ;
		                  m.nIntClass3, IIF(m.cExpClass = '4', m.nIntClass4, IIF(m.cExpClass = '5', m.nIntClass5, IIF(m.cExpClass = 'B',  ;
		                  m.nIntClassB, IIF(m.cExpClass = 'A', m.nIntClassA, m.nworkint)))))))
		
		               SWSELECT('expense')
		               SCAN FOR cwellid == m.cwellid AND cafeno = m.cafeno AND ccatcode = m.ccatcode AND NOT lAPTran
		                  m.ccateg       = ccateg
		                  m.cvendorid    = cvendorid
		                  m.cvendname    = cpayee
		                  m.namount      = namount
		                  m.dexpdate     = dexpdate
		                  m.crefid       = crefid
		                  m.cdescription = cmemo
		                  INSERT INTO afedetail FROM MEMVAR
		                  llActual = .T.
		               ENDSCAN
		
		               SWSELECT('appurchd')
		               SCAN FOR cunitno == m.cwellid AND cafeno = m.cafeno AND ccatcode = m.ccatcode
		                  m.cbatch = cbatch
		
		                  SWSELECT('appurchh')
		                  LOCATE FOR cbatch == m.cbatch AND BETWEEN(dinvdate, ldDate1, ldDate2)
		                  IF FOUND()
		                     m.cvendorid = cvendorid
		                     SWSELECT('vendor')
		                     LOCATE FOR cvendorid = m.cvendorid
		                     IF FOUND()
		                        m.cvendname = cvendname
		                     ELSE
		                        m.cvendname = 'Unknown'
		                     ENDIF
		                     SWSELECT('appurchd')
		                     m.namount      = nextension
		                     m.dexpdate     = appurchh.dinvdate
		                     m.crefid       = appurchh.cinvnum
		                     m.cdescription = appurchd.citemdesc
		                     llActual       = .T.
		                     INSERT INTO afedetail FROM MEMVAR
		                  ENDIF
		               ENDSCAN
		
		               IF NOT llActual
		                  INSERT INTO afedetail FROM MEMVAR
		               ENDIF
		            ENDSCAN
		         ENDSCAN
		      ENDIF
		   ENDIF
		
		   CREATE CURSOR tempcat ;
		      (ccatcode    C(4), ;
		      cownerid    C(10))
		
		   SWSELECT('afedetail')
		   SCAN
		      m.ccatcode = ccatcode
		      m.cafeno   = cafeno
		      m.cownerid = cownerid
		      SWSELECT('afehdr')
		      LOCATE FOR cafeno = m.cafeno
		      IF FOUND()
		         m.cidafeh = cidafeh
		         SWSELECT('afedet')
		         SCAN FOR cidafeh = m.cidafeh AND ccatcode = m.ccatcode
		            m.ntotest = nestcost
		            SWSELECT('tempcat')
		            LOCATE FOR ccatcode = m.ccatcode AND cownerid = m.cownerid
		            IF NOT FOUND()
		               INSERT INTO tempcat FROM MEMVAR
		               SWSELECT('afedetail')
		               REPL ntotest WITH m.ntotest
		            ENDIF
		         ENDSCAN
		      ENDIF
		      SWSELECT('afedetail')
		      REPL nownamt WITH ROUND(namount * (ninterest / 100), 2), ;
		         nownest WITH ROUND(ntotest * (ninterest / 100), 2)
		      IF ntotest = 0 AND namount = 0
		         DELETE NEXT 1
		      ENDIF
		   ENDSCAN
		ELSE
		   THISFORM.creportname = 'afedetrptw'
		   SWSELECT('afehdr')
		   LOCATE FOR cafeno = tcafeno
		   IF FOUND()
		      m.cafeno    = cafeno
		      m.cwellid   = cwellid
		      m.cidafeh   = cidafeh
		      m.dAFEDate  = dAFEDate
		      m.dCompDate = dCompDate
		
		      SWSELECT('wells')
		      LOCATE FOR cwellid = m.cwellid
		      IF FOUND()
		         m.cwellname = cwellname
		      ELSE
		         m.cwellname = 'Unknown'
		      ENDIF
		
		      SWSELECT('afedet')
		      SCAN FOR cidafeh == m.cidafeh
		         m.ccatcode = ccatcode
		
		         SWSELECT('expcat')
		         LOCATE FOR ccatcode = m.ccatcode
		         IF FOUND()
		            m.ccateg   = ccateg
		            m.ctaxcode = ctaxcode
		
		            IF THISFORM.chkexpCode.VALUE
		               m.ccateg = m.ccatcode + '-' + m.ccateg
		            ENDIF
		
		            SWSELECT('appurchd')
		            SCAN FOR cunitno = m.cwellid AND cafeno == m.cafeno AND ccatcode = m.ccatcode
		               m.cbatch = cbatch
		
		               SWSELECT('appurchh')
		               LOCATE FOR cbatch == m.cbatch AND BETWEEN(dinvdate, ldDate1, ldDate2)
		               IF FOUND()
		                  m.cvendorid = cvendorid
		                  SWSELECT('vendor')
		                  LOCATE FOR cvendorid = m.cvendorid
		                  IF FOUND()
		                     m.cvendname = cvendname
		                  ELSE
		                     m.cvendname = 'Unknown'
		                  ENDIF
		                  SWSELECT('appurchd')
		                  m.namount  = nextension
		                  m.dexpdate = appurchh.dinvdate
		                  m.crefid   = appurchh.cinvnum
		                  INSERT INTO afedetail FROM MEMVAR
		               ENDIF
		            ENDSCAN
		
		            SWSELECT('expense')
		            SCAN FOR cwellid == m.cwellid  AND ;
		                     cafeno == m.cafeno    AND ;
		                     ccatcode = m.ccatcode AND ;
		                     BETWEEN(dexpdate, ldDate1, ldDate2) AND ;
		                     NOT lAPTran
		               m.ccateg    = ccateg
		               IF THISFORM.chkexpCode.VALUE
		                  m.ccateg = m.ccatcode + '-' + m.ccateg
		               ENDIF
		               m.cvendorid    = cvendorid
		               m.cvendname    = cpayee
		               m.namount      = namount
		               m.dexpdate     = dexpdate
		               m.crefid       = crefid
		               m.cdescription = cmemo
		               INSERT INTO afedetail FROM MEMVAR
		               llActual = .T.
		            ENDSCAN
		
		            IF m.goapp.lAMVersion
		
		               IF NOT USED('csdishdr')
		                  USE csdishdr IN 0
		               ENDIF
		               IF NOT USED('csdisdet')
		                  USE csdisdet IN 0
		               ENDIF
		               IF NOT USED('gljndet')
		                  USE gljndet IN 0
		               ENDIF
		               IF NOT USED('gljourn')
		                  USE gljourn IN 0
		               ENDIF
		
		               SWSELECT('csdisdet')
		               SCAN FOR cunitno == m.cwellid AND ccatcode == m.ccatcode 
		                  m.cbatch = cbatch
		
		                  SWSELECT('csdishdr')
		                  LOCATE FOR cbatch == m.cbatch AND BETWEEN(ddate, ldDate1, ldDate2)
		                  IF FOUND()
		                     m.cvendorid = cid
		                     SWSELECT('vendor')
		                     LOCATE FOR cvendorid = m.cvendorid
		                     IF FOUND()
		                        m.cvendname = cvendname
		                     ELSE
		                        m.cvendname = 'Unknown'
		                     ENDIF
		                     SWSELECT('csdisdet')
		                     m.namount  = namount
		                     m.dexpdate = csdishdr.ddate
		                     m.crefid   = csdishdr.cinvnum
		                     INSERT INTO afedetail FROM MEMVAR
		                  ENDIF
		               ENDSCAN
		
		               SWSELECT('gljndet')
		               SCAN FOR cunitno == m.cwellid AND ccatcode == m.ccatcode AND cafeno = m.cafeno
		                  m.cbatch  = cbatch
		                  m.namount = gljndet.ndebits - gljndet.ncredits
		                  SWSELECT('gljourn')
		                  LOCATE FOR cbatch == m.cbatch
		                  IF FOUND()
		                     m.dexpdate = dGLDate
		                     m.crefid   = cGLRef
		                  ENDIF
		                  m.cvendorid = ''  &&  JE entry, so no vendor associated with it
		                  m.cvendname = ''
		                  INSERT INTO afedetail FROM MEMVAR
		               ENDSCAN
		            ENDIF
		         ENDIF
		      ENDSCAN
		   ENDIF
		ENDIF
		
		SWSELECT('afedetail')
		SET ORDER TO cownerid
		SCAN
		   IF namount = 0
		      DELETE NEXT 1
		      LOOP
		   ENDIF
		   IF (NOT EMPTY(dAFEDate) AND NOT EMPTY(dCompDate)) AND NOT BETWEEN(dexpdate, dAFEDate, dCompDate)
		      DELETE NEXT 1
		   ENDIF
		
		   m.ccatcode = ccatcode
		   m.ctaxcode = ctaxcode
		   SWSELECT('expcat')
		   LOCATE FOR ccatcode == m.ccatcode
		   IF FOUND()
		      m.ctaxcode = ctaxcode
		      SWSELECT('afedetail')
		      REPL ctaxcode WITH m.ctaxcode
		   ENDIF
		   SWSELECT('taxcodes')
		   LOCATE FOR ctaxcode == m.ctaxcode
		   IF FOUND()
		      m.ctaxdesc = cdesc
		      SWSELECT('afedetail')
		      REPL ctaxdesc WITH m.ctaxdesc
		   ENDIF
		   * Change sort order for AFE
		   SWSELECT('afedetail')
		   DO CASE
		      CASE ctaxcode = 'LC'
		         REPL ctaxcode WITH 'AA'
		      CASE ctaxcode = 'ID'
		         REPL ctaxcode WITH 'BB'
		      CASE ctaxcode = 'TD'
		         REPL ctaxcode WITH 'CC'
		      CASE ctaxcode = 'IC'
		         REPL ctaxcode WITH 'DD'
		      CASE ctaxcode = 'TC'
		         REPL ctaxcode WITH 'EE'
		   ENDCASE
		ENDSCAN
		
		SELECT  cafeno, cownerid, ctaxcode, ;
		   SUM(namount) AS namttax, ;
		   SUM(ntotest) AS ntotestTax, ;
		   SUM(nownest) AS nownesttax ;
		   FROM afedetail ;
		   WHERE cafeno == tcafeno ;
		   INTO CURSOR afetemp1 ;
		   ORDER BY cownerid, ctaxcode ;
		   GROUP BY cownerid, ctaxcode
		IF _TALLY > 0
		   SELE afetemp1
		   SCAN
		      SCATTER MEMVAR
		      SELE afedetail
		      SCAN FOR cownerid == m.cownerid AND ctaxcode == m.ctaxcode
		         REPL ntotestTax WITH m.ntotestTax, ;
		            nownesttax WITH m.nownesttax, ;
		            ntotvartax WITH m.ntotestTax - m.namttax, ;
		            nownVarTax WITH ROUND(ntotvartax * (ninterest / 100), 2)
		      ENDSCAN
		   ENDSCAN
		ENDIF
		
		* Get AFE totals
		SELE afehdr.cafeno, ;
		   SUM(afedet.nactcost)  AS nactcost, ;
		   SUM(afedet.nestcost)  AS nestcost, ;
		   SUM(afedet.nvariance) AS nvariance ;
		   FROM afehdr ;
		   JOIN afedet ON afehdr.cidafeh = afedet.cidafeh ;
		   WHERE afehdr.cafeno == tcafeno ;
		   INTO CURSOR afetot
		
		IF _TALLY > 0
		   SELE afetot
		   SCAN
		      SCATTER MEMVAR
		      SELE afedetail
		      SCAN
		         REPL nestcost    WITH m.nestcost, ;
		            nactcost    WITH m.nactcost, ;
		            ntotvar     WITH m.nestcost - m.nactcost, ;
		            nownestcost WITH ROUND(m.nestcost * (ninterest / 100), 2), ;
		            nownvar     WITH ROUND(nownestcost - (m.nactcost * (ninterest / 100)), 2)
		      ENDSCAN
		   ENDSCAN
		ENDIF
		
		IF llByOwner
		   THISFORM.ctitle1 = 'AFE Detail Report'
		   THISFORM.ctitle2 = 'For Date Range: ' + ALLTRIM(DTOC(ldDate1)) + ' - ' + ALLTRIM(DTOC(ldDate2))
		ELSE
		   THISFORM.ctitle2 = 'AFE Number: ' + ALLT(tcafeno) + ' for ' + ALLT(afedetail.cwellid) + ' - ' + ALLT(afedetail.cwellname)
		ENDIF
		
		THISFORM.cselectcriteria = ''
		THISFORM.csortorder      = ''
		
		SET SAFETY &lcsafety
		SELE afedetail
		COUNT FOR NOT DELETED() TO lnCount
		IF lnCount > 0
		   RETURN .T.
		ELSE
		   RETURN .F.
		ENDIF
		
		
		
		
		
		
	ENDPROC

	PROCEDURE calcafe
	ENDPROC

	PROCEDURE Init
		DODEFAULT()
		SELECT investor
		SET ORDER TO cownerid
		GO TOP
		THISFORM.swrptlook1.txtBegID.VALUE   = cownerid
		THISFORM.swrptlook1.txtBegName.VALUE = csortfield
		GO BOTTOM
		THISFORM.swrptlook1.txtEndID.VALUE     = cownerid
		THISFORM.swrptlook1.txtEndName.VALUE = csortfield
		
		SELECT afehdr
		SET ORDER to cafeno
		GO TOP 
		thisform.txtafeno.set('value',afehdr.cAFENo)
		
		* If we're in demo mode, tell the user that this is an optional module
		IF m.goapp.ldemo
		   THISFORM.omessage.warning('The AFE module is an optional module that can be purchased separately.' + ;
		      ' It is included in the demo for evaluation purposes.')
		ENDIF
		
	ENDPROC

	PROCEDURE chkByOwner.Click
		IF NOT THIS.VALUE
		   THISFORM.swrptlook1.VISIBLE = .F.
		   THISFORM.lblbegid.VISIBLE   = .F.
		   THISFORM.lblendid.VISIBLE   = .F.
		   THISFORM.chkexpCode.VISIBLE = .T.
		   THISFORM.chkselected.VISIBLE = .F.
		   THISFORM.lblselected.VISIBLE = .F.
		ELSE
		   THISFORM.swrptlook1.VISIBLE = .T.
		   THISFORM.lblbegid.VISIBLE   = .T.
		   THISFORM.lblendid.VISIBLE   = .T.
		   THISFORM.chkexpCode.VISIBLE = .F.
		   THISFORM.chkselected.VISIBLE = .T.
		   THISFORM.lblselected.VISIBLE = .f.
		ENDIF
		
	ENDPROC

	PROCEDURE chkSelected.Click
		IF this.Value
		   DO FORM commonsource\selected-ids WITH 'OWNER' LINKED 
		   lnCount = RECCOUNT('selected')
		   thisform.lblselected.Caption = TRANSFORM(lnCount) + ' Owners Selected'
		   thisform.lblselected.Visible = .T.
		   thisform.lblbegID.Visible = .F.
		   thisform.lblendID.Visible = .F.
		   thisform.swrptlook1.Visible = .F.
		ELSE
		   thisform.lblselected.Visible = .F.
		   thisform.lblbegID.Visible = .T.
		   thisform.lblendID.Visible = .T.
		   thisform.swrptlook1.Visible = .T.
		ENDIF 
	ENDPROC

	PROCEDURE cmdLookAFE.Click
		LOCAL lcList
		PRIV llOK
		
		IF USED('looktemp')
		   USE IN looktemp
		ENDIF
		IF USED('looktemp1')
		   USE IN looktemp1
		ENDIF
		
		SELECT cAFENo,afehdr.cWellID,cWellName FROM afehdr,wells INTO CURSOR looktemp1 WHERE afehdr.cWellID = wells.cWellID
		
		SELECT looktemp1
		USE DBF('looktemp1') AGAIN IN 0 ALIAS looktemp
		SELECT looktemp
		INDEX ON cAFENo TAG cAFENo
		INDEX ON cWellID TAG cWellID
		INDEX ON cWellName TAG cWellName
		
		llOK = .T.
		
		
		lcList = 'cAFeNo\AFE No.,cWellID\Well ID,cWellName\WellName'
		
		DO FORM ..\CUSTOM\PickList WITH 'looktemp', lcList, THISFORM.txtAFENo.VALUE, 3, .T.,.T.
		
		IF llOK
		   THISFORM.txtAFENo.SET('value',looktemp.cAFENo)
		   THISFORM.txtAFENo.VALID()
		ENDIF
		
		THISFORM.setnextcontrol(THISFORM.txtAFENo)
		
		
	ENDPROC

	PROCEDURE swdate1.dropdown
		DODEFAULT()
		thisform.setnextcontrol(this)
		
	ENDPROC

	PROCEDURE swdate2.dropdown
		DODEFAULT()
		thisform.setnextcontrol(this)
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton1.Click
		LOCAL lcList
		PRIV llOK
		
		
		llOK = .T.
		
		
		lcList = 'cownerid, csortfield'
		
		DO FORM ..\CUSTOM\PickList WITH 'investor', lcList, THISFORM.swrptlook1.txtbegid.VALUE, 2
		
		IF llOK
		   THISFORM.swrptlook1.txtbegid.VALUE = investor.cownerid
		   THISFORM.swrptlook1.txtBegName.VALUE = investor.csortfield
		   THISFORM.swrptlook1.txtbegid.REFRESH()
		   THISFORM.swrptlook1.txtBegName.REFRESH()
		ENDIF
		
		
		THISFORM.setnextcontrol(THIS.PARENT.txtbegid)
		
		
	ENDPROC

	PROCEDURE Swrptlook1.Swlookupbutton2.Click
		LOCAL lcList
		PRIV llOK
		
		
		llOK = .T.
		
		
		lcList = 'cownerid, csortfield'
		
		DO FORM ..\CUSTOM\PickList WITH 'investor', lcList, THISFORM.swrptlook1.txtendid.VALUE, 2
		
		IF llOK
		   THISFORM.swrptlook1.txtendid.VALUE = investor.cownerid
		   THISFORM.swrptlook1.txtendName.VALUE = investor.csortfield
		   THISFORM.swrptlook1.txtendid.REFRESH()
		   THISFORM.swrptlook1.txtendName.REFRESH()
		ENDIF
		
		
		THISFORM.setnextcontrol(THIS.PARENT.txtendid)
		
		
	ENDPROC

	PROCEDURE txtAFENo.GotFocus
		ON KEY LABEL F2 _SCREEN.ACTIVEFORM.cmdLookAFE.CLICK()
		
		DODEFAULT()
		
	ENDPROC

	PROCEDURE txtAFENo.LostFocus
		ON KEY LABEL F2
		
	ENDPROC

	PROCEDURE txtAFENo.Valid
		SELECT afehdr
		LOCATE FOR cAFENo = this.Value
		IF FOUND()
		   IF NOT EMPTY(dAFEDate)
		      thisform.swDate1.set('value',afehdr.dAFEDate)
		   ENDIF
		ENDIF
		
		DODEFAULT()
	ENDPROC

ENDDEFINE
